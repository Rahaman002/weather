var Wa = (e, i, n) => {
  if (!i.has(e)) throw TypeError("Cannot " + n);
};
var J = (e, i, n) => (
    Wa(e, i, "read from private field"), n ? n.call(e) : i.get(e)
  ),
  be = (e, i, n) => {
    if (i.has(e))
      throw TypeError("Cannot add the same private member more than once");
    i instanceof WeakSet ? i.add(e) : i.set(e, n);
  },
  ve = (e, i, n, c) => (
    Wa(e, i, "write to private field"), c ? c.call(e, n) : i.set(e, n), n
  );
var ls = (e, i, n, c) => ({
    set _(u) {
      ve(e, i, u, n);
    },
    get _() {
      return J(e, i, c);
    },
  }),
  Ne = (e, i, n) => (Wa(e, i, "access private method"), n);
function Up(e, i) {
  for (var n = 0; n < i.length; n++) {
    const c = i[n];
    if (typeof c != "string" && !Array.isArray(c)) {
      for (const u in c)
        if (u !== "default" && !(u in e)) {
          const g = Object.getOwnPropertyDescriptor(c, u);
          g &&
            Object.defineProperty(
              e,
              u,
              g.get ? g : { enumerable: !0, get: () => c[u] },
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
  );
}
(function () {
  const i = document.createElement("link").relList;
  if (i && i.supports && i.supports("modulepreload")) return;
  for (const u of document.querySelectorAll('link[rel="modulepreload"]')) c(u);
  new MutationObserver((u) => {
    for (const g of u)
      if (g.type === "childList")
        for (const b of g.addedNodes)
          b.tagName === "LINK" && b.rel === "modulepreload" && c(b);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(u) {
    const g = {};
    return (
      u.integrity && (g.integrity = u.integrity),
      u.referrerPolicy && (g.referrerPolicy = u.referrerPolicy),
      u.crossOrigin === "use-credentials"
        ? (g.credentials = "include")
        : u.crossOrigin === "anonymous"
          ? (g.credentials = "omit")
          : (g.credentials = "same-origin"),
      g
    );
  }
  function c(u) {
    if (u.ep) return;
    u.ep = !0;
    const g = n(u);
    fetch(u.href, g);
  }
})();
var Zp =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
      ? window
      : typeof global < "u"
        ? global
        : typeof self < "u"
          ? self
          : {};
function Y0(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default")
    ? e.default
    : e;
}
var u1 = { exports: {} },
  ga = {},
  d1 = { exports: {} },
  Re = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Gn = Symbol.for("react.element"),
  $p = Symbol.for("react.portal"),
  qp = Symbol.for("react.fragment"),
  Qp = Symbol.for("react.strict_mode"),
  Kp = Symbol.for("react.profiler"),
  Jp = Symbol.for("react.provider"),
  eg = Symbol.for("react.context"),
  tg = Symbol.for("react.forward_ref"),
  lg = Symbol.for("react.suspense"),
  ig = Symbol.for("react.memo"),
  rg = Symbol.for("react.lazy"),
  gh = Symbol.iterator;
function ng(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (gh && e[gh]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var f1 = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  p1 = Object.assign,
  g1 = {};
function Fr(e, i, n) {
  (this.props = e),
    (this.context = i),
    (this.refs = g1),
    (this.updater = n || f1);
}
Fr.prototype.isReactComponent = {};
Fr.prototype.setState = function (e, i) {
  if (typeof e != "object" && typeof e != "function" && e != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables.",
    );
  this.updater.enqueueSetState(this, e, i, "setState");
};
Fr.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, "forceUpdate");
};
function m1() {}
m1.prototype = Fr.prototype;
function B0(e, i, n) {
  (this.props = e),
    (this.context = i),
    (this.refs = g1),
    (this.updater = n || f1);
}
var W0 = (B0.prototype = new m1());
W0.constructor = B0;
p1(W0, Fr.prototype);
W0.isPureReactComponent = !0;
var mh = Array.isArray,
  x1 = Object.prototype.hasOwnProperty,
  V0 = { current: null },
  v1 = { key: !0, ref: !0, __self: !0, __source: !0 };
function y1(e, i, n) {
  var c,
    u = {},
    g = null,
    b = null;
  if (i != null)
    for (c in (i.ref !== void 0 && (b = i.ref),
    i.key !== void 0 && (g = "" + i.key),
    i))
      x1.call(i, c) && !v1.hasOwnProperty(c) && (u[c] = i[c]);
  var k = arguments.length - 2;
  if (k === 1) u.children = n;
  else if (1 < k) {
    for (var E = Array(k), I = 0; I < k; I++) E[I] = arguments[I + 2];
    u.children = E;
  }
  if (e && e.defaultProps)
    for (c in ((k = e.defaultProps), k)) u[c] === void 0 && (u[c] = k[c]);
  return {
    $$typeof: Gn,
    type: e,
    key: g,
    ref: b,
    props: u,
    _owner: V0.current,
  };
}
function sg(e, i) {
  return {
    $$typeof: Gn,
    type: e.type,
    key: i,
    ref: e.ref,
    props: e.props,
    _owner: e._owner,
  };
}
function G0(e) {
  return typeof e == "object" && e !== null && e.$$typeof === Gn;
}
function ag(e) {
  var i = { "=": "=0", ":": "=2" };
  return (
    "$" +
    e.replace(/[=:]/g, function (n) {
      return i[n];
    })
  );
}
var xh = /\/+/g;
function Va(e, i) {
  return typeof e == "object" && e !== null && e.key != null
    ? ag("" + e.key)
    : i.toString(36);
}
function ws(e, i, n, c, u) {
  var g = typeof e;
  (g === "undefined" || g === "boolean") && (e = null);
  var b = !1;
  if (e === null) b = !0;
  else
    switch (g) {
      case "string":
      case "number":
        b = !0;
        break;
      case "object":
        switch (e.$$typeof) {
          case Gn:
          case $p:
            b = !0;
        }
    }
  if (b)
    return (
      (b = e),
      (u = u(b)),
      (e = c === "" ? "." + Va(b, 0) : c),
      mh(u)
        ? ((n = ""),
          e != null && (n = e.replace(xh, "$&/") + "/"),
          ws(u, i, n, "", function (I) {
            return I;
          }))
        : u != null &&
          (G0(u) &&
            (u = sg(
              u,
              n +
                (!u.key || (b && b.key === u.key)
                  ? ""
                  : ("" + u.key).replace(xh, "$&/") + "/") +
                e,
            )),
          i.push(u)),
      1
    );
  if (((b = 0), (c = c === "" ? "." : c + ":"), mh(e)))
    for (var k = 0; k < e.length; k++) {
      g = e[k];
      var E = c + Va(g, k);
      b += ws(g, i, n, E, u);
    }
  else if (((E = ng(e)), typeof E == "function"))
    for (e = E.call(e), k = 0; !(g = e.next()).done; )
      (g = g.value), (E = c + Va(g, k++)), (b += ws(g, i, n, E, u));
  else if (g === "object")
    throw (
      ((i = String(e)),
      Error(
        "Objects are not valid as a React child (found: " +
          (i === "[object Object]"
            ? "object with keys {" + Object.keys(e).join(", ") + "}"
            : i) +
          "). If you meant to render a collection of children, use an array instead.",
      ))
    );
  return b;
}
function is(e, i, n) {
  if (e == null) return e;
  var c = [],
    u = 0;
  return (
    ws(e, c, "", "", function (g) {
      return i.call(n, g, u++);
    }),
    c
  );
}
function og(e) {
  if (e._status === -1) {
    var i = e._result;
    (i = i()),
      i.then(
        function (n) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 1), (e._result = n));
        },
        function (n) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 2), (e._result = n));
        },
      ),
      e._status === -1 && ((e._status = 0), (e._result = i));
  }
  if (e._status === 1) return e._result.default;
  throw e._result;
}
var Lt = { current: null },
  ks = { transition: null },
  cg = {
    ReactCurrentDispatcher: Lt,
    ReactCurrentBatchConfig: ks,
    ReactCurrentOwner: V0,
  };
Re.Children = {
  map: is,
  forEach: function (e, i, n) {
    is(
      e,
      function () {
        i.apply(this, arguments);
      },
      n,
    );
  },
  count: function (e) {
    var i = 0;
    return (
      is(e, function () {
        i++;
      }),
      i
    );
  },
  toArray: function (e) {
    return (
      is(e, function (i) {
        return i;
      }) || []
    );
  },
  only: function (e) {
    if (!G0(e))
      throw Error(
        "React.Children.only expected to receive a single React element child.",
      );
    return e;
  },
};
Re.Component = Fr;
Re.Fragment = qp;
Re.Profiler = Kp;
Re.PureComponent = B0;
Re.StrictMode = Qp;
Re.Suspense = lg;
Re.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = cg;
Re.cloneElement = function (e, i, n) {
  if (e == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        e +
        ".",
    );
  var c = p1({}, e.props),
    u = e.key,
    g = e.ref,
    b = e._owner;
  if (i != null) {
    if (
      (i.ref !== void 0 && ((g = i.ref), (b = V0.current)),
      i.key !== void 0 && (u = "" + i.key),
      e.type && e.type.defaultProps)
    )
      var k = e.type.defaultProps;
    for (E in i)
      x1.call(i, E) &&
        !v1.hasOwnProperty(E) &&
        (c[E] = i[E] === void 0 && k !== void 0 ? k[E] : i[E]);
  }
  var E = arguments.length - 2;
  if (E === 1) c.children = n;
  else if (1 < E) {
    k = Array(E);
    for (var I = 0; I < E; I++) k[I] = arguments[I + 2];
    c.children = k;
  }
  return { $$typeof: Gn, type: e.type, key: u, ref: g, props: c, _owner: b };
};
Re.createContext = function (e) {
  return (
    (e = {
      $$typeof: eg,
      _currentValue: e,
      _currentValue2: e,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (e.Provider = { $$typeof: Jp, _context: e }),
    (e.Consumer = e)
  );
};
Re.createElement = y1;
Re.createFactory = function (e) {
  var i = y1.bind(null, e);
  return (i.type = e), i;
};
Re.createRef = function () {
  return { current: null };
};
Re.forwardRef = function (e) {
  return { $$typeof: tg, render: e };
};
Re.isValidElement = G0;
Re.lazy = function (e) {
  return { $$typeof: rg, _payload: { _status: -1, _result: e }, _init: og };
};
Re.memo = function (e, i) {
  return { $$typeof: ig, type: e, compare: i === void 0 ? null : i };
};
Re.startTransition = function (e) {
  var i = ks.transition;
  ks.transition = {};
  try {
    e();
  } finally {
    ks.transition = i;
  }
};
Re.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
Re.useCallback = function (e, i) {
  return Lt.current.useCallback(e, i);
};
Re.useContext = function (e) {
  return Lt.current.useContext(e);
};
Re.useDebugValue = function () {};
Re.useDeferredValue = function (e) {
  return Lt.current.useDeferredValue(e);
};
Re.useEffect = function (e, i) {
  return Lt.current.useEffect(e, i);
};
Re.useId = function () {
  return Lt.current.useId();
};
Re.useImperativeHandle = function (e, i, n) {
  return Lt.current.useImperativeHandle(e, i, n);
};
Re.useInsertionEffect = function (e, i) {
  return Lt.current.useInsertionEffect(e, i);
};
Re.useLayoutEffect = function (e, i) {
  return Lt.current.useLayoutEffect(e, i);
};
Re.useMemo = function (e, i) {
  return Lt.current.useMemo(e, i);
};
Re.useReducer = function (e, i, n) {
  return Lt.current.useReducer(e, i, n);
};
Re.useRef = function (e) {
  return Lt.current.useRef(e);
};
Re.useState = function (e) {
  return Lt.current.useState(e);
};
Re.useSyncExternalStore = function (e, i, n) {
  return Lt.current.useSyncExternalStore(e, i, n);
};
Re.useTransition = function () {
  return Lt.current.useTransition();
};
Re.version = "18.2.0";
d1.exports = Re;
var ce = d1.exports;
const U0 = Y0(ce),
  hg = Up({ __proto__: null, default: U0 }, [ce]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ug = ce,
  dg = Symbol.for("react.element"),
  fg = Symbol.for("react.fragment"),
  pg = Object.prototype.hasOwnProperty,
  gg = ug.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  mg = { key: !0, ref: !0, __self: !0, __source: !0 };
function b1(e, i, n) {
  var c,
    u = {},
    g = null,
    b = null;
  n !== void 0 && (g = "" + n),
    i.key !== void 0 && (g = "" + i.key),
    i.ref !== void 0 && (b = i.ref);
  for (c in i) pg.call(i, c) && !mg.hasOwnProperty(c) && (u[c] = i[c]);
  if (e && e.defaultProps)
    for (c in ((i = e.defaultProps), i)) u[c] === void 0 && (u[c] = i[c]);
  return {
    $$typeof: dg,
    type: e,
    key: g,
    ref: b,
    props: u,
    _owner: gg.current,
  };
}
ga.Fragment = fg;
ga.jsx = b1;
ga.jsxs = b1;
u1.exports = ga;
var _ = u1.exports,
  Eo = {},
  w1 = { exports: {} },
  Yt = {},
  k1 = { exports: {} },
  S1 = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (e) {
  function i(ge, we) {
    var Ce = ge.length;
    ge.push(we);
    e: for (; 0 < Ce; ) {
      var ze = (Ce - 1) >>> 1,
        Te = ge[ze];
      if (0 < u(Te, we)) (ge[ze] = we), (ge[Ce] = Te), (Ce = ze);
      else break e;
    }
  }
  function n(ge) {
    return ge.length === 0 ? null : ge[0];
  }
  function c(ge) {
    if (ge.length === 0) return null;
    var we = ge[0],
      Ce = ge.pop();
    if (Ce !== we) {
      ge[0] = Ce;
      e: for (var ze = 0, Te = ge.length, Wt = Te >>> 1; ze < Wt; ) {
        var Vt = 2 * (ze + 1) - 1,
          Gt = ge[Vt],
          $e = Vt + 1,
          Pl = ge[$e];
        if (0 > u(Gt, Ce))
          $e < Te && 0 > u(Pl, Gt)
            ? ((ge[ze] = Pl), (ge[$e] = Ce), (ze = $e))
            : ((ge[ze] = Gt), (ge[Vt] = Ce), (ze = Vt));
        else if ($e < Te && 0 > u(Pl, Ce))
          (ge[ze] = Pl), (ge[$e] = Ce), (ze = $e);
        else break e;
      }
    }
    return we;
  }
  function u(ge, we) {
    var Ce = ge.sortIndex - we.sortIndex;
    return Ce !== 0 ? Ce : ge.id - we.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var g = performance;
    e.unstable_now = function () {
      return g.now();
    };
  } else {
    var b = Date,
      k = b.now();
    e.unstable_now = function () {
      return b.now() - k;
    };
  }
  var E = [],
    I = [],
    F = 1,
    H = null,
    G = 3,
    K = !1,
    q = !1,
    Q = !1,
    ue = typeof setTimeout == "function" ? setTimeout : null,
    B = typeof clearTimeout == "function" ? clearTimeout : null,
    L = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function W(ge) {
    for (var we = n(I); we !== null; ) {
      if (we.callback === null) c(I);
      else if (we.startTime <= ge)
        c(I), (we.sortIndex = we.expirationTime), i(E, we);
      else break;
      we = n(I);
    }
  }
  function te(ge) {
    if (((Q = !1), W(ge), !q))
      if (n(E) !== null) (q = !0), Al(Z);
      else {
        var we = n(I);
        we !== null && El(te, we.startTime - ge);
      }
  }
  function Z(ge, we) {
    (q = !1), Q && ((Q = !1), B(ae), (ae = -1)), (K = !0);
    var Ce = G;
    try {
      for (
        W(we), H = n(E);
        H !== null && (!(H.expirationTime > we) || (ge && !it()));

      ) {
        var ze = H.callback;
        if (typeof ze == "function") {
          (H.callback = null), (G = H.priorityLevel);
          var Te = ze(H.expirationTime <= we);
          (we = e.unstable_now()),
            typeof Te == "function" ? (H.callback = Te) : H === n(E) && c(E),
            W(we);
        } else c(E);
        H = n(E);
      }
      if (H !== null) var Wt = !0;
      else {
        var Vt = n(I);
        Vt !== null && El(te, Vt.startTime - we), (Wt = !1);
      }
      return Wt;
    } finally {
      (H = null), (G = Ce), (K = !1);
    }
  }
  var oe = !1,
    pe = null,
    ae = -1,
    ke = 5,
    Se = -1;
  function it() {
    return !(e.unstable_now() - Se < ke);
  }
  function gt() {
    if (pe !== null) {
      var ge = e.unstable_now();
      Se = ge;
      var we = !0;
      try {
        we = pe(!0, ge);
      } finally {
        we ? fl() : ((oe = !1), (pe = null));
      }
    } else oe = !1;
  }
  var fl;
  if (typeof L == "function")
    fl = function () {
      L(gt);
    };
  else if (typeof MessageChannel < "u") {
    var Ze = new MessageChannel(),
      pl = Ze.port2;
    (Ze.port1.onmessage = gt),
      (fl = function () {
        pl.postMessage(null);
      });
  } else
    fl = function () {
      ue(gt, 0);
    };
  function Al(ge) {
    (pe = ge), oe || ((oe = !0), fl());
  }
  function El(ge, we) {
    ae = ue(function () {
      ge(e.unstable_now());
    }, we);
  }
  (e.unstable_IdlePriority = 5),
    (e.unstable_ImmediatePriority = 1),
    (e.unstable_LowPriority = 4),
    (e.unstable_NormalPriority = 3),
    (e.unstable_Profiling = null),
    (e.unstable_UserBlockingPriority = 2),
    (e.unstable_cancelCallback = function (ge) {
      ge.callback = null;
    }),
    (e.unstable_continueExecution = function () {
      q || K || ((q = !0), Al(Z));
    }),
    (e.unstable_forceFrameRate = function (ge) {
      0 > ge || 125 < ge
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported",
          )
        : (ke = 0 < ge ? Math.floor(1e3 / ge) : 5);
    }),
    (e.unstable_getCurrentPriorityLevel = function () {
      return G;
    }),
    (e.unstable_getFirstCallbackNode = function () {
      return n(E);
    }),
    (e.unstable_next = function (ge) {
      switch (G) {
        case 1:
        case 2:
        case 3:
          var we = 3;
          break;
        default:
          we = G;
      }
      var Ce = G;
      G = we;
      try {
        return ge();
      } finally {
        G = Ce;
      }
    }),
    (e.unstable_pauseExecution = function () {}),
    (e.unstable_requestPaint = function () {}),
    (e.unstable_runWithPriority = function (ge, we) {
      switch (ge) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          ge = 3;
      }
      var Ce = G;
      G = ge;
      try {
        return we();
      } finally {
        G = Ce;
      }
    }),
    (e.unstable_scheduleCallback = function (ge, we, Ce) {
      var ze = e.unstable_now();
      switch (
        (typeof Ce == "object" && Ce !== null
          ? ((Ce = Ce.delay),
            (Ce = typeof Ce == "number" && 0 < Ce ? ze + Ce : ze))
          : (Ce = ze),
        ge)
      ) {
        case 1:
          var Te = -1;
          break;
        case 2:
          Te = 250;
          break;
        case 5:
          Te = 1073741823;
          break;
        case 4:
          Te = 1e4;
          break;
        default:
          Te = 5e3;
      }
      return (
        (Te = Ce + Te),
        (ge = {
          id: F++,
          callback: we,
          priorityLevel: ge,
          startTime: Ce,
          expirationTime: Te,
          sortIndex: -1,
        }),
        Ce > ze
          ? ((ge.sortIndex = Ce),
            i(I, ge),
            n(E) === null &&
              ge === n(I) &&
              (Q ? (B(ae), (ae = -1)) : (Q = !0), El(te, Ce - ze)))
          : ((ge.sortIndex = Te), i(E, ge), q || K || ((q = !0), Al(Z))),
        ge
      );
    }),
    (e.unstable_shouldYield = it),
    (e.unstable_wrapCallback = function (ge) {
      var we = G;
      return function () {
        var Ce = G;
        G = we;
        try {
          return ge.apply(this, arguments);
        } finally {
          G = Ce;
        }
      };
    });
})(S1);
k1.exports = S1;
var xg = k1.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var C1 = ce,
  Ht = xg;
function de(e) {
  for (
    var i = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1;
    n < arguments.length;
    n++
  )
    i += "&args[]=" + encodeURIComponent(arguments[n]);
  return (
    "Minified React error #" +
    e +
    "; visit " +
    i +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var A1 = new Set(),
  fn = {};
function Yi(e, i) {
  Pr(e, i), Pr(e + "Capture", i);
}
function Pr(e, i) {
  for (fn[e] = i, e = 0; e < i.length; e++) A1.add(i[e]);
}
var zl = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  Po = Object.prototype.hasOwnProperty,
  vg =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  vh = {},
  yh = {};
function yg(e) {
  return Po.call(yh, e)
    ? !0
    : Po.call(vh, e)
      ? !1
      : vg.test(e)
        ? (yh[e] = !0)
        : ((vh[e] = !0), !1);
}
function bg(e, i, n, c) {
  if (n !== null && n.type === 0) return !1;
  switch (typeof i) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return c
        ? !1
        : n !== null
          ? !n.acceptsBooleans
          : ((e = e.toLowerCase().slice(0, 5)), e !== "data-" && e !== "aria-");
    default:
      return !1;
  }
}
function wg(e, i, n, c) {
  if (i === null || typeof i > "u" || bg(e, i, n, c)) return !0;
  if (c) return !1;
  if (n !== null)
    switch (n.type) {
      case 3:
        return !i;
      case 4:
        return i === !1;
      case 5:
        return isNaN(i);
      case 6:
        return isNaN(i) || 1 > i;
    }
  return !1;
}
function Tt(e, i, n, c, u, g, b) {
  (this.acceptsBooleans = i === 2 || i === 3 || i === 4),
    (this.attributeName = c),
    (this.attributeNamespace = u),
    (this.mustUseProperty = n),
    (this.propertyName = e),
    (this.type = i),
    (this.sanitizeURL = g),
    (this.removeEmptyString = b);
}
var pt = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (e) {
    pt[e] = new Tt(e, 0, !1, e, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (e) {
  var i = e[0];
  pt[i] = new Tt(i, 1, !1, e[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (e) {
  pt[e] = new Tt(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (e) {
  pt[e] = new Tt(e, 2, !1, e, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (e) {
    pt[e] = new Tt(e, 3, !1, e.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (e) {
  pt[e] = new Tt(e, 3, !0, e, null, !1, !1);
});
["capture", "download"].forEach(function (e) {
  pt[e] = new Tt(e, 4, !1, e, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (e) {
  pt[e] = new Tt(e, 6, !1, e, null, !1, !1);
});
["rowSpan", "start"].forEach(function (e) {
  pt[e] = new Tt(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var Z0 = /[\-:]([a-z])/g;
function $0(e) {
  return e[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (e) {
    var i = e.replace(Z0, $0);
    pt[i] = new Tt(i, 1, !1, e, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (e) {
    var i = e.replace(Z0, $0);
    pt[i] = new Tt(i, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
  var i = e.replace(Z0, $0);
  pt[i] = new Tt(i, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (e) {
  pt[e] = new Tt(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
pt.xlinkHref = new Tt(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1,
);
["src", "href", "action", "formAction"].forEach(function (e) {
  pt[e] = new Tt(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function q0(e, i, n, c) {
  var u = pt.hasOwnProperty(i) ? pt[i] : null;
  (u !== null
    ? u.type !== 0
    : c ||
      !(2 < i.length) ||
      (i[0] !== "o" && i[0] !== "O") ||
      (i[1] !== "n" && i[1] !== "N")) &&
    (wg(i, n, u, c) && (n = null),
    c || u === null
      ? yg(i) && (n === null ? e.removeAttribute(i) : e.setAttribute(i, "" + n))
      : u.mustUseProperty
        ? (e[u.propertyName] = n === null ? (u.type === 3 ? !1 : "") : n)
        : ((i = u.attributeName),
          (c = u.attributeNamespace),
          n === null
            ? e.removeAttribute(i)
            : ((u = u.type),
              (n = u === 3 || (u === 4 && n === !0) ? "" : "" + n),
              c ? e.setAttributeNS(c, i, n) : e.setAttribute(i, n))));
}
var jl = C1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  rs = Symbol.for("react.element"),
  qi = Symbol.for("react.portal"),
  Qi = Symbol.for("react.fragment"),
  Q0 = Symbol.for("react.strict_mode"),
  Lo = Symbol.for("react.profiler"),
  E1 = Symbol.for("react.provider"),
  P1 = Symbol.for("react.context"),
  K0 = Symbol.for("react.forward_ref"),
  To = Symbol.for("react.suspense"),
  Mo = Symbol.for("react.suspense_list"),
  J0 = Symbol.for("react.memo"),
  Wl = Symbol.for("react.lazy"),
  L1 = Symbol.for("react.offscreen"),
  bh = Symbol.iterator;
function Yr(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (bh && e[bh]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var Ue = Object.assign,
  Ga;
function Kr(e) {
  if (Ga === void 0)
    try {
      throw Error();
    } catch (n) {
      var i = n.stack.trim().match(/\n( *(at )?)/);
      Ga = (i && i[1]) || "";
    }
  return (
    `
` +
    Ga +
    e
  );
}
var Ua = !1;
function Za(e, i) {
  if (!e || Ua) return "";
  Ua = !0;
  var n = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (i)
      if (
        ((i = function () {
          throw Error();
        }),
        Object.defineProperty(i.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(i, []);
        } catch (I) {
          var c = I;
        }
        Reflect.construct(e, [], i);
      } else {
        try {
          i.call();
        } catch (I) {
          c = I;
        }
        e.call(i.prototype);
      }
    else {
      try {
        throw Error();
      } catch (I) {
        c = I;
      }
      e();
    }
  } catch (I) {
    if (I && c && typeof I.stack == "string") {
      for (
        var u = I.stack.split(`
`),
          g = c.stack.split(`
`),
          b = u.length - 1,
          k = g.length - 1;
        1 <= b && 0 <= k && u[b] !== g[k];

      )
        k--;
      for (; 1 <= b && 0 <= k; b--, k--)
        if (u[b] !== g[k]) {
          if (b !== 1 || k !== 1)
            do
              if ((b--, k--, 0 > k || u[b] !== g[k])) {
                var E =
                  `
` + u[b].replace(" at new ", " at ");
                return (
                  e.displayName &&
                    E.includes("<anonymous>") &&
                    (E = E.replace("<anonymous>", e.displayName)),
                  E
                );
              }
            while (1 <= b && 0 <= k);
          break;
        }
    }
  } finally {
    (Ua = !1), (Error.prepareStackTrace = n);
  }
  return (e = e ? e.displayName || e.name : "") ? Kr(e) : "";
}
function kg(e) {
  switch (e.tag) {
    case 5:
      return Kr(e.type);
    case 16:
      return Kr("Lazy");
    case 13:
      return Kr("Suspense");
    case 19:
      return Kr("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (e = Za(e.type, !1)), e;
    case 11:
      return (e = Za(e.type.render, !1)), e;
    case 1:
      return (e = Za(e.type, !0)), e;
    default:
      return "";
  }
}
function Ro(e) {
  if (e == null) return null;
  if (typeof e == "function") return e.displayName || e.name || null;
  if (typeof e == "string") return e;
  switch (e) {
    case Qi:
      return "Fragment";
    case qi:
      return "Portal";
    case Lo:
      return "Profiler";
    case Q0:
      return "StrictMode";
    case To:
      return "Suspense";
    case Mo:
      return "SuspenseList";
  }
  if (typeof e == "object")
    switch (e.$$typeof) {
      case P1:
        return (e.displayName || "Context") + ".Consumer";
      case E1:
        return (e._context.displayName || "Context") + ".Provider";
      case K0:
        var i = e.render;
        return (
          (e = e.displayName),
          e ||
            ((e = i.displayName || i.name || ""),
            (e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")),
          e
        );
      case J0:
        return (
          (i = e.displayName || null), i !== null ? i : Ro(e.type) || "Memo"
        );
      case Wl:
        (i = e._payload), (e = e._init);
        try {
          return Ro(e(i));
        } catch {}
    }
  return null;
}
function Sg(e) {
  var i = e.type;
  switch (e.tag) {
    case 24:
      return "Cache";
    case 9:
      return (i.displayName || "Context") + ".Consumer";
    case 10:
      return (i._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (e = i.render),
        (e = e.displayName || e.name || ""),
        i.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return i;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Ro(i);
    case 8:
      return i === Q0 ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof i == "function") return i.displayName || i.name || null;
      if (typeof i == "string") return i;
  }
  return null;
}
function di(e) {
  switch (typeof e) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return e;
    case "object":
      return e;
    default:
      return "";
  }
}
function T1(e) {
  var i = e.type;
  return (
    (e = e.nodeName) &&
    e.toLowerCase() === "input" &&
    (i === "checkbox" || i === "radio")
  );
}
function Cg(e) {
  var i = T1(e) ? "checked" : "value",
    n = Object.getOwnPropertyDescriptor(e.constructor.prototype, i),
    c = "" + e[i];
  if (
    !e.hasOwnProperty(i) &&
    typeof n < "u" &&
    typeof n.get == "function" &&
    typeof n.set == "function"
  ) {
    var u = n.get,
      g = n.set;
    return (
      Object.defineProperty(e, i, {
        configurable: !0,
        get: function () {
          return u.call(this);
        },
        set: function (b) {
          (c = "" + b), g.call(this, b);
        },
      }),
      Object.defineProperty(e, i, { enumerable: n.enumerable }),
      {
        getValue: function () {
          return c;
        },
        setValue: function (b) {
          c = "" + b;
        },
        stopTracking: function () {
          (e._valueTracker = null), delete e[i];
        },
      }
    );
  }
}
function ns(e) {
  e._valueTracker || (e._valueTracker = Cg(e));
}
function M1(e) {
  if (!e) return !1;
  var i = e._valueTracker;
  if (!i) return !0;
  var n = i.getValue(),
    c = "";
  return (
    e && (c = T1(e) ? (e.checked ? "true" : "false") : e.value),
    (e = c),
    e !== n ? (i.setValue(e), !0) : !1
  );
}
function Ds(e) {
  if (((e = e || (typeof document < "u" ? document : void 0)), typeof e > "u"))
    return null;
  try {
    return e.activeElement || e.body;
  } catch {
    return e.body;
  }
}
function No(e, i) {
  var n = i.checked;
  return Ue({}, i, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: n ?? e._wrapperState.initialChecked,
  });
}
function wh(e, i) {
  var n = i.defaultValue == null ? "" : i.defaultValue,
    c = i.checked != null ? i.checked : i.defaultChecked;
  (n = di(i.value != null ? i.value : n)),
    (e._wrapperState = {
      initialChecked: c,
      initialValue: n,
      controlled:
        i.type === "checkbox" || i.type === "radio"
          ? i.checked != null
          : i.value != null,
    });
}
function R1(e, i) {
  (i = i.checked), i != null && q0(e, "checked", i, !1);
}
function Io(e, i) {
  R1(e, i);
  var n = di(i.value),
    c = i.type;
  if (n != null)
    c === "number"
      ? ((n === 0 && e.value === "") || e.value != n) && (e.value = "" + n)
      : e.value !== "" + n && (e.value = "" + n);
  else if (c === "submit" || c === "reset") {
    e.removeAttribute("value");
    return;
  }
  i.hasOwnProperty("value")
    ? Oo(e, i.type, n)
    : i.hasOwnProperty("defaultValue") && Oo(e, i.type, di(i.defaultValue)),
    i.checked == null &&
      i.defaultChecked != null &&
      (e.defaultChecked = !!i.defaultChecked);
}
function kh(e, i, n) {
  if (i.hasOwnProperty("value") || i.hasOwnProperty("defaultValue")) {
    var c = i.type;
    if (
      !(
        (c !== "submit" && c !== "reset") ||
        (i.value !== void 0 && i.value !== null)
      )
    )
      return;
    (i = "" + e._wrapperState.initialValue),
      n || i === e.value || (e.value = i),
      (e.defaultValue = i);
  }
  (n = e.name),
    n !== "" && (e.name = ""),
    (e.defaultChecked = !!e._wrapperState.initialChecked),
    n !== "" && (e.name = n);
}
function Oo(e, i, n) {
  (i !== "number" || Ds(e.ownerDocument) !== e) &&
    (n == null
      ? (e.defaultValue = "" + e._wrapperState.initialValue)
      : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
}
var Jr = Array.isArray;
function or(e, i, n, c) {
  if (((e = e.options), i)) {
    i = {};
    for (var u = 0; u < n.length; u++) i["$" + n[u]] = !0;
    for (n = 0; n < e.length; n++)
      (u = i.hasOwnProperty("$" + e[n].value)),
        e[n].selected !== u && (e[n].selected = u),
        u && c && (e[n].defaultSelected = !0);
  } else {
    for (n = "" + di(n), i = null, u = 0; u < e.length; u++) {
      if (e[u].value === n) {
        (e[u].selected = !0), c && (e[u].defaultSelected = !0);
        return;
      }
      i !== null || e[u].disabled || (i = e[u]);
    }
    i !== null && (i.selected = !0);
  }
}
function zo(e, i) {
  if (i.dangerouslySetInnerHTML != null) throw Error(de(91));
  return Ue({}, i, {
    value: void 0,
    defaultValue: void 0,
    children: "" + e._wrapperState.initialValue,
  });
}
function Sh(e, i) {
  var n = i.value;
  if (n == null) {
    if (((n = i.children), (i = i.defaultValue), n != null)) {
      if (i != null) throw Error(de(92));
      if (Jr(n)) {
        if (1 < n.length) throw Error(de(93));
        n = n[0];
      }
      i = n;
    }
    i == null && (i = ""), (n = i);
  }
  e._wrapperState = { initialValue: di(n) };
}
function N1(e, i) {
  var n = di(i.value),
    c = di(i.defaultValue);
  n != null &&
    ((n = "" + n),
    n !== e.value && (e.value = n),
    i.defaultValue == null && e.defaultValue !== n && (e.defaultValue = n)),
    c != null && (e.defaultValue = "" + c);
}
function Ch(e) {
  var i = e.textContent;
  i === e._wrapperState.initialValue && i !== "" && i !== null && (e.value = i);
}
function I1(e) {
  switch (e) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function Fo(e, i) {
  return e == null || e === "http://www.w3.org/1999/xhtml"
    ? I1(i)
    : e === "http://www.w3.org/2000/svg" && i === "foreignObject"
      ? "http://www.w3.org/1999/xhtml"
      : e;
}
var ss,
  O1 = (function (e) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (i, n, c, u) {
          MSApp.execUnsafeLocalFunction(function () {
            return e(i, n, c, u);
          });
        }
      : e;
  })(function (e, i) {
    if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e)
      e.innerHTML = i;
    else {
      for (
        ss = ss || document.createElement("div"),
          ss.innerHTML = "<svg>" + i.valueOf().toString() + "</svg>",
          i = ss.firstChild;
        e.firstChild;

      )
        e.removeChild(e.firstChild);
      for (; i.firstChild; ) e.appendChild(i.firstChild);
    }
  });
function pn(e, i) {
  if (i) {
    var n = e.firstChild;
    if (n && n === e.lastChild && n.nodeType === 3) {
      n.nodeValue = i;
      return;
    }
  }
  e.textContent = i;
}
var rn = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  Ag = ["Webkit", "ms", "Moz", "O"];
Object.keys(rn).forEach(function (e) {
  Ag.forEach(function (i) {
    (i = i + e.charAt(0).toUpperCase() + e.substring(1)), (rn[i] = rn[e]);
  });
});
function z1(e, i, n) {
  return i == null || typeof i == "boolean" || i === ""
    ? ""
    : n || typeof i != "number" || i === 0 || (rn.hasOwnProperty(e) && rn[e])
      ? ("" + i).trim()
      : i + "px";
}
function F1(e, i) {
  e = e.style;
  for (var n in i)
    if (i.hasOwnProperty(n)) {
      var c = n.indexOf("--") === 0,
        u = z1(n, i[n], c);
      n === "float" && (n = "cssFloat"), c ? e.setProperty(n, u) : (e[n] = u);
    }
}
var Eg = Ue(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  },
);
function Do(e, i) {
  if (i) {
    if (Eg[e] && (i.children != null || i.dangerouslySetInnerHTML != null))
      throw Error(de(137, e));
    if (i.dangerouslySetInnerHTML != null) {
      if (i.children != null) throw Error(de(60));
      if (
        typeof i.dangerouslySetInnerHTML != "object" ||
        !("__html" in i.dangerouslySetInnerHTML)
      )
        throw Error(de(61));
    }
    if (i.style != null && typeof i.style != "object") throw Error(de(62));
  }
}
function _o(e, i) {
  if (e.indexOf("-") === -1) return typeof i.is == "string";
  switch (e) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var jo = null;
function ec(e) {
  return (
    (e = e.target || e.srcElement || window),
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
  );
}
var Xo = null,
  cr = null,
  hr = null;
function Ah(e) {
  if ((e = $n(e))) {
    if (typeof Xo != "function") throw Error(de(280));
    var i = e.stateNode;
    i && ((i = ba(i)), Xo(e.stateNode, e.type, i));
  }
}
function D1(e) {
  cr ? (hr ? hr.push(e) : (hr = [e])) : (cr = e);
}
function _1() {
  if (cr) {
    var e = cr,
      i = hr;
    if (((hr = cr = null), Ah(e), i)) for (e = 0; e < i.length; e++) Ah(i[e]);
  }
}
function j1(e, i) {
  return e(i);
}
function X1() {}
var $a = !1;
function H1(e, i, n) {
  if ($a) return e(i, n);
  $a = !0;
  try {
    return j1(e, i, n);
  } finally {
    ($a = !1), (cr !== null || hr !== null) && (X1(), _1());
  }
}
function gn(e, i) {
  var n = e.stateNode;
  if (n === null) return null;
  var c = ba(n);
  if (c === null) return null;
  n = c[i];
  e: switch (i) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (c = !c.disabled) ||
        ((e = e.type),
        (c = !(
          e === "button" ||
          e === "input" ||
          e === "select" ||
          e === "textarea"
        ))),
        (e = !c);
      break e;
    default:
      e = !1;
  }
  if (e) return null;
  if (n && typeof n != "function") throw Error(de(231, i, typeof n));
  return n;
}
var Ho = !1;
if (zl)
  try {
    var Br = {};
    Object.defineProperty(Br, "passive", {
      get: function () {
        Ho = !0;
      },
    }),
      window.addEventListener("test", Br, Br),
      window.removeEventListener("test", Br, Br);
  } catch {
    Ho = !1;
  }
function Pg(e, i, n, c, u, g, b, k, E) {
  var I = Array.prototype.slice.call(arguments, 3);
  try {
    i.apply(n, I);
  } catch (F) {
    this.onError(F);
  }
}
var nn = !1,
  _s = null,
  js = !1,
  Yo = null,
  Lg = {
    onError: function (e) {
      (nn = !0), (_s = e);
    },
  };
function Tg(e, i, n, c, u, g, b, k, E) {
  (nn = !1), (_s = null), Pg.apply(Lg, arguments);
}
function Mg(e, i, n, c, u, g, b, k, E) {
  if ((Tg.apply(this, arguments), nn)) {
    if (nn) {
      var I = _s;
      (nn = !1), (_s = null);
    } else throw Error(de(198));
    js || ((js = !0), (Yo = I));
  }
}
function Bi(e) {
  var i = e,
    n = e;
  if (e.alternate) for (; i.return; ) i = i.return;
  else {
    e = i;
    do (i = e), i.flags & 4098 && (n = i.return), (e = i.return);
    while (e);
  }
  return i.tag === 3 ? n : null;
}
function Y1(e) {
  if (e.tag === 13) {
    var i = e.memoizedState;
    if (
      (i === null && ((e = e.alternate), e !== null && (i = e.memoizedState)),
      i !== null)
    )
      return i.dehydrated;
  }
  return null;
}
function Eh(e) {
  if (Bi(e) !== e) throw Error(de(188));
}
function Rg(e) {
  var i = e.alternate;
  if (!i) {
    if (((i = Bi(e)), i === null)) throw Error(de(188));
    return i !== e ? null : e;
  }
  for (var n = e, c = i; ; ) {
    var u = n.return;
    if (u === null) break;
    var g = u.alternate;
    if (g === null) {
      if (((c = u.return), c !== null)) {
        n = c;
        continue;
      }
      break;
    }
    if (u.child === g.child) {
      for (g = u.child; g; ) {
        if (g === n) return Eh(u), e;
        if (g === c) return Eh(u), i;
        g = g.sibling;
      }
      throw Error(de(188));
    }
    if (n.return !== c.return) (n = u), (c = g);
    else {
      for (var b = !1, k = u.child; k; ) {
        if (k === n) {
          (b = !0), (n = u), (c = g);
          break;
        }
        if (k === c) {
          (b = !0), (c = u), (n = g);
          break;
        }
        k = k.sibling;
      }
      if (!b) {
        for (k = g.child; k; ) {
          if (k === n) {
            (b = !0), (n = g), (c = u);
            break;
          }
          if (k === c) {
            (b = !0), (c = g), (n = u);
            break;
          }
          k = k.sibling;
        }
        if (!b) throw Error(de(189));
      }
    }
    if (n.alternate !== c) throw Error(de(190));
  }
  if (n.tag !== 3) throw Error(de(188));
  return n.stateNode.current === n ? e : i;
}
function B1(e) {
  return (e = Rg(e)), e !== null ? W1(e) : null;
}
function W1(e) {
  if (e.tag === 5 || e.tag === 6) return e;
  for (e = e.child; e !== null; ) {
    var i = W1(e);
    if (i !== null) return i;
    e = e.sibling;
  }
  return null;
}
var V1 = Ht.unstable_scheduleCallback,
  Ph = Ht.unstable_cancelCallback,
  Ng = Ht.unstable_shouldYield,
  Ig = Ht.unstable_requestPaint,
  Je = Ht.unstable_now,
  Og = Ht.unstable_getCurrentPriorityLevel,
  tc = Ht.unstable_ImmediatePriority,
  G1 = Ht.unstable_UserBlockingPriority,
  Xs = Ht.unstable_NormalPriority,
  zg = Ht.unstable_LowPriority,
  U1 = Ht.unstable_IdlePriority,
  ma = null,
  Sl = null;
function Fg(e) {
  if (Sl && typeof Sl.onCommitFiberRoot == "function")
    try {
      Sl.onCommitFiberRoot(ma, e, void 0, (e.current.flags & 128) === 128);
    } catch {}
}
var al = Math.clz32 ? Math.clz32 : jg,
  Dg = Math.log,
  _g = Math.LN2;
function jg(e) {
  return (e >>>= 0), e === 0 ? 32 : (31 - ((Dg(e) / _g) | 0)) | 0;
}
var as = 64,
  os = 4194304;
function en(e) {
  switch (e & -e) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return e & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return e;
  }
}
function Hs(e, i) {
  var n = e.pendingLanes;
  if (n === 0) return 0;
  var c = 0,
    u = e.suspendedLanes,
    g = e.pingedLanes,
    b = n & 268435455;
  if (b !== 0) {
    var k = b & ~u;
    k !== 0 ? (c = en(k)) : ((g &= b), g !== 0 && (c = en(g)));
  } else (b = n & ~u), b !== 0 ? (c = en(b)) : g !== 0 && (c = en(g));
  if (c === 0) return 0;
  if (
    i !== 0 &&
    i !== c &&
    !(i & u) &&
    ((u = c & -c), (g = i & -i), u >= g || (u === 16 && (g & 4194240) !== 0))
  )
    return i;
  if ((c & 4 && (c |= n & 16), (i = e.entangledLanes), i !== 0))
    for (e = e.entanglements, i &= c; 0 < i; )
      (n = 31 - al(i)), (u = 1 << n), (c |= e[n]), (i &= ~u);
  return c;
}
function Xg(e, i) {
  switch (e) {
    case 1:
    case 2:
    case 4:
      return i + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return i + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function Hg(e, i) {
  for (
    var n = e.suspendedLanes,
      c = e.pingedLanes,
      u = e.expirationTimes,
      g = e.pendingLanes;
    0 < g;

  ) {
    var b = 31 - al(g),
      k = 1 << b,
      E = u[b];
    E === -1
      ? (!(k & n) || k & c) && (u[b] = Xg(k, i))
      : E <= i && (e.expiredLanes |= k),
      (g &= ~k);
  }
}
function Bo(e) {
  return (
    (e = e.pendingLanes & -1073741825),
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
  );
}
function Z1() {
  var e = as;
  return (as <<= 1), !(as & 4194240) && (as = 64), e;
}
function qa(e) {
  for (var i = [], n = 0; 31 > n; n++) i.push(e);
  return i;
}
function Un(e, i, n) {
  (e.pendingLanes |= i),
    i !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
    (e = e.eventTimes),
    (i = 31 - al(i)),
    (e[i] = n);
}
function Yg(e, i) {
  var n = e.pendingLanes & ~i;
  (e.pendingLanes = i),
    (e.suspendedLanes = 0),
    (e.pingedLanes = 0),
    (e.expiredLanes &= i),
    (e.mutableReadLanes &= i),
    (e.entangledLanes &= i),
    (i = e.entanglements);
  var c = e.eventTimes;
  for (e = e.expirationTimes; 0 < n; ) {
    var u = 31 - al(n),
      g = 1 << u;
    (i[u] = 0), (c[u] = -1), (e[u] = -1), (n &= ~g);
  }
}
function lc(e, i) {
  var n = (e.entangledLanes |= i);
  for (e = e.entanglements; n; ) {
    var c = 31 - al(n),
      u = 1 << c;
    (u & i) | (e[c] & i) && (e[c] |= i), (n &= ~u);
  }
}
var De = 0;
function $1(e) {
  return (e &= -e), 1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1;
}
var q1,
  ic,
  Q1,
  K1,
  J1,
  Wo = !1,
  cs = [],
  ii = null,
  ri = null,
  ni = null,
  mn = new Map(),
  xn = new Map(),
  Gl = [],
  Bg =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " ",
    );
function Lh(e, i) {
  switch (e) {
    case "focusin":
    case "focusout":
      ii = null;
      break;
    case "dragenter":
    case "dragleave":
      ri = null;
      break;
    case "mouseover":
    case "mouseout":
      ni = null;
      break;
    case "pointerover":
    case "pointerout":
      mn.delete(i.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      xn.delete(i.pointerId);
  }
}
function Wr(e, i, n, c, u, g) {
  return e === null || e.nativeEvent !== g
    ? ((e = {
        blockedOn: i,
        domEventName: n,
        eventSystemFlags: c,
        nativeEvent: g,
        targetContainers: [u],
      }),
      i !== null && ((i = $n(i)), i !== null && ic(i)),
      e)
    : ((e.eventSystemFlags |= c),
      (i = e.targetContainers),
      u !== null && i.indexOf(u) === -1 && i.push(u),
      e);
}
function Wg(e, i, n, c, u) {
  switch (i) {
    case "focusin":
      return (ii = Wr(ii, e, i, n, c, u)), !0;
    case "dragenter":
      return (ri = Wr(ri, e, i, n, c, u)), !0;
    case "mouseover":
      return (ni = Wr(ni, e, i, n, c, u)), !0;
    case "pointerover":
      var g = u.pointerId;
      return mn.set(g, Wr(mn.get(g) || null, e, i, n, c, u)), !0;
    case "gotpointercapture":
      return (
        (g = u.pointerId), xn.set(g, Wr(xn.get(g) || null, e, i, n, c, u)), !0
      );
  }
  return !1;
}
function ed(e) {
  var i = Si(e.target);
  if (i !== null) {
    var n = Bi(i);
    if (n !== null) {
      if (((i = n.tag), i === 13)) {
        if (((i = Y1(n)), i !== null)) {
          (e.blockedOn = i),
            J1(e.priority, function () {
              Q1(n);
            });
          return;
        }
      } else if (i === 3 && n.stateNode.current.memoizedState.isDehydrated) {
        e.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
        return;
      }
    }
  }
  e.blockedOn = null;
}
function Ss(e) {
  if (e.blockedOn !== null) return !1;
  for (var i = e.targetContainers; 0 < i.length; ) {
    var n = Vo(e.domEventName, e.eventSystemFlags, i[0], e.nativeEvent);
    if (n === null) {
      n = e.nativeEvent;
      var c = new n.constructor(n.type, n);
      (jo = c), n.target.dispatchEvent(c), (jo = null);
    } else return (i = $n(n)), i !== null && ic(i), (e.blockedOn = n), !1;
    i.shift();
  }
  return !0;
}
function Th(e, i, n) {
  Ss(e) && n.delete(i);
}
function Vg() {
  (Wo = !1),
    ii !== null && Ss(ii) && (ii = null),
    ri !== null && Ss(ri) && (ri = null),
    ni !== null && Ss(ni) && (ni = null),
    mn.forEach(Th),
    xn.forEach(Th);
}
function Vr(e, i) {
  e.blockedOn === i &&
    ((e.blockedOn = null),
    Wo ||
      ((Wo = !0),
      Ht.unstable_scheduleCallback(Ht.unstable_NormalPriority, Vg)));
}
function vn(e) {
  function i(u) {
    return Vr(u, e);
  }
  if (0 < cs.length) {
    Vr(cs[0], e);
    for (var n = 1; n < cs.length; n++) {
      var c = cs[n];
      c.blockedOn === e && (c.blockedOn = null);
    }
  }
  for (
    ii !== null && Vr(ii, e),
      ri !== null && Vr(ri, e),
      ni !== null && Vr(ni, e),
      mn.forEach(i),
      xn.forEach(i),
      n = 0;
    n < Gl.length;
    n++
  )
    (c = Gl[n]), c.blockedOn === e && (c.blockedOn = null);
  for (; 0 < Gl.length && ((n = Gl[0]), n.blockedOn === null); )
    ed(n), n.blockedOn === null && Gl.shift();
}
var ur = jl.ReactCurrentBatchConfig,
  Ys = !0;
function Gg(e, i, n, c) {
  var u = De,
    g = ur.transition;
  ur.transition = null;
  try {
    (De = 1), rc(e, i, n, c);
  } finally {
    (De = u), (ur.transition = g);
  }
}
function Ug(e, i, n, c) {
  var u = De,
    g = ur.transition;
  ur.transition = null;
  try {
    (De = 4), rc(e, i, n, c);
  } finally {
    (De = u), (ur.transition = g);
  }
}
function rc(e, i, n, c) {
  if (Ys) {
    var u = Vo(e, i, n, c);
    if (u === null) so(e, i, c, Bs, n), Lh(e, c);
    else if (Wg(u, e, i, n, c)) c.stopPropagation();
    else if ((Lh(e, c), i & 4 && -1 < Bg.indexOf(e))) {
      for (; u !== null; ) {
        var g = $n(u);
        if (
          (g !== null && q1(g),
          (g = Vo(e, i, n, c)),
          g === null && so(e, i, c, Bs, n),
          g === u)
        )
          break;
        u = g;
      }
      u !== null && c.stopPropagation();
    } else so(e, i, c, null, n);
  }
}
var Bs = null;
function Vo(e, i, n, c) {
  if (((Bs = null), (e = ec(c)), (e = Si(e)), e !== null))
    if (((i = Bi(e)), i === null)) e = null;
    else if (((n = i.tag), n === 13)) {
      if (((e = Y1(i)), e !== null)) return e;
      e = null;
    } else if (n === 3) {
      if (i.stateNode.current.memoizedState.isDehydrated)
        return i.tag === 3 ? i.stateNode.containerInfo : null;
      e = null;
    } else i !== e && (e = null);
  return (Bs = e), null;
}
function td(e) {
  switch (e) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (Og()) {
        case tc:
          return 1;
        case G1:
          return 4;
        case Xs:
        case zg:
          return 16;
        case U1:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var ei = null,
  nc = null,
  Cs = null;
function ld() {
  if (Cs) return Cs;
  var e,
    i = nc,
    n = i.length,
    c,
    u = "value" in ei ? ei.value : ei.textContent,
    g = u.length;
  for (e = 0; e < n && i[e] === u[e]; e++);
  var b = n - e;
  for (c = 1; c <= b && i[n - c] === u[g - c]; c++);
  return (Cs = u.slice(e, 1 < c ? 1 - c : void 0));
}
function As(e) {
  var i = e.keyCode;
  return (
    "charCode" in e
      ? ((e = e.charCode), e === 0 && i === 13 && (e = 13))
      : (e = i),
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
  );
}
function hs() {
  return !0;
}
function Mh() {
  return !1;
}
function Bt(e) {
  function i(n, c, u, g, b) {
    (this._reactName = n),
      (this._targetInst = u),
      (this.type = c),
      (this.nativeEvent = g),
      (this.target = b),
      (this.currentTarget = null);
    for (var k in e)
      e.hasOwnProperty(k) && ((n = e[k]), (this[k] = n ? n(g) : g[k]));
    return (
      (this.isDefaultPrevented = (
        g.defaultPrevented != null ? g.defaultPrevented : g.returnValue === !1
      )
        ? hs
        : Mh),
      (this.isPropagationStopped = Mh),
      this
    );
  }
  return (
    Ue(i.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var n = this.nativeEvent;
        n &&
          (n.preventDefault
            ? n.preventDefault()
            : typeof n.returnValue != "unknown" && (n.returnValue = !1),
          (this.isDefaultPrevented = hs));
      },
      stopPropagation: function () {
        var n = this.nativeEvent;
        n &&
          (n.stopPropagation
            ? n.stopPropagation()
            : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0),
          (this.isPropagationStopped = hs));
      },
      persist: function () {},
      isPersistent: hs,
    }),
    i
  );
}
var Dr = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (e) {
      return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  sc = Bt(Dr),
  Zn = Ue({}, Dr, { view: 0, detail: 0 }),
  Zg = Bt(Zn),
  Qa,
  Ka,
  Gr,
  xa = Ue({}, Zn, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: ac,
    button: 0,
    buttons: 0,
    relatedTarget: function (e) {
      return e.relatedTarget === void 0
        ? e.fromElement === e.srcElement
          ? e.toElement
          : e.fromElement
        : e.relatedTarget;
    },
    movementX: function (e) {
      return "movementX" in e
        ? e.movementX
        : (e !== Gr &&
            (Gr && e.type === "mousemove"
              ? ((Qa = e.screenX - Gr.screenX), (Ka = e.screenY - Gr.screenY))
              : (Ka = Qa = 0),
            (Gr = e)),
          Qa);
    },
    movementY: function (e) {
      return "movementY" in e ? e.movementY : Ka;
    },
  }),
  Rh = Bt(xa),
  $g = Ue({}, xa, { dataTransfer: 0 }),
  qg = Bt($g),
  Qg = Ue({}, Zn, { relatedTarget: 0 }),
  Ja = Bt(Qg),
  Kg = Ue({}, Dr, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Jg = Bt(Kg),
  e2 = Ue({}, Dr, {
    clipboardData: function (e) {
      return "clipboardData" in e ? e.clipboardData : window.clipboardData;
    },
  }),
  t2 = Bt(e2),
  l2 = Ue({}, Dr, { data: 0 }),
  Nh = Bt(l2),
  i2 = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  r2 = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  n2 = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function s2(e) {
  var i = this.nativeEvent;
  return i.getModifierState ? i.getModifierState(e) : (e = n2[e]) ? !!i[e] : !1;
}
function ac() {
  return s2;
}
var a2 = Ue({}, Zn, {
    key: function (e) {
      if (e.key) {
        var i = i2[e.key] || e.key;
        if (i !== "Unidentified") return i;
      }
      return e.type === "keypress"
        ? ((e = As(e)), e === 13 ? "Enter" : String.fromCharCode(e))
        : e.type === "keydown" || e.type === "keyup"
          ? r2[e.keyCode] || "Unidentified"
          : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: ac,
    charCode: function (e) {
      return e.type === "keypress" ? As(e) : 0;
    },
    keyCode: function (e) {
      return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
    },
    which: function (e) {
      return e.type === "keypress"
        ? As(e)
        : e.type === "keydown" || e.type === "keyup"
          ? e.keyCode
          : 0;
    },
  }),
  o2 = Bt(a2),
  c2 = Ue({}, xa, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Ih = Bt(c2),
  h2 = Ue({}, Zn, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: ac,
  }),
  u2 = Bt(h2),
  d2 = Ue({}, Dr, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  f2 = Bt(d2),
  p2 = Ue({}, xa, {
    deltaX: function (e) {
      return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function (e) {
      return "deltaY" in e
        ? e.deltaY
        : "wheelDeltaY" in e
          ? -e.wheelDeltaY
          : "wheelDelta" in e
            ? -e.wheelDelta
            : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  g2 = Bt(p2),
  m2 = [9, 13, 27, 32],
  oc = zl && "CompositionEvent" in window,
  sn = null;
zl && "documentMode" in document && (sn = document.documentMode);
var x2 = zl && "TextEvent" in window && !sn,
  id = zl && (!oc || (sn && 8 < sn && 11 >= sn)),
  Oh = String.fromCharCode(32),
  zh = !1;
function rd(e, i) {
  switch (e) {
    case "keyup":
      return m2.indexOf(i.keyCode) !== -1;
    case "keydown":
      return i.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function nd(e) {
  return (e = e.detail), typeof e == "object" && "data" in e ? e.data : null;
}
var Ki = !1;
function v2(e, i) {
  switch (e) {
    case "compositionend":
      return nd(i);
    case "keypress":
      return i.which !== 32 ? null : ((zh = !0), Oh);
    case "textInput":
      return (e = i.data), e === Oh && zh ? null : e;
    default:
      return null;
  }
}
function y2(e, i) {
  if (Ki)
    return e === "compositionend" || (!oc && rd(e, i))
      ? ((e = ld()), (Cs = nc = ei = null), (Ki = !1), e)
      : null;
  switch (e) {
    case "paste":
      return null;
    case "keypress":
      if (!(i.ctrlKey || i.altKey || i.metaKey) || (i.ctrlKey && i.altKey)) {
        if (i.char && 1 < i.char.length) return i.char;
        if (i.which) return String.fromCharCode(i.which);
      }
      return null;
    case "compositionend":
      return id && i.locale !== "ko" ? null : i.data;
    default:
      return null;
  }
}
var b2 = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function Fh(e) {
  var i = e && e.nodeName && e.nodeName.toLowerCase();
  return i === "input" ? !!b2[e.type] : i === "textarea";
}
function sd(e, i, n, c) {
  D1(c),
    (i = Ws(i, "onChange")),
    0 < i.length &&
      ((n = new sc("onChange", "change", null, n, c)),
      e.push({ event: n, listeners: i }));
}
var an = null,
  yn = null;
function w2(e) {
  xd(e, 0);
}
function va(e) {
  var i = tr(e);
  if (M1(i)) return e;
}
function k2(e, i) {
  if (e === "change") return i;
}
var ad = !1;
if (zl) {
  var eo;
  if (zl) {
    var to = "oninput" in document;
    if (!to) {
      var Dh = document.createElement("div");
      Dh.setAttribute("oninput", "return;"),
        (to = typeof Dh.oninput == "function");
    }
    eo = to;
  } else eo = !1;
  ad = eo && (!document.documentMode || 9 < document.documentMode);
}
function _h() {
  an && (an.detachEvent("onpropertychange", od), (yn = an = null));
}
function od(e) {
  if (e.propertyName === "value" && va(yn)) {
    var i = [];
    sd(i, yn, e, ec(e)), H1(w2, i);
  }
}
function S2(e, i, n) {
  e === "focusin"
    ? (_h(), (an = i), (yn = n), an.attachEvent("onpropertychange", od))
    : e === "focusout" && _h();
}
function C2(e) {
  if (e === "selectionchange" || e === "keyup" || e === "keydown")
    return va(yn);
}
function A2(e, i) {
  if (e === "click") return va(i);
}
function E2(e, i) {
  if (e === "input" || e === "change") return va(i);
}
function P2(e, i) {
  return (e === i && (e !== 0 || 1 / e === 1 / i)) || (e !== e && i !== i);
}
var ul = typeof Object.is == "function" ? Object.is : P2;
function bn(e, i) {
  if (ul(e, i)) return !0;
  if (typeof e != "object" || e === null || typeof i != "object" || i === null)
    return !1;
  var n = Object.keys(e),
    c = Object.keys(i);
  if (n.length !== c.length) return !1;
  for (c = 0; c < n.length; c++) {
    var u = n[c];
    if (!Po.call(i, u) || !ul(e[u], i[u])) return !1;
  }
  return !0;
}
function jh(e) {
  for (; e && e.firstChild; ) e = e.firstChild;
  return e;
}
function Xh(e, i) {
  var n = jh(e);
  e = 0;
  for (var c; n; ) {
    if (n.nodeType === 3) {
      if (((c = e + n.textContent.length), e <= i && c >= i))
        return { node: n, offset: i - e };
      e = c;
    }
    e: {
      for (; n; ) {
        if (n.nextSibling) {
          n = n.nextSibling;
          break e;
        }
        n = n.parentNode;
      }
      n = void 0;
    }
    n = jh(n);
  }
}
function cd(e, i) {
  return e && i
    ? e === i
      ? !0
      : e && e.nodeType === 3
        ? !1
        : i && i.nodeType === 3
          ? cd(e, i.parentNode)
          : "contains" in e
            ? e.contains(i)
            : e.compareDocumentPosition
              ? !!(e.compareDocumentPosition(i) & 16)
              : !1
    : !1;
}
function hd() {
  for (var e = window, i = Ds(); i instanceof e.HTMLIFrameElement; ) {
    try {
      var n = typeof i.contentWindow.location.href == "string";
    } catch {
      n = !1;
    }
    if (n) e = i.contentWindow;
    else break;
    i = Ds(e.document);
  }
  return i;
}
function cc(e) {
  var i = e && e.nodeName && e.nodeName.toLowerCase();
  return (
    i &&
    ((i === "input" &&
      (e.type === "text" ||
        e.type === "search" ||
        e.type === "tel" ||
        e.type === "url" ||
        e.type === "password")) ||
      i === "textarea" ||
      e.contentEditable === "true")
  );
}
function L2(e) {
  var i = hd(),
    n = e.focusedElem,
    c = e.selectionRange;
  if (
    i !== n &&
    n &&
    n.ownerDocument &&
    cd(n.ownerDocument.documentElement, n)
  ) {
    if (c !== null && cc(n)) {
      if (
        ((i = c.start),
        (e = c.end),
        e === void 0 && (e = i),
        "selectionStart" in n)
      )
        (n.selectionStart = i), (n.selectionEnd = Math.min(e, n.value.length));
      else if (
        ((e = ((i = n.ownerDocument || document) && i.defaultView) || window),
        e.getSelection)
      ) {
        e = e.getSelection();
        var u = n.textContent.length,
          g = Math.min(c.start, u);
        (c = c.end === void 0 ? g : Math.min(c.end, u)),
          !e.extend && g > c && ((u = c), (c = g), (g = u)),
          (u = Xh(n, g));
        var b = Xh(n, c);
        u &&
          b &&
          (e.rangeCount !== 1 ||
            e.anchorNode !== u.node ||
            e.anchorOffset !== u.offset ||
            e.focusNode !== b.node ||
            e.focusOffset !== b.offset) &&
          ((i = i.createRange()),
          i.setStart(u.node, u.offset),
          e.removeAllRanges(),
          g > c
            ? (e.addRange(i), e.extend(b.node, b.offset))
            : (i.setEnd(b.node, b.offset), e.addRange(i)));
      }
    }
    for (i = [], e = n; (e = e.parentNode); )
      e.nodeType === 1 &&
        i.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
    for (typeof n.focus == "function" && n.focus(), n = 0; n < i.length; n++)
      (e = i[n]),
        (e.element.scrollLeft = e.left),
        (e.element.scrollTop = e.top);
  }
}
var T2 = zl && "documentMode" in document && 11 >= document.documentMode,
  Ji = null,
  Go = null,
  on = null,
  Uo = !1;
function Hh(e, i, n) {
  var c = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
  Uo ||
    Ji == null ||
    Ji !== Ds(c) ||
    ((c = Ji),
    "selectionStart" in c && cc(c)
      ? (c = { start: c.selectionStart, end: c.selectionEnd })
      : ((c = (
          (c.ownerDocument && c.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (c = {
          anchorNode: c.anchorNode,
          anchorOffset: c.anchorOffset,
          focusNode: c.focusNode,
          focusOffset: c.focusOffset,
        })),
    (on && bn(on, c)) ||
      ((on = c),
      (c = Ws(Go, "onSelect")),
      0 < c.length &&
        ((i = new sc("onSelect", "select", null, i, n)),
        e.push({ event: i, listeners: c }),
        (i.target = Ji))));
}
function us(e, i) {
  var n = {};
  return (
    (n[e.toLowerCase()] = i.toLowerCase()),
    (n["Webkit" + e] = "webkit" + i),
    (n["Moz" + e] = "moz" + i),
    n
  );
}
var er = {
    animationend: us("Animation", "AnimationEnd"),
    animationiteration: us("Animation", "AnimationIteration"),
    animationstart: us("Animation", "AnimationStart"),
    transitionend: us("Transition", "TransitionEnd"),
  },
  lo = {},
  ud = {};
zl &&
  ((ud = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete er.animationend.animation,
    delete er.animationiteration.animation,
    delete er.animationstart.animation),
  "TransitionEvent" in window || delete er.transitionend.transition);
function ya(e) {
  if (lo[e]) return lo[e];
  if (!er[e]) return e;
  var i = er[e],
    n;
  for (n in i) if (i.hasOwnProperty(n) && n in ud) return (lo[e] = i[n]);
  return e;
}
var dd = ya("animationend"),
  fd = ya("animationiteration"),
  pd = ya("animationstart"),
  gd = ya("transitionend"),
  md = new Map(),
  Yh =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " ",
    );
function pi(e, i) {
  md.set(e, i), Yi(i, [e]);
}
for (var io = 0; io < Yh.length; io++) {
  var ro = Yh[io],
    M2 = ro.toLowerCase(),
    R2 = ro[0].toUpperCase() + ro.slice(1);
  pi(M2, "on" + R2);
}
pi(dd, "onAnimationEnd");
pi(fd, "onAnimationIteration");
pi(pd, "onAnimationStart");
pi("dblclick", "onDoubleClick");
pi("focusin", "onFocus");
pi("focusout", "onBlur");
pi(gd, "onTransitionEnd");
Pr("onMouseEnter", ["mouseout", "mouseover"]);
Pr("onMouseLeave", ["mouseout", "mouseover"]);
Pr("onPointerEnter", ["pointerout", "pointerover"]);
Pr("onPointerLeave", ["pointerout", "pointerover"]);
Yi(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(
    " ",
  ),
);
Yi(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " ",
  ),
);
Yi("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Yi(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" "),
);
Yi(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" "),
);
Yi(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" "),
);
var tn =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " ",
    ),
  N2 = new Set("cancel close invalid load scroll toggle".split(" ").concat(tn));
function Bh(e, i, n) {
  var c = e.type || "unknown-event";
  (e.currentTarget = n), Mg(c, i, void 0, e), (e.currentTarget = null);
}
function xd(e, i) {
  i = (i & 4) !== 0;
  for (var n = 0; n < e.length; n++) {
    var c = e[n],
      u = c.event;
    c = c.listeners;
    e: {
      var g = void 0;
      if (i)
        for (var b = c.length - 1; 0 <= b; b--) {
          var k = c[b],
            E = k.instance,
            I = k.currentTarget;
          if (((k = k.listener), E !== g && u.isPropagationStopped())) break e;
          Bh(u, k, I), (g = E);
        }
      else
        for (b = 0; b < c.length; b++) {
          if (
            ((k = c[b]),
            (E = k.instance),
            (I = k.currentTarget),
            (k = k.listener),
            E !== g && u.isPropagationStopped())
          )
            break e;
          Bh(u, k, I), (g = E);
        }
    }
  }
  if (js) throw ((e = Yo), (js = !1), (Yo = null), e);
}
function He(e, i) {
  var n = i[Ko];
  n === void 0 && (n = i[Ko] = new Set());
  var c = e + "__bubble";
  n.has(c) || (vd(i, e, 2, !1), n.add(c));
}
function no(e, i, n) {
  var c = 0;
  i && (c |= 4), vd(n, e, c, i);
}
var ds = "_reactListening" + Math.random().toString(36).slice(2);
function wn(e) {
  if (!e[ds]) {
    (e[ds] = !0),
      A1.forEach(function (n) {
        n !== "selectionchange" && (N2.has(n) || no(n, !1, e), no(n, !0, e));
      });
    var i = e.nodeType === 9 ? e : e.ownerDocument;
    i === null || i[ds] || ((i[ds] = !0), no("selectionchange", !1, i));
  }
}
function vd(e, i, n, c) {
  switch (td(i)) {
    case 1:
      var u = Gg;
      break;
    case 4:
      u = Ug;
      break;
    default:
      u = rc;
  }
  (n = u.bind(null, i, n, e)),
    (u = void 0),
    !Ho ||
      (i !== "touchstart" && i !== "touchmove" && i !== "wheel") ||
      (u = !0),
    c
      ? u !== void 0
        ? e.addEventListener(i, n, { capture: !0, passive: u })
        : e.addEventListener(i, n, !0)
      : u !== void 0
        ? e.addEventListener(i, n, { passive: u })
        : e.addEventListener(i, n, !1);
}
function so(e, i, n, c, u) {
  var g = c;
  if (!(i & 1) && !(i & 2) && c !== null)
    e: for (;;) {
      if (c === null) return;
      var b = c.tag;
      if (b === 3 || b === 4) {
        var k = c.stateNode.containerInfo;
        if (k === u || (k.nodeType === 8 && k.parentNode === u)) break;
        if (b === 4)
          for (b = c.return; b !== null; ) {
            var E = b.tag;
            if (
              (E === 3 || E === 4) &&
              ((E = b.stateNode.containerInfo),
              E === u || (E.nodeType === 8 && E.parentNode === u))
            )
              return;
            b = b.return;
          }
        for (; k !== null; ) {
          if (((b = Si(k)), b === null)) return;
          if (((E = b.tag), E === 5 || E === 6)) {
            c = g = b;
            continue e;
          }
          k = k.parentNode;
        }
      }
      c = c.return;
    }
  H1(function () {
    var I = g,
      F = ec(n),
      H = [];
    e: {
      var G = md.get(e);
      if (G !== void 0) {
        var K = sc,
          q = e;
        switch (e) {
          case "keypress":
            if (As(n) === 0) break e;
          case "keydown":
          case "keyup":
            K = o2;
            break;
          case "focusin":
            (q = "focus"), (K = Ja);
            break;
          case "focusout":
            (q = "blur"), (K = Ja);
            break;
          case "beforeblur":
          case "afterblur":
            K = Ja;
            break;
          case "click":
            if (n.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            K = Rh;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            K = qg;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            K = u2;
            break;
          case dd:
          case fd:
          case pd:
            K = Jg;
            break;
          case gd:
            K = f2;
            break;
          case "scroll":
            K = Zg;
            break;
          case "wheel":
            K = g2;
            break;
          case "copy":
          case "cut":
          case "paste":
            K = t2;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            K = Ih;
        }
        var Q = (i & 4) !== 0,
          ue = !Q && e === "scroll",
          B = Q ? (G !== null ? G + "Capture" : null) : G;
        Q = [];
        for (var L = I, W; L !== null; ) {
          W = L;
          var te = W.stateNode;
          if (
            (W.tag === 5 &&
              te !== null &&
              ((W = te),
              B !== null &&
                ((te = gn(L, B)), te != null && Q.push(kn(L, te, W)))),
            ue)
          )
            break;
          L = L.return;
        }
        0 < Q.length &&
          ((G = new K(G, q, null, n, F)), H.push({ event: G, listeners: Q }));
      }
    }
    if (!(i & 7)) {
      e: {
        if (
          ((G = e === "mouseover" || e === "pointerover"),
          (K = e === "mouseout" || e === "pointerout"),
          G &&
            n !== jo &&
            (q = n.relatedTarget || n.fromElement) &&
            (Si(q) || q[Fl]))
        )
          break e;
        if (
          (K || G) &&
          ((G =
            F.window === F
              ? F
              : (G = F.ownerDocument)
                ? G.defaultView || G.parentWindow
                : window),
          K
            ? ((q = n.relatedTarget || n.toElement),
              (K = I),
              (q = q ? Si(q) : null),
              q !== null &&
                ((ue = Bi(q)), q !== ue || (q.tag !== 5 && q.tag !== 6)) &&
                (q = null))
            : ((K = null), (q = I)),
          K !== q)
        ) {
          if (
            ((Q = Rh),
            (te = "onMouseLeave"),
            (B = "onMouseEnter"),
            (L = "mouse"),
            (e === "pointerout" || e === "pointerover") &&
              ((Q = Ih),
              (te = "onPointerLeave"),
              (B = "onPointerEnter"),
              (L = "pointer")),
            (ue = K == null ? G : tr(K)),
            (W = q == null ? G : tr(q)),
            (G = new Q(te, L + "leave", K, n, F)),
            (G.target = ue),
            (G.relatedTarget = W),
            (te = null),
            Si(F) === I &&
              ((Q = new Q(B, L + "enter", q, n, F)),
              (Q.target = W),
              (Q.relatedTarget = ue),
              (te = Q)),
            (ue = te),
            K && q)
          )
            t: {
              for (Q = K, B = q, L = 0, W = Q; W; W = Zi(W)) L++;
              for (W = 0, te = B; te; te = Zi(te)) W++;
              for (; 0 < L - W; ) (Q = Zi(Q)), L--;
              for (; 0 < W - L; ) (B = Zi(B)), W--;
              for (; L--; ) {
                if (Q === B || (B !== null && Q === B.alternate)) break t;
                (Q = Zi(Q)), (B = Zi(B));
              }
              Q = null;
            }
          else Q = null;
          K !== null && Wh(H, G, K, Q, !1),
            q !== null && ue !== null && Wh(H, ue, q, Q, !0);
        }
      }
      e: {
        if (
          ((G = I ? tr(I) : window),
          (K = G.nodeName && G.nodeName.toLowerCase()),
          K === "select" || (K === "input" && G.type === "file"))
        )
          var Z = k2;
        else if (Fh(G))
          if (ad) Z = E2;
          else {
            Z = C2;
            var oe = S2;
          }
        else
          (K = G.nodeName) &&
            K.toLowerCase() === "input" &&
            (G.type === "checkbox" || G.type === "radio") &&
            (Z = A2);
        if (Z && (Z = Z(e, I))) {
          sd(H, Z, n, F);
          break e;
        }
        oe && oe(e, G, I),
          e === "focusout" &&
            (oe = G._wrapperState) &&
            oe.controlled &&
            G.type === "number" &&
            Oo(G, "number", G.value);
      }
      switch (((oe = I ? tr(I) : window), e)) {
        case "focusin":
          (Fh(oe) || oe.contentEditable === "true") &&
            ((Ji = oe), (Go = I), (on = null));
          break;
        case "focusout":
          on = Go = Ji = null;
          break;
        case "mousedown":
          Uo = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (Uo = !1), Hh(H, n, F);
          break;
        case "selectionchange":
          if (T2) break;
        case "keydown":
        case "keyup":
          Hh(H, n, F);
      }
      var pe;
      if (oc)
        e: {
          switch (e) {
            case "compositionstart":
              var ae = "onCompositionStart";
              break e;
            case "compositionend":
              ae = "onCompositionEnd";
              break e;
            case "compositionupdate":
              ae = "onCompositionUpdate";
              break e;
          }
          ae = void 0;
        }
      else
        Ki
          ? rd(e, n) && (ae = "onCompositionEnd")
          : e === "keydown" && n.keyCode === 229 && (ae = "onCompositionStart");
      ae &&
        (id &&
          n.locale !== "ko" &&
          (Ki || ae !== "onCompositionStart"
            ? ae === "onCompositionEnd" && Ki && (pe = ld())
            : ((ei = F),
              (nc = "value" in ei ? ei.value : ei.textContent),
              (Ki = !0))),
        (oe = Ws(I, ae)),
        0 < oe.length &&
          ((ae = new Nh(ae, e, null, n, F)),
          H.push({ event: ae, listeners: oe }),
          pe ? (ae.data = pe) : ((pe = nd(n)), pe !== null && (ae.data = pe)))),
        (pe = x2 ? v2(e, n) : y2(e, n)) &&
          ((I = Ws(I, "onBeforeInput")),
          0 < I.length &&
            ((F = new Nh("onBeforeInput", "beforeinput", null, n, F)),
            H.push({ event: F, listeners: I }),
            (F.data = pe)));
    }
    xd(H, i);
  });
}
function kn(e, i, n) {
  return { instance: e, listener: i, currentTarget: n };
}
function Ws(e, i) {
  for (var n = i + "Capture", c = []; e !== null; ) {
    var u = e,
      g = u.stateNode;
    u.tag === 5 &&
      g !== null &&
      ((u = g),
      (g = gn(e, n)),
      g != null && c.unshift(kn(e, g, u)),
      (g = gn(e, i)),
      g != null && c.push(kn(e, g, u))),
      (e = e.return);
  }
  return c;
}
function Zi(e) {
  if (e === null) return null;
  do e = e.return;
  while (e && e.tag !== 5);
  return e || null;
}
function Wh(e, i, n, c, u) {
  for (var g = i._reactName, b = []; n !== null && n !== c; ) {
    var k = n,
      E = k.alternate,
      I = k.stateNode;
    if (E !== null && E === c) break;
    k.tag === 5 &&
      I !== null &&
      ((k = I),
      u
        ? ((E = gn(n, g)), E != null && b.unshift(kn(n, E, k)))
        : u || ((E = gn(n, g)), E != null && b.push(kn(n, E, k)))),
      (n = n.return);
  }
  b.length !== 0 && e.push({ event: i, listeners: b });
}
var I2 = /\r\n?/g,
  O2 = /\u0000|\uFFFD/g;
function Vh(e) {
  return (typeof e == "string" ? e : "" + e)
    .replace(
      I2,
      `
`,
    )
    .replace(O2, "");
}
function fs(e, i, n) {
  if (((i = Vh(i)), Vh(e) !== i && n)) throw Error(de(425));
}
function Vs() {}
var Zo = null,
  $o = null;
function qo(e, i) {
  return (
    e === "textarea" ||
    e === "noscript" ||
    typeof i.children == "string" ||
    typeof i.children == "number" ||
    (typeof i.dangerouslySetInnerHTML == "object" &&
      i.dangerouslySetInnerHTML !== null &&
      i.dangerouslySetInnerHTML.__html != null)
  );
}
var Qo = typeof setTimeout == "function" ? setTimeout : void 0,
  z2 = typeof clearTimeout == "function" ? clearTimeout : void 0,
  Gh = typeof Promise == "function" ? Promise : void 0,
  F2 =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof Gh < "u"
        ? function (e) {
            return Gh.resolve(null).then(e).catch(D2);
          }
        : Qo;
function D2(e) {
  setTimeout(function () {
    throw e;
  });
}
function ao(e, i) {
  var n = i,
    c = 0;
  do {
    var u = n.nextSibling;
    if ((e.removeChild(n), u && u.nodeType === 8))
      if (((n = u.data), n === "/$")) {
        if (c === 0) {
          e.removeChild(u), vn(i);
          return;
        }
        c--;
      } else (n !== "$" && n !== "$?" && n !== "$!") || c++;
    n = u;
  } while (n);
  vn(i);
}
function si(e) {
  for (; e != null; e = e.nextSibling) {
    var i = e.nodeType;
    if (i === 1 || i === 3) break;
    if (i === 8) {
      if (((i = e.data), i === "$" || i === "$!" || i === "$?")) break;
      if (i === "/$") return null;
    }
  }
  return e;
}
function Uh(e) {
  e = e.previousSibling;
  for (var i = 0; e; ) {
    if (e.nodeType === 8) {
      var n = e.data;
      if (n === "$" || n === "$!" || n === "$?") {
        if (i === 0) return e;
        i--;
      } else n === "/$" && i++;
    }
    e = e.previousSibling;
  }
  return null;
}
var _r = Math.random().toString(36).slice(2),
  kl = "__reactFiber$" + _r,
  Sn = "__reactProps$" + _r,
  Fl = "__reactContainer$" + _r,
  Ko = "__reactEvents$" + _r,
  _2 = "__reactListeners$" + _r,
  j2 = "__reactHandles$" + _r;
function Si(e) {
  var i = e[kl];
  if (i) return i;
  for (var n = e.parentNode; n; ) {
    if ((i = n[Fl] || n[kl])) {
      if (
        ((n = i.alternate),
        i.child !== null || (n !== null && n.child !== null))
      )
        for (e = Uh(e); e !== null; ) {
          if ((n = e[kl])) return n;
          e = Uh(e);
        }
      return i;
    }
    (e = n), (n = e.parentNode);
  }
  return null;
}
function $n(e) {
  return (
    (e = e[kl] || e[Fl]),
    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e
  );
}
function tr(e) {
  if (e.tag === 5 || e.tag === 6) return e.stateNode;
  throw Error(de(33));
}
function ba(e) {
  return e[Sn] || null;
}
var Jo = [],
  lr = -1;
function gi(e) {
  return { current: e };
}
function Ye(e) {
  0 > lr || ((e.current = Jo[lr]), (Jo[lr] = null), lr--);
}
function je(e, i) {
  lr++, (Jo[lr] = e.current), (e.current = i);
}
var fi = {},
  kt = gi(fi),
  Ot = gi(!1),
  Fi = fi;
function Lr(e, i) {
  var n = e.type.contextTypes;
  if (!n) return fi;
  var c = e.stateNode;
  if (c && c.__reactInternalMemoizedUnmaskedChildContext === i)
    return c.__reactInternalMemoizedMaskedChildContext;
  var u = {},
    g;
  for (g in n) u[g] = i[g];
  return (
    c &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = i),
      (e.__reactInternalMemoizedMaskedChildContext = u)),
    u
  );
}
function zt(e) {
  return (e = e.childContextTypes), e != null;
}
function Gs() {
  Ye(Ot), Ye(kt);
}
function Zh(e, i, n) {
  if (kt.current !== fi) throw Error(de(168));
  je(kt, i), je(Ot, n);
}
function yd(e, i, n) {
  var c = e.stateNode;
  if (((i = i.childContextTypes), typeof c.getChildContext != "function"))
    return n;
  c = c.getChildContext();
  for (var u in c) if (!(u in i)) throw Error(de(108, Sg(e) || "Unknown", u));
  return Ue({}, n, c);
}
function Us(e) {
  return (
    (e =
      ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || fi),
    (Fi = kt.current),
    je(kt, e),
    je(Ot, Ot.current),
    !0
  );
}
function $h(e, i, n) {
  var c = e.stateNode;
  if (!c) throw Error(de(169));
  n
    ? ((e = yd(e, i, Fi)),
      (c.__reactInternalMemoizedMergedChildContext = e),
      Ye(Ot),
      Ye(kt),
      je(kt, e))
    : Ye(Ot),
    je(Ot, n);
}
var Rl = null,
  wa = !1,
  oo = !1;
function bd(e) {
  Rl === null ? (Rl = [e]) : Rl.push(e);
}
function X2(e) {
  (wa = !0), bd(e);
}
function mi() {
  if (!oo && Rl !== null) {
    oo = !0;
    var e = 0,
      i = De;
    try {
      var n = Rl;
      for (De = 1; e < n.length; e++) {
        var c = n[e];
        do c = c(!0);
        while (c !== null);
      }
      (Rl = null), (wa = !1);
    } catch (u) {
      throw (Rl !== null && (Rl = Rl.slice(e + 1)), V1(tc, mi), u);
    } finally {
      (De = i), (oo = !1);
    }
  }
  return null;
}
var ir = [],
  rr = 0,
  Zs = null,
  $s = 0,
  $t = [],
  qt = 0,
  Di = null,
  Nl = 1,
  Il = "";
function wi(e, i) {
  (ir[rr++] = $s), (ir[rr++] = Zs), (Zs = e), ($s = i);
}
function wd(e, i, n) {
  ($t[qt++] = Nl), ($t[qt++] = Il), ($t[qt++] = Di), (Di = e);
  var c = Nl;
  e = Il;
  var u = 32 - al(c) - 1;
  (c &= ~(1 << u)), (n += 1);
  var g = 32 - al(i) + u;
  if (30 < g) {
    var b = u - (u % 5);
    (g = (c & ((1 << b) - 1)).toString(32)),
      (c >>= b),
      (u -= b),
      (Nl = (1 << (32 - al(i) + u)) | (n << u) | c),
      (Il = g + e);
  } else (Nl = (1 << g) | (n << u) | c), (Il = e);
}
function hc(e) {
  e.return !== null && (wi(e, 1), wd(e, 1, 0));
}
function uc(e) {
  for (; e === Zs; )
    (Zs = ir[--rr]), (ir[rr] = null), ($s = ir[--rr]), (ir[rr] = null);
  for (; e === Di; )
    (Di = $t[--qt]),
      ($t[qt] = null),
      (Il = $t[--qt]),
      ($t[qt] = null),
      (Nl = $t[--qt]),
      ($t[qt] = null);
}
var Xt = null,
  jt = null,
  We = !1,
  sl = null;
function kd(e, i) {
  var n = Qt(5, null, null, 0);
  (n.elementType = "DELETED"),
    (n.stateNode = i),
    (n.return = e),
    (i = e.deletions),
    i === null ? ((e.deletions = [n]), (e.flags |= 16)) : i.push(n);
}
function qh(e, i) {
  switch (e.tag) {
    case 5:
      var n = e.type;
      return (
        (i =
          i.nodeType !== 1 || n.toLowerCase() !== i.nodeName.toLowerCase()
            ? null
            : i),
        i !== null
          ? ((e.stateNode = i), (Xt = e), (jt = si(i.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (i = e.pendingProps === "" || i.nodeType !== 3 ? null : i),
        i !== null ? ((e.stateNode = i), (Xt = e), (jt = null), !0) : !1
      );
    case 13:
      return (
        (i = i.nodeType !== 8 ? null : i),
        i !== null
          ? ((n = Di !== null ? { id: Nl, overflow: Il } : null),
            (e.memoizedState = {
              dehydrated: i,
              treeContext: n,
              retryLane: 1073741824,
            }),
            (n = Qt(18, null, null, 0)),
            (n.stateNode = i),
            (n.return = e),
            (e.child = n),
            (Xt = e),
            (jt = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function e0(e) {
  return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function t0(e) {
  if (We) {
    var i = jt;
    if (i) {
      var n = i;
      if (!qh(e, i)) {
        if (e0(e)) throw Error(de(418));
        i = si(n.nextSibling);
        var c = Xt;
        i && qh(e, i)
          ? kd(c, n)
          : ((e.flags = (e.flags & -4097) | 2), (We = !1), (Xt = e));
      }
    } else {
      if (e0(e)) throw Error(de(418));
      (e.flags = (e.flags & -4097) | 2), (We = !1), (Xt = e);
    }
  }
}
function Qh(e) {
  for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
    e = e.return;
  Xt = e;
}
function ps(e) {
  if (e !== Xt) return !1;
  if (!We) return Qh(e), (We = !0), !1;
  var i;
  if (
    ((i = e.tag !== 3) &&
      !(i = e.tag !== 5) &&
      ((i = e.type),
      (i = i !== "head" && i !== "body" && !qo(e.type, e.memoizedProps))),
    i && (i = jt))
  ) {
    if (e0(e)) throw (Sd(), Error(de(418)));
    for (; i; ) kd(e, i), (i = si(i.nextSibling));
  }
  if ((Qh(e), e.tag === 13)) {
    if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
      throw Error(de(317));
    e: {
      for (e = e.nextSibling, i = 0; e; ) {
        if (e.nodeType === 8) {
          var n = e.data;
          if (n === "/$") {
            if (i === 0) {
              jt = si(e.nextSibling);
              break e;
            }
            i--;
          } else (n !== "$" && n !== "$!" && n !== "$?") || i++;
        }
        e = e.nextSibling;
      }
      jt = null;
    }
  } else jt = Xt ? si(e.stateNode.nextSibling) : null;
  return !0;
}
function Sd() {
  for (var e = jt; e; ) e = si(e.nextSibling);
}
function Tr() {
  (jt = Xt = null), (We = !1);
}
function dc(e) {
  sl === null ? (sl = [e]) : sl.push(e);
}
var H2 = jl.ReactCurrentBatchConfig;
function il(e, i) {
  if (e && e.defaultProps) {
    (i = Ue({}, i)), (e = e.defaultProps);
    for (var n in e) i[n] === void 0 && (i[n] = e[n]);
    return i;
  }
  return i;
}
var qs = gi(null),
  Qs = null,
  nr = null,
  fc = null;
function pc() {
  fc = nr = Qs = null;
}
function gc(e) {
  var i = qs.current;
  Ye(qs), (e._currentValue = i);
}
function l0(e, i, n) {
  for (; e !== null; ) {
    var c = e.alternate;
    if (
      ((e.childLanes & i) !== i
        ? ((e.childLanes |= i), c !== null && (c.childLanes |= i))
        : c !== null && (c.childLanes & i) !== i && (c.childLanes |= i),
      e === n)
    )
      break;
    e = e.return;
  }
}
function dr(e, i) {
  (Qs = e),
    (fc = nr = null),
    (e = e.dependencies),
    e !== null &&
      e.firstContext !== null &&
      (e.lanes & i && (It = !0), (e.firstContext = null));
}
function el(e) {
  var i = e._currentValue;
  if (fc !== e)
    if (((e = { context: e, memoizedValue: i, next: null }), nr === null)) {
      if (Qs === null) throw Error(de(308));
      (nr = e), (Qs.dependencies = { lanes: 0, firstContext: e });
    } else nr = nr.next = e;
  return i;
}
var Ci = null;
function mc(e) {
  Ci === null ? (Ci = [e]) : Ci.push(e);
}
function Cd(e, i, n, c) {
  var u = i.interleaved;
  return (
    u === null ? ((n.next = n), mc(i)) : ((n.next = u.next), (u.next = n)),
    (i.interleaved = n),
    Dl(e, c)
  );
}
function Dl(e, i) {
  e.lanes |= i;
  var n = e.alternate;
  for (n !== null && (n.lanes |= i), n = e, e = e.return; e !== null; )
    (e.childLanes |= i),
      (n = e.alternate),
      n !== null && (n.childLanes |= i),
      (n = e),
      (e = e.return);
  return n.tag === 3 ? n.stateNode : null;
}
var Vl = !1;
function xc(e) {
  e.updateQueue = {
    baseState: e.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function Ad(e, i) {
  (e = e.updateQueue),
    i.updateQueue === e &&
      (i.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects,
      });
}
function Ol(e, i) {
  return {
    eventTime: e,
    lane: i,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function ai(e, i, n) {
  var c = e.updateQueue;
  if (c === null) return null;
  if (((c = c.shared), Oe & 2)) {
    var u = c.pending;
    return (
      u === null ? (i.next = i) : ((i.next = u.next), (u.next = i)),
      (c.pending = i),
      Dl(e, n)
    );
  }
  return (
    (u = c.interleaved),
    u === null ? ((i.next = i), mc(c)) : ((i.next = u.next), (u.next = i)),
    (c.interleaved = i),
    Dl(e, n)
  );
}
function Es(e, i, n) {
  if (
    ((i = i.updateQueue), i !== null && ((i = i.shared), (n & 4194240) !== 0))
  ) {
    var c = i.lanes;
    (c &= e.pendingLanes), (n |= c), (i.lanes = n), lc(e, n);
  }
}
function Kh(e, i) {
  var n = e.updateQueue,
    c = e.alternate;
  if (c !== null && ((c = c.updateQueue), n === c)) {
    var u = null,
      g = null;
    if (((n = n.firstBaseUpdate), n !== null)) {
      do {
        var b = {
          eventTime: n.eventTime,
          lane: n.lane,
          tag: n.tag,
          payload: n.payload,
          callback: n.callback,
          next: null,
        };
        g === null ? (u = g = b) : (g = g.next = b), (n = n.next);
      } while (n !== null);
      g === null ? (u = g = i) : (g = g.next = i);
    } else u = g = i;
    (n = {
      baseState: c.baseState,
      firstBaseUpdate: u,
      lastBaseUpdate: g,
      shared: c.shared,
      effects: c.effects,
    }),
      (e.updateQueue = n);
    return;
  }
  (e = n.lastBaseUpdate),
    e === null ? (n.firstBaseUpdate = i) : (e.next = i),
    (n.lastBaseUpdate = i);
}
function Ks(e, i, n, c) {
  var u = e.updateQueue;
  Vl = !1;
  var g = u.firstBaseUpdate,
    b = u.lastBaseUpdate,
    k = u.shared.pending;
  if (k !== null) {
    u.shared.pending = null;
    var E = k,
      I = E.next;
    (E.next = null), b === null ? (g = I) : (b.next = I), (b = E);
    var F = e.alternate;
    F !== null &&
      ((F = F.updateQueue),
      (k = F.lastBaseUpdate),
      k !== b &&
        (k === null ? (F.firstBaseUpdate = I) : (k.next = I),
        (F.lastBaseUpdate = E)));
  }
  if (g !== null) {
    var H = u.baseState;
    (b = 0), (F = I = E = null), (k = g);
    do {
      var G = k.lane,
        K = k.eventTime;
      if ((c & G) === G) {
        F !== null &&
          (F = F.next =
            {
              eventTime: K,
              lane: 0,
              tag: k.tag,
              payload: k.payload,
              callback: k.callback,
              next: null,
            });
        e: {
          var q = e,
            Q = k;
          switch (((G = i), (K = n), Q.tag)) {
            case 1:
              if (((q = Q.payload), typeof q == "function")) {
                H = q.call(K, H, G);
                break e;
              }
              H = q;
              break e;
            case 3:
              q.flags = (q.flags & -65537) | 128;
            case 0:
              if (
                ((q = Q.payload),
                (G = typeof q == "function" ? q.call(K, H, G) : q),
                G == null)
              )
                break e;
              H = Ue({}, H, G);
              break e;
            case 2:
              Vl = !0;
          }
        }
        k.callback !== null &&
          k.lane !== 0 &&
          ((e.flags |= 64),
          (G = u.effects),
          G === null ? (u.effects = [k]) : G.push(k));
      } else
        (K = {
          eventTime: K,
          lane: G,
          tag: k.tag,
          payload: k.payload,
          callback: k.callback,
          next: null,
        }),
          F === null ? ((I = F = K), (E = H)) : (F = F.next = K),
          (b |= G);
      if (((k = k.next), k === null)) {
        if (((k = u.shared.pending), k === null)) break;
        (G = k),
          (k = G.next),
          (G.next = null),
          (u.lastBaseUpdate = G),
          (u.shared.pending = null);
      }
    } while (1);
    if (
      (F === null && (E = H),
      (u.baseState = E),
      (u.firstBaseUpdate = I),
      (u.lastBaseUpdate = F),
      (i = u.shared.interleaved),
      i !== null)
    ) {
      u = i;
      do (b |= u.lane), (u = u.next);
      while (u !== i);
    } else g === null && (u.shared.lanes = 0);
    (ji |= b), (e.lanes = b), (e.memoizedState = H);
  }
}
function Jh(e, i, n) {
  if (((e = i.effects), (i.effects = null), e !== null))
    for (i = 0; i < e.length; i++) {
      var c = e[i],
        u = c.callback;
      if (u !== null) {
        if (((c.callback = null), (c = n), typeof u != "function"))
          throw Error(de(191, u));
        u.call(c);
      }
    }
}
var Ed = new C1.Component().refs;
function i0(e, i, n, c) {
  (i = e.memoizedState),
    (n = n(c, i)),
    (n = n == null ? i : Ue({}, i, n)),
    (e.memoizedState = n),
    e.lanes === 0 && (e.updateQueue.baseState = n);
}
var ka = {
  isMounted: function (e) {
    return (e = e._reactInternals) ? Bi(e) === e : !1;
  },
  enqueueSetState: function (e, i, n) {
    e = e._reactInternals;
    var c = Pt(),
      u = ci(e),
      g = Ol(c, u);
    (g.payload = i),
      n != null && (g.callback = n),
      (i = ai(e, g, u)),
      i !== null && (ol(i, e, u, c), Es(i, e, u));
  },
  enqueueReplaceState: function (e, i, n) {
    e = e._reactInternals;
    var c = Pt(),
      u = ci(e),
      g = Ol(c, u);
    (g.tag = 1),
      (g.payload = i),
      n != null && (g.callback = n),
      (i = ai(e, g, u)),
      i !== null && (ol(i, e, u, c), Es(i, e, u));
  },
  enqueueForceUpdate: function (e, i) {
    e = e._reactInternals;
    var n = Pt(),
      c = ci(e),
      u = Ol(n, c);
    (u.tag = 2),
      i != null && (u.callback = i),
      (i = ai(e, u, c)),
      i !== null && (ol(i, e, c, n), Es(i, e, c));
  },
};
function eu(e, i, n, c, u, g, b) {
  return (
    (e = e.stateNode),
    typeof e.shouldComponentUpdate == "function"
      ? e.shouldComponentUpdate(c, g, b)
      : i.prototype && i.prototype.isPureReactComponent
        ? !bn(n, c) || !bn(u, g)
        : !0
  );
}
function Pd(e, i, n) {
  var c = !1,
    u = fi,
    g = i.contextType;
  return (
    typeof g == "object" && g !== null
      ? (g = el(g))
      : ((u = zt(i) ? Fi : kt.current),
        (c = i.contextTypes),
        (g = (c = c != null) ? Lr(e, u) : fi)),
    (i = new i(n, g)),
    (e.memoizedState = i.state !== null && i.state !== void 0 ? i.state : null),
    (i.updater = ka),
    (e.stateNode = i),
    (i._reactInternals = e),
    c &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = u),
      (e.__reactInternalMemoizedMaskedChildContext = g)),
    i
  );
}
function tu(e, i, n, c) {
  (e = i.state),
    typeof i.componentWillReceiveProps == "function" &&
      i.componentWillReceiveProps(n, c),
    typeof i.UNSAFE_componentWillReceiveProps == "function" &&
      i.UNSAFE_componentWillReceiveProps(n, c),
    i.state !== e && ka.enqueueReplaceState(i, i.state, null);
}
function r0(e, i, n, c) {
  var u = e.stateNode;
  (u.props = n), (u.state = e.memoizedState), (u.refs = Ed), xc(e);
  var g = i.contextType;
  typeof g == "object" && g !== null
    ? (u.context = el(g))
    : ((g = zt(i) ? Fi : kt.current), (u.context = Lr(e, g))),
    (u.state = e.memoizedState),
    (g = i.getDerivedStateFromProps),
    typeof g == "function" && (i0(e, i, g, n), (u.state = e.memoizedState)),
    typeof i.getDerivedStateFromProps == "function" ||
      typeof u.getSnapshotBeforeUpdate == "function" ||
      (typeof u.UNSAFE_componentWillMount != "function" &&
        typeof u.componentWillMount != "function") ||
      ((i = u.state),
      typeof u.componentWillMount == "function" && u.componentWillMount(),
      typeof u.UNSAFE_componentWillMount == "function" &&
        u.UNSAFE_componentWillMount(),
      i !== u.state && ka.enqueueReplaceState(u, u.state, null),
      Ks(e, n, u, c),
      (u.state = e.memoizedState)),
    typeof u.componentDidMount == "function" && (e.flags |= 4194308);
}
function Ur(e, i, n) {
  if (
    ((e = n.ref), e !== null && typeof e != "function" && typeof e != "object")
  ) {
    if (n._owner) {
      if (((n = n._owner), n)) {
        if (n.tag !== 1) throw Error(de(309));
        var c = n.stateNode;
      }
      if (!c) throw Error(de(147, e));
      var u = c,
        g = "" + e;
      return i !== null &&
        i.ref !== null &&
        typeof i.ref == "function" &&
        i.ref._stringRef === g
        ? i.ref
        : ((i = function (b) {
            var k = u.refs;
            k === Ed && (k = u.refs = {}),
              b === null ? delete k[g] : (k[g] = b);
          }),
          (i._stringRef = g),
          i);
    }
    if (typeof e != "string") throw Error(de(284));
    if (!n._owner) throw Error(de(290, e));
  }
  return e;
}
function gs(e, i) {
  throw (
    ((e = Object.prototype.toString.call(i)),
    Error(
      de(
        31,
        e === "[object Object]"
          ? "object with keys {" + Object.keys(i).join(", ") + "}"
          : e,
      ),
    ))
  );
}
function lu(e) {
  var i = e._init;
  return i(e._payload);
}
function Ld(e) {
  function i(B, L) {
    if (e) {
      var W = B.deletions;
      W === null ? ((B.deletions = [L]), (B.flags |= 16)) : W.push(L);
    }
  }
  function n(B, L) {
    if (!e) return null;
    for (; L !== null; ) i(B, L), (L = L.sibling);
    return null;
  }
  function c(B, L) {
    for (B = new Map(); L !== null; )
      L.key !== null ? B.set(L.key, L) : B.set(L.index, L), (L = L.sibling);
    return B;
  }
  function u(B, L) {
    return (B = hi(B, L)), (B.index = 0), (B.sibling = null), B;
  }
  function g(B, L, W) {
    return (
      (B.index = W),
      e
        ? ((W = B.alternate),
          W !== null
            ? ((W = W.index), W < L ? ((B.flags |= 2), L) : W)
            : ((B.flags |= 2), L))
        : ((B.flags |= 1048576), L)
    );
  }
  function b(B) {
    return e && B.alternate === null && (B.flags |= 2), B;
  }
  function k(B, L, W, te) {
    return L === null || L.tag !== 6
      ? ((L = mo(W, B.mode, te)), (L.return = B), L)
      : ((L = u(L, W)), (L.return = B), L);
  }
  function E(B, L, W, te) {
    var Z = W.type;
    return Z === Qi
      ? F(B, L, W.props.children, te, W.key)
      : L !== null &&
          (L.elementType === Z ||
            (typeof Z == "object" &&
              Z !== null &&
              Z.$$typeof === Wl &&
              lu(Z) === L.type))
        ? ((te = u(L, W.props)), (te.ref = Ur(B, L, W)), (te.return = B), te)
        : ((te = Ns(W.type, W.key, W.props, null, B.mode, te)),
          (te.ref = Ur(B, L, W)),
          (te.return = B),
          te);
  }
  function I(B, L, W, te) {
    return L === null ||
      L.tag !== 4 ||
      L.stateNode.containerInfo !== W.containerInfo ||
      L.stateNode.implementation !== W.implementation
      ? ((L = xo(W, B.mode, te)), (L.return = B), L)
      : ((L = u(L, W.children || [])), (L.return = B), L);
  }
  function F(B, L, W, te, Z) {
    return L === null || L.tag !== 7
      ? ((L = zi(W, B.mode, te, Z)), (L.return = B), L)
      : ((L = u(L, W)), (L.return = B), L);
  }
  function H(B, L, W) {
    if ((typeof L == "string" && L !== "") || typeof L == "number")
      return (L = mo("" + L, B.mode, W)), (L.return = B), L;
    if (typeof L == "object" && L !== null) {
      switch (L.$$typeof) {
        case rs:
          return (
            (W = Ns(L.type, L.key, L.props, null, B.mode, W)),
            (W.ref = Ur(B, null, L)),
            (W.return = B),
            W
          );
        case qi:
          return (L = xo(L, B.mode, W)), (L.return = B), L;
        case Wl:
          var te = L._init;
          return H(B, te(L._payload), W);
      }
      if (Jr(L) || Yr(L))
        return (L = zi(L, B.mode, W, null)), (L.return = B), L;
      gs(B, L);
    }
    return null;
  }
  function G(B, L, W, te) {
    var Z = L !== null ? L.key : null;
    if ((typeof W == "string" && W !== "") || typeof W == "number")
      return Z !== null ? null : k(B, L, "" + W, te);
    if (typeof W == "object" && W !== null) {
      switch (W.$$typeof) {
        case rs:
          return W.key === Z ? E(B, L, W, te) : null;
        case qi:
          return W.key === Z ? I(B, L, W, te) : null;
        case Wl:
          return (Z = W._init), G(B, L, Z(W._payload), te);
      }
      if (Jr(W) || Yr(W)) return Z !== null ? null : F(B, L, W, te, null);
      gs(B, W);
    }
    return null;
  }
  function K(B, L, W, te, Z) {
    if ((typeof te == "string" && te !== "") || typeof te == "number")
      return (B = B.get(W) || null), k(L, B, "" + te, Z);
    if (typeof te == "object" && te !== null) {
      switch (te.$$typeof) {
        case rs:
          return (
            (B = B.get(te.key === null ? W : te.key) || null), E(L, B, te, Z)
          );
        case qi:
          return (
            (B = B.get(te.key === null ? W : te.key) || null), I(L, B, te, Z)
          );
        case Wl:
          var oe = te._init;
          return K(B, L, W, oe(te._payload), Z);
      }
      if (Jr(te) || Yr(te)) return (B = B.get(W) || null), F(L, B, te, Z, null);
      gs(L, te);
    }
    return null;
  }
  function q(B, L, W, te) {
    for (
      var Z = null, oe = null, pe = L, ae = (L = 0), ke = null;
      pe !== null && ae < W.length;
      ae++
    ) {
      pe.index > ae ? ((ke = pe), (pe = null)) : (ke = pe.sibling);
      var Se = G(B, pe, W[ae], te);
      if (Se === null) {
        pe === null && (pe = ke);
        break;
      }
      e && pe && Se.alternate === null && i(B, pe),
        (L = g(Se, L, ae)),
        oe === null ? (Z = Se) : (oe.sibling = Se),
        (oe = Se),
        (pe = ke);
    }
    if (ae === W.length) return n(B, pe), We && wi(B, ae), Z;
    if (pe === null) {
      for (; ae < W.length; ae++)
        (pe = H(B, W[ae], te)),
          pe !== null &&
            ((L = g(pe, L, ae)),
            oe === null ? (Z = pe) : (oe.sibling = pe),
            (oe = pe));
      return We && wi(B, ae), Z;
    }
    for (pe = c(B, pe); ae < W.length; ae++)
      (ke = K(pe, B, ae, W[ae], te)),
        ke !== null &&
          (e &&
            ke.alternate !== null &&
            pe.delete(ke.key === null ? ae : ke.key),
          (L = g(ke, L, ae)),
          oe === null ? (Z = ke) : (oe.sibling = ke),
          (oe = ke));
    return (
      e &&
        pe.forEach(function (it) {
          return i(B, it);
        }),
      We && wi(B, ae),
      Z
    );
  }
  function Q(B, L, W, te) {
    var Z = Yr(W);
    if (typeof Z != "function") throw Error(de(150));
    if (((W = Z.call(W)), W == null)) throw Error(de(151));
    for (
      var oe = (Z = null), pe = L, ae = (L = 0), ke = null, Se = W.next();
      pe !== null && !Se.done;
      ae++, Se = W.next()
    ) {
      pe.index > ae ? ((ke = pe), (pe = null)) : (ke = pe.sibling);
      var it = G(B, pe, Se.value, te);
      if (it === null) {
        pe === null && (pe = ke);
        break;
      }
      e && pe && it.alternate === null && i(B, pe),
        (L = g(it, L, ae)),
        oe === null ? (Z = it) : (oe.sibling = it),
        (oe = it),
        (pe = ke);
    }
    if (Se.done) return n(B, pe), We && wi(B, ae), Z;
    if (pe === null) {
      for (; !Se.done; ae++, Se = W.next())
        (Se = H(B, Se.value, te)),
          Se !== null &&
            ((L = g(Se, L, ae)),
            oe === null ? (Z = Se) : (oe.sibling = Se),
            (oe = Se));
      return We && wi(B, ae), Z;
    }
    for (pe = c(B, pe); !Se.done; ae++, Se = W.next())
      (Se = K(pe, B, ae, Se.value, te)),
        Se !== null &&
          (e &&
            Se.alternate !== null &&
            pe.delete(Se.key === null ? ae : Se.key),
          (L = g(Se, L, ae)),
          oe === null ? (Z = Se) : (oe.sibling = Se),
          (oe = Se));
    return (
      e &&
        pe.forEach(function (gt) {
          return i(B, gt);
        }),
      We && wi(B, ae),
      Z
    );
  }
  function ue(B, L, W, te) {
    if (
      (typeof W == "object" &&
        W !== null &&
        W.type === Qi &&
        W.key === null &&
        (W = W.props.children),
      typeof W == "object" && W !== null)
    ) {
      switch (W.$$typeof) {
        case rs:
          e: {
            for (var Z = W.key, oe = L; oe !== null; ) {
              if (oe.key === Z) {
                if (((Z = W.type), Z === Qi)) {
                  if (oe.tag === 7) {
                    n(B, oe.sibling),
                      (L = u(oe, W.props.children)),
                      (L.return = B),
                      (B = L);
                    break e;
                  }
                } else if (
                  oe.elementType === Z ||
                  (typeof Z == "object" &&
                    Z !== null &&
                    Z.$$typeof === Wl &&
                    lu(Z) === oe.type)
                ) {
                  n(B, oe.sibling),
                    (L = u(oe, W.props)),
                    (L.ref = Ur(B, oe, W)),
                    (L.return = B),
                    (B = L);
                  break e;
                }
                n(B, oe);
                break;
              } else i(B, oe);
              oe = oe.sibling;
            }
            W.type === Qi
              ? ((L = zi(W.props.children, B.mode, te, W.key)),
                (L.return = B),
                (B = L))
              : ((te = Ns(W.type, W.key, W.props, null, B.mode, te)),
                (te.ref = Ur(B, L, W)),
                (te.return = B),
                (B = te));
          }
          return b(B);
        case qi:
          e: {
            for (oe = W.key; L !== null; ) {
              if (L.key === oe)
                if (
                  L.tag === 4 &&
                  L.stateNode.containerInfo === W.containerInfo &&
                  L.stateNode.implementation === W.implementation
                ) {
                  n(B, L.sibling),
                    (L = u(L, W.children || [])),
                    (L.return = B),
                    (B = L);
                  break e;
                } else {
                  n(B, L);
                  break;
                }
              else i(B, L);
              L = L.sibling;
            }
            (L = xo(W, B.mode, te)), (L.return = B), (B = L);
          }
          return b(B);
        case Wl:
          return (oe = W._init), ue(B, L, oe(W._payload), te);
      }
      if (Jr(W)) return q(B, L, W, te);
      if (Yr(W)) return Q(B, L, W, te);
      gs(B, W);
    }
    return (typeof W == "string" && W !== "") || typeof W == "number"
      ? ((W = "" + W),
        L !== null && L.tag === 6
          ? (n(B, L.sibling), (L = u(L, W)), (L.return = B), (B = L))
          : (n(B, L), (L = mo(W, B.mode, te)), (L.return = B), (B = L)),
        b(B))
      : n(B, L);
  }
  return ue;
}
var Mr = Ld(!0),
  Td = Ld(!1),
  qn = {},
  Cl = gi(qn),
  Cn = gi(qn),
  An = gi(qn);
function Ai(e) {
  if (e === qn) throw Error(de(174));
  return e;
}
function vc(e, i) {
  switch ((je(An, i), je(Cn, e), je(Cl, qn), (e = i.nodeType), e)) {
    case 9:
    case 11:
      i = (i = i.documentElement) ? i.namespaceURI : Fo(null, "");
      break;
    default:
      (e = e === 8 ? i.parentNode : i),
        (i = e.namespaceURI || null),
        (e = e.tagName),
        (i = Fo(i, e));
  }
  Ye(Cl), je(Cl, i);
}
function Rr() {
  Ye(Cl), Ye(Cn), Ye(An);
}
function Md(e) {
  Ai(An.current);
  var i = Ai(Cl.current),
    n = Fo(i, e.type);
  i !== n && (je(Cn, e), je(Cl, n));
}
function yc(e) {
  Cn.current === e && (Ye(Cl), Ye(Cn));
}
var Ve = gi(0);
function Js(e) {
  for (var i = e; i !== null; ) {
    if (i.tag === 13) {
      var n = i.memoizedState;
      if (
        n !== null &&
        ((n = n.dehydrated), n === null || n.data === "$?" || n.data === "$!")
      )
        return i;
    } else if (i.tag === 19 && i.memoizedProps.revealOrder !== void 0) {
      if (i.flags & 128) return i;
    } else if (i.child !== null) {
      (i.child.return = i), (i = i.child);
      continue;
    }
    if (i === e) break;
    for (; i.sibling === null; ) {
      if (i.return === null || i.return === e) return null;
      i = i.return;
    }
    (i.sibling.return = i.return), (i = i.sibling);
  }
  return null;
}
var co = [];
function bc() {
  for (var e = 0; e < co.length; e++)
    co[e]._workInProgressVersionPrimary = null;
  co.length = 0;
}
var Ps = jl.ReactCurrentDispatcher,
  ho = jl.ReactCurrentBatchConfig,
  _i = 0,
  Ge = null,
  at = null,
  ct = null,
  ea = !1,
  cn = !1,
  En = 0,
  Y2 = 0;
function vt() {
  throw Error(de(321));
}
function wc(e, i) {
  if (i === null) return !1;
  for (var n = 0; n < i.length && n < e.length; n++)
    if (!ul(e[n], i[n])) return !1;
  return !0;
}
function kc(e, i, n, c, u, g) {
  if (
    ((_i = g),
    (Ge = i),
    (i.memoizedState = null),
    (i.updateQueue = null),
    (i.lanes = 0),
    (Ps.current = e === null || e.memoizedState === null ? G2 : U2),
    (e = n(c, u)),
    cn)
  ) {
    g = 0;
    do {
      if (((cn = !1), (En = 0), 25 <= g)) throw Error(de(301));
      (g += 1),
        (ct = at = null),
        (i.updateQueue = null),
        (Ps.current = Z2),
        (e = n(c, u));
    } while (cn);
  }
  if (
    ((Ps.current = ta),
    (i = at !== null && at.next !== null),
    (_i = 0),
    (ct = at = Ge = null),
    (ea = !1),
    i)
  )
    throw Error(de(300));
  return e;
}
function Sc() {
  var e = En !== 0;
  return (En = 0), e;
}
function xl() {
  var e = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return ct === null ? (Ge.memoizedState = ct = e) : (ct = ct.next = e), ct;
}
function tl() {
  if (at === null) {
    var e = Ge.alternate;
    e = e !== null ? e.memoizedState : null;
  } else e = at.next;
  var i = ct === null ? Ge.memoizedState : ct.next;
  if (i !== null) (ct = i), (at = e);
  else {
    if (e === null) throw Error(de(310));
    (at = e),
      (e = {
        memoizedState: at.memoizedState,
        baseState: at.baseState,
        baseQueue: at.baseQueue,
        queue: at.queue,
        next: null,
      }),
      ct === null ? (Ge.memoizedState = ct = e) : (ct = ct.next = e);
  }
  return ct;
}
function Pn(e, i) {
  return typeof i == "function" ? i(e) : i;
}
function uo(e) {
  var i = tl(),
    n = i.queue;
  if (n === null) throw Error(de(311));
  n.lastRenderedReducer = e;
  var c = at,
    u = c.baseQueue,
    g = n.pending;
  if (g !== null) {
    if (u !== null) {
      var b = u.next;
      (u.next = g.next), (g.next = b);
    }
    (c.baseQueue = u = g), (n.pending = null);
  }
  if (u !== null) {
    (g = u.next), (c = c.baseState);
    var k = (b = null),
      E = null,
      I = g;
    do {
      var F = I.lane;
      if ((_i & F) === F)
        E !== null &&
          (E = E.next =
            {
              lane: 0,
              action: I.action,
              hasEagerState: I.hasEagerState,
              eagerState: I.eagerState,
              next: null,
            }),
          (c = I.hasEagerState ? I.eagerState : e(c, I.action));
      else {
        var H = {
          lane: F,
          action: I.action,
          hasEagerState: I.hasEagerState,
          eagerState: I.eagerState,
          next: null,
        };
        E === null ? ((k = E = H), (b = c)) : (E = E.next = H),
          (Ge.lanes |= F),
          (ji |= F);
      }
      I = I.next;
    } while (I !== null && I !== g);
    E === null ? (b = c) : (E.next = k),
      ul(c, i.memoizedState) || (It = !0),
      (i.memoizedState = c),
      (i.baseState = b),
      (i.baseQueue = E),
      (n.lastRenderedState = c);
  }
  if (((e = n.interleaved), e !== null)) {
    u = e;
    do (g = u.lane), (Ge.lanes |= g), (ji |= g), (u = u.next);
    while (u !== e);
  } else u === null && (n.lanes = 0);
  return [i.memoizedState, n.dispatch];
}
function fo(e) {
  var i = tl(),
    n = i.queue;
  if (n === null) throw Error(de(311));
  n.lastRenderedReducer = e;
  var c = n.dispatch,
    u = n.pending,
    g = i.memoizedState;
  if (u !== null) {
    n.pending = null;
    var b = (u = u.next);
    do (g = e(g, b.action)), (b = b.next);
    while (b !== u);
    ul(g, i.memoizedState) || (It = !0),
      (i.memoizedState = g),
      i.baseQueue === null && (i.baseState = g),
      (n.lastRenderedState = g);
  }
  return [g, c];
}
function Rd() {}
function Nd(e, i) {
  var n = Ge,
    c = tl(),
    u = i(),
    g = !ul(c.memoizedState, u);
  if (
    (g && ((c.memoizedState = u), (It = !0)),
    (c = c.queue),
    Cc(zd.bind(null, n, c, e), [e]),
    c.getSnapshot !== i || g || (ct !== null && ct.memoizedState.tag & 1))
  ) {
    if (
      ((n.flags |= 2048),
      Ln(9, Od.bind(null, n, c, u, i), void 0, null),
      ht === null)
    )
      throw Error(de(349));
    _i & 30 || Id(n, i, u);
  }
  return u;
}
function Id(e, i, n) {
  (e.flags |= 16384),
    (e = { getSnapshot: i, value: n }),
    (i = Ge.updateQueue),
    i === null
      ? ((i = { lastEffect: null, stores: null }),
        (Ge.updateQueue = i),
        (i.stores = [e]))
      : ((n = i.stores), n === null ? (i.stores = [e]) : n.push(e));
}
function Od(e, i, n, c) {
  (i.value = n), (i.getSnapshot = c), Fd(i) && Dd(e);
}
function zd(e, i, n) {
  return n(function () {
    Fd(i) && Dd(e);
  });
}
function Fd(e) {
  var i = e.getSnapshot;
  e = e.value;
  try {
    var n = i();
    return !ul(e, n);
  } catch {
    return !0;
  }
}
function Dd(e) {
  var i = Dl(e, 1);
  i !== null && ol(i, e, 1, -1);
}
function iu(e) {
  var i = xl();
  return (
    typeof e == "function" && (e = e()),
    (i.memoizedState = i.baseState = e),
    (e = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: Pn,
      lastRenderedState: e,
    }),
    (i.queue = e),
    (e = e.dispatch = V2.bind(null, Ge, e)),
    [i.memoizedState, e]
  );
}
function Ln(e, i, n, c) {
  return (
    (e = { tag: e, create: i, destroy: n, deps: c, next: null }),
    (i = Ge.updateQueue),
    i === null
      ? ((i = { lastEffect: null, stores: null }),
        (Ge.updateQueue = i),
        (i.lastEffect = e.next = e))
      : ((n = i.lastEffect),
        n === null
          ? (i.lastEffect = e.next = e)
          : ((c = n.next), (n.next = e), (e.next = c), (i.lastEffect = e))),
    e
  );
}
function _d() {
  return tl().memoizedState;
}
function Ls(e, i, n, c) {
  var u = xl();
  (Ge.flags |= e),
    (u.memoizedState = Ln(1 | i, n, void 0, c === void 0 ? null : c));
}
function Sa(e, i, n, c) {
  var u = tl();
  c = c === void 0 ? null : c;
  var g = void 0;
  if (at !== null) {
    var b = at.memoizedState;
    if (((g = b.destroy), c !== null && wc(c, b.deps))) {
      u.memoizedState = Ln(i, n, g, c);
      return;
    }
  }
  (Ge.flags |= e), (u.memoizedState = Ln(1 | i, n, g, c));
}
function ru(e, i) {
  return Ls(8390656, 8, e, i);
}
function Cc(e, i) {
  return Sa(2048, 8, e, i);
}
function jd(e, i) {
  return Sa(4, 2, e, i);
}
function Xd(e, i) {
  return Sa(4, 4, e, i);
}
function Hd(e, i) {
  if (typeof i == "function")
    return (
      (e = e()),
      i(e),
      function () {
        i(null);
      }
    );
  if (i != null)
    return (
      (e = e()),
      (i.current = e),
      function () {
        i.current = null;
      }
    );
}
function Yd(e, i, n) {
  return (
    (n = n != null ? n.concat([e]) : null), Sa(4, 4, Hd.bind(null, i, e), n)
  );
}
function Ac() {}
function Bd(e, i) {
  var n = tl();
  i = i === void 0 ? null : i;
  var c = n.memoizedState;
  return c !== null && i !== null && wc(i, c[1])
    ? c[0]
    : ((n.memoizedState = [e, i]), e);
}
function Wd(e, i) {
  var n = tl();
  i = i === void 0 ? null : i;
  var c = n.memoizedState;
  return c !== null && i !== null && wc(i, c[1])
    ? c[0]
    : ((e = e()), (n.memoizedState = [e, i]), e);
}
function Vd(e, i, n) {
  return _i & 21
    ? (ul(n, i) || ((n = Z1()), (Ge.lanes |= n), (ji |= n), (e.baseState = !0)),
      i)
    : (e.baseState && ((e.baseState = !1), (It = !0)), (e.memoizedState = n));
}
function B2(e, i) {
  var n = De;
  (De = n !== 0 && 4 > n ? n : 4), e(!0);
  var c = ho.transition;
  ho.transition = {};
  try {
    e(!1), i();
  } finally {
    (De = n), (ho.transition = c);
  }
}
function Gd() {
  return tl().memoizedState;
}
function W2(e, i, n) {
  var c = ci(e);
  if (
    ((n = {
      lane: c,
      action: n,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    Ud(e))
  )
    Zd(i, n);
  else if (((n = Cd(e, i, n, c)), n !== null)) {
    var u = Pt();
    ol(n, e, c, u), $d(n, i, c);
  }
}
function V2(e, i, n) {
  var c = ci(e),
    u = { lane: c, action: n, hasEagerState: !1, eagerState: null, next: null };
  if (Ud(e)) Zd(i, u);
  else {
    var g = e.alternate;
    if (
      e.lanes === 0 &&
      (g === null || g.lanes === 0) &&
      ((g = i.lastRenderedReducer), g !== null)
    )
      try {
        var b = i.lastRenderedState,
          k = g(b, n);
        if (((u.hasEagerState = !0), (u.eagerState = k), ul(k, b))) {
          var E = i.interleaved;
          E === null
            ? ((u.next = u), mc(i))
            : ((u.next = E.next), (E.next = u)),
            (i.interleaved = u);
          return;
        }
      } catch {
      } finally {
      }
    (n = Cd(e, i, u, c)),
      n !== null && ((u = Pt()), ol(n, e, c, u), $d(n, i, c));
  }
}
function Ud(e) {
  var i = e.alternate;
  return e === Ge || (i !== null && i === Ge);
}
function Zd(e, i) {
  cn = ea = !0;
  var n = e.pending;
  n === null ? (i.next = i) : ((i.next = n.next), (n.next = i)),
    (e.pending = i);
}
function $d(e, i, n) {
  if (n & 4194240) {
    var c = i.lanes;
    (c &= e.pendingLanes), (n |= c), (i.lanes = n), lc(e, n);
  }
}
var ta = {
    readContext: el,
    useCallback: vt,
    useContext: vt,
    useEffect: vt,
    useImperativeHandle: vt,
    useInsertionEffect: vt,
    useLayoutEffect: vt,
    useMemo: vt,
    useReducer: vt,
    useRef: vt,
    useState: vt,
    useDebugValue: vt,
    useDeferredValue: vt,
    useTransition: vt,
    useMutableSource: vt,
    useSyncExternalStore: vt,
    useId: vt,
    unstable_isNewReconciler: !1,
  },
  G2 = {
    readContext: el,
    useCallback: function (e, i) {
      return (xl().memoizedState = [e, i === void 0 ? null : i]), e;
    },
    useContext: el,
    useEffect: ru,
    useImperativeHandle: function (e, i, n) {
      return (
        (n = n != null ? n.concat([e]) : null),
        Ls(4194308, 4, Hd.bind(null, i, e), n)
      );
    },
    useLayoutEffect: function (e, i) {
      return Ls(4194308, 4, e, i);
    },
    useInsertionEffect: function (e, i) {
      return Ls(4, 2, e, i);
    },
    useMemo: function (e, i) {
      var n = xl();
      return (
        (i = i === void 0 ? null : i), (e = e()), (n.memoizedState = [e, i]), e
      );
    },
    useReducer: function (e, i, n) {
      var c = xl();
      return (
        (i = n !== void 0 ? n(i) : i),
        (c.memoizedState = c.baseState = i),
        (e = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: e,
          lastRenderedState: i,
        }),
        (c.queue = e),
        (e = e.dispatch = W2.bind(null, Ge, e)),
        [c.memoizedState, e]
      );
    },
    useRef: function (e) {
      var i = xl();
      return (e = { current: e }), (i.memoizedState = e);
    },
    useState: iu,
    useDebugValue: Ac,
    useDeferredValue: function (e) {
      return (xl().memoizedState = e);
    },
    useTransition: function () {
      var e = iu(!1),
        i = e[0];
      return (e = B2.bind(null, e[1])), (xl().memoizedState = e), [i, e];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (e, i, n) {
      var c = Ge,
        u = xl();
      if (We) {
        if (n === void 0) throw Error(de(407));
        n = n();
      } else {
        if (((n = i()), ht === null)) throw Error(de(349));
        _i & 30 || Id(c, i, n);
      }
      u.memoizedState = n;
      var g = { value: n, getSnapshot: i };
      return (
        (u.queue = g),
        ru(zd.bind(null, c, g, e), [e]),
        (c.flags |= 2048),
        Ln(9, Od.bind(null, c, g, n, i), void 0, null),
        n
      );
    },
    useId: function () {
      var e = xl(),
        i = ht.identifierPrefix;
      if (We) {
        var n = Il,
          c = Nl;
        (n = (c & ~(1 << (32 - al(c) - 1))).toString(32) + n),
          (i = ":" + i + "R" + n),
          (n = En++),
          0 < n && (i += "H" + n.toString(32)),
          (i += ":");
      } else (n = Y2++), (i = ":" + i + "r" + n.toString(32) + ":");
      return (e.memoizedState = i);
    },
    unstable_isNewReconciler: !1,
  },
  U2 = {
    readContext: el,
    useCallback: Bd,
    useContext: el,
    useEffect: Cc,
    useImperativeHandle: Yd,
    useInsertionEffect: jd,
    useLayoutEffect: Xd,
    useMemo: Wd,
    useReducer: uo,
    useRef: _d,
    useState: function () {
      return uo(Pn);
    },
    useDebugValue: Ac,
    useDeferredValue: function (e) {
      var i = tl();
      return Vd(i, at.memoizedState, e);
    },
    useTransition: function () {
      var e = uo(Pn)[0],
        i = tl().memoizedState;
      return [e, i];
    },
    useMutableSource: Rd,
    useSyncExternalStore: Nd,
    useId: Gd,
    unstable_isNewReconciler: !1,
  },
  Z2 = {
    readContext: el,
    useCallback: Bd,
    useContext: el,
    useEffect: Cc,
    useImperativeHandle: Yd,
    useInsertionEffect: jd,
    useLayoutEffect: Xd,
    useMemo: Wd,
    useReducer: fo,
    useRef: _d,
    useState: function () {
      return fo(Pn);
    },
    useDebugValue: Ac,
    useDeferredValue: function (e) {
      var i = tl();
      return at === null ? (i.memoizedState = e) : Vd(i, at.memoizedState, e);
    },
    useTransition: function () {
      var e = fo(Pn)[0],
        i = tl().memoizedState;
      return [e, i];
    },
    useMutableSource: Rd,
    useSyncExternalStore: Nd,
    useId: Gd,
    unstable_isNewReconciler: !1,
  };
function Nr(e, i) {
  try {
    var n = "",
      c = i;
    do (n += kg(c)), (c = c.return);
    while (c);
    var u = n;
  } catch (g) {
    u =
      `
Error generating stack: ` +
      g.message +
      `
` +
      g.stack;
  }
  return { value: e, source: i, stack: u, digest: null };
}
function po(e, i, n) {
  return { value: e, source: null, stack: n ?? null, digest: i ?? null };
}
function n0(e, i) {
  try {
    console.error(i.value);
  } catch (n) {
    setTimeout(function () {
      throw n;
    });
  }
}
var $2 = typeof WeakMap == "function" ? WeakMap : Map;
function qd(e, i, n) {
  (n = Ol(-1, n)), (n.tag = 3), (n.payload = { element: null });
  var c = i.value;
  return (
    (n.callback = function () {
      ia || ((ia = !0), (g0 = c)), n0(e, i);
    }),
    n
  );
}
function Qd(e, i, n) {
  (n = Ol(-1, n)), (n.tag = 3);
  var c = e.type.getDerivedStateFromError;
  if (typeof c == "function") {
    var u = i.value;
    (n.payload = function () {
      return c(u);
    }),
      (n.callback = function () {
        n0(e, i);
      });
  }
  var g = e.stateNode;
  return (
    g !== null &&
      typeof g.componentDidCatch == "function" &&
      (n.callback = function () {
        n0(e, i),
          typeof c != "function" &&
            (oi === null ? (oi = new Set([this])) : oi.add(this));
        var b = i.stack;
        this.componentDidCatch(i.value, {
          componentStack: b !== null ? b : "",
        });
      }),
    n
  );
}
function nu(e, i, n) {
  var c = e.pingCache;
  if (c === null) {
    c = e.pingCache = new $2();
    var u = new Set();
    c.set(i, u);
  } else (u = c.get(i)), u === void 0 && ((u = new Set()), c.set(i, u));
  u.has(n) || (u.add(n), (e = cm.bind(null, e, i, n)), i.then(e, e));
}
function su(e) {
  do {
    var i;
    if (
      ((i = e.tag === 13) &&
        ((i = e.memoizedState), (i = i !== null ? i.dehydrated !== null : !0)),
      i)
    )
      return e;
    e = e.return;
  } while (e !== null);
  return null;
}
function au(e, i, n, c, u) {
  return e.mode & 1
    ? ((e.flags |= 65536), (e.lanes = u), e)
    : (e === i
        ? (e.flags |= 65536)
        : ((e.flags |= 128),
          (n.flags |= 131072),
          (n.flags &= -52805),
          n.tag === 1 &&
            (n.alternate === null
              ? (n.tag = 17)
              : ((i = Ol(-1, 1)), (i.tag = 2), ai(n, i, 1))),
          (n.lanes |= 1)),
      e);
}
var q2 = jl.ReactCurrentOwner,
  It = !1;
function Et(e, i, n, c) {
  i.child = e === null ? Td(i, null, n, c) : Mr(i, e.child, n, c);
}
function ou(e, i, n, c, u) {
  n = n.render;
  var g = i.ref;
  return (
    dr(i, u),
    (c = kc(e, i, n, c, g, u)),
    (n = Sc()),
    e !== null && !It
      ? ((i.updateQueue = e.updateQueue),
        (i.flags &= -2053),
        (e.lanes &= ~u),
        _l(e, i, u))
      : (We && n && hc(i), (i.flags |= 1), Et(e, i, c, u), i.child)
  );
}
function cu(e, i, n, c, u) {
  if (e === null) {
    var g = n.type;
    return typeof g == "function" &&
      !Ic(g) &&
      g.defaultProps === void 0 &&
      n.compare === null &&
      n.defaultProps === void 0
      ? ((i.tag = 15), (i.type = g), Kd(e, i, g, c, u))
      : ((e = Ns(n.type, null, c, i, i.mode, u)),
        (e.ref = i.ref),
        (e.return = i),
        (i.child = e));
  }
  if (((g = e.child), !(e.lanes & u))) {
    var b = g.memoizedProps;
    if (
      ((n = n.compare), (n = n !== null ? n : bn), n(b, c) && e.ref === i.ref)
    )
      return _l(e, i, u);
  }
  return (
    (i.flags |= 1),
    (e = hi(g, c)),
    (e.ref = i.ref),
    (e.return = i),
    (i.child = e)
  );
}
function Kd(e, i, n, c, u) {
  if (e !== null) {
    var g = e.memoizedProps;
    if (bn(g, c) && e.ref === i.ref)
      if (((It = !1), (i.pendingProps = c = g), (e.lanes & u) !== 0))
        e.flags & 131072 && (It = !0);
      else return (i.lanes = e.lanes), _l(e, i, u);
  }
  return s0(e, i, n, c, u);
}
function Jd(e, i, n) {
  var c = i.pendingProps,
    u = c.children,
    g = e !== null ? e.memoizedState : null;
  if (c.mode === "hidden")
    if (!(i.mode & 1))
      (i.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        je(ar, _t),
        (_t |= n);
    else {
      if (!(n & 1073741824))
        return (
          (e = g !== null ? g.baseLanes | n : n),
          (i.lanes = i.childLanes = 1073741824),
          (i.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null,
          }),
          (i.updateQueue = null),
          je(ar, _t),
          (_t |= e),
          null
        );
      (i.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (c = g !== null ? g.baseLanes : n),
        je(ar, _t),
        (_t |= c);
    }
  else
    g !== null ? ((c = g.baseLanes | n), (i.memoizedState = null)) : (c = n),
      je(ar, _t),
      (_t |= c);
  return Et(e, i, u, n), i.child;
}
function ef(e, i) {
  var n = i.ref;
  ((e === null && n !== null) || (e !== null && e.ref !== n)) &&
    ((i.flags |= 512), (i.flags |= 2097152));
}
function s0(e, i, n, c, u) {
  var g = zt(n) ? Fi : kt.current;
  return (
    (g = Lr(i, g)),
    dr(i, u),
    (n = kc(e, i, n, c, g, u)),
    (c = Sc()),
    e !== null && !It
      ? ((i.updateQueue = e.updateQueue),
        (i.flags &= -2053),
        (e.lanes &= ~u),
        _l(e, i, u))
      : (We && c && hc(i), (i.flags |= 1), Et(e, i, n, u), i.child)
  );
}
function hu(e, i, n, c, u) {
  if (zt(n)) {
    var g = !0;
    Us(i);
  } else g = !1;
  if ((dr(i, u), i.stateNode === null))
    Ts(e, i), Pd(i, n, c), r0(i, n, c, u), (c = !0);
  else if (e === null) {
    var b = i.stateNode,
      k = i.memoizedProps;
    b.props = k;
    var E = b.context,
      I = n.contextType;
    typeof I == "object" && I !== null
      ? (I = el(I))
      : ((I = zt(n) ? Fi : kt.current), (I = Lr(i, I)));
    var F = n.getDerivedStateFromProps,
      H =
        typeof F == "function" ||
        typeof b.getSnapshotBeforeUpdate == "function";
    H ||
      (typeof b.UNSAFE_componentWillReceiveProps != "function" &&
        typeof b.componentWillReceiveProps != "function") ||
      ((k !== c || E !== I) && tu(i, b, c, I)),
      (Vl = !1);
    var G = i.memoizedState;
    (b.state = G),
      Ks(i, c, b, u),
      (E = i.memoizedState),
      k !== c || G !== E || Ot.current || Vl
        ? (typeof F == "function" && (i0(i, n, F, c), (E = i.memoizedState)),
          (k = Vl || eu(i, n, k, c, G, E, I))
            ? (H ||
                (typeof b.UNSAFE_componentWillMount != "function" &&
                  typeof b.componentWillMount != "function") ||
                (typeof b.componentWillMount == "function" &&
                  b.componentWillMount(),
                typeof b.UNSAFE_componentWillMount == "function" &&
                  b.UNSAFE_componentWillMount()),
              typeof b.componentDidMount == "function" && (i.flags |= 4194308))
            : (typeof b.componentDidMount == "function" && (i.flags |= 4194308),
              (i.memoizedProps = c),
              (i.memoizedState = E)),
          (b.props = c),
          (b.state = E),
          (b.context = I),
          (c = k))
        : (typeof b.componentDidMount == "function" && (i.flags |= 4194308),
          (c = !1));
  } else {
    (b = i.stateNode),
      Ad(e, i),
      (k = i.memoizedProps),
      (I = i.type === i.elementType ? k : il(i.type, k)),
      (b.props = I),
      (H = i.pendingProps),
      (G = b.context),
      (E = n.contextType),
      typeof E == "object" && E !== null
        ? (E = el(E))
        : ((E = zt(n) ? Fi : kt.current), (E = Lr(i, E)));
    var K = n.getDerivedStateFromProps;
    (F =
      typeof K == "function" ||
      typeof b.getSnapshotBeforeUpdate == "function") ||
      (typeof b.UNSAFE_componentWillReceiveProps != "function" &&
        typeof b.componentWillReceiveProps != "function") ||
      ((k !== H || G !== E) && tu(i, b, c, E)),
      (Vl = !1),
      (G = i.memoizedState),
      (b.state = G),
      Ks(i, c, b, u);
    var q = i.memoizedState;
    k !== H || G !== q || Ot.current || Vl
      ? (typeof K == "function" && (i0(i, n, K, c), (q = i.memoizedState)),
        (I = Vl || eu(i, n, I, c, G, q, E) || !1)
          ? (F ||
              (typeof b.UNSAFE_componentWillUpdate != "function" &&
                typeof b.componentWillUpdate != "function") ||
              (typeof b.componentWillUpdate == "function" &&
                b.componentWillUpdate(c, q, E),
              typeof b.UNSAFE_componentWillUpdate == "function" &&
                b.UNSAFE_componentWillUpdate(c, q, E)),
            typeof b.componentDidUpdate == "function" && (i.flags |= 4),
            typeof b.getSnapshotBeforeUpdate == "function" && (i.flags |= 1024))
          : (typeof b.componentDidUpdate != "function" ||
              (k === e.memoizedProps && G === e.memoizedState) ||
              (i.flags |= 4),
            typeof b.getSnapshotBeforeUpdate != "function" ||
              (k === e.memoizedProps && G === e.memoizedState) ||
              (i.flags |= 1024),
            (i.memoizedProps = c),
            (i.memoizedState = q)),
        (b.props = c),
        (b.state = q),
        (b.context = E),
        (c = I))
      : (typeof b.componentDidUpdate != "function" ||
          (k === e.memoizedProps && G === e.memoizedState) ||
          (i.flags |= 4),
        typeof b.getSnapshotBeforeUpdate != "function" ||
          (k === e.memoizedProps && G === e.memoizedState) ||
          (i.flags |= 1024),
        (c = !1));
  }
  return a0(e, i, n, c, g, u);
}
function a0(e, i, n, c, u, g) {
  ef(e, i);
  var b = (i.flags & 128) !== 0;
  if (!c && !b) return u && $h(i, n, !1), _l(e, i, g);
  (c = i.stateNode), (q2.current = i);
  var k =
    b && typeof n.getDerivedStateFromError != "function" ? null : c.render();
  return (
    (i.flags |= 1),
    e !== null && b
      ? ((i.child = Mr(i, e.child, null, g)), (i.child = Mr(i, null, k, g)))
      : Et(e, i, k, g),
    (i.memoizedState = c.state),
    u && $h(i, n, !0),
    i.child
  );
}
function tf(e) {
  var i = e.stateNode;
  i.pendingContext
    ? Zh(e, i.pendingContext, i.pendingContext !== i.context)
    : i.context && Zh(e, i.context, !1),
    vc(e, i.containerInfo);
}
function uu(e, i, n, c, u) {
  return Tr(), dc(u), (i.flags |= 256), Et(e, i, n, c), i.child;
}
var o0 = { dehydrated: null, treeContext: null, retryLane: 0 };
function c0(e) {
  return { baseLanes: e, cachePool: null, transitions: null };
}
function lf(e, i, n) {
  var c = i.pendingProps,
    u = Ve.current,
    g = !1,
    b = (i.flags & 128) !== 0,
    k;
  if (
    ((k = b) ||
      (k = e !== null && e.memoizedState === null ? !1 : (u & 2) !== 0),
    k
      ? ((g = !0), (i.flags &= -129))
      : (e === null || e.memoizedState !== null) && (u |= 1),
    je(Ve, u & 1),
    e === null)
  )
    return (
      t0(i),
      (e = i.memoizedState),
      e !== null && ((e = e.dehydrated), e !== null)
        ? (i.mode & 1
            ? e.data === "$!"
              ? (i.lanes = 8)
              : (i.lanes = 1073741824)
            : (i.lanes = 1),
          null)
        : ((b = c.children),
          (e = c.fallback),
          g
            ? ((c = i.mode),
              (g = i.child),
              (b = { mode: "hidden", children: b }),
              !(c & 1) && g !== null
                ? ((g.childLanes = 0), (g.pendingProps = b))
                : (g = Ea(b, c, 0, null)),
              (e = zi(e, c, n, null)),
              (g.return = i),
              (e.return = i),
              (g.sibling = e),
              (i.child = g),
              (i.child.memoizedState = c0(n)),
              (i.memoizedState = o0),
              e)
            : Ec(i, b))
    );
  if (((u = e.memoizedState), u !== null && ((k = u.dehydrated), k !== null)))
    return Q2(e, i, b, c, k, u, n);
  if (g) {
    (g = c.fallback), (b = i.mode), (u = e.child), (k = u.sibling);
    var E = { mode: "hidden", children: c.children };
    return (
      !(b & 1) && i.child !== u
        ? ((c = i.child),
          (c.childLanes = 0),
          (c.pendingProps = E),
          (i.deletions = null))
        : ((c = hi(u, E)), (c.subtreeFlags = u.subtreeFlags & 14680064)),
      k !== null ? (g = hi(k, g)) : ((g = zi(g, b, n, null)), (g.flags |= 2)),
      (g.return = i),
      (c.return = i),
      (c.sibling = g),
      (i.child = c),
      (c = g),
      (g = i.child),
      (b = e.child.memoizedState),
      (b =
        b === null
          ? c0(n)
          : {
              baseLanes: b.baseLanes | n,
              cachePool: null,
              transitions: b.transitions,
            }),
      (g.memoizedState = b),
      (g.childLanes = e.childLanes & ~n),
      (i.memoizedState = o0),
      c
    );
  }
  return (
    (g = e.child),
    (e = g.sibling),
    (c = hi(g, { mode: "visible", children: c.children })),
    !(i.mode & 1) && (c.lanes = n),
    (c.return = i),
    (c.sibling = null),
    e !== null &&
      ((n = i.deletions),
      n === null ? ((i.deletions = [e]), (i.flags |= 16)) : n.push(e)),
    (i.child = c),
    (i.memoizedState = null),
    c
  );
}
function Ec(e, i) {
  return (
    (i = Ea({ mode: "visible", children: i }, e.mode, 0, null)),
    (i.return = e),
    (e.child = i)
  );
}
function ms(e, i, n, c) {
  return (
    c !== null && dc(c),
    Mr(i, e.child, null, n),
    (e = Ec(i, i.pendingProps.children)),
    (e.flags |= 2),
    (i.memoizedState = null),
    e
  );
}
function Q2(e, i, n, c, u, g, b) {
  if (n)
    return i.flags & 256
      ? ((i.flags &= -257), (c = po(Error(de(422)))), ms(e, i, b, c))
      : i.memoizedState !== null
        ? ((i.child = e.child), (i.flags |= 128), null)
        : ((g = c.fallback),
          (u = i.mode),
          (c = Ea({ mode: "visible", children: c.children }, u, 0, null)),
          (g = zi(g, u, b, null)),
          (g.flags |= 2),
          (c.return = i),
          (g.return = i),
          (c.sibling = g),
          (i.child = c),
          i.mode & 1 && Mr(i, e.child, null, b),
          (i.child.memoizedState = c0(b)),
          (i.memoizedState = o0),
          g);
  if (!(i.mode & 1)) return ms(e, i, b, null);
  if (u.data === "$!") {
    if (((c = u.nextSibling && u.nextSibling.dataset), c)) var k = c.dgst;
    return (
      (c = k), (g = Error(de(419))), (c = po(g, c, void 0)), ms(e, i, b, c)
    );
  }
  if (((k = (b & e.childLanes) !== 0), It || k)) {
    if (((c = ht), c !== null)) {
      switch (b & -b) {
        case 4:
          u = 2;
          break;
        case 16:
          u = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          u = 32;
          break;
        case 536870912:
          u = 268435456;
          break;
        default:
          u = 0;
      }
      (u = u & (c.suspendedLanes | b) ? 0 : u),
        u !== 0 &&
          u !== g.retryLane &&
          ((g.retryLane = u), Dl(e, u), ol(c, e, u, -1));
    }
    return Nc(), (c = po(Error(de(421)))), ms(e, i, b, c);
  }
  return u.data === "$?"
    ? ((i.flags |= 128),
      (i.child = e.child),
      (i = hm.bind(null, e)),
      (u._reactRetry = i),
      null)
    : ((e = g.treeContext),
      (jt = si(u.nextSibling)),
      (Xt = i),
      (We = !0),
      (sl = null),
      e !== null &&
        (($t[qt++] = Nl),
        ($t[qt++] = Il),
        ($t[qt++] = Di),
        (Nl = e.id),
        (Il = e.overflow),
        (Di = i)),
      (i = Ec(i, c.children)),
      (i.flags |= 4096),
      i);
}
function du(e, i, n) {
  e.lanes |= i;
  var c = e.alternate;
  c !== null && (c.lanes |= i), l0(e.return, i, n);
}
function go(e, i, n, c, u) {
  var g = e.memoizedState;
  g === null
    ? (e.memoizedState = {
        isBackwards: i,
        rendering: null,
        renderingStartTime: 0,
        last: c,
        tail: n,
        tailMode: u,
      })
    : ((g.isBackwards = i),
      (g.rendering = null),
      (g.renderingStartTime = 0),
      (g.last = c),
      (g.tail = n),
      (g.tailMode = u));
}
function rf(e, i, n) {
  var c = i.pendingProps,
    u = c.revealOrder,
    g = c.tail;
  if ((Et(e, i, c.children, n), (c = Ve.current), c & 2))
    (c = (c & 1) | 2), (i.flags |= 128);
  else {
    if (e !== null && e.flags & 128)
      e: for (e = i.child; e !== null; ) {
        if (e.tag === 13) e.memoizedState !== null && du(e, n, i);
        else if (e.tag === 19) du(e, n, i);
        else if (e.child !== null) {
          (e.child.return = e), (e = e.child);
          continue;
        }
        if (e === i) break e;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === i) break e;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    c &= 1;
  }
  if ((je(Ve, c), !(i.mode & 1))) i.memoizedState = null;
  else
    switch (u) {
      case "forwards":
        for (n = i.child, u = null; n !== null; )
          (e = n.alternate),
            e !== null && Js(e) === null && (u = n),
            (n = n.sibling);
        (n = u),
          n === null
            ? ((u = i.child), (i.child = null))
            : ((u = n.sibling), (n.sibling = null)),
          go(i, !1, u, n, g);
        break;
      case "backwards":
        for (n = null, u = i.child, i.child = null; u !== null; ) {
          if (((e = u.alternate), e !== null && Js(e) === null)) {
            i.child = u;
            break;
          }
          (e = u.sibling), (u.sibling = n), (n = u), (u = e);
        }
        go(i, !0, n, null, g);
        break;
      case "together":
        go(i, !1, null, null, void 0);
        break;
      default:
        i.memoizedState = null;
    }
  return i.child;
}
function Ts(e, i) {
  !(i.mode & 1) &&
    e !== null &&
    ((e.alternate = null), (i.alternate = null), (i.flags |= 2));
}
function _l(e, i, n) {
  if (
    (e !== null && (i.dependencies = e.dependencies),
    (ji |= i.lanes),
    !(n & i.childLanes))
  )
    return null;
  if (e !== null && i.child !== e.child) throw Error(de(153));
  if (i.child !== null) {
    for (
      e = i.child, n = hi(e, e.pendingProps), i.child = n, n.return = i;
      e.sibling !== null;

    )
      (e = e.sibling), (n = n.sibling = hi(e, e.pendingProps)), (n.return = i);
    n.sibling = null;
  }
  return i.child;
}
function K2(e, i, n) {
  switch (i.tag) {
    case 3:
      tf(i), Tr();
      break;
    case 5:
      Md(i);
      break;
    case 1:
      zt(i.type) && Us(i);
      break;
    case 4:
      vc(i, i.stateNode.containerInfo);
      break;
    case 10:
      var c = i.type._context,
        u = i.memoizedProps.value;
      je(qs, c._currentValue), (c._currentValue = u);
      break;
    case 13:
      if (((c = i.memoizedState), c !== null))
        return c.dehydrated !== null
          ? (je(Ve, Ve.current & 1), (i.flags |= 128), null)
          : n & i.child.childLanes
            ? lf(e, i, n)
            : (je(Ve, Ve.current & 1),
              (e = _l(e, i, n)),
              e !== null ? e.sibling : null);
      je(Ve, Ve.current & 1);
      break;
    case 19:
      if (((c = (n & i.childLanes) !== 0), e.flags & 128)) {
        if (c) return rf(e, i, n);
        i.flags |= 128;
      }
      if (
        ((u = i.memoizedState),
        u !== null &&
          ((u.rendering = null), (u.tail = null), (u.lastEffect = null)),
        je(Ve, Ve.current),
        c)
      )
        break;
      return null;
    case 22:
    case 23:
      return (i.lanes = 0), Jd(e, i, n);
  }
  return _l(e, i, n);
}
var nf, h0, sf, af;
nf = function (e, i) {
  for (var n = i.child; n !== null; ) {
    if (n.tag === 5 || n.tag === 6) e.appendChild(n.stateNode);
    else if (n.tag !== 4 && n.child !== null) {
      (n.child.return = n), (n = n.child);
      continue;
    }
    if (n === i) break;
    for (; n.sibling === null; ) {
      if (n.return === null || n.return === i) return;
      n = n.return;
    }
    (n.sibling.return = n.return), (n = n.sibling);
  }
};
h0 = function () {};
sf = function (e, i, n, c) {
  var u = e.memoizedProps;
  if (u !== c) {
    (e = i.stateNode), Ai(Cl.current);
    var g = null;
    switch (n) {
      case "input":
        (u = No(e, u)), (c = No(e, c)), (g = []);
        break;
      case "select":
        (u = Ue({}, u, { value: void 0 })),
          (c = Ue({}, c, { value: void 0 })),
          (g = []);
        break;
      case "textarea":
        (u = zo(e, u)), (c = zo(e, c)), (g = []);
        break;
      default:
        typeof u.onClick != "function" &&
          typeof c.onClick == "function" &&
          (e.onclick = Vs);
    }
    Do(n, c);
    var b;
    n = null;
    for (I in u)
      if (!c.hasOwnProperty(I) && u.hasOwnProperty(I) && u[I] != null)
        if (I === "style") {
          var k = u[I];
          for (b in k) k.hasOwnProperty(b) && (n || (n = {}), (n[b] = ""));
        } else
          I !== "dangerouslySetInnerHTML" &&
            I !== "children" &&
            I !== "suppressContentEditableWarning" &&
            I !== "suppressHydrationWarning" &&
            I !== "autoFocus" &&
            (fn.hasOwnProperty(I)
              ? g || (g = [])
              : (g = g || []).push(I, null));
    for (I in c) {
      var E = c[I];
      if (
        ((k = u != null ? u[I] : void 0),
        c.hasOwnProperty(I) && E !== k && (E != null || k != null))
      )
        if (I === "style")
          if (k) {
            for (b in k)
              !k.hasOwnProperty(b) ||
                (E && E.hasOwnProperty(b)) ||
                (n || (n = {}), (n[b] = ""));
            for (b in E)
              E.hasOwnProperty(b) &&
                k[b] !== E[b] &&
                (n || (n = {}), (n[b] = E[b]));
          } else n || (g || (g = []), g.push(I, n)), (n = E);
        else
          I === "dangerouslySetInnerHTML"
            ? ((E = E ? E.__html : void 0),
              (k = k ? k.__html : void 0),
              E != null && k !== E && (g = g || []).push(I, E))
            : I === "children"
              ? (typeof E != "string" && typeof E != "number") ||
                (g = g || []).push(I, "" + E)
              : I !== "suppressContentEditableWarning" &&
                I !== "suppressHydrationWarning" &&
                (fn.hasOwnProperty(I)
                  ? (E != null && I === "onScroll" && He("scroll", e),
                    g || k === E || (g = []))
                  : (g = g || []).push(I, E));
    }
    n && (g = g || []).push("style", n);
    var I = g;
    (i.updateQueue = I) && (i.flags |= 4);
  }
};
af = function (e, i, n, c) {
  n !== c && (i.flags |= 4);
};
function Zr(e, i) {
  if (!We)
    switch (e.tailMode) {
      case "hidden":
        i = e.tail;
        for (var n = null; i !== null; )
          i.alternate !== null && (n = i), (i = i.sibling);
        n === null ? (e.tail = null) : (n.sibling = null);
        break;
      case "collapsed":
        n = e.tail;
        for (var c = null; n !== null; )
          n.alternate !== null && (c = n), (n = n.sibling);
        c === null
          ? i || e.tail === null
            ? (e.tail = null)
            : (e.tail.sibling = null)
          : (c.sibling = null);
    }
}
function yt(e) {
  var i = e.alternate !== null && e.alternate.child === e.child,
    n = 0,
    c = 0;
  if (i)
    for (var u = e.child; u !== null; )
      (n |= u.lanes | u.childLanes),
        (c |= u.subtreeFlags & 14680064),
        (c |= u.flags & 14680064),
        (u.return = e),
        (u = u.sibling);
  else
    for (u = e.child; u !== null; )
      (n |= u.lanes | u.childLanes),
        (c |= u.subtreeFlags),
        (c |= u.flags),
        (u.return = e),
        (u = u.sibling);
  return (e.subtreeFlags |= c), (e.childLanes = n), i;
}
function J2(e, i, n) {
  var c = i.pendingProps;
  switch ((uc(i), i.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return yt(i), null;
    case 1:
      return zt(i.type) && Gs(), yt(i), null;
    case 3:
      return (
        (c = i.stateNode),
        Rr(),
        Ye(Ot),
        Ye(kt),
        bc(),
        c.pendingContext &&
          ((c.context = c.pendingContext), (c.pendingContext = null)),
        (e === null || e.child === null) &&
          (ps(i)
            ? (i.flags |= 4)
            : e === null ||
              (e.memoizedState.isDehydrated && !(i.flags & 256)) ||
              ((i.flags |= 1024), sl !== null && (v0(sl), (sl = null)))),
        h0(e, i),
        yt(i),
        null
      );
    case 5:
      yc(i);
      var u = Ai(An.current);
      if (((n = i.type), e !== null && i.stateNode != null))
        sf(e, i, n, c, u),
          e.ref !== i.ref && ((i.flags |= 512), (i.flags |= 2097152));
      else {
        if (!c) {
          if (i.stateNode === null) throw Error(de(166));
          return yt(i), null;
        }
        if (((e = Ai(Cl.current)), ps(i))) {
          (c = i.stateNode), (n = i.type);
          var g = i.memoizedProps;
          switch (((c[kl] = i), (c[Sn] = g), (e = (i.mode & 1) !== 0), n)) {
            case "dialog":
              He("cancel", c), He("close", c);
              break;
            case "iframe":
            case "object":
            case "embed":
              He("load", c);
              break;
            case "video":
            case "audio":
              for (u = 0; u < tn.length; u++) He(tn[u], c);
              break;
            case "source":
              He("error", c);
              break;
            case "img":
            case "image":
            case "link":
              He("error", c), He("load", c);
              break;
            case "details":
              He("toggle", c);
              break;
            case "input":
              wh(c, g), He("invalid", c);
              break;
            case "select":
              (c._wrapperState = { wasMultiple: !!g.multiple }),
                He("invalid", c);
              break;
            case "textarea":
              Sh(c, g), He("invalid", c);
          }
          Do(n, g), (u = null);
          for (var b in g)
            if (g.hasOwnProperty(b)) {
              var k = g[b];
              b === "children"
                ? typeof k == "string"
                  ? c.textContent !== k &&
                    (g.suppressHydrationWarning !== !0 &&
                      fs(c.textContent, k, e),
                    (u = ["children", k]))
                  : typeof k == "number" &&
                    c.textContent !== "" + k &&
                    (g.suppressHydrationWarning !== !0 &&
                      fs(c.textContent, k, e),
                    (u = ["children", "" + k]))
                : fn.hasOwnProperty(b) &&
                  k != null &&
                  b === "onScroll" &&
                  He("scroll", c);
            }
          switch (n) {
            case "input":
              ns(c), kh(c, g, !0);
              break;
            case "textarea":
              ns(c), Ch(c);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof g.onClick == "function" && (c.onclick = Vs);
          }
          (c = u), (i.updateQueue = c), c !== null && (i.flags |= 4);
        } else {
          (b = u.nodeType === 9 ? u : u.ownerDocument),
            e === "http://www.w3.org/1999/xhtml" && (e = I1(n)),
            e === "http://www.w3.org/1999/xhtml"
              ? n === "script"
                ? ((e = b.createElement("div")),
                  (e.innerHTML = "<script></script>"),
                  (e = e.removeChild(e.firstChild)))
                : typeof c.is == "string"
                  ? (e = b.createElement(n, { is: c.is }))
                  : ((e = b.createElement(n)),
                    n === "select" &&
                      ((b = e),
                      c.multiple
                        ? (b.multiple = !0)
                        : c.size && (b.size = c.size)))
              : (e = b.createElementNS(e, n)),
            (e[kl] = i),
            (e[Sn] = c),
            nf(e, i, !1, !1),
            (i.stateNode = e);
          e: {
            switch (((b = _o(n, c)), n)) {
              case "dialog":
                He("cancel", e), He("close", e), (u = c);
                break;
              case "iframe":
              case "object":
              case "embed":
                He("load", e), (u = c);
                break;
              case "video":
              case "audio":
                for (u = 0; u < tn.length; u++) He(tn[u], e);
                u = c;
                break;
              case "source":
                He("error", e), (u = c);
                break;
              case "img":
              case "image":
              case "link":
                He("error", e), He("load", e), (u = c);
                break;
              case "details":
                He("toggle", e), (u = c);
                break;
              case "input":
                wh(e, c), (u = No(e, c)), He("invalid", e);
                break;
              case "option":
                u = c;
                break;
              case "select":
                (e._wrapperState = { wasMultiple: !!c.multiple }),
                  (u = Ue({}, c, { value: void 0 })),
                  He("invalid", e);
                break;
              case "textarea":
                Sh(e, c), (u = zo(e, c)), He("invalid", e);
                break;
              default:
                u = c;
            }
            Do(n, u), (k = u);
            for (g in k)
              if (k.hasOwnProperty(g)) {
                var E = k[g];
                g === "style"
                  ? F1(e, E)
                  : g === "dangerouslySetInnerHTML"
                    ? ((E = E ? E.__html : void 0), E != null && O1(e, E))
                    : g === "children"
                      ? typeof E == "string"
                        ? (n !== "textarea" || E !== "") && pn(e, E)
                        : typeof E == "number" && pn(e, "" + E)
                      : g !== "suppressContentEditableWarning" &&
                        g !== "suppressHydrationWarning" &&
                        g !== "autoFocus" &&
                        (fn.hasOwnProperty(g)
                          ? E != null && g === "onScroll" && He("scroll", e)
                          : E != null && q0(e, g, E, b));
              }
            switch (n) {
              case "input":
                ns(e), kh(e, c, !1);
                break;
              case "textarea":
                ns(e), Ch(e);
                break;
              case "option":
                c.value != null && e.setAttribute("value", "" + di(c.value));
                break;
              case "select":
                (e.multiple = !!c.multiple),
                  (g = c.value),
                  g != null
                    ? or(e, !!c.multiple, g, !1)
                    : c.defaultValue != null &&
                      or(e, !!c.multiple, c.defaultValue, !0);
                break;
              default:
                typeof u.onClick == "function" && (e.onclick = Vs);
            }
            switch (n) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                c = !!c.autoFocus;
                break e;
              case "img":
                c = !0;
                break e;
              default:
                c = !1;
            }
          }
          c && (i.flags |= 4);
        }
        i.ref !== null && ((i.flags |= 512), (i.flags |= 2097152));
      }
      return yt(i), null;
    case 6:
      if (e && i.stateNode != null) af(e, i, e.memoizedProps, c);
      else {
        if (typeof c != "string" && i.stateNode === null) throw Error(de(166));
        if (((n = Ai(An.current)), Ai(Cl.current), ps(i))) {
          if (
            ((c = i.stateNode),
            (n = i.memoizedProps),
            (c[kl] = i),
            (g = c.nodeValue !== n) && ((e = Xt), e !== null))
          )
            switch (e.tag) {
              case 3:
                fs(c.nodeValue, n, (e.mode & 1) !== 0);
                break;
              case 5:
                e.memoizedProps.suppressHydrationWarning !== !0 &&
                  fs(c.nodeValue, n, (e.mode & 1) !== 0);
            }
          g && (i.flags |= 4);
        } else
          (c = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(c)),
            (c[kl] = i),
            (i.stateNode = c);
      }
      return yt(i), null;
    case 13:
      if (
        (Ye(Ve),
        (c = i.memoizedState),
        e === null ||
          (e.memoizedState !== null && e.memoizedState.dehydrated !== null))
      ) {
        if (We && jt !== null && i.mode & 1 && !(i.flags & 128))
          Sd(), Tr(), (i.flags |= 98560), (g = !1);
        else if (((g = ps(i)), c !== null && c.dehydrated !== null)) {
          if (e === null) {
            if (!g) throw Error(de(318));
            if (
              ((g = i.memoizedState),
              (g = g !== null ? g.dehydrated : null),
              !g)
            )
              throw Error(de(317));
            g[kl] = i;
          } else
            Tr(), !(i.flags & 128) && (i.memoizedState = null), (i.flags |= 4);
          yt(i), (g = !1);
        } else sl !== null && (v0(sl), (sl = null)), (g = !0);
        if (!g) return i.flags & 65536 ? i : null;
      }
      return i.flags & 128
        ? ((i.lanes = n), i)
        : ((c = c !== null),
          c !== (e !== null && e.memoizedState !== null) &&
            c &&
            ((i.child.flags |= 8192),
            i.mode & 1 &&
              (e === null || Ve.current & 1 ? ot === 0 && (ot = 3) : Nc())),
          i.updateQueue !== null && (i.flags |= 4),
          yt(i),
          null);
    case 4:
      return (
        Rr(), h0(e, i), e === null && wn(i.stateNode.containerInfo), yt(i), null
      );
    case 10:
      return gc(i.type._context), yt(i), null;
    case 17:
      return zt(i.type) && Gs(), yt(i), null;
    case 19:
      if ((Ye(Ve), (g = i.memoizedState), g === null)) return yt(i), null;
      if (((c = (i.flags & 128) !== 0), (b = g.rendering), b === null))
        if (c) Zr(g, !1);
        else {
          if (ot !== 0 || (e !== null && e.flags & 128))
            for (e = i.child; e !== null; ) {
              if (((b = Js(e)), b !== null)) {
                for (
                  i.flags |= 128,
                    Zr(g, !1),
                    c = b.updateQueue,
                    c !== null && ((i.updateQueue = c), (i.flags |= 4)),
                    i.subtreeFlags = 0,
                    c = n,
                    n = i.child;
                  n !== null;

                )
                  (g = n),
                    (e = c),
                    (g.flags &= 14680066),
                    (b = g.alternate),
                    b === null
                      ? ((g.childLanes = 0),
                        (g.lanes = e),
                        (g.child = null),
                        (g.subtreeFlags = 0),
                        (g.memoizedProps = null),
                        (g.memoizedState = null),
                        (g.updateQueue = null),
                        (g.dependencies = null),
                        (g.stateNode = null))
                      : ((g.childLanes = b.childLanes),
                        (g.lanes = b.lanes),
                        (g.child = b.child),
                        (g.subtreeFlags = 0),
                        (g.deletions = null),
                        (g.memoizedProps = b.memoizedProps),
                        (g.memoizedState = b.memoizedState),
                        (g.updateQueue = b.updateQueue),
                        (g.type = b.type),
                        (e = b.dependencies),
                        (g.dependencies =
                          e === null
                            ? null
                            : {
                                lanes: e.lanes,
                                firstContext: e.firstContext,
                              })),
                    (n = n.sibling);
                return je(Ve, (Ve.current & 1) | 2), i.child;
              }
              e = e.sibling;
            }
          g.tail !== null &&
            Je() > Ir &&
            ((i.flags |= 128), (c = !0), Zr(g, !1), (i.lanes = 4194304));
        }
      else {
        if (!c)
          if (((e = Js(b)), e !== null)) {
            if (
              ((i.flags |= 128),
              (c = !0),
              (n = e.updateQueue),
              n !== null && ((i.updateQueue = n), (i.flags |= 4)),
              Zr(g, !0),
              g.tail === null && g.tailMode === "hidden" && !b.alternate && !We)
            )
              return yt(i), null;
          } else
            2 * Je() - g.renderingStartTime > Ir &&
              n !== 1073741824 &&
              ((i.flags |= 128), (c = !0), Zr(g, !1), (i.lanes = 4194304));
        g.isBackwards
          ? ((b.sibling = i.child), (i.child = b))
          : ((n = g.last),
            n !== null ? (n.sibling = b) : (i.child = b),
            (g.last = b));
      }
      return g.tail !== null
        ? ((i = g.tail),
          (g.rendering = i),
          (g.tail = i.sibling),
          (g.renderingStartTime = Je()),
          (i.sibling = null),
          (n = Ve.current),
          je(Ve, c ? (n & 1) | 2 : n & 1),
          i)
        : (yt(i), null);
    case 22:
    case 23:
      return (
        Rc(),
        (c = i.memoizedState !== null),
        e !== null && (e.memoizedState !== null) !== c && (i.flags |= 8192),
        c && i.mode & 1
          ? _t & 1073741824 && (yt(i), i.subtreeFlags & 6 && (i.flags |= 8192))
          : yt(i),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(de(156, i.tag));
}
function em(e, i) {
  switch ((uc(i), i.tag)) {
    case 1:
      return (
        zt(i.type) && Gs(),
        (e = i.flags),
        e & 65536 ? ((i.flags = (e & -65537) | 128), i) : null
      );
    case 3:
      return (
        Rr(),
        Ye(Ot),
        Ye(kt),
        bc(),
        (e = i.flags),
        e & 65536 && !(e & 128) ? ((i.flags = (e & -65537) | 128), i) : null
      );
    case 5:
      return yc(i), null;
    case 13:
      if (
        (Ye(Ve), (e = i.memoizedState), e !== null && e.dehydrated !== null)
      ) {
        if (i.alternate === null) throw Error(de(340));
        Tr();
      }
      return (
        (e = i.flags), e & 65536 ? ((i.flags = (e & -65537) | 128), i) : null
      );
    case 19:
      return Ye(Ve), null;
    case 4:
      return Rr(), null;
    case 10:
      return gc(i.type._context), null;
    case 22:
    case 23:
      return Rc(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var xs = !1,
  wt = !1,
  tm = typeof WeakSet == "function" ? WeakSet : Set,
  me = null;
function sr(e, i) {
  var n = e.ref;
  if (n !== null)
    if (typeof n == "function")
      try {
        n(null);
      } catch (c) {
        Qe(e, i, c);
      }
    else n.current = null;
}
function u0(e, i, n) {
  try {
    n();
  } catch (c) {
    Qe(e, i, c);
  }
}
var fu = !1;
function lm(e, i) {
  if (((Zo = Ys), (e = hd()), cc(e))) {
    if ("selectionStart" in e)
      var n = { start: e.selectionStart, end: e.selectionEnd };
    else
      e: {
        n = ((n = e.ownerDocument) && n.defaultView) || window;
        var c = n.getSelection && n.getSelection();
        if (c && c.rangeCount !== 0) {
          n = c.anchorNode;
          var u = c.anchorOffset,
            g = c.focusNode;
          c = c.focusOffset;
          try {
            n.nodeType, g.nodeType;
          } catch {
            n = null;
            break e;
          }
          var b = 0,
            k = -1,
            E = -1,
            I = 0,
            F = 0,
            H = e,
            G = null;
          t: for (;;) {
            for (
              var K;
              H !== n || (u !== 0 && H.nodeType !== 3) || (k = b + u),
                H !== g || (c !== 0 && H.nodeType !== 3) || (E = b + c),
                H.nodeType === 3 && (b += H.nodeValue.length),
                (K = H.firstChild) !== null;

            )
              (G = H), (H = K);
            for (;;) {
              if (H === e) break t;
              if (
                (G === n && ++I === u && (k = b),
                G === g && ++F === c && (E = b),
                (K = H.nextSibling) !== null)
              )
                break;
              (H = G), (G = H.parentNode);
            }
            H = K;
          }
          n = k === -1 || E === -1 ? null : { start: k, end: E };
        } else n = null;
      }
    n = n || { start: 0, end: 0 };
  } else n = null;
  for (
    $o = { focusedElem: e, selectionRange: n }, Ys = !1, me = i;
    me !== null;

  )
    if (((i = me), (e = i.child), (i.subtreeFlags & 1028) !== 0 && e !== null))
      (e.return = i), (me = e);
    else
      for (; me !== null; ) {
        i = me;
        try {
          var q = i.alternate;
          if (i.flags & 1024)
            switch (i.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (q !== null) {
                  var Q = q.memoizedProps,
                    ue = q.memoizedState,
                    B = i.stateNode,
                    L = B.getSnapshotBeforeUpdate(
                      i.elementType === i.type ? Q : il(i.type, Q),
                      ue,
                    );
                  B.__reactInternalSnapshotBeforeUpdate = L;
                }
                break;
              case 3:
                var W = i.stateNode.containerInfo;
                W.nodeType === 1
                  ? (W.textContent = "")
                  : W.nodeType === 9 &&
                    W.documentElement &&
                    W.removeChild(W.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(de(163));
            }
        } catch (te) {
          Qe(i, i.return, te);
        }
        if (((e = i.sibling), e !== null)) {
          (e.return = i.return), (me = e);
          break;
        }
        me = i.return;
      }
  return (q = fu), (fu = !1), q;
}
function hn(e, i, n) {
  var c = i.updateQueue;
  if (((c = c !== null ? c.lastEffect : null), c !== null)) {
    var u = (c = c.next);
    do {
      if ((u.tag & e) === e) {
        var g = u.destroy;
        (u.destroy = void 0), g !== void 0 && u0(i, n, g);
      }
      u = u.next;
    } while (u !== c);
  }
}
function Ca(e, i) {
  if (
    ((i = i.updateQueue), (i = i !== null ? i.lastEffect : null), i !== null)
  ) {
    var n = (i = i.next);
    do {
      if ((n.tag & e) === e) {
        var c = n.create;
        n.destroy = c();
      }
      n = n.next;
    } while (n !== i);
  }
}
function d0(e) {
  var i = e.ref;
  if (i !== null) {
    var n = e.stateNode;
    switch (e.tag) {
      case 5:
        e = n;
        break;
      default:
        e = n;
    }
    typeof i == "function" ? i(e) : (i.current = e);
  }
}
function of(e) {
  var i = e.alternate;
  i !== null && ((e.alternate = null), of(i)),
    (e.child = null),
    (e.deletions = null),
    (e.sibling = null),
    e.tag === 5 &&
      ((i = e.stateNode),
      i !== null &&
        (delete i[kl], delete i[Sn], delete i[Ko], delete i[_2], delete i[j2])),
    (e.stateNode = null),
    (e.return = null),
    (e.dependencies = null),
    (e.memoizedProps = null),
    (e.memoizedState = null),
    (e.pendingProps = null),
    (e.stateNode = null),
    (e.updateQueue = null);
}
function cf(e) {
  return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function pu(e) {
  e: for (;;) {
    for (; e.sibling === null; ) {
      if (e.return === null || cf(e.return)) return null;
      e = e.return;
    }
    for (
      e.sibling.return = e.return, e = e.sibling;
      e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

    ) {
      if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
      (e.child.return = e), (e = e.child);
    }
    if (!(e.flags & 2)) return e.stateNode;
  }
}
function f0(e, i, n) {
  var c = e.tag;
  if (c === 5 || c === 6)
    (e = e.stateNode),
      i
        ? n.nodeType === 8
          ? n.parentNode.insertBefore(e, i)
          : n.insertBefore(e, i)
        : (n.nodeType === 8
            ? ((i = n.parentNode), i.insertBefore(e, n))
            : ((i = n), i.appendChild(e)),
          (n = n._reactRootContainer),
          n != null || i.onclick !== null || (i.onclick = Vs));
  else if (c !== 4 && ((e = e.child), e !== null))
    for (f0(e, i, n), e = e.sibling; e !== null; ) f0(e, i, n), (e = e.sibling);
}
function p0(e, i, n) {
  var c = e.tag;
  if (c === 5 || c === 6)
    (e = e.stateNode), i ? n.insertBefore(e, i) : n.appendChild(e);
  else if (c !== 4 && ((e = e.child), e !== null))
    for (p0(e, i, n), e = e.sibling; e !== null; ) p0(e, i, n), (e = e.sibling);
}
var ut = null,
  nl = !1;
function Hl(e, i, n) {
  for (n = n.child; n !== null; ) hf(e, i, n), (n = n.sibling);
}
function hf(e, i, n) {
  if (Sl && typeof Sl.onCommitFiberUnmount == "function")
    try {
      Sl.onCommitFiberUnmount(ma, n);
    } catch {}
  switch (n.tag) {
    case 5:
      wt || sr(n, i);
    case 6:
      var c = ut,
        u = nl;
      (ut = null),
        Hl(e, i, n),
        (ut = c),
        (nl = u),
        ut !== null &&
          (nl
            ? ((e = ut),
              (n = n.stateNode),
              e.nodeType === 8 ? e.parentNode.removeChild(n) : e.removeChild(n))
            : ut.removeChild(n.stateNode));
      break;
    case 18:
      ut !== null &&
        (nl
          ? ((e = ut),
            (n = n.stateNode),
            e.nodeType === 8
              ? ao(e.parentNode, n)
              : e.nodeType === 1 && ao(e, n),
            vn(e))
          : ao(ut, n.stateNode));
      break;
    case 4:
      (c = ut),
        (u = nl),
        (ut = n.stateNode.containerInfo),
        (nl = !0),
        Hl(e, i, n),
        (ut = c),
        (nl = u);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !wt &&
        ((c = n.updateQueue), c !== null && ((c = c.lastEffect), c !== null))
      ) {
        u = c = c.next;
        do {
          var g = u,
            b = g.destroy;
          (g = g.tag),
            b !== void 0 && (g & 2 || g & 4) && u0(n, i, b),
            (u = u.next);
        } while (u !== c);
      }
      Hl(e, i, n);
      break;
    case 1:
      if (
        !wt &&
        (sr(n, i),
        (c = n.stateNode),
        typeof c.componentWillUnmount == "function")
      )
        try {
          (c.props = n.memoizedProps),
            (c.state = n.memoizedState),
            c.componentWillUnmount();
        } catch (k) {
          Qe(n, i, k);
        }
      Hl(e, i, n);
      break;
    case 21:
      Hl(e, i, n);
      break;
    case 22:
      n.mode & 1
        ? ((wt = (c = wt) || n.memoizedState !== null), Hl(e, i, n), (wt = c))
        : Hl(e, i, n);
      break;
    default:
      Hl(e, i, n);
  }
}
function gu(e) {
  var i = e.updateQueue;
  if (i !== null) {
    e.updateQueue = null;
    var n = e.stateNode;
    n === null && (n = e.stateNode = new tm()),
      i.forEach(function (c) {
        var u = um.bind(null, e, c);
        n.has(c) || (n.add(c), c.then(u, u));
      });
  }
}
function ll(e, i) {
  var n = i.deletions;
  if (n !== null)
    for (var c = 0; c < n.length; c++) {
      var u = n[c];
      try {
        var g = e,
          b = i,
          k = b;
        e: for (; k !== null; ) {
          switch (k.tag) {
            case 5:
              (ut = k.stateNode), (nl = !1);
              break e;
            case 3:
              (ut = k.stateNode.containerInfo), (nl = !0);
              break e;
            case 4:
              (ut = k.stateNode.containerInfo), (nl = !0);
              break e;
          }
          k = k.return;
        }
        if (ut === null) throw Error(de(160));
        hf(g, b, u), (ut = null), (nl = !1);
        var E = u.alternate;
        E !== null && (E.return = null), (u.return = null);
      } catch (I) {
        Qe(u, i, I);
      }
    }
  if (i.subtreeFlags & 12854)
    for (i = i.child; i !== null; ) uf(i, e), (i = i.sibling);
}
function uf(e, i) {
  var n = e.alternate,
    c = e.flags;
  switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((ll(i, e), ml(e), c & 4)) {
        try {
          hn(3, e, e.return), Ca(3, e);
        } catch (Q) {
          Qe(e, e.return, Q);
        }
        try {
          hn(5, e, e.return);
        } catch (Q) {
          Qe(e, e.return, Q);
        }
      }
      break;
    case 1:
      ll(i, e), ml(e), c & 512 && n !== null && sr(n, n.return);
      break;
    case 5:
      if (
        (ll(i, e),
        ml(e),
        c & 512 && n !== null && sr(n, n.return),
        e.flags & 32)
      ) {
        var u = e.stateNode;
        try {
          pn(u, "");
        } catch (Q) {
          Qe(e, e.return, Q);
        }
      }
      if (c & 4 && ((u = e.stateNode), u != null)) {
        var g = e.memoizedProps,
          b = n !== null ? n.memoizedProps : g,
          k = e.type,
          E = e.updateQueue;
        if (((e.updateQueue = null), E !== null))
          try {
            k === "input" && g.type === "radio" && g.name != null && R1(u, g),
              _o(k, b);
            var I = _o(k, g);
            for (b = 0; b < E.length; b += 2) {
              var F = E[b],
                H = E[b + 1];
              F === "style"
                ? F1(u, H)
                : F === "dangerouslySetInnerHTML"
                  ? O1(u, H)
                  : F === "children"
                    ? pn(u, H)
                    : q0(u, F, H, I);
            }
            switch (k) {
              case "input":
                Io(u, g);
                break;
              case "textarea":
                N1(u, g);
                break;
              case "select":
                var G = u._wrapperState.wasMultiple;
                u._wrapperState.wasMultiple = !!g.multiple;
                var K = g.value;
                K != null
                  ? or(u, !!g.multiple, K, !1)
                  : G !== !!g.multiple &&
                    (g.defaultValue != null
                      ? or(u, !!g.multiple, g.defaultValue, !0)
                      : or(u, !!g.multiple, g.multiple ? [] : "", !1));
            }
            u[Sn] = g;
          } catch (Q) {
            Qe(e, e.return, Q);
          }
      }
      break;
    case 6:
      if ((ll(i, e), ml(e), c & 4)) {
        if (e.stateNode === null) throw Error(de(162));
        (u = e.stateNode), (g = e.memoizedProps);
        try {
          u.nodeValue = g;
        } catch (Q) {
          Qe(e, e.return, Q);
        }
      }
      break;
    case 3:
      if (
        (ll(i, e), ml(e), c & 4 && n !== null && n.memoizedState.isDehydrated)
      )
        try {
          vn(i.containerInfo);
        } catch (Q) {
          Qe(e, e.return, Q);
        }
      break;
    case 4:
      ll(i, e), ml(e);
      break;
    case 13:
      ll(i, e),
        ml(e),
        (u = e.child),
        u.flags & 8192 &&
          ((g = u.memoizedState !== null),
          (u.stateNode.isHidden = g),
          !g ||
            (u.alternate !== null && u.alternate.memoizedState !== null) ||
            (Tc = Je())),
        c & 4 && gu(e);
      break;
    case 22:
      if (
        ((F = n !== null && n.memoizedState !== null),
        e.mode & 1 ? ((wt = (I = wt) || F), ll(i, e), (wt = I)) : ll(i, e),
        ml(e),
        c & 8192)
      ) {
        if (
          ((I = e.memoizedState !== null),
          (e.stateNode.isHidden = I) && !F && e.mode & 1)
        )
          for (me = e, F = e.child; F !== null; ) {
            for (H = me = F; me !== null; ) {
              switch (((G = me), (K = G.child), G.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  hn(4, G, G.return);
                  break;
                case 1:
                  sr(G, G.return);
                  var q = G.stateNode;
                  if (typeof q.componentWillUnmount == "function") {
                    (c = G), (n = G.return);
                    try {
                      (i = c),
                        (q.props = i.memoizedProps),
                        (q.state = i.memoizedState),
                        q.componentWillUnmount();
                    } catch (Q) {
                      Qe(c, n, Q);
                    }
                  }
                  break;
                case 5:
                  sr(G, G.return);
                  break;
                case 22:
                  if (G.memoizedState !== null) {
                    xu(H);
                    continue;
                  }
              }
              K !== null ? ((K.return = G), (me = K)) : xu(H);
            }
            F = F.sibling;
          }
        e: for (F = null, H = e; ; ) {
          if (H.tag === 5) {
            if (F === null) {
              F = H;
              try {
                (u = H.stateNode),
                  I
                    ? ((g = u.style),
                      typeof g.setProperty == "function"
                        ? g.setProperty("display", "none", "important")
                        : (g.display = "none"))
                    : ((k = H.stateNode),
                      (E = H.memoizedProps.style),
                      (b =
                        E != null && E.hasOwnProperty("display")
                          ? E.display
                          : null),
                      (k.style.display = z1("display", b)));
              } catch (Q) {
                Qe(e, e.return, Q);
              }
            }
          } else if (H.tag === 6) {
            if (F === null)
              try {
                H.stateNode.nodeValue = I ? "" : H.memoizedProps;
              } catch (Q) {
                Qe(e, e.return, Q);
              }
          } else if (
            ((H.tag !== 22 && H.tag !== 23) ||
              H.memoizedState === null ||
              H === e) &&
            H.child !== null
          ) {
            (H.child.return = H), (H = H.child);
            continue;
          }
          if (H === e) break e;
          for (; H.sibling === null; ) {
            if (H.return === null || H.return === e) break e;
            F === H && (F = null), (H = H.return);
          }
          F === H && (F = null), (H.sibling.return = H.return), (H = H.sibling);
        }
      }
      break;
    case 19:
      ll(i, e), ml(e), c & 4 && gu(e);
      break;
    case 21:
      break;
    default:
      ll(i, e), ml(e);
  }
}
function ml(e) {
  var i = e.flags;
  if (i & 2) {
    try {
      e: {
        for (var n = e.return; n !== null; ) {
          if (cf(n)) {
            var c = n;
            break e;
          }
          n = n.return;
        }
        throw Error(de(160));
      }
      switch (c.tag) {
        case 5:
          var u = c.stateNode;
          c.flags & 32 && (pn(u, ""), (c.flags &= -33));
          var g = pu(e);
          p0(e, g, u);
          break;
        case 3:
        case 4:
          var b = c.stateNode.containerInfo,
            k = pu(e);
          f0(e, k, b);
          break;
        default:
          throw Error(de(161));
      }
    } catch (E) {
      Qe(e, e.return, E);
    }
    e.flags &= -3;
  }
  i & 4096 && (e.flags &= -4097);
}
function im(e, i, n) {
  (me = e), df(e);
}
function df(e, i, n) {
  for (var c = (e.mode & 1) !== 0; me !== null; ) {
    var u = me,
      g = u.child;
    if (u.tag === 22 && c) {
      var b = u.memoizedState !== null || xs;
      if (!b) {
        var k = u.alternate,
          E = (k !== null && k.memoizedState !== null) || wt;
        k = xs;
        var I = wt;
        if (((xs = b), (wt = E) && !I))
          for (me = u; me !== null; )
            (b = me),
              (E = b.child),
              b.tag === 22 && b.memoizedState !== null
                ? vu(u)
                : E !== null
                  ? ((E.return = b), (me = E))
                  : vu(u);
        for (; g !== null; ) (me = g), df(g), (g = g.sibling);
        (me = u), (xs = k), (wt = I);
      }
      mu(e);
    } else
      u.subtreeFlags & 8772 && g !== null ? ((g.return = u), (me = g)) : mu(e);
  }
}
function mu(e) {
  for (; me !== null; ) {
    var i = me;
    if (i.flags & 8772) {
      var n = i.alternate;
      try {
        if (i.flags & 8772)
          switch (i.tag) {
            case 0:
            case 11:
            case 15:
              wt || Ca(5, i);
              break;
            case 1:
              var c = i.stateNode;
              if (i.flags & 4 && !wt)
                if (n === null) c.componentDidMount();
                else {
                  var u =
                    i.elementType === i.type
                      ? n.memoizedProps
                      : il(i.type, n.memoizedProps);
                  c.componentDidUpdate(
                    u,
                    n.memoizedState,
                    c.__reactInternalSnapshotBeforeUpdate,
                  );
                }
              var g = i.updateQueue;
              g !== null && Jh(i, g, c);
              break;
            case 3:
              var b = i.updateQueue;
              if (b !== null) {
                if (((n = null), i.child !== null))
                  switch (i.child.tag) {
                    case 5:
                      n = i.child.stateNode;
                      break;
                    case 1:
                      n = i.child.stateNode;
                  }
                Jh(i, b, n);
              }
              break;
            case 5:
              var k = i.stateNode;
              if (n === null && i.flags & 4) {
                n = k;
                var E = i.memoizedProps;
                switch (i.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    E.autoFocus && n.focus();
                    break;
                  case "img":
                    E.src && (n.src = E.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (i.memoizedState === null) {
                var I = i.alternate;
                if (I !== null) {
                  var F = I.memoizedState;
                  if (F !== null) {
                    var H = F.dehydrated;
                    H !== null && vn(H);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(de(163));
          }
        wt || (i.flags & 512 && d0(i));
      } catch (G) {
        Qe(i, i.return, G);
      }
    }
    if (i === e) {
      me = null;
      break;
    }
    if (((n = i.sibling), n !== null)) {
      (n.return = i.return), (me = n);
      break;
    }
    me = i.return;
  }
}
function xu(e) {
  for (; me !== null; ) {
    var i = me;
    if (i === e) {
      me = null;
      break;
    }
    var n = i.sibling;
    if (n !== null) {
      (n.return = i.return), (me = n);
      break;
    }
    me = i.return;
  }
}
function vu(e) {
  for (; me !== null; ) {
    var i = me;
    try {
      switch (i.tag) {
        case 0:
        case 11:
        case 15:
          var n = i.return;
          try {
            Ca(4, i);
          } catch (E) {
            Qe(i, n, E);
          }
          break;
        case 1:
          var c = i.stateNode;
          if (typeof c.componentDidMount == "function") {
            var u = i.return;
            try {
              c.componentDidMount();
            } catch (E) {
              Qe(i, u, E);
            }
          }
          var g = i.return;
          try {
            d0(i);
          } catch (E) {
            Qe(i, g, E);
          }
          break;
        case 5:
          var b = i.return;
          try {
            d0(i);
          } catch (E) {
            Qe(i, b, E);
          }
      }
    } catch (E) {
      Qe(i, i.return, E);
    }
    if (i === e) {
      me = null;
      break;
    }
    var k = i.sibling;
    if (k !== null) {
      (k.return = i.return), (me = k);
      break;
    }
    me = i.return;
  }
}
var rm = Math.ceil,
  la = jl.ReactCurrentDispatcher,
  Pc = jl.ReactCurrentOwner,
  Kt = jl.ReactCurrentBatchConfig,
  Oe = 0,
  ht = null,
  et = null,
  ft = 0,
  _t = 0,
  ar = gi(0),
  ot = 0,
  Tn = null,
  ji = 0,
  Aa = 0,
  Lc = 0,
  un = null,
  Nt = null,
  Tc = 0,
  Ir = 1 / 0,
  Ml = null,
  ia = !1,
  g0 = null,
  oi = null,
  vs = !1,
  ti = null,
  ra = 0,
  dn = 0,
  m0 = null,
  Ms = -1,
  Rs = 0;
function Pt() {
  return Oe & 6 ? Je() : Ms !== -1 ? Ms : (Ms = Je());
}
function ci(e) {
  return e.mode & 1
    ? Oe & 2 && ft !== 0
      ? ft & -ft
      : H2.transition !== null
        ? (Rs === 0 && (Rs = Z1()), Rs)
        : ((e = De),
          e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : td(e.type))),
          e)
    : 1;
}
function ol(e, i, n, c) {
  if (50 < dn) throw ((dn = 0), (m0 = null), Error(de(185)));
  Un(e, n, c),
    (!(Oe & 2) || e !== ht) &&
      (e === ht && (!(Oe & 2) && (Aa |= n), ot === 4 && Ul(e, ft)),
      Ft(e, c),
      n === 1 && Oe === 0 && !(i.mode & 1) && ((Ir = Je() + 500), wa && mi()));
}
function Ft(e, i) {
  var n = e.callbackNode;
  Hg(e, i);
  var c = Hs(e, e === ht ? ft : 0);
  if (c === 0)
    n !== null && Ph(n), (e.callbackNode = null), (e.callbackPriority = 0);
  else if (((i = c & -c), e.callbackPriority !== i)) {
    if ((n != null && Ph(n), i === 1))
      e.tag === 0 ? X2(yu.bind(null, e)) : bd(yu.bind(null, e)),
        F2(function () {
          !(Oe & 6) && mi();
        }),
        (n = null);
    else {
      switch ($1(c)) {
        case 1:
          n = tc;
          break;
        case 4:
          n = G1;
          break;
        case 16:
          n = Xs;
          break;
        case 536870912:
          n = U1;
          break;
        default:
          n = Xs;
      }
      n = bf(n, ff.bind(null, e));
    }
    (e.callbackPriority = i), (e.callbackNode = n);
  }
}
function ff(e, i) {
  if (((Ms = -1), (Rs = 0), Oe & 6)) throw Error(de(327));
  var n = e.callbackNode;
  if (fr() && e.callbackNode !== n) return null;
  var c = Hs(e, e === ht ? ft : 0);
  if (c === 0) return null;
  if (c & 30 || c & e.expiredLanes || i) i = na(e, c);
  else {
    i = c;
    var u = Oe;
    Oe |= 2;
    var g = gf();
    (ht !== e || ft !== i) && ((Ml = null), (Ir = Je() + 500), Oi(e, i));
    do
      try {
        am();
        break;
      } catch (k) {
        pf(e, k);
      }
    while (1);
    pc(),
      (la.current = g),
      (Oe = u),
      et !== null ? (i = 0) : ((ht = null), (ft = 0), (i = ot));
  }
  if (i !== 0) {
    if (
      (i === 2 && ((u = Bo(e)), u !== 0 && ((c = u), (i = x0(e, u)))), i === 1)
    )
      throw ((n = Tn), Oi(e, 0), Ul(e, c), Ft(e, Je()), n);
    if (i === 6) Ul(e, c);
    else {
      if (
        ((u = e.current.alternate),
        !(c & 30) &&
          !nm(u) &&
          ((i = na(e, c)),
          i === 2 && ((g = Bo(e)), g !== 0 && ((c = g), (i = x0(e, g)))),
          i === 1))
      )
        throw ((n = Tn), Oi(e, 0), Ul(e, c), Ft(e, Je()), n);
      switch (((e.finishedWork = u), (e.finishedLanes = c), i)) {
        case 0:
        case 1:
          throw Error(de(345));
        case 2:
          ki(e, Nt, Ml);
          break;
        case 3:
          if (
            (Ul(e, c), (c & 130023424) === c && ((i = Tc + 500 - Je()), 10 < i))
          ) {
            if (Hs(e, 0) !== 0) break;
            if (((u = e.suspendedLanes), (u & c) !== c)) {
              Pt(), (e.pingedLanes |= e.suspendedLanes & u);
              break;
            }
            e.timeoutHandle = Qo(ki.bind(null, e, Nt, Ml), i);
            break;
          }
          ki(e, Nt, Ml);
          break;
        case 4:
          if ((Ul(e, c), (c & 4194240) === c)) break;
          for (i = e.eventTimes, u = -1; 0 < c; ) {
            var b = 31 - al(c);
            (g = 1 << b), (b = i[b]), b > u && (u = b), (c &= ~g);
          }
          if (
            ((c = u),
            (c = Je() - c),
            (c =
              (120 > c
                ? 120
                : 480 > c
                  ? 480
                  : 1080 > c
                    ? 1080
                    : 1920 > c
                      ? 1920
                      : 3e3 > c
                        ? 3e3
                        : 4320 > c
                          ? 4320
                          : 1960 * rm(c / 1960)) - c),
            10 < c)
          ) {
            e.timeoutHandle = Qo(ki.bind(null, e, Nt, Ml), c);
            break;
          }
          ki(e, Nt, Ml);
          break;
        case 5:
          ki(e, Nt, Ml);
          break;
        default:
          throw Error(de(329));
      }
    }
  }
  return Ft(e, Je()), e.callbackNode === n ? ff.bind(null, e) : null;
}
function x0(e, i) {
  var n = un;
  return (
    e.current.memoizedState.isDehydrated && (Oi(e, i).flags |= 256),
    (e = na(e, i)),
    e !== 2 && ((i = Nt), (Nt = n), i !== null && v0(i)),
    e
  );
}
function v0(e) {
  Nt === null ? (Nt = e) : Nt.push.apply(Nt, e);
}
function nm(e) {
  for (var i = e; ; ) {
    if (i.flags & 16384) {
      var n = i.updateQueue;
      if (n !== null && ((n = n.stores), n !== null))
        for (var c = 0; c < n.length; c++) {
          var u = n[c],
            g = u.getSnapshot;
          u = u.value;
          try {
            if (!ul(g(), u)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((n = i.child), i.subtreeFlags & 16384 && n !== null))
      (n.return = i), (i = n);
    else {
      if (i === e) break;
      for (; i.sibling === null; ) {
        if (i.return === null || i.return === e) return !0;
        i = i.return;
      }
      (i.sibling.return = i.return), (i = i.sibling);
    }
  }
  return !0;
}
function Ul(e, i) {
  for (
    i &= ~Lc,
      i &= ~Aa,
      e.suspendedLanes |= i,
      e.pingedLanes &= ~i,
      e = e.expirationTimes;
    0 < i;

  ) {
    var n = 31 - al(i),
      c = 1 << n;
    (e[n] = -1), (i &= ~c);
  }
}
function yu(e) {
  if (Oe & 6) throw Error(de(327));
  fr();
  var i = Hs(e, 0);
  if (!(i & 1)) return Ft(e, Je()), null;
  var n = na(e, i);
  if (e.tag !== 0 && n === 2) {
    var c = Bo(e);
    c !== 0 && ((i = c), (n = x0(e, c)));
  }
  if (n === 1) throw ((n = Tn), Oi(e, 0), Ul(e, i), Ft(e, Je()), n);
  if (n === 6) throw Error(de(345));
  return (
    (e.finishedWork = e.current.alternate),
    (e.finishedLanes = i),
    ki(e, Nt, Ml),
    Ft(e, Je()),
    null
  );
}
function Mc(e, i) {
  var n = Oe;
  Oe |= 1;
  try {
    return e(i);
  } finally {
    (Oe = n), Oe === 0 && ((Ir = Je() + 500), wa && mi());
  }
}
function Xi(e) {
  ti !== null && ti.tag === 0 && !(Oe & 6) && fr();
  var i = Oe;
  Oe |= 1;
  var n = Kt.transition,
    c = De;
  try {
    if (((Kt.transition = null), (De = 1), e)) return e();
  } finally {
    (De = c), (Kt.transition = n), (Oe = i), !(Oe & 6) && mi();
  }
}
function Rc() {
  (_t = ar.current), Ye(ar);
}
function Oi(e, i) {
  (e.finishedWork = null), (e.finishedLanes = 0);
  var n = e.timeoutHandle;
  if ((n !== -1 && ((e.timeoutHandle = -1), z2(n)), et !== null))
    for (n = et.return; n !== null; ) {
      var c = n;
      switch ((uc(c), c.tag)) {
        case 1:
          (c = c.type.childContextTypes), c != null && Gs();
          break;
        case 3:
          Rr(), Ye(Ot), Ye(kt), bc();
          break;
        case 5:
          yc(c);
          break;
        case 4:
          Rr();
          break;
        case 13:
          Ye(Ve);
          break;
        case 19:
          Ye(Ve);
          break;
        case 10:
          gc(c.type._context);
          break;
        case 22:
        case 23:
          Rc();
      }
      n = n.return;
    }
  if (
    ((ht = e),
    (et = e = hi(e.current, null)),
    (ft = _t = i),
    (ot = 0),
    (Tn = null),
    (Lc = Aa = ji = 0),
    (Nt = un = null),
    Ci !== null)
  ) {
    for (i = 0; i < Ci.length; i++)
      if (((n = Ci[i]), (c = n.interleaved), c !== null)) {
        n.interleaved = null;
        var u = c.next,
          g = n.pending;
        if (g !== null) {
          var b = g.next;
          (g.next = u), (c.next = b);
        }
        n.pending = c;
      }
    Ci = null;
  }
  return e;
}
function pf(e, i) {
  do {
    var n = et;
    try {
      if ((pc(), (Ps.current = ta), ea)) {
        for (var c = Ge.memoizedState; c !== null; ) {
          var u = c.queue;
          u !== null && (u.pending = null), (c = c.next);
        }
        ea = !1;
      }
      if (
        ((_i = 0),
        (ct = at = Ge = null),
        (cn = !1),
        (En = 0),
        (Pc.current = null),
        n === null || n.return === null)
      ) {
        (ot = 1), (Tn = i), (et = null);
        break;
      }
      e: {
        var g = e,
          b = n.return,
          k = n,
          E = i;
        if (
          ((i = ft),
          (k.flags |= 32768),
          E !== null && typeof E == "object" && typeof E.then == "function")
        ) {
          var I = E,
            F = k,
            H = F.tag;
          if (!(F.mode & 1) && (H === 0 || H === 11 || H === 15)) {
            var G = F.alternate;
            G
              ? ((F.updateQueue = G.updateQueue),
                (F.memoizedState = G.memoizedState),
                (F.lanes = G.lanes))
              : ((F.updateQueue = null), (F.memoizedState = null));
          }
          var K = su(b);
          if (K !== null) {
            (K.flags &= -257),
              au(K, b, k, g, i),
              K.mode & 1 && nu(g, I, i),
              (i = K),
              (E = I);
            var q = i.updateQueue;
            if (q === null) {
              var Q = new Set();
              Q.add(E), (i.updateQueue = Q);
            } else q.add(E);
            break e;
          } else {
            if (!(i & 1)) {
              nu(g, I, i), Nc();
              break e;
            }
            E = Error(de(426));
          }
        } else if (We && k.mode & 1) {
          var ue = su(b);
          if (ue !== null) {
            !(ue.flags & 65536) && (ue.flags |= 256),
              au(ue, b, k, g, i),
              dc(Nr(E, k));
            break e;
          }
        }
        (g = E = Nr(E, k)),
          ot !== 4 && (ot = 2),
          un === null ? (un = [g]) : un.push(g),
          (g = b);
        do {
          switch (g.tag) {
            case 3:
              (g.flags |= 65536), (i &= -i), (g.lanes |= i);
              var B = qd(g, E, i);
              Kh(g, B);
              break e;
            case 1:
              k = E;
              var L = g.type,
                W = g.stateNode;
              if (
                !(g.flags & 128) &&
                (typeof L.getDerivedStateFromError == "function" ||
                  (W !== null &&
                    typeof W.componentDidCatch == "function" &&
                    (oi === null || !oi.has(W))))
              ) {
                (g.flags |= 65536), (i &= -i), (g.lanes |= i);
                var te = Qd(g, k, i);
                Kh(g, te);
                break e;
              }
          }
          g = g.return;
        } while (g !== null);
      }
      xf(n);
    } catch (Z) {
      (i = Z), et === n && n !== null && (et = n = n.return);
      continue;
    }
    break;
  } while (1);
}
function gf() {
  var e = la.current;
  return (la.current = ta), e === null ? ta : e;
}
function Nc() {
  (ot === 0 || ot === 3 || ot === 2) && (ot = 4),
    ht === null || (!(ji & 268435455) && !(Aa & 268435455)) || Ul(ht, ft);
}
function na(e, i) {
  var n = Oe;
  Oe |= 2;
  var c = gf();
  (ht !== e || ft !== i) && ((Ml = null), Oi(e, i));
  do
    try {
      sm();
      break;
    } catch (u) {
      pf(e, u);
    }
  while (1);
  if ((pc(), (Oe = n), (la.current = c), et !== null)) throw Error(de(261));
  return (ht = null), (ft = 0), ot;
}
function sm() {
  for (; et !== null; ) mf(et);
}
function am() {
  for (; et !== null && !Ng(); ) mf(et);
}
function mf(e) {
  var i = yf(e.alternate, e, _t);
  (e.memoizedProps = e.pendingProps),
    i === null ? xf(e) : (et = i),
    (Pc.current = null);
}
function xf(e) {
  var i = e;
  do {
    var n = i.alternate;
    if (((e = i.return), i.flags & 32768)) {
      if (((n = em(n, i)), n !== null)) {
        (n.flags &= 32767), (et = n);
        return;
      }
      if (e !== null)
        (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
      else {
        (ot = 6), (et = null);
        return;
      }
    } else if (((n = J2(n, i, _t)), n !== null)) {
      et = n;
      return;
    }
    if (((i = i.sibling), i !== null)) {
      et = i;
      return;
    }
    et = i = e;
  } while (i !== null);
  ot === 0 && (ot = 5);
}
function ki(e, i, n) {
  var c = De,
    u = Kt.transition;
  try {
    (Kt.transition = null), (De = 1), om(e, i, n, c);
  } finally {
    (Kt.transition = u), (De = c);
  }
  return null;
}
function om(e, i, n, c) {
  do fr();
  while (ti !== null);
  if (Oe & 6) throw Error(de(327));
  n = e.finishedWork;
  var u = e.finishedLanes;
  if (n === null) return null;
  if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current))
    throw Error(de(177));
  (e.callbackNode = null), (e.callbackPriority = 0);
  var g = n.lanes | n.childLanes;
  if (
    (Yg(e, g),
    e === ht && ((et = ht = null), (ft = 0)),
    (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
      vs ||
      ((vs = !0),
      bf(Xs, function () {
        return fr(), null;
      })),
    (g = (n.flags & 15990) !== 0),
    n.subtreeFlags & 15990 || g)
  ) {
    (g = Kt.transition), (Kt.transition = null);
    var b = De;
    De = 1;
    var k = Oe;
    (Oe |= 4),
      (Pc.current = null),
      lm(e, n),
      uf(n, e),
      L2($o),
      (Ys = !!Zo),
      ($o = Zo = null),
      (e.current = n),
      im(n),
      Ig(),
      (Oe = k),
      (De = b),
      (Kt.transition = g);
  } else e.current = n;
  if (
    (vs && ((vs = !1), (ti = e), (ra = u)),
    (g = e.pendingLanes),
    g === 0 && (oi = null),
    Fg(n.stateNode),
    Ft(e, Je()),
    i !== null)
  )
    for (c = e.onRecoverableError, n = 0; n < i.length; n++)
      (u = i[n]), c(u.value, { componentStack: u.stack, digest: u.digest });
  if (ia) throw ((ia = !1), (e = g0), (g0 = null), e);
  return (
    ra & 1 && e.tag !== 0 && fr(),
    (g = e.pendingLanes),
    g & 1 ? (e === m0 ? dn++ : ((dn = 0), (m0 = e))) : (dn = 0),
    mi(),
    null
  );
}
function fr() {
  if (ti !== null) {
    var e = $1(ra),
      i = Kt.transition,
      n = De;
    try {
      if (((Kt.transition = null), (De = 16 > e ? 16 : e), ti === null))
        var c = !1;
      else {
        if (((e = ti), (ti = null), (ra = 0), Oe & 6)) throw Error(de(331));
        var u = Oe;
        for (Oe |= 4, me = e.current; me !== null; ) {
          var g = me,
            b = g.child;
          if (me.flags & 16) {
            var k = g.deletions;
            if (k !== null) {
              for (var E = 0; E < k.length; E++) {
                var I = k[E];
                for (me = I; me !== null; ) {
                  var F = me;
                  switch (F.tag) {
                    case 0:
                    case 11:
                    case 15:
                      hn(8, F, g);
                  }
                  var H = F.child;
                  if (H !== null) (H.return = F), (me = H);
                  else
                    for (; me !== null; ) {
                      F = me;
                      var G = F.sibling,
                        K = F.return;
                      if ((of(F), F === I)) {
                        me = null;
                        break;
                      }
                      if (G !== null) {
                        (G.return = K), (me = G);
                        break;
                      }
                      me = K;
                    }
                }
              }
              var q = g.alternate;
              if (q !== null) {
                var Q = q.child;
                if (Q !== null) {
                  q.child = null;
                  do {
                    var ue = Q.sibling;
                    (Q.sibling = null), (Q = ue);
                  } while (Q !== null);
                }
              }
              me = g;
            }
          }
          if (g.subtreeFlags & 2064 && b !== null) (b.return = g), (me = b);
          else
            e: for (; me !== null; ) {
              if (((g = me), g.flags & 2048))
                switch (g.tag) {
                  case 0:
                  case 11:
                  case 15:
                    hn(9, g, g.return);
                }
              var B = g.sibling;
              if (B !== null) {
                (B.return = g.return), (me = B);
                break e;
              }
              me = g.return;
            }
        }
        var L = e.current;
        for (me = L; me !== null; ) {
          b = me;
          var W = b.child;
          if (b.subtreeFlags & 2064 && W !== null) (W.return = b), (me = W);
          else
            e: for (b = L; me !== null; ) {
              if (((k = me), k.flags & 2048))
                try {
                  switch (k.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Ca(9, k);
                  }
                } catch (Z) {
                  Qe(k, k.return, Z);
                }
              if (k === b) {
                me = null;
                break e;
              }
              var te = k.sibling;
              if (te !== null) {
                (te.return = k.return), (me = te);
                break e;
              }
              me = k.return;
            }
        }
        if (
          ((Oe = u), mi(), Sl && typeof Sl.onPostCommitFiberRoot == "function")
        )
          try {
            Sl.onPostCommitFiberRoot(ma, e);
          } catch {}
        c = !0;
      }
      return c;
    } finally {
      (De = n), (Kt.transition = i);
    }
  }
  return !1;
}
function bu(e, i, n) {
  (i = Nr(n, i)),
    (i = qd(e, i, 1)),
    (e = ai(e, i, 1)),
    (i = Pt()),
    e !== null && (Un(e, 1, i), Ft(e, i));
}
function Qe(e, i, n) {
  if (e.tag === 3) bu(e, e, n);
  else
    for (; i !== null; ) {
      if (i.tag === 3) {
        bu(i, e, n);
        break;
      } else if (i.tag === 1) {
        var c = i.stateNode;
        if (
          typeof i.type.getDerivedStateFromError == "function" ||
          (typeof c.componentDidCatch == "function" &&
            (oi === null || !oi.has(c)))
        ) {
          (e = Nr(n, e)),
            (e = Qd(i, e, 1)),
            (i = ai(i, e, 1)),
            (e = Pt()),
            i !== null && (Un(i, 1, e), Ft(i, e));
          break;
        }
      }
      i = i.return;
    }
}
function cm(e, i, n) {
  var c = e.pingCache;
  c !== null && c.delete(i),
    (i = Pt()),
    (e.pingedLanes |= e.suspendedLanes & n),
    ht === e &&
      (ft & n) === n &&
      (ot === 4 || (ot === 3 && (ft & 130023424) === ft && 500 > Je() - Tc)
        ? Oi(e, 0)
        : (Lc |= n)),
    Ft(e, i);
}
function vf(e, i) {
  i === 0 &&
    (e.mode & 1
      ? ((i = os), (os <<= 1), !(os & 130023424) && (os = 4194304))
      : (i = 1));
  var n = Pt();
  (e = Dl(e, i)), e !== null && (Un(e, i, n), Ft(e, n));
}
function hm(e) {
  var i = e.memoizedState,
    n = 0;
  i !== null && (n = i.retryLane), vf(e, n);
}
function um(e, i) {
  var n = 0;
  switch (e.tag) {
    case 13:
      var c = e.stateNode,
        u = e.memoizedState;
      u !== null && (n = u.retryLane);
      break;
    case 19:
      c = e.stateNode;
      break;
    default:
      throw Error(de(314));
  }
  c !== null && c.delete(i), vf(e, n);
}
var yf;
yf = function (e, i, n) {
  if (e !== null)
    if (e.memoizedProps !== i.pendingProps || Ot.current) It = !0;
    else {
      if (!(e.lanes & n) && !(i.flags & 128)) return (It = !1), K2(e, i, n);
      It = !!(e.flags & 131072);
    }
  else (It = !1), We && i.flags & 1048576 && wd(i, $s, i.index);
  switch (((i.lanes = 0), i.tag)) {
    case 2:
      var c = i.type;
      Ts(e, i), (e = i.pendingProps);
      var u = Lr(i, kt.current);
      dr(i, n), (u = kc(null, i, c, e, u, n));
      var g = Sc();
      return (
        (i.flags |= 1),
        typeof u == "object" &&
        u !== null &&
        typeof u.render == "function" &&
        u.$$typeof === void 0
          ? ((i.tag = 1),
            (i.memoizedState = null),
            (i.updateQueue = null),
            zt(c) ? ((g = !0), Us(i)) : (g = !1),
            (i.memoizedState =
              u.state !== null && u.state !== void 0 ? u.state : null),
            xc(i),
            (u.updater = ka),
            (i.stateNode = u),
            (u._reactInternals = i),
            r0(i, c, e, n),
            (i = a0(null, i, c, !0, g, n)))
          : ((i.tag = 0), We && g && hc(i), Et(null, i, u, n), (i = i.child)),
        i
      );
    case 16:
      c = i.elementType;
      e: {
        switch (
          (Ts(e, i),
          (e = i.pendingProps),
          (u = c._init),
          (c = u(c._payload)),
          (i.type = c),
          (u = i.tag = fm(c)),
          (e = il(c, e)),
          u)
        ) {
          case 0:
            i = s0(null, i, c, e, n);
            break e;
          case 1:
            i = hu(null, i, c, e, n);
            break e;
          case 11:
            i = ou(null, i, c, e, n);
            break e;
          case 14:
            i = cu(null, i, c, il(c.type, e), n);
            break e;
        }
        throw Error(de(306, c, ""));
      }
      return i;
    case 0:
      return (
        (c = i.type),
        (u = i.pendingProps),
        (u = i.elementType === c ? u : il(c, u)),
        s0(e, i, c, u, n)
      );
    case 1:
      return (
        (c = i.type),
        (u = i.pendingProps),
        (u = i.elementType === c ? u : il(c, u)),
        hu(e, i, c, u, n)
      );
    case 3:
      e: {
        if ((tf(i), e === null)) throw Error(de(387));
        (c = i.pendingProps),
          (g = i.memoizedState),
          (u = g.element),
          Ad(e, i),
          Ks(i, c, null, n);
        var b = i.memoizedState;
        if (((c = b.element), g.isDehydrated))
          if (
            ((g = {
              element: c,
              isDehydrated: !1,
              cache: b.cache,
              pendingSuspenseBoundaries: b.pendingSuspenseBoundaries,
              transitions: b.transitions,
            }),
            (i.updateQueue.baseState = g),
            (i.memoizedState = g),
            i.flags & 256)
          ) {
            (u = Nr(Error(de(423)), i)), (i = uu(e, i, c, n, u));
            break e;
          } else if (c !== u) {
            (u = Nr(Error(de(424)), i)), (i = uu(e, i, c, n, u));
            break e;
          } else
            for (
              jt = si(i.stateNode.containerInfo.firstChild),
                Xt = i,
                We = !0,
                sl = null,
                n = Td(i, null, c, n),
                i.child = n;
              n;

            )
              (n.flags = (n.flags & -3) | 4096), (n = n.sibling);
        else {
          if ((Tr(), c === u)) {
            i = _l(e, i, n);
            break e;
          }
          Et(e, i, c, n);
        }
        i = i.child;
      }
      return i;
    case 5:
      return (
        Md(i),
        e === null && t0(i),
        (c = i.type),
        (u = i.pendingProps),
        (g = e !== null ? e.memoizedProps : null),
        (b = u.children),
        qo(c, u) ? (b = null) : g !== null && qo(c, g) && (i.flags |= 32),
        ef(e, i),
        Et(e, i, b, n),
        i.child
      );
    case 6:
      return e === null && t0(i), null;
    case 13:
      return lf(e, i, n);
    case 4:
      return (
        vc(i, i.stateNode.containerInfo),
        (c = i.pendingProps),
        e === null ? (i.child = Mr(i, null, c, n)) : Et(e, i, c, n),
        i.child
      );
    case 11:
      return (
        (c = i.type),
        (u = i.pendingProps),
        (u = i.elementType === c ? u : il(c, u)),
        ou(e, i, c, u, n)
      );
    case 7:
      return Et(e, i, i.pendingProps, n), i.child;
    case 8:
      return Et(e, i, i.pendingProps.children, n), i.child;
    case 12:
      return Et(e, i, i.pendingProps.children, n), i.child;
    case 10:
      e: {
        if (
          ((c = i.type._context),
          (u = i.pendingProps),
          (g = i.memoizedProps),
          (b = u.value),
          je(qs, c._currentValue),
          (c._currentValue = b),
          g !== null)
        )
          if (ul(g.value, b)) {
            if (g.children === u.children && !Ot.current) {
              i = _l(e, i, n);
              break e;
            }
          } else
            for (g = i.child, g !== null && (g.return = i); g !== null; ) {
              var k = g.dependencies;
              if (k !== null) {
                b = g.child;
                for (var E = k.firstContext; E !== null; ) {
                  if (E.context === c) {
                    if (g.tag === 1) {
                      (E = Ol(-1, n & -n)), (E.tag = 2);
                      var I = g.updateQueue;
                      if (I !== null) {
                        I = I.shared;
                        var F = I.pending;
                        F === null
                          ? (E.next = E)
                          : ((E.next = F.next), (F.next = E)),
                          (I.pending = E);
                      }
                    }
                    (g.lanes |= n),
                      (E = g.alternate),
                      E !== null && (E.lanes |= n),
                      l0(g.return, n, i),
                      (k.lanes |= n);
                    break;
                  }
                  E = E.next;
                }
              } else if (g.tag === 10) b = g.type === i.type ? null : g.child;
              else if (g.tag === 18) {
                if (((b = g.return), b === null)) throw Error(de(341));
                (b.lanes |= n),
                  (k = b.alternate),
                  k !== null && (k.lanes |= n),
                  l0(b, n, i),
                  (b = g.sibling);
              } else b = g.child;
              if (b !== null) b.return = g;
              else
                for (b = g; b !== null; ) {
                  if (b === i) {
                    b = null;
                    break;
                  }
                  if (((g = b.sibling), g !== null)) {
                    (g.return = b.return), (b = g);
                    break;
                  }
                  b = b.return;
                }
              g = b;
            }
        Et(e, i, u.children, n), (i = i.child);
      }
      return i;
    case 9:
      return (
        (u = i.type),
        (c = i.pendingProps.children),
        dr(i, n),
        (u = el(u)),
        (c = c(u)),
        (i.flags |= 1),
        Et(e, i, c, n),
        i.child
      );
    case 14:
      return (
        (c = i.type),
        (u = il(c, i.pendingProps)),
        (u = il(c.type, u)),
        cu(e, i, c, u, n)
      );
    case 15:
      return Kd(e, i, i.type, i.pendingProps, n);
    case 17:
      return (
        (c = i.type),
        (u = i.pendingProps),
        (u = i.elementType === c ? u : il(c, u)),
        Ts(e, i),
        (i.tag = 1),
        zt(c) ? ((e = !0), Us(i)) : (e = !1),
        dr(i, n),
        Pd(i, c, u),
        r0(i, c, u, n),
        a0(null, i, c, !0, e, n)
      );
    case 19:
      return rf(e, i, n);
    case 22:
      return Jd(e, i, n);
  }
  throw Error(de(156, i.tag));
};
function bf(e, i) {
  return V1(e, i);
}
function dm(e, i, n, c) {
  (this.tag = e),
    (this.key = n),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = i),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = c),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Qt(e, i, n, c) {
  return new dm(e, i, n, c);
}
function Ic(e) {
  return (e = e.prototype), !(!e || !e.isReactComponent);
}
function fm(e) {
  if (typeof e == "function") return Ic(e) ? 1 : 0;
  if (e != null) {
    if (((e = e.$$typeof), e === K0)) return 11;
    if (e === J0) return 14;
  }
  return 2;
}
function hi(e, i) {
  var n = e.alternate;
  return (
    n === null
      ? ((n = Qt(e.tag, i, e.key, e.mode)),
        (n.elementType = e.elementType),
        (n.type = e.type),
        (n.stateNode = e.stateNode),
        (n.alternate = e),
        (e.alternate = n))
      : ((n.pendingProps = i),
        (n.type = e.type),
        (n.flags = 0),
        (n.subtreeFlags = 0),
        (n.deletions = null)),
    (n.flags = e.flags & 14680064),
    (n.childLanes = e.childLanes),
    (n.lanes = e.lanes),
    (n.child = e.child),
    (n.memoizedProps = e.memoizedProps),
    (n.memoizedState = e.memoizedState),
    (n.updateQueue = e.updateQueue),
    (i = e.dependencies),
    (n.dependencies =
      i === null ? null : { lanes: i.lanes, firstContext: i.firstContext }),
    (n.sibling = e.sibling),
    (n.index = e.index),
    (n.ref = e.ref),
    n
  );
}
function Ns(e, i, n, c, u, g) {
  var b = 2;
  if (((c = e), typeof e == "function")) Ic(e) && (b = 1);
  else if (typeof e == "string") b = 5;
  else
    e: switch (e) {
      case Qi:
        return zi(n.children, u, g, i);
      case Q0:
        (b = 8), (u |= 8);
        break;
      case Lo:
        return (
          (e = Qt(12, n, i, u | 2)), (e.elementType = Lo), (e.lanes = g), e
        );
      case To:
        return (e = Qt(13, n, i, u)), (e.elementType = To), (e.lanes = g), e;
      case Mo:
        return (e = Qt(19, n, i, u)), (e.elementType = Mo), (e.lanes = g), e;
      case L1:
        return Ea(n, u, g, i);
      default:
        if (typeof e == "object" && e !== null)
          switch (e.$$typeof) {
            case E1:
              b = 10;
              break e;
            case P1:
              b = 9;
              break e;
            case K0:
              b = 11;
              break e;
            case J0:
              b = 14;
              break e;
            case Wl:
              (b = 16), (c = null);
              break e;
          }
        throw Error(de(130, e == null ? e : typeof e, ""));
    }
  return (
    (i = Qt(b, n, i, u)), (i.elementType = e), (i.type = c), (i.lanes = g), i
  );
}
function zi(e, i, n, c) {
  return (e = Qt(7, e, c, i)), (e.lanes = n), e;
}
function Ea(e, i, n, c) {
  return (
    (e = Qt(22, e, c, i)),
    (e.elementType = L1),
    (e.lanes = n),
    (e.stateNode = { isHidden: !1 }),
    e
  );
}
function mo(e, i, n) {
  return (e = Qt(6, e, null, i)), (e.lanes = n), e;
}
function xo(e, i, n) {
  return (
    (i = Qt(4, e.children !== null ? e.children : [], e.key, i)),
    (i.lanes = n),
    (i.stateNode = {
      containerInfo: e.containerInfo,
      pendingChildren: null,
      implementation: e.implementation,
    }),
    i
  );
}
function pm(e, i, n, c, u) {
  (this.tag = i),
    (this.containerInfo = e),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = qa(0)),
    (this.expirationTimes = qa(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = qa(0)),
    (this.identifierPrefix = c),
    (this.onRecoverableError = u),
    (this.mutableSourceEagerHydrationData = null);
}
function Oc(e, i, n, c, u, g, b, k, E) {
  return (
    (e = new pm(e, i, n, k, E)),
    i === 1 ? ((i = 1), g === !0 && (i |= 8)) : (i = 0),
    (g = Qt(3, null, null, i)),
    (e.current = g),
    (g.stateNode = e),
    (g.memoizedState = {
      element: c,
      isDehydrated: n,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    xc(g),
    e
  );
}
function gm(e, i, n) {
  var c = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: qi,
    key: c == null ? null : "" + c,
    children: e,
    containerInfo: i,
    implementation: n,
  };
}
function wf(e) {
  if (!e) return fi;
  e = e._reactInternals;
  e: {
    if (Bi(e) !== e || e.tag !== 1) throw Error(de(170));
    var i = e;
    do {
      switch (i.tag) {
        case 3:
          i = i.stateNode.context;
          break e;
        case 1:
          if (zt(i.type)) {
            i = i.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      i = i.return;
    } while (i !== null);
    throw Error(de(171));
  }
  if (e.tag === 1) {
    var n = e.type;
    if (zt(n)) return yd(e, n, i);
  }
  return i;
}
function kf(e, i, n, c, u, g, b, k, E) {
  return (
    (e = Oc(n, c, !0, e, u, g, b, k, E)),
    (e.context = wf(null)),
    (n = e.current),
    (c = Pt()),
    (u = ci(n)),
    (g = Ol(c, u)),
    (g.callback = i ?? null),
    ai(n, g, u),
    (e.current.lanes = u),
    Un(e, u, c),
    Ft(e, c),
    e
  );
}
function Pa(e, i, n, c) {
  var u = i.current,
    g = Pt(),
    b = ci(u);
  return (
    (n = wf(n)),
    i.context === null ? (i.context = n) : (i.pendingContext = n),
    (i = Ol(g, b)),
    (i.payload = { element: e }),
    (c = c === void 0 ? null : c),
    c !== null && (i.callback = c),
    (e = ai(u, i, b)),
    e !== null && (ol(e, u, b, g), Es(e, u, b)),
    b
  );
}
function sa(e) {
  if (((e = e.current), !e.child)) return null;
  switch (e.child.tag) {
    case 5:
      return e.child.stateNode;
    default:
      return e.child.stateNode;
  }
}
function wu(e, i) {
  if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
    var n = e.retryLane;
    e.retryLane = n !== 0 && n < i ? n : i;
  }
}
function zc(e, i) {
  wu(e, i), (e = e.alternate) && wu(e, i);
}
function mm() {
  return null;
}
var Sf =
  typeof reportError == "function"
    ? reportError
    : function (e) {
        console.error(e);
      };
function Fc(e) {
  this._internalRoot = e;
}
La.prototype.render = Fc.prototype.render = function (e) {
  var i = this._internalRoot;
  if (i === null) throw Error(de(409));
  Pa(e, i, null, null);
};
La.prototype.unmount = Fc.prototype.unmount = function () {
  var e = this._internalRoot;
  if (e !== null) {
    this._internalRoot = null;
    var i = e.containerInfo;
    Xi(function () {
      Pa(null, e, null, null);
    }),
      (i[Fl] = null);
  }
};
function La(e) {
  this._internalRoot = e;
}
La.prototype.unstable_scheduleHydration = function (e) {
  if (e) {
    var i = K1();
    e = { blockedOn: null, target: e, priority: i };
    for (var n = 0; n < Gl.length && i !== 0 && i < Gl[n].priority; n++);
    Gl.splice(n, 0, e), n === 0 && ed(e);
  }
};
function Dc(e) {
  return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function Ta(e) {
  return !(
    !e ||
    (e.nodeType !== 1 &&
      e.nodeType !== 9 &&
      e.nodeType !== 11 &&
      (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "))
  );
}
function ku() {}
function xm(e, i, n, c, u) {
  if (u) {
    if (typeof c == "function") {
      var g = c;
      c = function () {
        var I = sa(b);
        g.call(I);
      };
    }
    var b = kf(i, c, e, 0, null, !1, !1, "", ku);
    return (
      (e._reactRootContainer = b),
      (e[Fl] = b.current),
      wn(e.nodeType === 8 ? e.parentNode : e),
      Xi(),
      b
    );
  }
  for (; (u = e.lastChild); ) e.removeChild(u);
  if (typeof c == "function") {
    var k = c;
    c = function () {
      var I = sa(E);
      k.call(I);
    };
  }
  var E = Oc(e, 0, !1, null, null, !1, !1, "", ku);
  return (
    (e._reactRootContainer = E),
    (e[Fl] = E.current),
    wn(e.nodeType === 8 ? e.parentNode : e),
    Xi(function () {
      Pa(i, E, n, c);
    }),
    E
  );
}
function Ma(e, i, n, c, u) {
  var g = n._reactRootContainer;
  if (g) {
    var b = g;
    if (typeof u == "function") {
      var k = u;
      u = function () {
        var E = sa(b);
        k.call(E);
      };
    }
    Pa(i, b, e, u);
  } else b = xm(n, i, e, u, c);
  return sa(b);
}
q1 = function (e) {
  switch (e.tag) {
    case 3:
      var i = e.stateNode;
      if (i.current.memoizedState.isDehydrated) {
        var n = en(i.pendingLanes);
        n !== 0 &&
          (lc(i, n | 1), Ft(i, Je()), !(Oe & 6) && ((Ir = Je() + 500), mi()));
      }
      break;
    case 13:
      Xi(function () {
        var c = Dl(e, 1);
        if (c !== null) {
          var u = Pt();
          ol(c, e, 1, u);
        }
      }),
        zc(e, 1);
  }
};
ic = function (e) {
  if (e.tag === 13) {
    var i = Dl(e, 134217728);
    if (i !== null) {
      var n = Pt();
      ol(i, e, 134217728, n);
    }
    zc(e, 134217728);
  }
};
Q1 = function (e) {
  if (e.tag === 13) {
    var i = ci(e),
      n = Dl(e, i);
    if (n !== null) {
      var c = Pt();
      ol(n, e, i, c);
    }
    zc(e, i);
  }
};
K1 = function () {
  return De;
};
J1 = function (e, i) {
  var n = De;
  try {
    return (De = e), i();
  } finally {
    De = n;
  }
};
Xo = function (e, i, n) {
  switch (i) {
    case "input":
      if ((Io(e, n), (i = n.name), n.type === "radio" && i != null)) {
        for (n = e; n.parentNode; ) n = n.parentNode;
        for (
          n = n.querySelectorAll(
            "input[name=" + JSON.stringify("" + i) + '][type="radio"]',
          ),
            i = 0;
          i < n.length;
          i++
        ) {
          var c = n[i];
          if (c !== e && c.form === e.form) {
            var u = ba(c);
            if (!u) throw Error(de(90));
            M1(c), Io(c, u);
          }
        }
      }
      break;
    case "textarea":
      N1(e, n);
      break;
    case "select":
      (i = n.value), i != null && or(e, !!n.multiple, i, !1);
  }
};
j1 = Mc;
X1 = Xi;
var vm = { usingClientEntryPoint: !1, Events: [$n, tr, ba, D1, _1, Mc] },
  $r = {
    findFiberByHostInstance: Si,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  ym = {
    bundleType: $r.bundleType,
    version: $r.version,
    rendererPackageName: $r.rendererPackageName,
    rendererConfig: $r.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: jl.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (e) {
      return (e = B1(e)), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: $r.findFiberByHostInstance || mm,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var ys = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!ys.isDisabled && ys.supportsFiber)
    try {
      (ma = ys.inject(ym)), (Sl = ys);
    } catch {}
}
Yt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vm;
Yt.createPortal = function (e, i) {
  var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!Dc(i)) throw Error(de(200));
  return gm(e, i, null, n);
};
Yt.createRoot = function (e, i) {
  if (!Dc(e)) throw Error(de(299));
  var n = !1,
    c = "",
    u = Sf;
  return (
    i != null &&
      (i.unstable_strictMode === !0 && (n = !0),
      i.identifierPrefix !== void 0 && (c = i.identifierPrefix),
      i.onRecoverableError !== void 0 && (u = i.onRecoverableError)),
    (i = Oc(e, 1, !1, null, null, n, !1, c, u)),
    (e[Fl] = i.current),
    wn(e.nodeType === 8 ? e.parentNode : e),
    new Fc(i)
  );
};
Yt.findDOMNode = function (e) {
  if (e == null) return null;
  if (e.nodeType === 1) return e;
  var i = e._reactInternals;
  if (i === void 0)
    throw typeof e.render == "function"
      ? Error(de(188))
      : ((e = Object.keys(e).join(",")), Error(de(268, e)));
  return (e = B1(i)), (e = e === null ? null : e.stateNode), e;
};
Yt.flushSync = function (e) {
  return Xi(e);
};
Yt.hydrate = function (e, i, n) {
  if (!Ta(i)) throw Error(de(200));
  return Ma(null, e, i, !0, n);
};
Yt.hydrateRoot = function (e, i, n) {
  if (!Dc(e)) throw Error(de(405));
  var c = (n != null && n.hydratedSources) || null,
    u = !1,
    g = "",
    b = Sf;
  if (
    (n != null &&
      (n.unstable_strictMode === !0 && (u = !0),
      n.identifierPrefix !== void 0 && (g = n.identifierPrefix),
      n.onRecoverableError !== void 0 && (b = n.onRecoverableError)),
    (i = kf(i, null, e, 1, n ?? null, u, !1, g, b)),
    (e[Fl] = i.current),
    wn(e),
    c)
  )
    for (e = 0; e < c.length; e++)
      (n = c[e]),
        (u = n._getVersion),
        (u = u(n._source)),
        i.mutableSourceEagerHydrationData == null
          ? (i.mutableSourceEagerHydrationData = [n, u])
          : i.mutableSourceEagerHydrationData.push(n, u);
  return new La(i);
};
Yt.render = function (e, i, n) {
  if (!Ta(i)) throw Error(de(200));
  return Ma(null, e, i, !1, n);
};
Yt.unmountComponentAtNode = function (e) {
  if (!Ta(e)) throw Error(de(40));
  return e._reactRootContainer
    ? (Xi(function () {
        Ma(null, null, e, !1, function () {
          (e._reactRootContainer = null), (e[Fl] = null);
        });
      }),
      !0)
    : !1;
};
Yt.unstable_batchedUpdates = Mc;
Yt.unstable_renderSubtreeIntoContainer = function (e, i, n, c) {
  if (!Ta(n)) throw Error(de(200));
  if (e == null || e._reactInternals === void 0) throw Error(de(38));
  return Ma(e, i, n, !1, c);
};
Yt.version = "18.2.0-next-9e3b772b8-20220608";
function Cf() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Cf);
    } catch (e) {
      console.error(e);
    }
}
Cf(), (w1.exports = Yt);
var bm = w1.exports,
  Su = bm;
(Eo.createRoot = Su.createRoot), (Eo.hydrateRoot = Su.hydrateRoot);
/**
 * @remix-run/router v1.7.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Mn() {
  return (
    (Mn = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var i = 1; i < arguments.length; i++) {
            var n = arguments[i];
            for (var c in n)
              Object.prototype.hasOwnProperty.call(n, c) && (e[c] = n[c]);
          }
          return e;
        }),
    Mn.apply(this, arguments)
  );
}
var li;
(function (e) {
  (e.Pop = "POP"), (e.Push = "PUSH"), (e.Replace = "REPLACE");
})(li || (li = {}));
const Cu = "popstate";
function wm(e) {
  e === void 0 && (e = {});
  function i(c, u) {
    let { pathname: g, search: b, hash: k } = c.location;
    return y0(
      "",
      { pathname: g, search: b, hash: k },
      (u.state && u.state.usr) || null,
      (u.state && u.state.key) || "default",
    );
  }
  function n(c, u) {
    return typeof u == "string" ? u : aa(u);
  }
  return Sm(i, n, null, e);
}
function tt(e, i) {
  if (e === !1 || e === null || typeof e > "u") throw new Error(i);
}
function _c(e, i) {
  if (!e) {
    typeof console < "u" && console.warn(i);
    try {
      throw new Error(i);
    } catch {}
  }
}
function km() {
  return Math.random().toString(36).substr(2, 8);
}
function Au(e, i) {
  return { usr: e.state, key: e.key, idx: i };
}
function y0(e, i, n, c) {
  return (
    n === void 0 && (n = null),
    Mn(
      { pathname: typeof e == "string" ? e : e.pathname, search: "", hash: "" },
      typeof i == "string" ? jr(i) : i,
      { state: n, key: (i && i.key) || c || km() },
    )
  );
}
function aa(e) {
  let { pathname: i = "/", search: n = "", hash: c = "" } = e;
  return (
    n && n !== "?" && (i += n.charAt(0) === "?" ? n : "?" + n),
    c && c !== "#" && (i += c.charAt(0) === "#" ? c : "#" + c),
    i
  );
}
function jr(e) {
  let i = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && ((i.hash = e.substr(n)), (e = e.substr(0, n)));
    let c = e.indexOf("?");
    c >= 0 && ((i.search = e.substr(c)), (e = e.substr(0, c))),
      e && (i.pathname = e);
  }
  return i;
}
function Sm(e, i, n, c) {
  c === void 0 && (c = {});
  let { window: u = document.defaultView, v5Compat: g = !1 } = c,
    b = u.history,
    k = li.Pop,
    E = null,
    I = F();
  I == null && ((I = 0), b.replaceState(Mn({}, b.state, { idx: I }), ""));
  function F() {
    return (b.state || { idx: null }).idx;
  }
  function H() {
    k = li.Pop;
    let ue = F(),
      B = ue == null ? null : ue - I;
    (I = ue), E && E({ action: k, location: Q.location, delta: B });
  }
  function G(ue, B) {
    k = li.Push;
    let L = y0(Q.location, ue, B);
    n && n(L, ue), (I = F() + 1);
    let W = Au(L, I),
      te = Q.createHref(L);
    try {
      b.pushState(W, "", te);
    } catch (Z) {
      if (Z instanceof DOMException && Z.name === "DataCloneError") throw Z;
      u.location.assign(te);
    }
    g && E && E({ action: k, location: Q.location, delta: 1 });
  }
  function K(ue, B) {
    k = li.Replace;
    let L = y0(Q.location, ue, B);
    n && n(L, ue), (I = F());
    let W = Au(L, I),
      te = Q.createHref(L);
    b.replaceState(W, "", te),
      g && E && E({ action: k, location: Q.location, delta: 0 });
  }
  function q(ue) {
    let B = u.location.origin !== "null" ? u.location.origin : u.location.href,
      L = typeof ue == "string" ? ue : aa(ue);
    return (
      tt(
        B,
        "No window.location.(origin|href) available to create URL for href: " +
          L,
      ),
      new URL(L, B)
    );
  }
  let Q = {
    get action() {
      return k;
    },
    get location() {
      return e(u, b);
    },
    listen(ue) {
      if (E) throw new Error("A history only accepts one active listener");
      return (
        u.addEventListener(Cu, H),
        (E = ue),
        () => {
          u.removeEventListener(Cu, H), (E = null);
        }
      );
    },
    createHref(ue) {
      return i(u, ue);
    },
    createURL: q,
    encodeLocation(ue) {
      let B = q(ue);
      return { pathname: B.pathname, search: B.search, hash: B.hash };
    },
    push: G,
    replace: K,
    go(ue) {
      return b.go(ue);
    },
  };
  return Q;
}
var Eu;
(function (e) {
  (e.data = "data"),
    (e.deferred = "deferred"),
    (e.redirect = "redirect"),
    (e.error = "error");
})(Eu || (Eu = {}));
function Cm(e, i, n) {
  n === void 0 && (n = "/");
  let c = typeof i == "string" ? jr(i) : i,
    u = jc(c.pathname || "/", n);
  if (u == null) return null;
  let g = Af(e);
  Am(g);
  let b = null;
  for (let k = 0; b == null && k < g.length; ++k) b = Om(g[k], Dm(u));
  return b;
}
function Af(e, i, n, c) {
  i === void 0 && (i = []), n === void 0 && (n = []), c === void 0 && (c = "");
  let u = (g, b, k) => {
    let E = {
      relativePath: k === void 0 ? g.path || "" : k,
      caseSensitive: g.caseSensitive === !0,
      childrenIndex: b,
      route: g,
    };
    E.relativePath.startsWith("/") &&
      (tt(
        E.relativePath.startsWith(c),
        'Absolute route path "' +
          E.relativePath +
          '" nested under path ' +
          ('"' + c + '" is not valid. An absolute child route path ') +
          "must start with the combined path of all its parent routes.",
      ),
      (E.relativePath = E.relativePath.slice(c.length)));
    let I = ui([c, E.relativePath]),
      F = n.concat(E);
    g.children &&
      g.children.length > 0 &&
      (tt(
        g.index !== !0,
        "Index routes must not have child routes. Please remove " +
          ('all child routes from route path "' + I + '".'),
      ),
      Af(g.children, i, F, I)),
      !(g.path == null && !g.index) &&
        i.push({ path: I, score: Nm(I, g.index), routesMeta: F });
  };
  return (
    e.forEach((g, b) => {
      var k;
      if (g.path === "" || !((k = g.path) != null && k.includes("?"))) u(g, b);
      else for (let E of Ef(g.path)) u(g, b, E);
    }),
    i
  );
}
function Ef(e) {
  let i = e.split("/");
  if (i.length === 0) return [];
  let [n, ...c] = i,
    u = n.endsWith("?"),
    g = n.replace(/\?$/, "");
  if (c.length === 0) return u ? [g, ""] : [g];
  let b = Ef(c.join("/")),
    k = [];
  return (
    k.push(...b.map((E) => (E === "" ? g : [g, E].join("/")))),
    u && k.push(...b),
    k.map((E) => (e.startsWith("/") && E === "" ? "/" : E))
  );
}
function Am(e) {
  e.sort((i, n) =>
    i.score !== n.score
      ? n.score - i.score
      : Im(
          i.routesMeta.map((c) => c.childrenIndex),
          n.routesMeta.map((c) => c.childrenIndex),
        ),
  );
}
const Em = /^:\w+$/,
  Pm = 3,
  Lm = 2,
  Tm = 1,
  Mm = 10,
  Rm = -2,
  Pu = (e) => e === "*";
function Nm(e, i) {
  let n = e.split("/"),
    c = n.length;
  return (
    n.some(Pu) && (c += Rm),
    i && (c += Lm),
    n
      .filter((u) => !Pu(u))
      .reduce((u, g) => u + (Em.test(g) ? Pm : g === "" ? Tm : Mm), c)
  );
}
function Im(e, i) {
  return e.length === i.length && e.slice(0, -1).every((c, u) => c === i[u])
    ? e[e.length - 1] - i[i.length - 1]
    : 0;
}
function Om(e, i) {
  let { routesMeta: n } = e,
    c = {},
    u = "/",
    g = [];
  for (let b = 0; b < n.length; ++b) {
    let k = n[b],
      E = b === n.length - 1,
      I = u === "/" ? i : i.slice(u.length) || "/",
      F = zm(
        { path: k.relativePath, caseSensitive: k.caseSensitive, end: E },
        I,
      );
    if (!F) return null;
    Object.assign(c, F.params);
    let H = k.route;
    g.push({
      params: c,
      pathname: ui([u, F.pathname]),
      pathnameBase: Hm(ui([u, F.pathnameBase])),
      route: H,
    }),
      F.pathnameBase !== "/" && (u = ui([u, F.pathnameBase]));
  }
  return g;
}
function zm(e, i) {
  typeof e == "string" && (e = { path: e, caseSensitive: !1, end: !0 });
  let [n, c] = Fm(e.path, e.caseSensitive, e.end),
    u = i.match(n);
  if (!u) return null;
  let g = u[0],
    b = g.replace(/(.)\/+$/, "$1"),
    k = u.slice(1);
  return {
    params: c.reduce((I, F, H) => {
      if (F === "*") {
        let G = k[H] || "";
        b = g.slice(0, g.length - G.length).replace(/(.)\/+$/, "$1");
      }
      return (I[F] = _m(k[H] || "", F)), I;
    }, {}),
    pathname: g,
    pathnameBase: b,
    pattern: e,
  };
}
function Fm(e, i, n) {
  i === void 0 && (i = !1),
    n === void 0 && (n = !0),
    _c(
      e === "*" || !e.endsWith("*") || e.endsWith("/*"),
      'Route path "' +
        e +
        '" will be treated as if it were ' +
        ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') +
        "always follow a `/` in the pattern. To get rid of this warning, " +
        ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'),
    );
  let c = [],
    u =
      "^" +
      e
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&")
        .replace(/\/:(\w+)/g, (b, k) => (c.push(k), "/([^\\/]+)"));
  return (
    e.endsWith("*")
      ? (c.push("*"),
        (u += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : n
        ? (u += "\\/*$")
        : e !== "" && e !== "/" && (u += "(?:(?=\\/|$))"),
    [new RegExp(u, i ? void 0 : "i"), c]
  );
}
function Dm(e) {
  try {
    return decodeURI(e);
  } catch (i) {
    return (
      _c(
        !1,
        'The URL path "' +
          e +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ("encoding (" + i + ")."),
      ),
      e
    );
  }
}
function _m(e, i) {
  try {
    return decodeURIComponent(e);
  } catch (n) {
    return (
      _c(
        !1,
        'The value for the URL param "' +
          i +
          '" will not be decoded because' +
          (' the string "' +
            e +
            '" is a malformed URL segment. This is probably') +
          (" due to a bad percent encoding (" + n + ")."),
      ),
      e
    );
  }
}
function jc(e, i) {
  if (i === "/") return e;
  if (!e.toLowerCase().startsWith(i.toLowerCase())) return null;
  let n = i.endsWith("/") ? i.length - 1 : i.length,
    c = e.charAt(n);
  return c && c !== "/" ? null : e.slice(n) || "/";
}
function jm(e, i) {
  i === void 0 && (i = "/");
  let {
    pathname: n,
    search: c = "",
    hash: u = "",
  } = typeof e == "string" ? jr(e) : e;
  return {
    pathname: n ? (n.startsWith("/") ? n : Xm(n, i)) : i,
    search: Ym(c),
    hash: Bm(u),
  };
}
function Xm(e, i) {
  let n = i.replace(/\/+$/, "").split("/");
  return (
    e.split("/").forEach((u) => {
      u === ".." ? n.length > 1 && n.pop() : u !== "." && n.push(u);
    }),
    n.length > 1 ? n.join("/") : "/"
  );
}
function vo(e, i, n, c) {
  return (
    "Cannot include a '" +
    e +
    "' character in a manually specified " +
    ("`to." +
      i +
      "` field [" +
      JSON.stringify(c) +
      "].  Please separate it out to the ") +
    ("`to." + n + "` field. Alternatively you may provide the full path as ") +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function Pf(e) {
  return e.filter(
    (i, n) => n === 0 || (i.route.path && i.route.path.length > 0),
  );
}
function Lf(e, i, n, c) {
  c === void 0 && (c = !1);
  let u;
  typeof e == "string"
    ? (u = jr(e))
    : ((u = Mn({}, e)),
      tt(
        !u.pathname || !u.pathname.includes("?"),
        vo("?", "pathname", "search", u),
      ),
      tt(
        !u.pathname || !u.pathname.includes("#"),
        vo("#", "pathname", "hash", u),
      ),
      tt(!u.search || !u.search.includes("#"), vo("#", "search", "hash", u)));
  let g = e === "" || u.pathname === "",
    b = g ? "/" : u.pathname,
    k;
  if (c || b == null) k = n;
  else {
    let H = i.length - 1;
    if (b.startsWith("..")) {
      let G = b.split("/");
      for (; G[0] === ".."; ) G.shift(), (H -= 1);
      u.pathname = G.join("/");
    }
    k = H >= 0 ? i[H] : "/";
  }
  let E = jm(u, k),
    I = b && b !== "/" && b.endsWith("/"),
    F = (g || b === ".") && n.endsWith("/");
  return !E.pathname.endsWith("/") && (I || F) && (E.pathname += "/"), E;
}
const ui = (e) => e.join("/").replace(/\/\/+/g, "/"),
  Hm = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"),
  Ym = (e) => (!e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e),
  Bm = (e) => (!e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e);
function Wm(e) {
  return (
    e != null &&
    typeof e.status == "number" &&
    typeof e.statusText == "string" &&
    typeof e.internal == "boolean" &&
    "data" in e
  );
}
const Tf = ["post", "put", "patch", "delete"];
new Set(Tf);
const Vm = ["get", ...Tf];
new Set(Vm);
/**
 * React Router v6.14.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function oa() {
  return (
    (oa = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var i = 1; i < arguments.length; i++) {
            var n = arguments[i];
            for (var c in n)
              Object.prototype.hasOwnProperty.call(n, c) && (e[c] = n[c]);
          }
          return e;
        }),
    oa.apply(this, arguments)
  );
}
const Xc = ce.createContext(null),
  Mf = ce.createContext(null),
  Wi = ce.createContext(null),
  Ra = ce.createContext(null),
  Vi = ce.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
  Rf = ce.createContext(null);
function Gm(e, i) {
  let { relative: n } = i === void 0 ? {} : i;
  Qn() || tt(!1);
  let { basename: c, navigator: u } = ce.useContext(Wi),
    { hash: g, pathname: b, search: k } = Hc(e, { relative: n }),
    E = b;
  return (
    c !== "/" && (E = b === "/" ? c : ui([c, b])),
    u.createHref({ pathname: E, search: k, hash: g })
  );
}
function Qn() {
  return ce.useContext(Ra) != null;
}
function xi() {
  return Qn() || tt(!1), ce.useContext(Ra).location;
}
function Nf(e) {
  ce.useContext(Wi).static || ce.useLayoutEffect(e);
}
function Um() {
  let { isDataRoute: e } = ce.useContext(Vi);
  return e ? sx() : Zm();
}
function Zm() {
  Qn() || tt(!1);
  let e = ce.useContext(Xc),
    { basename: i, navigator: n } = ce.useContext(Wi),
    { matches: c } = ce.useContext(Vi),
    { pathname: u } = xi(),
    g = JSON.stringify(Pf(c).map((E) => E.pathnameBase)),
    b = ce.useRef(!1);
  return (
    Nf(() => {
      b.current = !0;
    }),
    ce.useCallback(
      function (E, I) {
        if ((I === void 0 && (I = {}), !b.current)) return;
        if (typeof E == "number") {
          n.go(E);
          return;
        }
        let F = Lf(E, JSON.parse(g), u, I.relative === "path");
        e == null &&
          i !== "/" &&
          (F.pathname = F.pathname === "/" ? i : ui([i, F.pathname])),
          (I.replace ? n.replace : n.push)(F, I.state, I);
      },
      [i, n, g, u, e],
    )
  );
}
function Hc(e, i) {
  let { relative: n } = i === void 0 ? {} : i,
    { matches: c } = ce.useContext(Vi),
    { pathname: u } = xi(),
    g = JSON.stringify(Pf(c).map((b) => b.pathnameBase));
  return ce.useMemo(() => Lf(e, JSON.parse(g), u, n === "path"), [e, g, u, n]);
}
function $m(e, i) {
  return qm(e, i);
}
function qm(e, i, n) {
  Qn() || tt(!1);
  let { navigator: c } = ce.useContext(Wi),
    { matches: u } = ce.useContext(Vi),
    g = u[u.length - 1],
    b = g ? g.params : {};
  g && g.pathname;
  let k = g ? g.pathnameBase : "/";
  g && g.route;
  let E = xi(),
    I;
  if (i) {
    var F;
    let Q = typeof i == "string" ? jr(i) : i;
    k === "/" || ((F = Q.pathname) != null && F.startsWith(k)) || tt(!1),
      (I = Q);
  } else I = E;
  let H = I.pathname || "/",
    G = k === "/" ? H : H.slice(k.length) || "/",
    K = Cm(e, { pathname: G }),
    q = tx(
      K &&
        K.map((Q) =>
          Object.assign({}, Q, {
            params: Object.assign({}, b, Q.params),
            pathname: ui([
              k,
              c.encodeLocation
                ? c.encodeLocation(Q.pathname).pathname
                : Q.pathname,
            ]),
            pathnameBase:
              Q.pathnameBase === "/"
                ? k
                : ui([
                    k,
                    c.encodeLocation
                      ? c.encodeLocation(Q.pathnameBase).pathname
                      : Q.pathnameBase,
                  ]),
          }),
        ),
      u,
      n,
    );
  return i && q
    ? ce.createElement(
        Ra.Provider,
        {
          value: {
            location: oa(
              {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
              },
              I,
            ),
            navigationType: li.Pop,
          },
        },
        q,
      )
    : q;
}
function Qm() {
  let e = nx(),
    i = Wm(e)
      ? e.status + " " + e.statusText
      : e instanceof Error
        ? e.message
        : JSON.stringify(e),
    n = e instanceof Error ? e.stack : null,
    u = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" },
    g = null;
  return ce.createElement(
    ce.Fragment,
    null,
    ce.createElement("h2", null, "Unexpected Application Error!"),
    ce.createElement("h3", { style: { fontStyle: "italic" } }, i),
    n ? ce.createElement("pre", { style: u }, n) : null,
    g,
  );
}
const Km = ce.createElement(Qm, null);
class Jm extends ce.Component {
  constructor(i) {
    super(i),
      (this.state = {
        location: i.location,
        revalidation: i.revalidation,
        error: i.error,
      });
  }
  static getDerivedStateFromError(i) {
    return { error: i };
  }
  static getDerivedStateFromProps(i, n) {
    return n.location !== i.location ||
      (n.revalidation !== "idle" && i.revalidation === "idle")
      ? { error: i.error, location: i.location, revalidation: i.revalidation }
      : {
          error: i.error || n.error,
          location: n.location,
          revalidation: i.revalidation || n.revalidation,
        };
  }
  componentDidCatch(i, n) {
    console.error(
      "React Router caught the following error during render",
      i,
      n,
    );
  }
  render() {
    return this.state.error
      ? ce.createElement(
          Vi.Provider,
          { value: this.props.routeContext },
          ce.createElement(Rf.Provider, {
            value: this.state.error,
            children: this.props.component,
          }),
        )
      : this.props.children;
  }
}
function ex(e) {
  let { routeContext: i, match: n, children: c } = e,
    u = ce.useContext(Xc);
  return (
    u &&
      u.static &&
      u.staticContext &&
      (n.route.errorElement || n.route.ErrorBoundary) &&
      (u.staticContext._deepestRenderedBoundaryId = n.route.id),
    ce.createElement(Vi.Provider, { value: i }, c)
  );
}
function tx(e, i, n) {
  var c;
  if ((i === void 0 && (i = []), n === void 0 && (n = null), e == null)) {
    var u;
    if ((u = n) != null && u.errors) e = n.matches;
    else return null;
  }
  let g = e,
    b = (c = n) == null ? void 0 : c.errors;
  if (b != null) {
    let k = g.findIndex(
      (E) => E.route.id && (b == null ? void 0 : b[E.route.id]),
    );
    k >= 0 || tt(!1), (g = g.slice(0, Math.min(g.length, k + 1)));
  }
  return g.reduceRight((k, E, I) => {
    let F = E.route.id ? (b == null ? void 0 : b[E.route.id]) : null,
      H = null;
    n && (H = E.route.errorElement || Km);
    let G = i.concat(g.slice(0, I + 1)),
      K = () => {
        let q;
        return (
          F
            ? (q = H)
            : E.route.Component
              ? (q = ce.createElement(E.route.Component, null))
              : E.route.element
                ? (q = E.route.element)
                : (q = k),
          ce.createElement(ex, {
            match: E,
            routeContext: { outlet: k, matches: G, isDataRoute: n != null },
            children: q,
          })
        );
      };
    return n && (E.route.ErrorBoundary || E.route.errorElement || I === 0)
      ? ce.createElement(Jm, {
          location: n.location,
          revalidation: n.revalidation,
          component: H,
          error: F,
          children: K(),
          routeContext: { outlet: null, matches: G, isDataRoute: !0 },
        })
      : K();
  }, null);
}
var b0;
(function (e) {
  (e.UseBlocker = "useBlocker"),
    (e.UseRevalidator = "useRevalidator"),
    (e.UseNavigateStable = "useNavigate");
})(b0 || (b0 = {}));
var Rn;
(function (e) {
  (e.UseBlocker = "useBlocker"),
    (e.UseLoaderData = "useLoaderData"),
    (e.UseActionData = "useActionData"),
    (e.UseRouteError = "useRouteError"),
    (e.UseNavigation = "useNavigation"),
    (e.UseRouteLoaderData = "useRouteLoaderData"),
    (e.UseMatches = "useMatches"),
    (e.UseRevalidator = "useRevalidator"),
    (e.UseNavigateStable = "useNavigate"),
    (e.UseRouteId = "useRouteId");
})(Rn || (Rn = {}));
function lx(e) {
  let i = ce.useContext(Xc);
  return i || tt(!1), i;
}
function ix(e) {
  let i = ce.useContext(Mf);
  return i || tt(!1), i;
}
function rx(e) {
  let i = ce.useContext(Vi);
  return i || tt(!1), i;
}
function If(e) {
  let i = rx(),
    n = i.matches[i.matches.length - 1];
  return n.route.id || tt(!1), n.route.id;
}
function nx() {
  var e;
  let i = ce.useContext(Rf),
    n = ix(Rn.UseRouteError),
    c = If(Rn.UseRouteError);
  return i || ((e = n.errors) == null ? void 0 : e[c]);
}
function sx() {
  let { router: e } = lx(b0.UseNavigateStable),
    i = If(Rn.UseNavigateStable),
    n = ce.useRef(!1);
  return (
    Nf(() => {
      n.current = !0;
    }),
    ce.useCallback(
      function (u, g) {
        g === void 0 && (g = {}),
          n.current &&
            (typeof u == "number"
              ? e.navigate(u)
              : e.navigate(u, oa({ fromRouteId: i }, g)));
      },
      [e, i],
    )
  );
}
function Is(e) {
  tt(!1);
}
function ax(e) {
  let {
    basename: i = "/",
    children: n = null,
    location: c,
    navigationType: u = li.Pop,
    navigator: g,
    static: b = !1,
  } = e;
  Qn() && tt(!1);
  let k = i.replace(/^\/*/, "/"),
    E = ce.useMemo(() => ({ basename: k, navigator: g, static: b }), [k, g, b]);
  typeof c == "string" && (c = jr(c));
  let {
      pathname: I = "/",
      search: F = "",
      hash: H = "",
      state: G = null,
      key: K = "default",
    } = c,
    q = ce.useMemo(() => {
      let Q = jc(I, k);
      return Q == null
        ? null
        : {
            location: { pathname: Q, search: F, hash: H, state: G, key: K },
            navigationType: u,
          };
    }, [k, I, F, H, G, K, u]);
  return q == null
    ? null
    : ce.createElement(
        Wi.Provider,
        { value: E },
        ce.createElement(Ra.Provider, { children: n, value: q }),
      );
}
function ox(e) {
  let { children: i, location: n } = e;
  return $m(w0(i), n);
}
var Lu;
(function (e) {
  (e[(e.pending = 0)] = "pending"),
    (e[(e.success = 1)] = "success"),
    (e[(e.error = 2)] = "error");
})(Lu || (Lu = {}));
new Promise(() => {});
function w0(e, i) {
  i === void 0 && (i = []);
  let n = [];
  return (
    ce.Children.forEach(e, (c, u) => {
      if (!ce.isValidElement(c)) return;
      let g = [...i, u];
      if (c.type === ce.Fragment) {
        n.push.apply(n, w0(c.props.children, g));
        return;
      }
      c.type !== Is && tt(!1), !c.props.index || !c.props.children || tt(!1);
      let b = {
        id: c.props.id || g.join("-"),
        caseSensitive: c.props.caseSensitive,
        element: c.props.element,
        Component: c.props.Component,
        index: c.props.index,
        path: c.props.path,
        loader: c.props.loader,
        action: c.props.action,
        errorElement: c.props.errorElement,
        ErrorBoundary: c.props.ErrorBoundary,
        hasErrorBoundary:
          c.props.ErrorBoundary != null || c.props.errorElement != null,
        shouldRevalidate: c.props.shouldRevalidate,
        handle: c.props.handle,
        lazy: c.props.lazy,
      };
      c.props.children && (b.children = w0(c.props.children, g)), n.push(b);
    }),
    n
  );
}
/**
 * React Router DOM v6.14.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function ca() {
  return (
    (ca = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var i = 1; i < arguments.length; i++) {
            var n = arguments[i];
            for (var c in n)
              Object.prototype.hasOwnProperty.call(n, c) && (e[c] = n[c]);
          }
          return e;
        }),
    ca.apply(this, arguments)
  );
}
function Of(e, i) {
  if (e == null) return {};
  var n = {},
    c = Object.keys(e),
    u,
    g;
  for (g = 0; g < c.length; g++)
    (u = c[g]), !(i.indexOf(u) >= 0) && (n[u] = e[u]);
  return n;
}
function cx(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function hx(e, i) {
  return e.button === 0 && (!i || i === "_self") && !cx(e);
}
const ux = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset",
  ],
  dx = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "children",
  ],
  fx = "startTransition",
  Tu = hg[fx];
function px(e) {
  let { basename: i, children: n, future: c, window: u } = e,
    g = ce.useRef();
  g.current == null && (g.current = wm({ window: u, v5Compat: !0 }));
  let b = g.current,
    [k, E] = ce.useState({ action: b.action, location: b.location }),
    { v7_startTransition: I } = c || {},
    F = ce.useCallback(
      (H) => {
        I && Tu ? Tu(() => E(H)) : E(H);
      },
      [E, I],
    );
  return (
    ce.useLayoutEffect(() => b.listen(F), [b, F]),
    ce.createElement(ax, {
      basename: i,
      children: n,
      location: k.location,
      navigationType: k.action,
      navigator: b,
    })
  );
}
const gx =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  mx = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  Yc = ce.forwardRef(function (i, n) {
    let {
        onClick: c,
        relative: u,
        reloadDocument: g,
        replace: b,
        state: k,
        target: E,
        to: I,
        preventScrollReset: F,
      } = i,
      H = Of(i, ux),
      { basename: G } = ce.useContext(Wi),
      K,
      q = !1;
    if (typeof I == "string" && mx.test(I) && ((K = I), gx))
      try {
        let L = new URL(window.location.href),
          W = I.startsWith("//") ? new URL(L.protocol + I) : new URL(I),
          te = jc(W.pathname, G);
        W.origin === L.origin && te != null
          ? (I = te + W.search + W.hash)
          : (q = !0);
      } catch {}
    let Q = Gm(I, { relative: u }),
      ue = xx(I, {
        replace: b,
        state: k,
        target: E,
        preventScrollReset: F,
        relative: u,
      });
    function B(L) {
      c && c(L), L.defaultPrevented || ue(L);
    }
    return ce.createElement(
      "a",
      ca({}, H, { href: K || Q, onClick: q || g ? c : B, ref: n, target: E }),
    );
  }),
  Mu = ce.forwardRef(function (i, n) {
    let {
        "aria-current": c = "page",
        caseSensitive: u = !1,
        className: g = "",
        end: b = !1,
        style: k,
        to: E,
        children: I,
      } = i,
      F = Of(i, dx),
      H = Hc(E, { relative: F.relative }),
      G = xi(),
      K = ce.useContext(Mf),
      { navigator: q } = ce.useContext(Wi),
      Q = q.encodeLocation ? q.encodeLocation(H).pathname : H.pathname,
      ue = G.pathname,
      B =
        K && K.navigation && K.navigation.location
          ? K.navigation.location.pathname
          : null;
    u ||
      ((ue = ue.toLowerCase()),
      (B = B ? B.toLowerCase() : null),
      (Q = Q.toLowerCase()));
    let L = ue === Q || (!b && ue.startsWith(Q) && ue.charAt(Q.length) === "/"),
      W =
        B != null &&
        (B === Q || (!b && B.startsWith(Q) && B.charAt(Q.length) === "/")),
      te = L ? c : void 0,
      Z;
    typeof g == "function"
      ? (Z = g({ isActive: L, isPending: W }))
      : (Z = [g, L ? "active" : null, W ? "pending" : null]
          .filter(Boolean)
          .join(" "));
    let oe = typeof k == "function" ? k({ isActive: L, isPending: W }) : k;
    return ce.createElement(
      Yc,
      ca({}, F, { "aria-current": te, className: Z, ref: n, style: oe, to: E }),
      typeof I == "function" ? I({ isActive: L, isPending: W }) : I,
    );
  });
var Ru;
(function (e) {
  (e.UseScrollRestoration = "useScrollRestoration"),
    (e.UseSubmit = "useSubmit"),
    (e.UseSubmitFetcher = "useSubmitFetcher"),
    (e.UseFetcher = "useFetcher");
})(Ru || (Ru = {}));
var Nu;
(function (e) {
  (e.UseFetchers = "useFetchers"),
    (e.UseScrollRestoration = "useScrollRestoration");
})(Nu || (Nu = {}));
function xx(e, i) {
  let {
      target: n,
      replace: c,
      state: u,
      preventScrollReset: g,
      relative: b,
    } = i === void 0 ? {} : i,
    k = Um(),
    E = xi(),
    I = Hc(e, { relative: b });
  return ce.useCallback(
    (F) => {
      if (hx(F, n)) {
        F.preventDefault();
        let H = c !== void 0 ? c : aa(E) === aa(I);
        k(e, { replace: H, state: u, preventScrollReset: g, relative: b });
      }
    },
    [E, k, I, c, u, n, e, g, b],
  );
}
const vx = () =>
    _.jsx("div", {
      className: "flex h-screen items-center justify-center bg-white",
      children: _.jsx("div", {
        className:
          "h-16 w-16 animate-spin rounded-full border-4 border-solid border-primary border-t-transparent",
      }),
    }),
  yo = ({ title: e }) => {
    const i = xi();
    return (
      ce.useEffect(() => {
        document.title = e;
      }, [i, e]),
      null
    );
  },
  zf = ({ pageName: e }) =>
    _.jsxs("div", {
      className:
        "mb-6 flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between",
      children: [
        _.jsx("h2", {
          className: "text-title-md2 font-semibold text-black dark:text-white",
          children: e,
        }),
        _.jsx("nav", {
          children: _.jsxs("ol", {
            className: "flex items-center gap-2",
            children: [
              _.jsx("li", {
                children: _.jsx(Yc, {
                  className: "font-medium",
                  to: "/",
                  children: "Dashboard /",
                }),
              }),
              _.jsx("li", {
                className: "font-medium text-primary",
                children: e,
              }),
            ],
          }),
        }),
      ],
    }),
  yx = "/assets/logo-icon-7e6ff7aa.svg";
function bx(e, i) {
  const [n, c] = ce.useState(() => {
    try {
      const u = window.localStorage.getItem(e);
      return u ? JSON.parse(u) : i;
    } catch (u) {
      return console.log(u), i;
    }
  });
  return (
    ce.useEffect(() => {
      try {
        const u = typeof n == "function" ? n(n) : n;
        window.localStorage.setItem(e, JSON.stringify(u));
      } catch (u) {
        console.log(u);
      }
    }, [e, n]),
    [n, c]
  );
}
const wx = () => {
    const [e, i] = bx("color-theme", "light");
    return (
      ce.useEffect(() => {
        const n = "dark",
          c = window.document.body.classList;
        e === "dark" ? c.add(n) : c.remove(n);
      }, [e]),
      [e, i]
    );
  },
  kx = () => {
    const [e, i] = wx();
    return _.jsx("li", {
      children: _.jsxs("label", {
        className: `relative m-0 block h-7.5 w-14 rounded-full ${e === "dark" ? "bg-primary" : "bg-stroke"}`,
        children: [
          _.jsx("input", {
            type: "checkbox",
            onChange: () => {
              typeof i == "function" && i(e === "light" ? "dark" : "light");
            },
            className:
              "dur absolute top-0 z-50 m-0 h-full w-full cursor-pointer opacity-0",
          }),
          _.jsxs("span", {
            className: `absolute top-1/2 left-[3px] flex h-6 w-6 -translate-y-1/2 translate-x-0 items-center justify-center rounded-full bg-white shadow-switcher duration-75 ease-linear ${e === "dark" && "!right-[3px] !translate-x-full"}`,
            children: [
              _.jsx("span", {
                className: "dark:hidden",
                children: _.jsxs("svg", {
                  width: "16",
                  height: "16",
                  viewBox: "0 0 16 16",
                  fill: "none",
                  xmlns: "http://www.w3.org/2000/svg",
                  children: [
                    _.jsx("path", {
                      d: "M7.99992 12.6666C10.5772 12.6666 12.6666 10.5772 12.6666 7.99992C12.6666 5.42259 10.5772 3.33325 7.99992 3.33325C5.42259 3.33325 3.33325 5.42259 3.33325 7.99992C3.33325 10.5772 5.42259 12.6666 7.99992 12.6666Z",
                      fill: "#969AA1",
                    }),
                    _.jsx("path", {
                      d: "M8.00008 15.3067C7.63341 15.3067 7.33342 15.0334 7.33342 14.6667V14.6134C7.33342 14.2467 7.63341 13.9467 8.00008 13.9467C8.36675 13.9467 8.66675 14.2467 8.66675 14.6134C8.66675 14.9801 8.36675 15.3067 8.00008 15.3067ZM12.7601 13.4267C12.5867 13.4267 12.4201 13.3601 12.2867 13.2334L12.2001 13.1467C11.9401 12.8867 11.9401 12.4667 12.2001 12.2067C12.4601 11.9467 12.8801 11.9467 13.1401 12.2067L13.2267 12.2934C13.4867 12.5534 13.4867 12.9734 13.2267 13.2334C13.1001 13.3601 12.9334 13.4267 12.7601 13.4267ZM3.24008 13.4267C3.06675 13.4267 2.90008 13.3601 2.76675 13.2334C2.50675 12.9734 2.50675 12.5534 2.76675 12.2934L2.85342 12.2067C3.11342 11.9467 3.53341 11.9467 3.79341 12.2067C4.05341 12.4667 4.05341 12.8867 3.79341 13.1467L3.70675 13.2334C3.58008 13.3601 3.40675 13.4267 3.24008 13.4267ZM14.6667 8.66675H14.6134C14.2467 8.66675 13.9467 8.36675 13.9467 8.00008C13.9467 7.63341 14.2467 7.33342 14.6134 7.33342C14.9801 7.33342 15.3067 7.63341 15.3067 8.00008C15.3067 8.36675 15.0334 8.66675 14.6667 8.66675ZM1.38675 8.66675H1.33341C0.966748 8.66675 0.666748 8.36675 0.666748 8.00008C0.666748 7.63341 0.966748 7.33342 1.33341 7.33342C1.70008 7.33342 2.02675 7.63341 2.02675 8.00008C2.02675 8.36675 1.75341 8.66675 1.38675 8.66675ZM12.6734 3.99341C12.5001 3.99341 12.3334 3.92675 12.2001 3.80008C11.9401 3.54008 11.9401 3.12008 12.2001 2.86008L12.2867 2.77341C12.5467 2.51341 12.9667 2.51341 13.2267 2.77341C13.4867 3.03341 13.4867 3.45341 13.2267 3.71341L13.1401 3.80008C13.0134 3.92675 12.8467 3.99341 12.6734 3.99341ZM3.32675 3.99341C3.15341 3.99341 2.98675 3.92675 2.85342 3.80008L2.76675 3.70675C2.50675 3.44675 2.50675 3.02675 2.76675 2.76675C3.02675 2.50675 3.44675 2.50675 3.70675 2.76675L3.79341 2.85342C4.05341 3.11342 4.05341 3.53341 3.79341 3.79341C3.66675 3.92675 3.49341 3.99341 3.32675 3.99341ZM8.00008 2.02675C7.63341 2.02675 7.33342 1.75341 7.33342 1.38675V1.33341C7.33342 0.966748 7.63341 0.666748 8.00008 0.666748C8.36675 0.666748 8.66675 0.966748 8.66675 1.33341C8.66675 1.70008 8.36675 2.02675 8.00008 2.02675Z",
                      fill: "#969AA1",
                    }),
                  ],
                }),
              }),
              _.jsx("span", {
                className: "hidden dark:inline-block",
                children: _.jsx("svg", {
                  width: "16",
                  height: "16",
                  viewBox: "0 0 16 16",
                  fill: "none",
                  xmlns: "http://www.w3.org/2000/svg",
                  children: _.jsx("path", {
                    d: "M14.3533 10.62C14.2466 10.44 13.9466 10.16 13.1999 10.2933C12.7866 10.3667 12.3666 10.4 11.9466 10.38C10.3933 10.3133 8.98659 9.6 8.00659 8.5C7.13993 7.53333 6.60659 6.27333 6.59993 4.91333C6.59993 4.15333 6.74659 3.42 7.04659 2.72666C7.33993 2.05333 7.13326 1.7 6.98659 1.55333C6.83326 1.4 6.47326 1.18666 5.76659 1.48C3.03993 2.62666 1.35326 5.36 1.55326 8.28666C1.75326 11.04 3.68659 13.3933 6.24659 14.28C6.85993 14.4933 7.50659 14.62 8.17326 14.6467C8.27993 14.6533 8.38659 14.66 8.49326 14.66C10.7266 14.66 12.8199 13.6067 14.1399 11.8133C14.5866 11.1933 14.4666 10.8 14.3533 10.62Z",
                    fill: "#969AA1",
                  }),
                }),
              }),
            ],
          }),
        ],
      }),
    });
  };
var Kn = class {
    constructor() {
      (this.listeners = new Set()),
        (this.subscribe = this.subscribe.bind(this));
    }
    subscribe(e) {
      return (
        this.listeners.add(e),
        this.onSubscribe(),
        () => {
          this.listeners.delete(e), this.onUnsubscribe();
        }
      );
    }
    hasListeners() {
      return this.listeners.size > 0;
    }
    onSubscribe() {}
    onUnsubscribe() {}
  },
  Or = typeof window > "u" || "Deno" in globalThis;
function Zt() {}
function Sx(e, i) {
  return typeof e == "function" ? e(i) : e;
}
function k0(e) {
  return typeof e == "number" && e >= 0 && e !== 1 / 0;
}
function Ff(e, i) {
  return Math.max(e + (i || 0) - Date.now(), 0);
}
function Iu(e, i) {
  const {
    type: n = "all",
    exact: c,
    fetchStatus: u,
    predicate: g,
    queryKey: b,
    stale: k,
  } = e;
  if (b) {
    if (c) {
      if (i.queryHash !== Bc(b, i.options)) return !1;
    } else if (!In(i.queryKey, b)) return !1;
  }
  if (n !== "all") {
    const E = i.isActive();
    if ((n === "active" && !E) || (n === "inactive" && E)) return !1;
  }
  return !(
    (typeof k == "boolean" && i.isStale() !== k) ||
    (u && u !== i.state.fetchStatus) ||
    (g && !g(i))
  );
}
function Ou(e, i) {
  const { exact: n, status: c, predicate: u, mutationKey: g } = e;
  if (g) {
    if (!i.options.mutationKey) return !1;
    if (n) {
      if (Nn(i.options.mutationKey) !== Nn(g)) return !1;
    } else if (!In(i.options.mutationKey, g)) return !1;
  }
  return !((c && i.state.status !== c) || (u && !u(i)));
}
function Bc(e, i) {
  return ((i == null ? void 0 : i.queryKeyHashFn) || Nn)(e);
}
function Nn(e) {
  return JSON.stringify(e, (i, n) =>
    C0(n)
      ? Object.keys(n)
          .sort()
          .reduce((c, u) => ((c[u] = n[u]), c), {})
      : n,
  );
}
function In(e, i) {
  return e === i
    ? !0
    : typeof e != typeof i
      ? !1
      : e && i && typeof e == "object" && typeof i == "object"
        ? !Object.keys(i).some((n) => !In(e[n], i[n]))
        : !1;
}
function Df(e, i) {
  if (e === i) return e;
  const n = zu(e) && zu(i);
  if (n || (C0(e) && C0(i))) {
    const c = n ? e : Object.keys(e),
      u = c.length,
      g = n ? i : Object.keys(i),
      b = g.length,
      k = n ? [] : {};
    let E = 0;
    for (let I = 0; I < b; I++) {
      const F = n ? I : g[I];
      ((!n && c.includes(F)) || n) && e[F] === void 0 && i[F] === void 0
        ? ((k[F] = void 0), E++)
        : ((k[F] = Df(e[F], i[F])), k[F] === e[F] && e[F] !== void 0 && E++);
    }
    return u === b && E === u ? e : k;
  }
  return i;
}
function S0(e, i) {
  if (!i || Object.keys(e).length !== Object.keys(i).length) return !1;
  for (const n in e) if (e[n] !== i[n]) return !1;
  return !0;
}
function zu(e) {
  return Array.isArray(e) && e.length === Object.keys(e).length;
}
function C0(e) {
  if (!Fu(e)) return !1;
  const i = e.constructor;
  if (i === void 0) return !0;
  const n = i.prototype;
  return !(
    !Fu(n) ||
    !n.hasOwnProperty("isPrototypeOf") ||
    Object.getPrototypeOf(e) !== Object.prototype
  );
}
function Fu(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Cx(e) {
  return new Promise((i) => {
    setTimeout(i, e);
  });
}
function A0(e, i, n) {
  return typeof n.structuralSharing == "function"
    ? n.structuralSharing(e, i)
    : n.structuralSharing !== !1
      ? Df(e, i)
      : i;
}
function Ax(e, i, n = 0) {
  const c = [...e, i];
  return n && c.length > n ? c.slice(1) : c;
}
function Ex(e, i, n = 0) {
  const c = [i, ...e];
  return n && c.length > n ? c.slice(0, -1) : c;
}
var _f = Symbol(),
  jf = (e, i) =>
    !e.queryFn && i != null && i.initialPromise
      ? () => i.initialPromise
      : !e.queryFn || e.queryFn === _f
        ? () => Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`))
        : e.queryFn,
  Ei,
  Zl,
  pr,
  l1,
  Px =
    ((l1 = class extends Kn {
      constructor() {
        super();
        be(this, Ei, void 0);
        be(this, Zl, void 0);
        be(this, pr, void 0);
        ve(this, pr, (i) => {
          if (!Or && window.addEventListener) {
            const n = () => i();
            return (
              window.addEventListener("visibilitychange", n, !1),
              () => {
                window.removeEventListener("visibilitychange", n);
              }
            );
          }
        });
      }
      onSubscribe() {
        J(this, Zl) || this.setEventListener(J(this, pr));
      }
      onUnsubscribe() {
        var i;
        this.hasListeners() ||
          ((i = J(this, Zl)) == null || i.call(this), ve(this, Zl, void 0));
      }
      setEventListener(i) {
        var n;
        ve(this, pr, i),
          (n = J(this, Zl)) == null || n.call(this),
          ve(
            this,
            Zl,
            i((c) => {
              typeof c == "boolean" ? this.setFocused(c) : this.onFocus();
            }),
          );
      }
      setFocused(i) {
        J(this, Ei) !== i && (ve(this, Ei, i), this.onFocus());
      }
      onFocus() {
        const i = this.isFocused();
        this.listeners.forEach((n) => {
          n(i);
        });
      }
      isFocused() {
        var i;
        return typeof J(this, Ei) == "boolean"
          ? J(this, Ei)
          : ((i = globalThis.document) == null ? void 0 : i.visibilityState) !==
              "hidden";
      }
    }),
    (Ei = new WeakMap()),
    (Zl = new WeakMap()),
    (pr = new WeakMap()),
    l1),
  Wc = new Px(),
  gr,
  $l,
  mr,
  i1,
  Lx =
    ((i1 = class extends Kn {
      constructor() {
        super();
        be(this, gr, !0);
        be(this, $l, void 0);
        be(this, mr, void 0);
        ve(this, mr, (i) => {
          if (!Or && window.addEventListener) {
            const n = () => i(!0),
              c = () => i(!1);
            return (
              window.addEventListener("online", n, !1),
              window.addEventListener("offline", c, !1),
              () => {
                window.removeEventListener("online", n),
                  window.removeEventListener("offline", c);
              }
            );
          }
        });
      }
      onSubscribe() {
        J(this, $l) || this.setEventListener(J(this, mr));
      }
      onUnsubscribe() {
        var i;
        this.hasListeners() ||
          ((i = J(this, $l)) == null || i.call(this), ve(this, $l, void 0));
      }
      setEventListener(i) {
        var n;
        ve(this, mr, i),
          (n = J(this, $l)) == null || n.call(this),
          ve(this, $l, i(this.setOnline.bind(this)));
      }
      setOnline(i) {
        J(this, gr) !== i &&
          (ve(this, gr, i),
          this.listeners.forEach((c) => {
            c(i);
          }));
      }
      isOnline() {
        return J(this, gr);
      }
    }),
    (gr = new WeakMap()),
    ($l = new WeakMap()),
    (mr = new WeakMap()),
    i1),
  ha = new Lx();
function Tx(e) {
  return Math.min(1e3 * 2 ** e, 3e4);
}
function Xf(e) {
  return (e ?? "online") === "online" ? ha.isOnline() : !0;
}
var Hf = class {
  constructor(e) {
    (this.revert = e == null ? void 0 : e.revert),
      (this.silent = e == null ? void 0 : e.silent);
  }
};
function bo(e) {
  return e instanceof Hf;
}
function Yf(e) {
  let i = !1,
    n = 0,
    c = !1,
    u,
    g,
    b;
  const k = new Promise((B, L) => {
      (g = B), (b = L);
    }),
    E = (B) => {
      var L;
      c || (q(new Hf(B)), (L = e.abort) == null || L.call(e));
    },
    I = () => {
      i = !0;
    },
    F = () => {
      i = !1;
    },
    H = () =>
      Wc.isFocused() &&
      (e.networkMode === "always" || ha.isOnline()) &&
      e.canRun(),
    G = () => Xf(e.networkMode) && e.canRun(),
    K = (B) => {
      var L;
      c ||
        ((c = !0),
        (L = e.onSuccess) == null || L.call(e, B),
        u == null || u(),
        g(B));
    },
    q = (B) => {
      var L;
      c ||
        ((c = !0),
        (L = e.onError) == null || L.call(e, B),
        u == null || u(),
        b(B));
    },
    Q = () =>
      new Promise((B) => {
        var L;
        (u = (W) => {
          (c || H()) && B(W);
        }),
          (L = e.onPause) == null || L.call(e);
      }).then(() => {
        var B;
        (u = void 0), c || (B = e.onContinue) == null || B.call(e);
      }),
    ue = () => {
      if (c) return;
      let B;
      const L = n === 0 ? e.initialPromise : void 0;
      try {
        B = L ?? e.fn();
      } catch (W) {
        B = Promise.reject(W);
      }
      Promise.resolve(B)
        .then(K)
        .catch((W) => {
          var ae;
          if (c) return;
          const te = e.retry ?? (Or ? 0 : 3),
            Z = e.retryDelay ?? Tx,
            oe = typeof Z == "function" ? Z(n, W) : Z,
            pe =
              te === !0 ||
              (typeof te == "number" && n < te) ||
              (typeof te == "function" && te(n, W));
          if (i || !pe) {
            q(W);
            return;
          }
          n++,
            (ae = e.onFail) == null || ae.call(e, n, W),
            Cx(oe)
              .then(() => (H() ? void 0 : Q()))
              .then(() => {
                i ? q(W) : ue();
              });
        });
    };
  return {
    promise: k,
    cancel: E,
    continue: () => (u == null || u(), k),
    cancelRetry: I,
    continueRetry: F,
    canStart: G,
    start: () => (G() ? ue() : Q().then(ue), k),
  };
}
function Mx() {
  let e = [],
    i = 0,
    n = (G) => {
      G();
    },
    c = (G) => {
      G();
    },
    u = (G) => setTimeout(G, 0);
  const g = (G) => {
      u = G;
    },
    b = (G) => {
      let K;
      i++;
      try {
        K = G();
      } finally {
        i--, i || I();
      }
      return K;
    },
    k = (G) => {
      i
        ? e.push(G)
        : u(() => {
            n(G);
          });
    },
    E =
      (G) =>
      (...K) => {
        k(() => {
          G(...K);
        });
      },
    I = () => {
      const G = e;
      (e = []),
        G.length &&
          u(() => {
            c(() => {
              G.forEach((K) => {
                n(K);
              });
            });
          });
    };
  return {
    batch: b,
    batchCalls: E,
    schedule: k,
    setNotifyFunction: (G) => {
      n = G;
    },
    setBatchNotifyFunction: (G) => {
      c = G;
    },
    setScheduler: g,
  };
}
var dt = Mx(),
  Pi,
  r1,
  Bf =
    ((r1 = class {
      constructor() {
        be(this, Pi, void 0);
      }
      destroy() {
        this.clearGcTimeout();
      }
      scheduleGc() {
        this.clearGcTimeout(),
          k0(this.gcTime) &&
            ve(
              this,
              Pi,
              setTimeout(() => {
                this.optionalRemove();
              }, this.gcTime),
            );
      }
      updateGcTime(e) {
        this.gcTime = Math.max(
          this.gcTime || 0,
          e ?? (Or ? 1 / 0 : 5 * 60 * 1e3),
        );
      }
      clearGcTimeout() {
        J(this, Pi) && (clearTimeout(J(this, Pi)), ve(this, Pi, void 0));
      }
    }),
    (Pi = new WeakMap()),
    r1),
  xr,
  vr,
  Ut,
  bt,
  zn,
  Li,
  rl,
  Tl,
  n1,
  Rx =
    ((n1 = class extends Bf {
      constructor(i) {
        super();
        be(this, rl);
        be(this, xr, void 0);
        be(this, vr, void 0);
        be(this, Ut, void 0);
        be(this, bt, void 0);
        be(this, zn, void 0);
        be(this, Li, void 0);
        ve(this, Li, !1),
          ve(this, zn, i.defaultOptions),
          this.setOptions(i.options),
          (this.observers = []),
          ve(this, Ut, i.cache),
          (this.queryKey = i.queryKey),
          (this.queryHash = i.queryHash),
          ve(this, xr, i.state || Nx(this.options)),
          (this.state = J(this, xr)),
          this.scheduleGc();
      }
      get meta() {
        return this.options.meta;
      }
      get promise() {
        var i;
        return (i = J(this, bt)) == null ? void 0 : i.promise;
      }
      setOptions(i) {
        (this.options = { ...J(this, zn), ...i }),
          this.updateGcTime(this.options.gcTime);
      }
      optionalRemove() {
        !this.observers.length &&
          this.state.fetchStatus === "idle" &&
          J(this, Ut).remove(this);
      }
      setData(i, n) {
        const c = A0(this.state.data, i, this.options);
        return (
          Ne(this, rl, Tl).call(this, {
            data: c,
            type: "success",
            dataUpdatedAt: n == null ? void 0 : n.updatedAt,
            manual: n == null ? void 0 : n.manual,
          }),
          c
        );
      }
      setState(i, n) {
        Ne(this, rl, Tl).call(this, {
          type: "setState",
          state: i,
          setStateOptions: n,
        });
      }
      cancel(i) {
        var c, u;
        const n = (c = J(this, bt)) == null ? void 0 : c.promise;
        return (
          (u = J(this, bt)) == null || u.cancel(i),
          n ? n.then(Zt).catch(Zt) : Promise.resolve()
        );
      }
      destroy() {
        super.destroy(), this.cancel({ silent: !0 });
      }
      reset() {
        this.destroy(), this.setState(J(this, xr));
      }
      isActive() {
        return this.observers.some((i) => i.options.enabled !== !1);
      }
      isDisabled() {
        return this.getObserversCount() > 0 && !this.isActive();
      }
      isStale() {
        return this.state.isInvalidated
          ? !0
          : this.getObserversCount() > 0
            ? this.observers.some((i) => i.getCurrentResult().isStale)
            : this.state.data === void 0;
      }
      isStaleByTime(i = 0) {
        return (
          this.state.isInvalidated ||
          this.state.data === void 0 ||
          !Ff(this.state.dataUpdatedAt, i)
        );
      }
      onFocus() {
        var n;
        const i = this.observers.find((c) => c.shouldFetchOnWindowFocus());
        i == null || i.refetch({ cancelRefetch: !1 }),
          (n = J(this, bt)) == null || n.continue();
      }
      onOnline() {
        var n;
        const i = this.observers.find((c) => c.shouldFetchOnReconnect());
        i == null || i.refetch({ cancelRefetch: !1 }),
          (n = J(this, bt)) == null || n.continue();
      }
      addObserver(i) {
        this.observers.includes(i) ||
          (this.observers.push(i),
          this.clearGcTimeout(),
          J(this, Ut).notify({
            type: "observerAdded",
            query: this,
            observer: i,
          }));
      }
      removeObserver(i) {
        this.observers.includes(i) &&
          ((this.observers = this.observers.filter((n) => n !== i)),
          this.observers.length ||
            (J(this, bt) &&
              (J(this, Li)
                ? J(this, bt).cancel({ revert: !0 })
                : J(this, bt).cancelRetry()),
            this.scheduleGc()),
          J(this, Ut).notify({
            type: "observerRemoved",
            query: this,
            observer: i,
          }));
      }
      getObserversCount() {
        return this.observers.length;
      }
      invalidate() {
        this.state.isInvalidated ||
          Ne(this, rl, Tl).call(this, { type: "invalidate" });
      }
      fetch(i, n) {
        var E, I, F;
        if (this.state.fetchStatus !== "idle") {
          if (this.state.data !== void 0 && n != null && n.cancelRefetch)
            this.cancel({ silent: !0 });
          else if (J(this, bt))
            return J(this, bt).continueRetry(), J(this, bt).promise;
        }
        if ((i && this.setOptions(i), !this.options.queryFn)) {
          const H = this.observers.find((G) => G.options.queryFn);
          H && this.setOptions(H.options);
        }
        const c = new AbortController(),
          u = (H) => {
            Object.defineProperty(H, "signal", {
              enumerable: !0,
              get: () => (ve(this, Li, !0), c.signal),
            });
          },
          g = () => {
            const H = jf(this.options, n),
              G = { queryKey: this.queryKey, meta: this.meta };
            return (
              u(G),
              ve(this, Li, !1),
              this.options.persister ? this.options.persister(H, G, this) : H(G)
            );
          },
          b = {
            fetchOptions: n,
            options: this.options,
            queryKey: this.queryKey,
            state: this.state,
            fetchFn: g,
          };
        u(b),
          (E = this.options.behavior) == null || E.onFetch(b, this),
          ve(this, vr, this.state),
          (this.state.fetchStatus === "idle" ||
            this.state.fetchMeta !==
              ((I = b.fetchOptions) == null ? void 0 : I.meta)) &&
            Ne(this, rl, Tl).call(this, {
              type: "fetch",
              meta: (F = b.fetchOptions) == null ? void 0 : F.meta,
            });
        const k = (H) => {
          var G, K, q, Q;
          (bo(H) && H.silent) ||
            Ne(this, rl, Tl).call(this, { type: "error", error: H }),
            bo(H) ||
              ((K = (G = J(this, Ut).config).onError) == null ||
                K.call(G, H, this),
              (Q = (q = J(this, Ut).config).onSettled) == null ||
                Q.call(q, this.state.data, H, this)),
            this.isFetchingOptimistic || this.scheduleGc(),
            (this.isFetchingOptimistic = !1);
        };
        return (
          ve(
            this,
            bt,
            Yf({
              initialPromise: n == null ? void 0 : n.initialPromise,
              fn: b.fetchFn,
              abort: c.abort.bind(c),
              onSuccess: (H) => {
                var G, K, q, Q;
                if (H === void 0) {
                  k(new Error(`${this.queryHash} data is undefined`));
                  return;
                }
                this.setData(H),
                  (K = (G = J(this, Ut).config).onSuccess) == null ||
                    K.call(G, H, this),
                  (Q = (q = J(this, Ut).config).onSettled) == null ||
                    Q.call(q, H, this.state.error, this),
                  this.isFetchingOptimistic || this.scheduleGc(),
                  (this.isFetchingOptimistic = !1);
              },
              onError: k,
              onFail: (H, G) => {
                Ne(this, rl, Tl).call(this, {
                  type: "failed",
                  failureCount: H,
                  error: G,
                });
              },
              onPause: () => {
                Ne(this, rl, Tl).call(this, { type: "pause" });
              },
              onContinue: () => {
                Ne(this, rl, Tl).call(this, { type: "continue" });
              },
              retry: b.options.retry,
              retryDelay: b.options.retryDelay,
              networkMode: b.options.networkMode,
              canRun: () => !0,
            }),
          ),
          J(this, bt).start()
        );
      }
    }),
    (xr = new WeakMap()),
    (vr = new WeakMap()),
    (Ut = new WeakMap()),
    (bt = new WeakMap()),
    (zn = new WeakMap()),
    (Li = new WeakMap()),
    (rl = new WeakSet()),
    (Tl = function (i) {
      const n = (c) => {
        switch (i.type) {
          case "failed":
            return {
              ...c,
              fetchFailureCount: i.failureCount,
              fetchFailureReason: i.error,
            };
          case "pause":
            return { ...c, fetchStatus: "paused" };
          case "continue":
            return { ...c, fetchStatus: "fetching" };
          case "fetch":
            return {
              ...c,
              ...Wf(c.data, this.options),
              fetchMeta: i.meta ?? null,
            };
          case "success":
            return {
              ...c,
              data: i.data,
              dataUpdateCount: c.dataUpdateCount + 1,
              dataUpdatedAt: i.dataUpdatedAt ?? Date.now(),
              error: null,
              isInvalidated: !1,
              status: "success",
              ...(!i.manual && {
                fetchStatus: "idle",
                fetchFailureCount: 0,
                fetchFailureReason: null,
              }),
            };
          case "error":
            const u = i.error;
            return bo(u) && u.revert && J(this, vr)
              ? { ...J(this, vr), fetchStatus: "idle" }
              : {
                  ...c,
                  error: u,
                  errorUpdateCount: c.errorUpdateCount + 1,
                  errorUpdatedAt: Date.now(),
                  fetchFailureCount: c.fetchFailureCount + 1,
                  fetchFailureReason: u,
                  fetchStatus: "idle",
                  status: "error",
                };
          case "invalidate":
            return { ...c, isInvalidated: !0 };
          case "setState":
            return { ...c, ...i.state };
        }
      };
      (this.state = n(this.state)),
        dt.batch(() => {
          this.observers.forEach((c) => {
            c.onQueryUpdate();
          }),
            J(this, Ut).notify({ query: this, type: "updated", action: i });
        });
    }),
    n1);
function Wf(e, i) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: Xf(i.networkMode) ? "fetching" : "paused",
    ...(e === void 0 && { error: null, status: "pending" }),
  };
}
function Nx(e) {
  const i =
      typeof e.initialData == "function" ? e.initialData() : e.initialData,
    n = i !== void 0,
    c = n
      ? typeof e.initialDataUpdatedAt == "function"
        ? e.initialDataUpdatedAt()
        : e.initialDataUpdatedAt
      : 0;
  return {
    data: i,
    dataUpdateCount: 0,
    dataUpdatedAt: n ? c ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: n ? "success" : "pending",
    fetchStatus: "idle",
  };
}
var vl,
  s1,
  Ix =
    ((s1 = class extends Kn {
      constructor(i = {}) {
        super();
        be(this, vl, void 0);
        (this.config = i), ve(this, vl, new Map());
      }
      build(i, n, c) {
        const u = n.queryKey,
          g = n.queryHash ?? Bc(u, n);
        let b = this.get(g);
        return (
          b ||
            ((b = new Rx({
              cache: this,
              queryKey: u,
              queryHash: g,
              options: i.defaultQueryOptions(n),
              state: c,
              defaultOptions: i.getQueryDefaults(u),
            })),
            this.add(b)),
          b
        );
      }
      add(i) {
        J(this, vl).has(i.queryHash) ||
          (J(this, vl).set(i.queryHash, i),
          this.notify({ type: "added", query: i }));
      }
      remove(i) {
        const n = J(this, vl).get(i.queryHash);
        n &&
          (i.destroy(),
          n === i && J(this, vl).delete(i.queryHash),
          this.notify({ type: "removed", query: i }));
      }
      clear() {
        dt.batch(() => {
          this.getAll().forEach((i) => {
            this.remove(i);
          });
        });
      }
      get(i) {
        return J(this, vl).get(i);
      }
      getAll() {
        return [...J(this, vl).values()];
      }
      find(i) {
        const n = { exact: !0, ...i };
        return this.getAll().find((c) => Iu(n, c));
      }
      findAll(i = {}) {
        const n = this.getAll();
        return Object.keys(i).length > 0 ? n.filter((c) => Iu(i, c)) : n;
      }
      notify(i) {
        dt.batch(() => {
          this.listeners.forEach((n) => {
            n(i);
          });
        });
      }
      onFocus() {
        dt.batch(() => {
          this.getAll().forEach((i) => {
            i.onFocus();
          });
        });
      }
      onOnline() {
        dt.batch(() => {
          this.getAll().forEach((i) => {
            i.onOnline();
          });
        });
      }
    }),
    (vl = new WeakMap()),
    s1),
  yl,
  Ct,
  Ti,
  bl,
  Bl,
  a1,
  Ox =
    ((a1 = class extends Bf {
      constructor(i) {
        super();
        be(this, bl);
        be(this, yl, void 0);
        be(this, Ct, void 0);
        be(this, Ti, void 0);
        (this.mutationId = i.mutationId),
          ve(this, Ct, i.mutationCache),
          ve(this, yl, []),
          (this.state = i.state || zx()),
          this.setOptions(i.options),
          this.scheduleGc();
      }
      setOptions(i) {
        (this.options = i), this.updateGcTime(this.options.gcTime);
      }
      get meta() {
        return this.options.meta;
      }
      addObserver(i) {
        J(this, yl).includes(i) ||
          (J(this, yl).push(i),
          this.clearGcTimeout(),
          J(this, Ct).notify({
            type: "observerAdded",
            mutation: this,
            observer: i,
          }));
      }
      removeObserver(i) {
        ve(
          this,
          yl,
          J(this, yl).filter((n) => n !== i),
        ),
          this.scheduleGc(),
          J(this, Ct).notify({
            type: "observerRemoved",
            mutation: this,
            observer: i,
          });
      }
      optionalRemove() {
        J(this, yl).length ||
          (this.state.status === "pending"
            ? this.scheduleGc()
            : J(this, Ct).remove(this));
      }
      continue() {
        var i;
        return (
          ((i = J(this, Ti)) == null ? void 0 : i.continue()) ??
          this.execute(this.state.variables)
        );
      }
      async execute(i) {
        var u, g, b, k, E, I, F, H, G, K, q, Q, ue, B, L, W, te, Z, oe, pe;
        ve(
          this,
          Ti,
          Yf({
            fn: () =>
              this.options.mutationFn
                ? this.options.mutationFn(i)
                : Promise.reject(new Error("No mutationFn found")),
            onFail: (ae, ke) => {
              Ne(this, bl, Bl).call(this, {
                type: "failed",
                failureCount: ae,
                error: ke,
              });
            },
            onPause: () => {
              Ne(this, bl, Bl).call(this, { type: "pause" });
            },
            onContinue: () => {
              Ne(this, bl, Bl).call(this, { type: "continue" });
            },
            retry: this.options.retry ?? 0,
            retryDelay: this.options.retryDelay,
            networkMode: this.options.networkMode,
            canRun: () => J(this, Ct).canRun(this),
          }),
        );
        const n = this.state.status === "pending",
          c = !J(this, Ti).canStart();
        try {
          if (!n) {
            Ne(this, bl, Bl).call(this, {
              type: "pending",
              variables: i,
              isPaused: c,
            }),
              await ((g = (u = J(this, Ct).config).onMutate) == null
                ? void 0
                : g.call(u, i, this));
            const ke = await ((k = (b = this.options).onMutate) == null
              ? void 0
              : k.call(b, i));
            ke !== this.state.context &&
              Ne(this, bl, Bl).call(this, {
                type: "pending",
                context: ke,
                variables: i,
                isPaused: c,
              });
          }
          const ae = await J(this, Ti).start();
          return (
            await ((I = (E = J(this, Ct).config).onSuccess) == null
              ? void 0
              : I.call(E, ae, i, this.state.context, this)),
            await ((H = (F = this.options).onSuccess) == null
              ? void 0
              : H.call(F, ae, i, this.state.context)),
            await ((K = (G = J(this, Ct).config).onSettled) == null
              ? void 0
              : K.call(
                  G,
                  ae,
                  null,
                  this.state.variables,
                  this.state.context,
                  this,
                )),
            await ((Q = (q = this.options).onSettled) == null
              ? void 0
              : Q.call(q, ae, null, i, this.state.context)),
            Ne(this, bl, Bl).call(this, { type: "success", data: ae }),
            ae
          );
        } catch (ae) {
          try {
            throw (
              (await ((B = (ue = J(this, Ct).config).onError) == null
                ? void 0
                : B.call(ue, ae, i, this.state.context, this)),
              await ((W = (L = this.options).onError) == null
                ? void 0
                : W.call(L, ae, i, this.state.context)),
              await ((Z = (te = J(this, Ct).config).onSettled) == null
                ? void 0
                : Z.call(
                    te,
                    void 0,
                    ae,
                    this.state.variables,
                    this.state.context,
                    this,
                  )),
              await ((pe = (oe = this.options).onSettled) == null
                ? void 0
                : pe.call(oe, void 0, ae, i, this.state.context)),
              ae)
            );
          } finally {
            Ne(this, bl, Bl).call(this, { type: "error", error: ae });
          }
        } finally {
          J(this, Ct).runNext(this);
        }
      }
    }),
    (yl = new WeakMap()),
    (Ct = new WeakMap()),
    (Ti = new WeakMap()),
    (bl = new WeakSet()),
    (Bl = function (i) {
      const n = (c) => {
        switch (i.type) {
          case "failed":
            return {
              ...c,
              failureCount: i.failureCount,
              failureReason: i.error,
            };
          case "pause":
            return { ...c, isPaused: !0 };
          case "continue":
            return { ...c, isPaused: !1 };
          case "pending":
            return {
              ...c,
              context: i.context,
              data: void 0,
              failureCount: 0,
              failureReason: null,
              error: null,
              isPaused: i.isPaused,
              status: "pending",
              variables: i.variables,
              submittedAt: Date.now(),
            };
          case "success":
            return {
              ...c,
              data: i.data,
              failureCount: 0,
              failureReason: null,
              error: null,
              status: "success",
              isPaused: !1,
            };
          case "error":
            return {
              ...c,
              data: void 0,
              error: i.error,
              failureCount: c.failureCount + 1,
              failureReason: i.error,
              isPaused: !1,
              status: "error",
            };
        }
      };
      (this.state = n(this.state)),
        dt.batch(() => {
          J(this, yl).forEach((c) => {
            c.onMutationUpdate(i);
          }),
            J(this, Ct).notify({ mutation: this, type: "updated", action: i });
        });
    }),
    a1);
function zx() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0,
  };
}
var Dt,
  Fn,
  o1,
  Fx =
    ((o1 = class extends Kn {
      constructor(i = {}) {
        super();
        be(this, Dt, void 0);
        be(this, Fn, void 0);
        (this.config = i), ve(this, Dt, new Map()), ve(this, Fn, Date.now());
      }
      build(i, n, c) {
        const u = new Ox({
          mutationCache: this,
          mutationId: ++ls(this, Fn)._,
          options: i.defaultMutationOptions(n),
          state: c,
        });
        return this.add(u), u;
      }
      add(i) {
        const n = bs(i),
          c = J(this, Dt).get(n) ?? [];
        c.push(i),
          J(this, Dt).set(n, c),
          this.notify({ type: "added", mutation: i });
      }
      remove(i) {
        var c;
        const n = bs(i);
        if (J(this, Dt).has(n)) {
          const u =
            (c = J(this, Dt).get(n)) == null
              ? void 0
              : c.filter((g) => g !== i);
          u && (u.length === 0 ? J(this, Dt).delete(n) : J(this, Dt).set(n, u));
        }
        this.notify({ type: "removed", mutation: i });
      }
      canRun(i) {
        var c;
        const n =
          (c = J(this, Dt).get(bs(i))) == null
            ? void 0
            : c.find((u) => u.state.status === "pending");
        return !n || n === i;
      }
      runNext(i) {
        var c;
        const n =
          (c = J(this, Dt).get(bs(i))) == null
            ? void 0
            : c.find((u) => u !== i && u.state.isPaused);
        return (n == null ? void 0 : n.continue()) ?? Promise.resolve();
      }
      clear() {
        dt.batch(() => {
          this.getAll().forEach((i) => {
            this.remove(i);
          });
        });
      }
      getAll() {
        return [...J(this, Dt).values()].flat();
      }
      find(i) {
        const n = { exact: !0, ...i };
        return this.getAll().find((c) => Ou(n, c));
      }
      findAll(i = {}) {
        return this.getAll().filter((n) => Ou(i, n));
      }
      notify(i) {
        dt.batch(() => {
          this.listeners.forEach((n) => {
            n(i);
          });
        });
      }
      resumePausedMutations() {
        const i = this.getAll().filter((n) => n.state.isPaused);
        return dt.batch(() =>
          Promise.all(i.map((n) => n.continue().catch(Zt))),
        );
      }
    }),
    (Dt = new WeakMap()),
    (Fn = new WeakMap()),
    o1);
function bs(e) {
  var i;
  return (
    ((i = e.options.scope) == null ? void 0 : i.id) ?? String(e.mutationId)
  );
}
function Dx(e) {
  return {
    onFetch: (i, n) => {
      const c = async () => {
        var q, Q, ue, B, L;
        const u = i.options,
          g =
            (ue =
              (Q = (q = i.fetchOptions) == null ? void 0 : q.meta) == null
                ? void 0
                : Q.fetchMore) == null
              ? void 0
              : ue.direction,
          b = ((B = i.state.data) == null ? void 0 : B.pages) || [],
          k = ((L = i.state.data) == null ? void 0 : L.pageParams) || [],
          E = { pages: [], pageParams: [] };
        let I = !1;
        const F = (W) => {
            Object.defineProperty(W, "signal", {
              enumerable: !0,
              get: () => (
                i.signal.aborted
                  ? (I = !0)
                  : i.signal.addEventListener("abort", () => {
                      I = !0;
                    }),
                i.signal
              ),
            });
          },
          H = jf(i.options, i.fetchOptions),
          G = async (W, te, Z) => {
            if (I) return Promise.reject();
            if (te == null && W.pages.length) return Promise.resolve(W);
            const oe = {
              queryKey: i.queryKey,
              pageParam: te,
              direction: Z ? "backward" : "forward",
              meta: i.options.meta,
            };
            F(oe);
            const pe = await H(oe),
              { maxPages: ae } = i.options,
              ke = Z ? Ex : Ax;
            return {
              pages: ke(W.pages, pe, ae),
              pageParams: ke(W.pageParams, te, ae),
            };
          };
        let K;
        if (g && b.length) {
          const W = g === "backward",
            te = W ? _x : Du,
            Z = { pages: b, pageParams: k },
            oe = te(u, Z);
          K = await G(Z, oe, W);
        } else {
          K = await G(E, k[0] ?? u.initialPageParam);
          const W = e ?? b.length;
          for (let te = 1; te < W; te++) {
            const Z = Du(u, K);
            K = await G(K, Z);
          }
        }
        return K;
      };
      i.options.persister
        ? (i.fetchFn = () => {
            var u, g;
            return (g = (u = i.options).persister) == null
              ? void 0
              : g.call(
                  u,
                  c,
                  {
                    queryKey: i.queryKey,
                    meta: i.options.meta,
                    signal: i.signal,
                  },
                  n,
                );
          })
        : (i.fetchFn = c);
    },
  };
}
function Du(e, { pages: i, pageParams: n }) {
  const c = i.length - 1;
  return e.getNextPageParam(i[c], i, n[c], n);
}
function _x(e, { pages: i, pageParams: n }) {
  var c;
  return (c = e.getPreviousPageParam) == null
    ? void 0
    : c.call(e, i[0], i, n[0], n);
}
var qe,
  ql,
  Ql,
  yr,
  br,
  Kl,
  wr,
  kr,
  c1,
  jx =
    ((c1 = class {
      constructor(e = {}) {
        be(this, qe, void 0);
        be(this, ql, void 0);
        be(this, Ql, void 0);
        be(this, yr, void 0);
        be(this, br, void 0);
        be(this, Kl, void 0);
        be(this, wr, void 0);
        be(this, kr, void 0);
        ve(this, qe, e.queryCache || new Ix()),
          ve(this, ql, e.mutationCache || new Fx()),
          ve(this, Ql, e.defaultOptions || {}),
          ve(this, yr, new Map()),
          ve(this, br, new Map()),
          ve(this, Kl, 0);
      }
      mount() {
        ls(this, Kl)._++,
          J(this, Kl) === 1 &&
            (ve(
              this,
              wr,
              Wc.subscribe(async (e) => {
                e &&
                  (await this.resumePausedMutations(), J(this, qe).onFocus());
              }),
            ),
            ve(
              this,
              kr,
              ha.subscribe(async (e) => {
                e &&
                  (await this.resumePausedMutations(), J(this, qe).onOnline());
              }),
            ));
      }
      unmount() {
        var e, i;
        ls(this, Kl)._--,
          J(this, Kl) === 0 &&
            ((e = J(this, wr)) == null || e.call(this),
            ve(this, wr, void 0),
            (i = J(this, kr)) == null || i.call(this),
            ve(this, kr, void 0));
      }
      isFetching(e) {
        return J(this, qe).findAll({ ...e, fetchStatus: "fetching" }).length;
      }
      isMutating(e) {
        return J(this, ql).findAll({ ...e, status: "pending" }).length;
      }
      getQueryData(e) {
        var n;
        const i = this.defaultQueryOptions({ queryKey: e });
        return (n = J(this, qe).get(i.queryHash)) == null
          ? void 0
          : n.state.data;
      }
      ensureQueryData(e) {
        const i = this.getQueryData(e.queryKey);
        if (i === void 0) return this.fetchQuery(e);
        {
          const n = this.defaultQueryOptions(e),
            c = J(this, qe).build(this, n);
          return (
            e.revalidateIfStale &&
              c.isStaleByTime(n.staleTime) &&
              this.prefetchQuery(n),
            Promise.resolve(i)
          );
        }
      }
      getQueriesData(e) {
        return J(this, qe)
          .findAll(e)
          .map(({ queryKey: i, state: n }) => {
            const c = n.data;
            return [i, c];
          });
      }
      setQueryData(e, i, n) {
        const c = this.defaultQueryOptions({ queryKey: e }),
          u = J(this, qe).get(c.queryHash),
          g = u == null ? void 0 : u.state.data,
          b = Sx(i, g);
        if (b !== void 0)
          return J(this, qe)
            .build(this, c)
            .setData(b, { ...n, manual: !0 });
      }
      setQueriesData(e, i, n) {
        return dt.batch(() =>
          J(this, qe)
            .findAll(e)
            .map(({ queryKey: c }) => [c, this.setQueryData(c, i, n)]),
        );
      }
      getQueryState(e) {
        var n;
        const i = this.defaultQueryOptions({ queryKey: e });
        return (n = J(this, qe).get(i.queryHash)) == null ? void 0 : n.state;
      }
      removeQueries(e) {
        const i = J(this, qe);
        dt.batch(() => {
          i.findAll(e).forEach((n) => {
            i.remove(n);
          });
        });
      }
      resetQueries(e, i) {
        const n = J(this, qe),
          c = { type: "active", ...e };
        return dt.batch(
          () => (
            n.findAll(e).forEach((u) => {
              u.reset();
            }),
            this.refetchQueries(c, i)
          ),
        );
      }
      cancelQueries(e = {}, i = {}) {
        const n = { revert: !0, ...i },
          c = dt.batch(() =>
            J(this, qe)
              .findAll(e)
              .map((u) => u.cancel(n)),
          );
        return Promise.all(c).then(Zt).catch(Zt);
      }
      invalidateQueries(e = {}, i = {}) {
        return dt.batch(() => {
          if (
            (J(this, qe)
              .findAll(e)
              .forEach((c) => {
                c.invalidate();
              }),
            e.refetchType === "none")
          )
            return Promise.resolve();
          const n = { ...e, type: e.refetchType ?? e.type ?? "active" };
          return this.refetchQueries(n, i);
        });
      }
      refetchQueries(e = {}, i) {
        const n = {
            ...i,
            cancelRefetch: (i == null ? void 0 : i.cancelRefetch) ?? !0,
          },
          c = dt.batch(() =>
            J(this, qe)
              .findAll(e)
              .filter((u) => !u.isDisabled())
              .map((u) => {
                let g = u.fetch(void 0, n);
                return (
                  n.throwOnError || (g = g.catch(Zt)),
                  u.state.fetchStatus === "paused" ? Promise.resolve() : g
                );
              }),
          );
        return Promise.all(c).then(Zt);
      }
      fetchQuery(e) {
        const i = this.defaultQueryOptions(e);
        i.retry === void 0 && (i.retry = !1);
        const n = J(this, qe).build(this, i);
        return n.isStaleByTime(i.staleTime)
          ? n.fetch(i)
          : Promise.resolve(n.state.data);
      }
      prefetchQuery(e) {
        return this.fetchQuery(e).then(Zt).catch(Zt);
      }
      fetchInfiniteQuery(e) {
        return (e.behavior = Dx(e.pages)), this.fetchQuery(e);
      }
      prefetchInfiniteQuery(e) {
        return this.fetchInfiniteQuery(e).then(Zt).catch(Zt);
      }
      resumePausedMutations() {
        return ha.isOnline()
          ? J(this, ql).resumePausedMutations()
          : Promise.resolve();
      }
      getQueryCache() {
        return J(this, qe);
      }
      getMutationCache() {
        return J(this, ql);
      }
      getDefaultOptions() {
        return J(this, Ql);
      }
      setDefaultOptions(e) {
        ve(this, Ql, e);
      }
      setQueryDefaults(e, i) {
        J(this, yr).set(Nn(e), { queryKey: e, defaultOptions: i });
      }
      getQueryDefaults(e) {
        const i = [...J(this, yr).values()];
        let n = {};
        return (
          i.forEach((c) => {
            In(e, c.queryKey) && (n = { ...n, ...c.defaultOptions });
          }),
          n
        );
      }
      setMutationDefaults(e, i) {
        J(this, br).set(Nn(e), { mutationKey: e, defaultOptions: i });
      }
      getMutationDefaults(e) {
        const i = [...J(this, br).values()];
        let n = {};
        return (
          i.forEach((c) => {
            In(e, c.mutationKey) && (n = { ...n, ...c.defaultOptions });
          }),
          n
        );
      }
      defaultQueryOptions(e) {
        if (e._defaulted) return e;
        const i = {
          ...J(this, Ql).queries,
          ...this.getQueryDefaults(e.queryKey),
          ...e,
          _defaulted: !0,
        };
        return (
          i.queryHash || (i.queryHash = Bc(i.queryKey, i)),
          i.refetchOnReconnect === void 0 &&
            (i.refetchOnReconnect = i.networkMode !== "always"),
          i.throwOnError === void 0 && (i.throwOnError = !!i.suspense),
          !i.networkMode && i.persister && (i.networkMode = "offlineFirst"),
          i.enabled !== !0 && i.queryFn === _f && (i.enabled = !1),
          i
        );
      }
      defaultMutationOptions(e) {
        return e != null && e._defaulted
          ? e
          : {
              ...J(this, Ql).mutations,
              ...((e == null ? void 0 : e.mutationKey) &&
                this.getMutationDefaults(e.mutationKey)),
              ...e,
              _defaulted: !0,
            };
      }
      clear() {
        J(this, qe).clear(), J(this, ql).clear();
      }
    }),
    (qe = new WeakMap()),
    (ql = new WeakMap()),
    (Ql = new WeakMap()),
    (yr = new WeakMap()),
    (br = new WeakMap()),
    (Kl = new WeakMap()),
    (wr = new WeakMap()),
    (kr = new WeakMap()),
    c1),
  Rt,
  _e,
  Dn,
  At,
  Mi,
  Sr,
  wl,
  _n,
  Cr,
  Ar,
  Ri,
  Ni,
  Jl,
  Er,
  Ii,
  ln,
  jn,
  E0,
  Xn,
  P0,
  Hn,
  L0,
  Yn,
  T0,
  Bn,
  M0,
  Wn,
  R0,
  Vn,
  N0,
  pa,
  Vf,
  h1,
  Xx =
    ((h1 = class extends Kn {
      constructor(i, n) {
        super();
        be(this, Ii);
        be(this, jn);
        be(this, Xn);
        be(this, Hn);
        be(this, Yn);
        be(this, Bn);
        be(this, Wn);
        be(this, Vn);
        be(this, pa);
        be(this, Rt, void 0);
        be(this, _e, void 0);
        be(this, Dn, void 0);
        be(this, At, void 0);
        be(this, Mi, void 0);
        be(this, Sr, void 0);
        be(this, wl, void 0);
        be(this, _n, void 0);
        be(this, Cr, void 0);
        be(this, Ar, void 0);
        be(this, Ri, void 0);
        be(this, Ni, void 0);
        be(this, Jl, void 0);
        be(this, Er, new Set());
        (this.options = n),
          ve(this, Rt, i),
          ve(this, wl, null),
          this.bindMethods(),
          this.setOptions(n);
      }
      bindMethods() {
        this.refetch = this.refetch.bind(this);
      }
      onSubscribe() {
        this.listeners.size === 1 &&
          (J(this, _e).addObserver(this),
          _u(J(this, _e), this.options)
            ? Ne(this, Ii, ln).call(this)
            : this.updateResult(),
          Ne(this, Yn, T0).call(this));
      }
      onUnsubscribe() {
        this.hasListeners() || this.destroy();
      }
      shouldFetchOnReconnect() {
        return I0(J(this, _e), this.options, this.options.refetchOnReconnect);
      }
      shouldFetchOnWindowFocus() {
        return I0(J(this, _e), this.options, this.options.refetchOnWindowFocus);
      }
      destroy() {
        (this.listeners = new Set()),
          Ne(this, Bn, M0).call(this),
          Ne(this, Wn, R0).call(this),
          J(this, _e).removeObserver(this);
      }
      setOptions(i, n) {
        const c = this.options,
          u = J(this, _e);
        if (
          ((this.options = J(this, Rt).defaultQueryOptions(i)),
          this.options.enabled !== void 0 &&
            typeof this.options.enabled != "boolean")
        )
          throw new Error("Expected enabled to be a boolean");
        Ne(this, Vn, N0).call(this),
          J(this, _e).setOptions(this.options),
          c._defaulted &&
            !S0(this.options, c) &&
            J(this, Rt)
              .getQueryCache()
              .notify({
                type: "observerOptionsUpdated",
                query: J(this, _e),
                observer: this,
              });
        const g = this.hasListeners();
        g && ju(J(this, _e), u, this.options, c) && Ne(this, Ii, ln).call(this),
          this.updateResult(n),
          g &&
            (J(this, _e) !== u ||
              this.options.enabled !== c.enabled ||
              this.options.staleTime !== c.staleTime) &&
            Ne(this, jn, E0).call(this);
        const b = Ne(this, Xn, P0).call(this);
        g &&
          (J(this, _e) !== u ||
            this.options.enabled !== c.enabled ||
            b !== J(this, Jl)) &&
          Ne(this, Hn, L0).call(this, b);
      }
      getOptimisticResult(i) {
        const n = J(this, Rt).getQueryCache().build(J(this, Rt), i),
          c = this.createResult(n, i);
        return (
          Yx(this, c) &&
            (ve(this, At, c),
            ve(this, Sr, this.options),
            ve(this, Mi, J(this, _e).state)),
          c
        );
      }
      getCurrentResult() {
        return J(this, At);
      }
      trackResult(i, n) {
        const c = {};
        return (
          Object.keys(i).forEach((u) => {
            Object.defineProperty(c, u, {
              configurable: !1,
              enumerable: !0,
              get: () => (this.trackProp(u), n == null || n(u), i[u]),
            });
          }),
          c
        );
      }
      trackProp(i) {
        J(this, Er).add(i);
      }
      getCurrentQuery() {
        return J(this, _e);
      }
      refetch({ ...i } = {}) {
        return this.fetch({ ...i });
      }
      fetchOptimistic(i) {
        const n = J(this, Rt).defaultQueryOptions(i),
          c = J(this, Rt).getQueryCache().build(J(this, Rt), n);
        return (
          (c.isFetchingOptimistic = !0),
          c.fetch().then(() => this.createResult(c, n))
        );
      }
      fetch(i) {
        return Ne(this, Ii, ln)
          .call(this, { ...i, cancelRefetch: i.cancelRefetch ?? !0 })
          .then(() => (this.updateResult(), J(this, At)));
      }
      createResult(i, n) {
        var pe;
        const c = J(this, _e),
          u = this.options,
          g = J(this, At),
          b = J(this, Mi),
          k = J(this, Sr),
          I = i !== c ? i.state : J(this, Dn),
          { state: F } = i;
        let H = { ...F },
          G = !1,
          K;
        if (n._optimisticResults) {
          const ae = this.hasListeners(),
            ke = !ae && _u(i, n),
            Se = ae && ju(i, c, n, u);
          (ke || Se) && (H = { ...H, ...Wf(F.data, i.options) }),
            n._optimisticResults === "isRestoring" && (H.fetchStatus = "idle");
        }
        let { error: q, errorUpdatedAt: Q, status: ue } = H;
        if (n.select && H.data !== void 0)
          if (
            g &&
            H.data === (b == null ? void 0 : b.data) &&
            n.select === J(this, _n)
          )
            K = J(this, Cr);
          else
            try {
              ve(this, _n, n.select),
                (K = n.select(H.data)),
                (K = A0(g == null ? void 0 : g.data, K, n)),
                ve(this, Cr, K),
                ve(this, wl, null);
            } catch (ae) {
              ve(this, wl, ae);
            }
        else K = H.data;
        if (n.placeholderData !== void 0 && K === void 0 && ue === "pending") {
          let ae;
          if (
            g != null &&
            g.isPlaceholderData &&
            n.placeholderData === (k == null ? void 0 : k.placeholderData)
          )
            ae = g.data;
          else if (
            ((ae =
              typeof n.placeholderData == "function"
                ? n.placeholderData(
                    (pe = J(this, Ar)) == null ? void 0 : pe.state.data,
                    J(this, Ar),
                  )
                : n.placeholderData),
            n.select && ae !== void 0)
          )
            try {
              (ae = n.select(ae)), ve(this, wl, null);
            } catch (ke) {
              ve(this, wl, ke);
            }
          ae !== void 0 &&
            ((ue = "success"),
            (K = A0(g == null ? void 0 : g.data, ae, n)),
            (G = !0));
        }
        J(this, wl) &&
          ((q = J(this, wl)),
          (K = J(this, Cr)),
          (Q = Date.now()),
          (ue = "error"));
        const B = H.fetchStatus === "fetching",
          L = ue === "pending",
          W = ue === "error",
          te = L && B,
          Z = K !== void 0;
        return {
          status: ue,
          fetchStatus: H.fetchStatus,
          isPending: L,
          isSuccess: ue === "success",
          isError: W,
          isInitialLoading: te,
          isLoading: te,
          data: K,
          dataUpdatedAt: H.dataUpdatedAt,
          error: q,
          errorUpdatedAt: Q,
          failureCount: H.fetchFailureCount,
          failureReason: H.fetchFailureReason,
          errorUpdateCount: H.errorUpdateCount,
          isFetched: H.dataUpdateCount > 0 || H.errorUpdateCount > 0,
          isFetchedAfterMount:
            H.dataUpdateCount > I.dataUpdateCount ||
            H.errorUpdateCount > I.errorUpdateCount,
          isFetching: B,
          isRefetching: B && !L,
          isLoadingError: W && !Z,
          isPaused: H.fetchStatus === "paused",
          isPlaceholderData: G,
          isRefetchError: W && Z,
          isStale: Vc(i, n),
          refetch: this.refetch,
        };
      }
      updateResult(i) {
        const n = J(this, At),
          c = this.createResult(J(this, _e), this.options);
        if (
          (ve(this, Mi, J(this, _e).state),
          ve(this, Sr, this.options),
          J(this, Mi).data !== void 0 && ve(this, Ar, J(this, _e)),
          S0(c, n))
        )
          return;
        ve(this, At, c);
        const u = {},
          g = () => {
            if (!n) return !0;
            const { notifyOnChangeProps: b } = this.options,
              k = typeof b == "function" ? b() : b;
            if (k === "all" || (!k && !J(this, Er).size)) return !0;
            const E = new Set(k ?? J(this, Er));
            return (
              this.options.throwOnError && E.add("error"),
              Object.keys(J(this, At)).some((I) => {
                const F = I;
                return J(this, At)[F] !== n[F] && E.has(F);
              })
            );
          };
        (i == null ? void 0 : i.listeners) !== !1 && g() && (u.listeners = !0),
          Ne(this, pa, Vf).call(this, { ...u, ...i });
      }
      onQueryUpdate() {
        this.updateResult(), this.hasListeners() && Ne(this, Yn, T0).call(this);
      }
    }),
    (Rt = new WeakMap()),
    (_e = new WeakMap()),
    (Dn = new WeakMap()),
    (At = new WeakMap()),
    (Mi = new WeakMap()),
    (Sr = new WeakMap()),
    (wl = new WeakMap()),
    (_n = new WeakMap()),
    (Cr = new WeakMap()),
    (Ar = new WeakMap()),
    (Ri = new WeakMap()),
    (Ni = new WeakMap()),
    (Jl = new WeakMap()),
    (Er = new WeakMap()),
    (Ii = new WeakSet()),
    (ln = function (i) {
      Ne(this, Vn, N0).call(this);
      let n = J(this, _e).fetch(this.options, i);
      return (i != null && i.throwOnError) || (n = n.catch(Zt)), n;
    }),
    (jn = new WeakSet()),
    (E0 = function () {
      if (
        (Ne(this, Bn, M0).call(this),
        Or || J(this, At).isStale || !k0(this.options.staleTime))
      )
        return;
      const n = Ff(J(this, At).dataUpdatedAt, this.options.staleTime) + 1;
      ve(
        this,
        Ri,
        setTimeout(() => {
          J(this, At).isStale || this.updateResult();
        }, n),
      );
    }),
    (Xn = new WeakSet()),
    (P0 = function () {
      return (
        (typeof this.options.refetchInterval == "function"
          ? this.options.refetchInterval(J(this, _e))
          : this.options.refetchInterval) ?? !1
      );
    }),
    (Hn = new WeakSet()),
    (L0 = function (i) {
      Ne(this, Wn, R0).call(this),
        ve(this, Jl, i),
        !(
          Or ||
          this.options.enabled === !1 ||
          !k0(J(this, Jl)) ||
          J(this, Jl) === 0
        ) &&
          ve(
            this,
            Ni,
            setInterval(
              () => {
                (this.options.refetchIntervalInBackground || Wc.isFocused()) &&
                  Ne(this, Ii, ln).call(this);
              },
              J(this, Jl),
            ),
          );
    }),
    (Yn = new WeakSet()),
    (T0 = function () {
      Ne(this, jn, E0).call(this),
        Ne(this, Hn, L0).call(this, Ne(this, Xn, P0).call(this));
    }),
    (Bn = new WeakSet()),
    (M0 = function () {
      J(this, Ri) && (clearTimeout(J(this, Ri)), ve(this, Ri, void 0));
    }),
    (Wn = new WeakSet()),
    (R0 = function () {
      J(this, Ni) && (clearInterval(J(this, Ni)), ve(this, Ni, void 0));
    }),
    (Vn = new WeakSet()),
    (N0 = function () {
      const i = J(this, Rt).getQueryCache().build(J(this, Rt), this.options);
      if (i === J(this, _e)) return;
      const n = J(this, _e);
      ve(this, _e, i),
        ve(this, Dn, i.state),
        this.hasListeners() &&
          (n == null || n.removeObserver(this), i.addObserver(this));
    }),
    (pa = new WeakSet()),
    (Vf = function (i) {
      dt.batch(() => {
        i.listeners &&
          this.listeners.forEach((n) => {
            n(J(this, At));
          }),
          J(this, Rt)
            .getQueryCache()
            .notify({ query: J(this, _e), type: "observerResultsUpdated" });
      });
    }),
    h1);
function Hx(e, i) {
  return (
    i.enabled !== !1 &&
    e.state.data === void 0 &&
    !(e.state.status === "error" && i.retryOnMount === !1)
  );
}
function _u(e, i) {
  return Hx(e, i) || (e.state.data !== void 0 && I0(e, i, i.refetchOnMount));
}
function I0(e, i, n) {
  if (i.enabled !== !1) {
    const c = typeof n == "function" ? n(e) : n;
    return c === "always" || (c !== !1 && Vc(e, i));
  }
  return !1;
}
function ju(e, i, n, c) {
  return (
    (e !== i || c.enabled === !1) &&
    (!n.suspense || e.state.status !== "error") &&
    Vc(e, n)
  );
}
function Vc(e, i) {
  return i.enabled !== !1 && e.isStaleByTime(i.staleTime);
}
function Yx(e, i) {
  return !S0(e.getCurrentResult(), i);
}
var Gf = ce.createContext(void 0),
  Gc = (e) => {
    const i = ce.useContext(Gf);
    if (e) return e;
    if (!i)
      throw new Error("No QueryClient set, use QueryClientProvider to set one");
    return i;
  },
  Bx = ({ client: e, children: i }) => (
    ce.useEffect(
      () => (
        e.mount(),
        () => {
          e.unmount();
        }
      ),
      [e],
    ),
    _.jsx(Gf.Provider, { value: e, children: i })
  ),
  Uf = ce.createContext(!1),
  Wx = () => ce.useContext(Uf);
Uf.Provider;
function Vx() {
  let e = !1;
  return {
    clearReset: () => {
      e = !1;
    },
    reset: () => {
      e = !0;
    },
    isReset: () => e,
  };
}
var Gx = ce.createContext(Vx()),
  Ux = () => ce.useContext(Gx);
function Zx(e, i) {
  return typeof e == "function" ? e(...i) : !!e;
}
var $x = (e, i) => {
    (e.suspense || e.throwOnError) && (i.isReset() || (e.retryOnMount = !1));
  },
  qx = (e) => {
    ce.useEffect(() => {
      e.clearReset();
    }, [e]);
  },
  Qx = ({ result: e, errorResetBoundary: i, throwOnError: n, query: c }) =>
    e.isError && !i.isReset() && !e.isFetching && c && Zx(n, [e.error, c]),
  Kx = (e) => {
    e.suspense && typeof e.staleTime != "number" && (e.staleTime = 1e3);
  },
  Jx = (e, i) => (e == null ? void 0 : e.suspense) && i.isPending,
  e3 = (e, i, n) =>
    i.fetchOptimistic(e).catch(() => {
      n.clearReset();
    });
function t3(e, i, n) {
  const c = Gc(n),
    u = Wx(),
    g = Ux(),
    b = c.defaultQueryOptions(e);
  (b._optimisticResults = u ? "isRestoring" : "optimistic"),
    Kx(b),
    $x(b, g),
    qx(g);
  const [k] = ce.useState(() => new i(c, b)),
    E = k.getOptimisticResult(b);
  if (
    (ce.useSyncExternalStore(
      ce.useCallback(
        (I) => {
          const F = u ? () => {} : k.subscribe(dt.batchCalls(I));
          return k.updateResult(), F;
        },
        [k, u],
      ),
      () => k.getCurrentResult(),
      () => k.getCurrentResult(),
    ),
    ce.useEffect(() => {
      k.setOptions(b, { listeners: !1 });
    }, [b, k]),
    Jx(b, E))
  )
    throw e3(b, k, g);
  if (
    Qx({
      result: E,
      errorResetBoundary: g,
      throwOnError: b.throwOnError,
      query: c.getQueryCache().get(b.queryHash),
    })
  )
    throw E.error;
  return b.notifyOnChangeProps ? E : k.trackResult(E);
}
function l3(e, i) {
  return t3(e, Xx, i);
}
function Zf(e, i) {
  return function () {
    return e.apply(i, arguments);
  };
}
const { toString: i3 } = Object.prototype,
  { getPrototypeOf: Uc } = Object,
  Na = ((e) => (i) => {
    const n = i3.call(i);
    return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
  })(Object.create(null)),
  dl = (e) => ((e = e.toLowerCase()), (i) => Na(i) === e),
  Ia = (e) => (i) => typeof i === e,
  { isArray: Xr } = Array,
  On = Ia("undefined");
function r3(e) {
  return (
    e !== null &&
    !On(e) &&
    e.constructor !== null &&
    !On(e.constructor) &&
    Jt(e.constructor.isBuffer) &&
    e.constructor.isBuffer(e)
  );
}
const $f = dl("ArrayBuffer");
function n3(e) {
  let i;
  return (
    typeof ArrayBuffer < "u" && ArrayBuffer.isView
      ? (i = ArrayBuffer.isView(e))
      : (i = e && e.buffer && $f(e.buffer)),
    i
  );
}
const s3 = Ia("string"),
  Jt = Ia("function"),
  qf = Ia("number"),
  Oa = (e) => e !== null && typeof e == "object",
  a3 = (e) => e === !0 || e === !1,
  Os = (e) => {
    if (Na(e) !== "object") return !1;
    const i = Uc(e);
    return (
      (i === null ||
        i === Object.prototype ||
        Object.getPrototypeOf(i) === null) &&
      !(Symbol.toStringTag in e) &&
      !(Symbol.iterator in e)
    );
  },
  o3 = dl("Date"),
  c3 = dl("File"),
  h3 = dl("Blob"),
  u3 = dl("FileList"),
  d3 = (e) => Oa(e) && Jt(e.pipe),
  f3 = (e) => {
    let i;
    return (
      e &&
      ((typeof FormData == "function" && e instanceof FormData) ||
        (Jt(e.append) &&
          ((i = Na(e)) === "formdata" ||
            (i === "object" &&
              Jt(e.toString) &&
              e.toString() === "[object FormData]"))))
    );
  },
  p3 = dl("URLSearchParams"),
  [g3, m3, x3, v3] = ["ReadableStream", "Request", "Response", "Headers"].map(
    dl,
  ),
  y3 = (e) =>
    e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function Jn(e, i, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u") return;
  let c, u;
  if ((typeof e != "object" && (e = [e]), Xr(e)))
    for (c = 0, u = e.length; c < u; c++) i.call(null, e[c], c, e);
  else {
    const g = n ? Object.getOwnPropertyNames(e) : Object.keys(e),
      b = g.length;
    let k;
    for (c = 0; c < b; c++) (k = g[c]), i.call(null, e[k], k, e);
  }
}
function Qf(e, i) {
  i = i.toLowerCase();
  const n = Object.keys(e);
  let c = n.length,
    u;
  for (; c-- > 0; ) if (((u = n[c]), i === u.toLowerCase())) return u;
  return null;
}
const Kf = (() =>
    typeof globalThis < "u"
      ? globalThis
      : typeof self < "u"
        ? self
        : typeof window < "u"
          ? window
          : global)(),
  Jf = (e) => !On(e) && e !== Kf;
function O0() {
  const { caseless: e } = (Jf(this) && this) || {},
    i = {},
    n = (c, u) => {
      const g = (e && Qf(i, u)) || u;
      Os(i[g]) && Os(c)
        ? (i[g] = O0(i[g], c))
        : Os(c)
          ? (i[g] = O0({}, c))
          : Xr(c)
            ? (i[g] = c.slice())
            : (i[g] = c);
    };
  for (let c = 0, u = arguments.length; c < u; c++)
    arguments[c] && Jn(arguments[c], n);
  return i;
}
const b3 = (e, i, n, { allOwnKeys: c } = {}) => (
    Jn(
      i,
      (u, g) => {
        n && Jt(u) ? (e[g] = Zf(u, n)) : (e[g] = u);
      },
      { allOwnKeys: c },
    ),
    e
  ),
  w3 = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e),
  k3 = (e, i, n, c) => {
    (e.prototype = Object.create(i.prototype, c)),
      (e.prototype.constructor = e),
      Object.defineProperty(e, "super", { value: i.prototype }),
      n && Object.assign(e.prototype, n);
  },
  S3 = (e, i, n, c) => {
    let u, g, b;
    const k = {};
    if (((i = i || {}), e == null)) return i;
    do {
      for (u = Object.getOwnPropertyNames(e), g = u.length; g-- > 0; )
        (b = u[g]), (!c || c(b, e, i)) && !k[b] && ((i[b] = e[b]), (k[b] = !0));
      e = n !== !1 && Uc(e);
    } while (e && (!n || n(e, i)) && e !== Object.prototype);
    return i;
  },
  C3 = (e, i, n) => {
    (e = String(e)),
      (n === void 0 || n > e.length) && (n = e.length),
      (n -= i.length);
    const c = e.indexOf(i, n);
    return c !== -1 && c === n;
  },
  A3 = (e) => {
    if (!e) return null;
    if (Xr(e)) return e;
    let i = e.length;
    if (!qf(i)) return null;
    const n = new Array(i);
    for (; i-- > 0; ) n[i] = e[i];
    return n;
  },
  E3 = (
    (e) => (i) =>
      e && i instanceof e
  )(typeof Uint8Array < "u" && Uc(Uint8Array)),
  P3 = (e, i) => {
    const c = (e && e[Symbol.iterator]).call(e);
    let u;
    for (; (u = c.next()) && !u.done; ) {
      const g = u.value;
      i.call(e, g[0], g[1]);
    }
  },
  L3 = (e, i) => {
    let n;
    const c = [];
    for (; (n = e.exec(i)) !== null; ) c.push(n);
    return c;
  },
  T3 = dl("HTMLFormElement"),
  M3 = (e) =>
    e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (n, c, u) {
      return c.toUpperCase() + u;
    }),
  Xu = (
    ({ hasOwnProperty: e }) =>
    (i, n) =>
      e.call(i, n)
  )(Object.prototype),
  R3 = dl("RegExp"),
  ep = (e, i) => {
    const n = Object.getOwnPropertyDescriptors(e),
      c = {};
    Jn(n, (u, g) => {
      let b;
      (b = i(u, g, e)) !== !1 && (c[g] = b || u);
    }),
      Object.defineProperties(e, c);
  },
  N3 = (e) => {
    ep(e, (i, n) => {
      if (Jt(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
        return !1;
      const c = e[n];
      if (Jt(c)) {
        if (((i.enumerable = !1), "writable" in i)) {
          i.writable = !1;
          return;
        }
        i.set ||
          (i.set = () => {
            throw Error("Can not rewrite read-only method '" + n + "'");
          });
      }
    });
  },
  I3 = (e, i) => {
    const n = {},
      c = (u) => {
        u.forEach((g) => {
          n[g] = !0;
        });
      };
    return Xr(e) ? c(e) : c(String(e).split(i)), n;
  },
  O3 = () => {},
  z3 = (e, i) => (e != null && Number.isFinite((e = +e)) ? e : i),
  wo = "abcdefghijklmnopqrstuvwxyz",
  Hu = "0123456789",
  tp = { DIGIT: Hu, ALPHA: wo, ALPHA_DIGIT: wo + wo.toUpperCase() + Hu },
  F3 = (e = 16, i = tp.ALPHA_DIGIT) => {
    let n = "";
    const { length: c } = i;
    for (; e--; ) n += i[(Math.random() * c) | 0];
    return n;
  };
function D3(e) {
  return !!(
    e &&
    Jt(e.append) &&
    e[Symbol.toStringTag] === "FormData" &&
    e[Symbol.iterator]
  );
}
const _3 = (e) => {
    const i = new Array(10),
      n = (c, u) => {
        if (Oa(c)) {
          if (i.indexOf(c) >= 0) return;
          if (!("toJSON" in c)) {
            i[u] = c;
            const g = Xr(c) ? [] : {};
            return (
              Jn(c, (b, k) => {
                const E = n(b, u + 1);
                !On(E) && (g[k] = E);
              }),
              (i[u] = void 0),
              g
            );
          }
        }
        return c;
      };
    return n(e, 0);
  },
  j3 = dl("AsyncFunction"),
  X3 = (e) => e && (Oa(e) || Jt(e)) && Jt(e.then) && Jt(e.catch),
  ie = {
    isArray: Xr,
    isArrayBuffer: $f,
    isBuffer: r3,
    isFormData: f3,
    isArrayBufferView: n3,
    isString: s3,
    isNumber: qf,
    isBoolean: a3,
    isObject: Oa,
    isPlainObject: Os,
    isReadableStream: g3,
    isRequest: m3,
    isResponse: x3,
    isHeaders: v3,
    isUndefined: On,
    isDate: o3,
    isFile: c3,
    isBlob: h3,
    isRegExp: R3,
    isFunction: Jt,
    isStream: d3,
    isURLSearchParams: p3,
    isTypedArray: E3,
    isFileList: u3,
    forEach: Jn,
    merge: O0,
    extend: b3,
    trim: y3,
    stripBOM: w3,
    inherits: k3,
    toFlatObject: S3,
    kindOf: Na,
    kindOfTest: dl,
    endsWith: C3,
    toArray: A3,
    forEachEntry: P3,
    matchAll: L3,
    isHTMLForm: T3,
    hasOwnProperty: Xu,
    hasOwnProp: Xu,
    reduceDescriptors: ep,
    freezeMethods: N3,
    toObjectSet: I3,
    toCamelCase: M3,
    noop: O3,
    toFiniteNumber: z3,
    findKey: Qf,
    global: Kf,
    isContextDefined: Jf,
    ALPHABET: tp,
    generateString: F3,
    isSpecCompliantForm: D3,
    toJSONObject: _3,
    isAsyncFn: j3,
    isThenable: X3,
  };
function Ae(e, i, n, c, u) {
  Error.call(this),
    Error.captureStackTrace
      ? Error.captureStackTrace(this, this.constructor)
      : (this.stack = new Error().stack),
    (this.message = e),
    (this.name = "AxiosError"),
    i && (this.code = i),
    n && (this.config = n),
    c && (this.request = c),
    u && (this.response = u);
}
ie.inherits(Ae, Error, {
  toJSON: function () {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: ie.toJSONObject(this.config),
      code: this.code,
      status:
        this.response && this.response.status ? this.response.status : null,
    };
  },
});
const lp = Ae.prototype,
  ip = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL",
].forEach((e) => {
  ip[e] = { value: e };
});
Object.defineProperties(Ae, ip);
Object.defineProperty(lp, "isAxiosError", { value: !0 });
Ae.from = (e, i, n, c, u, g) => {
  const b = Object.create(lp);
  return (
    ie.toFlatObject(
      e,
      b,
      function (E) {
        return E !== Error.prototype;
      },
      (k) => k !== "isAxiosError",
    ),
    Ae.call(b, e.message, i, n, c, u),
    (b.cause = e),
    (b.name = e.name),
    g && Object.assign(b, g),
    b
  );
};
const H3 = null;
function z0(e) {
  return ie.isPlainObject(e) || ie.isArray(e);
}
function rp(e) {
  return ie.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function Yu(e, i, n) {
  return e
    ? e
        .concat(i)
        .map(function (u, g) {
          return (u = rp(u)), !n && g ? "[" + u + "]" : u;
        })
        .join(n ? "." : "")
    : i;
}
function Y3(e) {
  return ie.isArray(e) && !e.some(z0);
}
const B3 = ie.toFlatObject(ie, {}, null, function (i) {
  return /^is[A-Z]/.test(i);
});
function za(e, i, n) {
  if (!ie.isObject(e)) throw new TypeError("target must be an object");
  (i = i || new FormData()),
    (n = ie.toFlatObject(
      n,
      { metaTokens: !0, dots: !1, indexes: !1 },
      !1,
      function (Q, ue) {
        return !ie.isUndefined(ue[Q]);
      },
    ));
  const c = n.metaTokens,
    u = n.visitor || F,
    g = n.dots,
    b = n.indexes,
    E = (n.Blob || (typeof Blob < "u" && Blob)) && ie.isSpecCompliantForm(i);
  if (!ie.isFunction(u)) throw new TypeError("visitor must be a function");
  function I(q) {
    if (q === null) return "";
    if (ie.isDate(q)) return q.toISOString();
    if (!E && ie.isBlob(q))
      throw new Ae("Blob is not supported. Use a Buffer instead.");
    return ie.isArrayBuffer(q) || ie.isTypedArray(q)
      ? E && typeof Blob == "function"
        ? new Blob([q])
        : Buffer.from(q)
      : q;
  }
  function F(q, Q, ue) {
    let B = q;
    if (q && !ue && typeof q == "object") {
      if (ie.endsWith(Q, "{}"))
        (Q = c ? Q : Q.slice(0, -2)), (q = JSON.stringify(q));
      else if (
        (ie.isArray(q) && Y3(q)) ||
        ((ie.isFileList(q) || ie.endsWith(Q, "[]")) && (B = ie.toArray(q)))
      )
        return (
          (Q = rp(Q)),
          B.forEach(function (W, te) {
            !(ie.isUndefined(W) || W === null) &&
              i.append(
                b === !0 ? Yu([Q], te, g) : b === null ? Q : Q + "[]",
                I(W),
              );
          }),
          !1
        );
    }
    return z0(q) ? !0 : (i.append(Yu(ue, Q, g), I(q)), !1);
  }
  const H = [],
    G = Object.assign(B3, {
      defaultVisitor: F,
      convertValue: I,
      isVisitable: z0,
    });
  function K(q, Q) {
    if (!ie.isUndefined(q)) {
      if (H.indexOf(q) !== -1)
        throw Error("Circular reference detected in " + Q.join("."));
      H.push(q),
        ie.forEach(q, function (B, L) {
          (!(ie.isUndefined(B) || B === null) &&
            u.call(i, B, ie.isString(L) ? L.trim() : L, Q, G)) === !0 &&
            K(B, Q ? Q.concat(L) : [L]);
        }),
        H.pop();
    }
  }
  if (!ie.isObject(e)) throw new TypeError("data must be an object");
  return K(e), i;
}
function Bu(e) {
  const i = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0",
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (c) {
    return i[c];
  });
}
function Zc(e, i) {
  (this._pairs = []), e && za(e, this, i);
}
const np = Zc.prototype;
np.append = function (i, n) {
  this._pairs.push([i, n]);
};
np.toString = function (i) {
  const n = i
    ? function (c) {
        return i.call(this, c, Bu);
      }
    : Bu;
  return this._pairs
    .map(function (u) {
      return n(u[0]) + "=" + n(u[1]);
    }, "")
    .join("&");
};
function W3(e) {
  return encodeURIComponent(e)
    .replace(/%3A/gi, ":")
    .replace(/%24/g, "$")
    .replace(/%2C/gi, ",")
    .replace(/%20/g, "+")
    .replace(/%5B/gi, "[")
    .replace(/%5D/gi, "]");
}
function sp(e, i, n) {
  if (!i) return e;
  const c = (n && n.encode) || W3,
    u = n && n.serialize;
  let g;
  if (
    (u
      ? (g = u(i, n))
      : (g = ie.isURLSearchParams(i) ? i.toString() : new Zc(i, n).toString(c)),
    g)
  ) {
    const b = e.indexOf("#");
    b !== -1 && (e = e.slice(0, b)),
      (e += (e.indexOf("?") === -1 ? "?" : "&") + g);
  }
  return e;
}
class V3 {
  constructor() {
    this.handlers = [];
  }
  use(i, n, c) {
    return (
      this.handlers.push({
        fulfilled: i,
        rejected: n,
        synchronous: c ? c.synchronous : !1,
        runWhen: c ? c.runWhen : null,
      }),
      this.handlers.length - 1
    );
  }
  eject(i) {
    this.handlers[i] && (this.handlers[i] = null);
  }
  clear() {
    this.handlers && (this.handlers = []);
  }
  forEach(i) {
    ie.forEach(this.handlers, function (c) {
      c !== null && i(c);
    });
  }
}
const Wu = V3,
  ap = {
    silentJSONParsing: !0,
    forcedJSONParsing: !0,
    clarifyTimeoutError: !1,
  },
  G3 = typeof URLSearchParams < "u" ? URLSearchParams : Zc,
  U3 = typeof FormData < "u" ? FormData : null,
  Z3 = typeof Blob < "u" ? Blob : null,
  $3 = {
    isBrowser: !0,
    classes: { URLSearchParams: G3, FormData: U3, Blob: Z3 },
    protocols: ["http", "https", "file", "blob", "url", "data"],
  },
  $c = typeof window < "u" && typeof document < "u",
  q3 = ((e) => $c && ["ReactNative", "NativeScript", "NS"].indexOf(e) < 0)(
    typeof navigator < "u" && navigator.product,
  ),
  Q3 = (() =>
    typeof WorkerGlobalScope < "u" &&
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts == "function")(),
  K3 = ($c && window.location.href) || "http://localhost",
  J3 = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        hasBrowserEnv: $c,
        hasStandardBrowserEnv: q3,
        hasStandardBrowserWebWorkerEnv: Q3,
        origin: K3,
      },
      Symbol.toStringTag,
      { value: "Module" },
    ),
  ),
  cl = { ...J3, ...$3 };
function ev(e, i) {
  return za(
    e,
    new cl.classes.URLSearchParams(),
    Object.assign(
      {
        visitor: function (n, c, u, g) {
          return cl.isNode && ie.isBuffer(n)
            ? (this.append(c, n.toString("base64")), !1)
            : g.defaultVisitor.apply(this, arguments);
        },
      },
      i,
    ),
  );
}
function tv(e) {
  return ie
    .matchAll(/\w+|\[(\w*)]/g, e)
    .map((i) => (i[0] === "[]" ? "" : i[1] || i[0]));
}
function lv(e) {
  const i = {},
    n = Object.keys(e);
  let c;
  const u = n.length;
  let g;
  for (c = 0; c < u; c++) (g = n[c]), (i[g] = e[g]);
  return i;
}
function op(e) {
  function i(n, c, u, g) {
    let b = n[g++];
    if (b === "__proto__") return !0;
    const k = Number.isFinite(+b),
      E = g >= n.length;
    return (
      (b = !b && ie.isArray(u) ? u.length : b),
      E
        ? (ie.hasOwnProp(u, b) ? (u[b] = [u[b], c]) : (u[b] = c), !k)
        : ((!u[b] || !ie.isObject(u[b])) && (u[b] = []),
          i(n, c, u[b], g) && ie.isArray(u[b]) && (u[b] = lv(u[b])),
          !k)
    );
  }
  if (ie.isFormData(e) && ie.isFunction(e.entries)) {
    const n = {};
    return (
      ie.forEachEntry(e, (c, u) => {
        i(tv(c), u, n, 0);
      }),
      n
    );
  }
  return null;
}
function iv(e, i, n) {
  if (ie.isString(e))
    try {
      return (i || JSON.parse)(e), ie.trim(e);
    } catch (c) {
      if (c.name !== "SyntaxError") throw c;
    }
  return (n || JSON.stringify)(e);
}
const qc = {
  transitional: ap,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [
    function (i, n) {
      const c = n.getContentType() || "",
        u = c.indexOf("application/json") > -1,
        g = ie.isObject(i);
      if ((g && ie.isHTMLForm(i) && (i = new FormData(i)), ie.isFormData(i)))
        return u ? JSON.stringify(op(i)) : i;
      if (
        ie.isArrayBuffer(i) ||
        ie.isBuffer(i) ||
        ie.isStream(i) ||
        ie.isFile(i) ||
        ie.isBlob(i) ||
        ie.isReadableStream(i)
      )
        return i;
      if (ie.isArrayBufferView(i)) return i.buffer;
      if (ie.isURLSearchParams(i))
        return (
          n.setContentType(
            "application/x-www-form-urlencoded;charset=utf-8",
            !1,
          ),
          i.toString()
        );
      let k;
      if (g) {
        if (c.indexOf("application/x-www-form-urlencoded") > -1)
          return ev(i, this.formSerializer).toString();
        if ((k = ie.isFileList(i)) || c.indexOf("multipart/form-data") > -1) {
          const E = this.env && this.env.FormData;
          return za(
            k ? { "files[]": i } : i,
            E && new E(),
            this.formSerializer,
          );
        }
      }
      return g || u ? (n.setContentType("application/json", !1), iv(i)) : i;
    },
  ],
  transformResponse: [
    function (i) {
      const n = this.transitional || qc.transitional,
        c = n && n.forcedJSONParsing,
        u = this.responseType === "json";
      if (ie.isResponse(i) || ie.isReadableStream(i)) return i;
      if (i && ie.isString(i) && ((c && !this.responseType) || u)) {
        const b = !(n && n.silentJSONParsing) && u;
        try {
          return JSON.parse(i);
        } catch (k) {
          if (b)
            throw k.name === "SyntaxError"
              ? Ae.from(k, Ae.ERR_BAD_RESPONSE, this, null, this.response)
              : k;
        }
      }
      return i;
    },
  ],
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: { FormData: cl.classes.FormData, Blob: cl.classes.Blob },
  validateStatus: function (i) {
    return i >= 200 && i < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0,
    },
  },
};
ie.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  qc.headers[e] = {};
});
const Qc = qc,
  rv = ie.toObjectSet([
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent",
  ]),
  nv = (e) => {
    const i = {};
    let n, c, u;
    return (
      e &&
        e
          .split(
            `
`,
          )
          .forEach(function (b) {
            (u = b.indexOf(":")),
              (n = b.substring(0, u).trim().toLowerCase()),
              (c = b.substring(u + 1).trim()),
              !(!n || (i[n] && rv[n])) &&
                (n === "set-cookie"
                  ? i[n]
                    ? i[n].push(c)
                    : (i[n] = [c])
                  : (i[n] = i[n] ? i[n] + ", " + c : c));
          }),
      i
    );
  },
  Vu = Symbol("internals");
function qr(e) {
  return e && String(e).trim().toLowerCase();
}
function zs(e) {
  return e === !1 || e == null ? e : ie.isArray(e) ? e.map(zs) : String(e);
}
function sv(e) {
  const i = Object.create(null),
    n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let c;
  for (; (c = n.exec(e)); ) i[c[1]] = c[2];
  return i;
}
const av = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function ko(e, i, n, c, u) {
  if (ie.isFunction(c)) return c.call(this, i, n);
  if ((u && (i = n), !!ie.isString(i))) {
    if (ie.isString(c)) return i.indexOf(c) !== -1;
    if (ie.isRegExp(c)) return c.test(i);
  }
}
function ov(e) {
  return e
    .trim()
    .toLowerCase()
    .replace(/([a-z\d])(\w*)/g, (i, n, c) => n.toUpperCase() + c);
}
function cv(e, i) {
  const n = ie.toCamelCase(" " + i);
  ["get", "set", "has"].forEach((c) => {
    Object.defineProperty(e, c + n, {
      value: function (u, g, b) {
        return this[c].call(this, i, u, g, b);
      },
      configurable: !0,
    });
  });
}
class Fa {
  constructor(i) {
    i && this.set(i);
  }
  set(i, n, c) {
    const u = this;
    function g(k, E, I) {
      const F = qr(E);
      if (!F) throw new Error("header name must be a non-empty string");
      const H = ie.findKey(u, F);
      (!H || u[H] === void 0 || I === !0 || (I === void 0 && u[H] !== !1)) &&
        (u[H || E] = zs(k));
    }
    const b = (k, E) => ie.forEach(k, (I, F) => g(I, F, E));
    if (ie.isPlainObject(i) || i instanceof this.constructor) b(i, n);
    else if (ie.isString(i) && (i = i.trim()) && !av(i)) b(nv(i), n);
    else if (ie.isHeaders(i)) for (const [k, E] of i.entries()) g(E, k, c);
    else i != null && g(n, i, c);
    return this;
  }
  get(i, n) {
    if (((i = qr(i)), i)) {
      const c = ie.findKey(this, i);
      if (c) {
        const u = this[c];
        if (!n) return u;
        if (n === !0) return sv(u);
        if (ie.isFunction(n)) return n.call(this, u, c);
        if (ie.isRegExp(n)) return n.exec(u);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(i, n) {
    if (((i = qr(i)), i)) {
      const c = ie.findKey(this, i);
      return !!(c && this[c] !== void 0 && (!n || ko(this, this[c], c, n)));
    }
    return !1;
  }
  delete(i, n) {
    const c = this;
    let u = !1;
    function g(b) {
      if (((b = qr(b)), b)) {
        const k = ie.findKey(c, b);
        k && (!n || ko(c, c[k], k, n)) && (delete c[k], (u = !0));
      }
    }
    return ie.isArray(i) ? i.forEach(g) : g(i), u;
  }
  clear(i) {
    const n = Object.keys(this);
    let c = n.length,
      u = !1;
    for (; c--; ) {
      const g = n[c];
      (!i || ko(this, this[g], g, i, !0)) && (delete this[g], (u = !0));
    }
    return u;
  }
  normalize(i) {
    const n = this,
      c = {};
    return (
      ie.forEach(this, (u, g) => {
        const b = ie.findKey(c, g);
        if (b) {
          (n[b] = zs(u)), delete n[g];
          return;
        }
        const k = i ? ov(g) : String(g).trim();
        k !== g && delete n[g], (n[k] = zs(u)), (c[k] = !0);
      }),
      this
    );
  }
  concat(...i) {
    return this.constructor.concat(this, ...i);
  }
  toJSON(i) {
    const n = Object.create(null);
    return (
      ie.forEach(this, (c, u) => {
        c != null && c !== !1 && (n[u] = i && ie.isArray(c) ? c.join(", ") : c);
      }),
      n
    );
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([i, n]) => i + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(i) {
    return i instanceof this ? i : new this(i);
  }
  static concat(i, ...n) {
    const c = new this(i);
    return n.forEach((u) => c.set(u)), c;
  }
  static accessor(i) {
    const c = (this[Vu] = this[Vu] = { accessors: {} }).accessors,
      u = this.prototype;
    function g(b) {
      const k = qr(b);
      c[k] || (cv(u, b), (c[k] = !0));
    }
    return ie.isArray(i) ? i.forEach(g) : g(i), this;
  }
}
Fa.accessor([
  "Content-Type",
  "Content-Length",
  "Accept",
  "Accept-Encoding",
  "User-Agent",
  "Authorization",
]);
ie.reduceDescriptors(Fa.prototype, ({ value: e }, i) => {
  let n = i[0].toUpperCase() + i.slice(1);
  return {
    get: () => e,
    set(c) {
      this[n] = c;
    },
  };
});
ie.freezeMethods(Fa);
const hl = Fa;
function So(e, i) {
  const n = this || Qc,
    c = i || n,
    u = hl.from(c.headers);
  let g = c.data;
  return (
    ie.forEach(e, function (k) {
      g = k.call(n, g, u.normalize(), i ? i.status : void 0);
    }),
    u.normalize(),
    g
  );
}
function cp(e) {
  return !!(e && e.__CANCEL__);
}
function Hr(e, i, n) {
  Ae.call(this, e ?? "canceled", Ae.ERR_CANCELED, i, n),
    (this.name = "CanceledError");
}
ie.inherits(Hr, Ae, { __CANCEL__: !0 });
function hp(e, i, n) {
  const c = n.config.validateStatus;
  !n.status || !c || c(n.status)
    ? e(n)
    : i(
        new Ae(
          "Request failed with status code " + n.status,
          [Ae.ERR_BAD_REQUEST, Ae.ERR_BAD_RESPONSE][
            Math.floor(n.status / 100) - 4
          ],
          n.config,
          n.request,
          n,
        ),
      );
}
function hv(e) {
  const i = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return (i && i[1]) || "";
}
function uv(e, i) {
  e = e || 10;
  const n = new Array(e),
    c = new Array(e);
  let u = 0,
    g = 0,
    b;
  return (
    (i = i !== void 0 ? i : 1e3),
    function (E) {
      const I = Date.now(),
        F = c[g];
      b || (b = I), (n[u] = E), (c[u] = I);
      let H = g,
        G = 0;
      for (; H !== u; ) (G += n[H++]), (H = H % e);
      if (((u = (u + 1) % e), u === g && (g = (g + 1) % e), I - b < i)) return;
      const K = F && I - F;
      return K ? Math.round((G * 1e3) / K) : void 0;
    }
  );
}
function dv(e, i) {
  let n = 0;
  const c = 1e3 / i;
  let u = null;
  return function () {
    const b = this === !0,
      k = Date.now();
    if (b || k - n > c)
      return (
        u && (clearTimeout(u), (u = null)), (n = k), e.apply(null, arguments)
      );
    u ||
      (u = setTimeout(
        () => ((u = null), (n = Date.now()), e.apply(null, arguments)),
        c - (k - n),
      ));
  };
}
const ua = (e, i, n = 3) => {
    let c = 0;
    const u = uv(50, 250);
    return dv((g) => {
      const b = g.loaded,
        k = g.lengthComputable ? g.total : void 0,
        E = b - c,
        I = u(E),
        F = b <= k;
      c = b;
      const H = {
        loaded: b,
        total: k,
        progress: k ? b / k : void 0,
        bytes: E,
        rate: I || void 0,
        estimated: I && k && F ? (k - b) / I : void 0,
        event: g,
        lengthComputable: k != null,
      };
      (H[i ? "download" : "upload"] = !0), e(H);
    }, n);
  },
  fv = cl.hasStandardBrowserEnv
    ? (function () {
        const i = /(msie|trident)/i.test(navigator.userAgent),
          n = document.createElement("a");
        let c;
        function u(g) {
          let b = g;
          return (
            i && (n.setAttribute("href", b), (b = n.href)),
            n.setAttribute("href", b),
            {
              href: n.href,
              protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
              host: n.host,
              search: n.search ? n.search.replace(/^\?/, "") : "",
              hash: n.hash ? n.hash.replace(/^#/, "") : "",
              hostname: n.hostname,
              port: n.port,
              pathname:
                n.pathname.charAt(0) === "/" ? n.pathname : "/" + n.pathname,
            }
          );
        }
        return (
          (c = u(window.location.href)),
          function (b) {
            const k = ie.isString(b) ? u(b) : b;
            return k.protocol === c.protocol && k.host === c.host;
          }
        );
      })()
    : (function () {
        return function () {
          return !0;
        };
      })(),
  pv = cl.hasStandardBrowserEnv
    ? {
        write(e, i, n, c, u, g) {
          const b = [e + "=" + encodeURIComponent(i)];
          ie.isNumber(n) && b.push("expires=" + new Date(n).toGMTString()),
            ie.isString(c) && b.push("path=" + c),
            ie.isString(u) && b.push("domain=" + u),
            g === !0 && b.push("secure"),
            (document.cookie = b.join("; "));
        },
        read(e) {
          const i = document.cookie.match(
            new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"),
          );
          return i ? decodeURIComponent(i[3]) : null;
        },
        remove(e) {
          this.write(e, "", Date.now() - 864e5);
        },
      }
    : {
        write() {},
        read() {
          return null;
        },
        remove() {},
      };
function gv(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function mv(e, i) {
  return i ? e.replace(/\/?\/$/, "") + "/" + i.replace(/^\/+/, "") : e;
}
function up(e, i) {
  return e && !gv(i) ? mv(e, i) : i;
}
const Gu = (e) => (e instanceof hl ? { ...e } : e);
function Hi(e, i) {
  i = i || {};
  const n = {};
  function c(I, F, H) {
    return ie.isPlainObject(I) && ie.isPlainObject(F)
      ? ie.merge.call({ caseless: H }, I, F)
      : ie.isPlainObject(F)
        ? ie.merge({}, F)
        : ie.isArray(F)
          ? F.slice()
          : F;
  }
  function u(I, F, H) {
    if (ie.isUndefined(F)) {
      if (!ie.isUndefined(I)) return c(void 0, I, H);
    } else return c(I, F, H);
  }
  function g(I, F) {
    if (!ie.isUndefined(F)) return c(void 0, F);
  }
  function b(I, F) {
    if (ie.isUndefined(F)) {
      if (!ie.isUndefined(I)) return c(void 0, I);
    } else return c(void 0, F);
  }
  function k(I, F, H) {
    if (H in i) return c(I, F);
    if (H in e) return c(void 0, I);
  }
  const E = {
    url: g,
    method: g,
    data: g,
    baseURL: b,
    transformRequest: b,
    transformResponse: b,
    paramsSerializer: b,
    timeout: b,
    timeoutMessage: b,
    withCredentials: b,
    withXSRFToken: b,
    adapter: b,
    responseType: b,
    xsrfCookieName: b,
    xsrfHeaderName: b,
    onUploadProgress: b,
    onDownloadProgress: b,
    decompress: b,
    maxContentLength: b,
    maxBodyLength: b,
    beforeRedirect: b,
    transport: b,
    httpAgent: b,
    httpsAgent: b,
    cancelToken: b,
    socketPath: b,
    responseEncoding: b,
    validateStatus: k,
    headers: (I, F) => u(Gu(I), Gu(F), !0),
  };
  return (
    ie.forEach(Object.keys(Object.assign({}, e, i)), function (F) {
      const H = E[F] || u,
        G = H(e[F], i[F], F);
      (ie.isUndefined(G) && H !== k) || (n[F] = G);
    }),
    n
  );
}
const dp = (e) => {
    const i = Hi({}, e);
    let {
      data: n,
      withXSRFToken: c,
      xsrfHeaderName: u,
      xsrfCookieName: g,
      headers: b,
      auth: k,
    } = i;
    (i.headers = b = hl.from(b)),
      (i.url = sp(up(i.baseURL, i.url), e.params, e.paramsSerializer)),
      k &&
        b.set(
          "Authorization",
          "Basic " +
            btoa(
              (k.username || "") +
                ":" +
                (k.password ? unescape(encodeURIComponent(k.password)) : ""),
            ),
        );
    let E;
    if (ie.isFormData(n)) {
      if (cl.hasStandardBrowserEnv || cl.hasStandardBrowserWebWorkerEnv)
        b.setContentType(void 0);
      else if ((E = b.getContentType()) !== !1) {
        const [I, ...F] = E
          ? E.split(";")
              .map((H) => H.trim())
              .filter(Boolean)
          : [];
        b.setContentType([I || "multipart/form-data", ...F].join("; "));
      }
    }
    if (
      cl.hasStandardBrowserEnv &&
      (c && ie.isFunction(c) && (c = c(i)), c || (c !== !1 && fv(i.url)))
    ) {
      const I = u && g && pv.read(g);
      I && b.set(u, I);
    }
    return i;
  },
  xv = typeof XMLHttpRequest < "u",
  vv =
    xv &&
    function (e) {
      return new Promise(function (n, c) {
        const u = dp(e);
        let g = u.data;
        const b = hl.from(u.headers).normalize();
        let { responseType: k } = u,
          E;
        function I() {
          u.cancelToken && u.cancelToken.unsubscribe(E),
            u.signal && u.signal.removeEventListener("abort", E);
        }
        let F = new XMLHttpRequest();
        F.open(u.method.toUpperCase(), u.url, !0), (F.timeout = u.timeout);
        function H() {
          if (!F) return;
          const K = hl.from(
              "getAllResponseHeaders" in F && F.getAllResponseHeaders(),
            ),
            Q = {
              data:
                !k || k === "text" || k === "json"
                  ? F.responseText
                  : F.response,
              status: F.status,
              statusText: F.statusText,
              headers: K,
              config: e,
              request: F,
            };
          hp(
            function (B) {
              n(B), I();
            },
            function (B) {
              c(B), I();
            },
            Q,
          ),
            (F = null);
        }
        "onloadend" in F
          ? (F.onloadend = H)
          : (F.onreadystatechange = function () {
              !F ||
                F.readyState !== 4 ||
                (F.status === 0 &&
                  !(F.responseURL && F.responseURL.indexOf("file:") === 0)) ||
                setTimeout(H);
            }),
          (F.onabort = function () {
            F &&
              (c(new Ae("Request aborted", Ae.ECONNABORTED, u, F)), (F = null));
          }),
          (F.onerror = function () {
            c(new Ae("Network Error", Ae.ERR_NETWORK, u, F)), (F = null);
          }),
          (F.ontimeout = function () {
            let q = u.timeout
              ? "timeout of " + u.timeout + "ms exceeded"
              : "timeout exceeded";
            const Q = u.transitional || ap;
            u.timeoutErrorMessage && (q = u.timeoutErrorMessage),
              c(
                new Ae(
                  q,
                  Q.clarifyTimeoutError ? Ae.ETIMEDOUT : Ae.ECONNABORTED,
                  u,
                  F,
                ),
              ),
              (F = null);
          }),
          g === void 0 && b.setContentType(null),
          "setRequestHeader" in F &&
            ie.forEach(b.toJSON(), function (q, Q) {
              F.setRequestHeader(Q, q);
            }),
          ie.isUndefined(u.withCredentials) ||
            (F.withCredentials = !!u.withCredentials),
          k && k !== "json" && (F.responseType = u.responseType),
          typeof u.onDownloadProgress == "function" &&
            F.addEventListener("progress", ua(u.onDownloadProgress, !0)),
          typeof u.onUploadProgress == "function" &&
            F.upload &&
            F.upload.addEventListener("progress", ua(u.onUploadProgress)),
          (u.cancelToken || u.signal) &&
            ((E = (K) => {
              F &&
                (c(!K || K.type ? new Hr(null, e, F) : K),
                F.abort(),
                (F = null));
            }),
            u.cancelToken && u.cancelToken.subscribe(E),
            u.signal &&
              (u.signal.aborted ? E() : u.signal.addEventListener("abort", E)));
        const G = hv(u.url);
        if (G && cl.protocols.indexOf(G) === -1) {
          c(new Ae("Unsupported protocol " + G + ":", Ae.ERR_BAD_REQUEST, e));
          return;
        }
        F.send(g || null);
      });
    },
  yv = (e, i) => {
    let n = new AbortController(),
      c;
    const u = function (E) {
      if (!c) {
        (c = !0), b();
        const I = E instanceof Error ? E : this.reason;
        n.abort(
          I instanceof Ae ? I : new Hr(I instanceof Error ? I.message : I),
        );
      }
    };
    let g =
      i &&
      setTimeout(() => {
        u(new Ae(`timeout ${i} of ms exceeded`, Ae.ETIMEDOUT));
      }, i);
    const b = () => {
      e &&
        (g && clearTimeout(g),
        (g = null),
        e.forEach((E) => {
          E &&
            (E.removeEventListener
              ? E.removeEventListener("abort", u)
              : E.unsubscribe(u));
        }),
        (e = null));
    };
    e.forEach((E) => E && E.addEventListener && E.addEventListener("abort", u));
    const { signal: k } = n;
    return (
      (k.unsubscribe = b),
      [
        k,
        () => {
          g && clearTimeout(g), (g = null);
        },
      ]
    );
  },
  bv = yv,
  wv = function* (e, i) {
    let n = e.byteLength;
    if (!i || n < i) {
      yield e;
      return;
    }
    let c = 0,
      u;
    for (; c < n; ) (u = c + i), yield e.slice(c, u), (c = u);
  },
  kv = async function* (e, i, n) {
    for await (const c of e)
      yield* wv(ArrayBuffer.isView(c) ? c : await n(String(c)), i);
  },
  Uu = (e, i, n, c, u) => {
    const g = kv(e, i, u);
    let b = 0;
    return new ReadableStream(
      {
        type: "bytes",
        async pull(k) {
          const { done: E, value: I } = await g.next();
          if (E) {
            k.close(), c();
            return;
          }
          let F = I.byteLength;
          n && n((b += F)), k.enqueue(new Uint8Array(I));
        },
        cancel(k) {
          return c(k), g.return();
        },
      },
      { highWaterMark: 2 },
    );
  },
  Zu = (e, i) => {
    const n = e != null;
    return (c) =>
      setTimeout(() => i({ lengthComputable: n, total: e, loaded: c }));
  },
  Da =
    typeof fetch == "function" &&
    typeof Request == "function" &&
    typeof Response == "function",
  fp = Da && typeof ReadableStream == "function",
  F0 =
    Da &&
    (typeof TextEncoder == "function"
      ? (
          (e) => (i) =>
            e.encode(i)
        )(new TextEncoder())
      : async (e) => new Uint8Array(await new Response(e).arrayBuffer())),
  Sv =
    fp &&
    (() => {
      let e = !1;
      const i = new Request(cl.origin, {
        body: new ReadableStream(),
        method: "POST",
        get duplex() {
          return (e = !0), "half";
        },
      }).headers.has("Content-Type");
      return e && !i;
    })(),
  $u = 64 * 1024,
  D0 =
    fp &&
    !!(() => {
      try {
        return ie.isReadableStream(new Response("").body);
      } catch {}
    })(),
  da = { stream: D0 && ((e) => e.body) };
Da &&
  ((e) => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((i) => {
      !da[i] &&
        (da[i] = ie.isFunction(e[i])
          ? (n) => n[i]()
          : (n, c) => {
              throw new Ae(
                `Response type '${i}' is not supported`,
                Ae.ERR_NOT_SUPPORT,
                c,
              );
            });
    });
  })(new Response());
const Cv = async (e) => {
    if (e == null) return 0;
    if (ie.isBlob(e)) return e.size;
    if (ie.isSpecCompliantForm(e))
      return (await new Request(e).arrayBuffer()).byteLength;
    if (ie.isArrayBufferView(e)) return e.byteLength;
    if ((ie.isURLSearchParams(e) && (e = e + ""), ie.isString(e)))
      return (await F0(e)).byteLength;
  },
  Av = async (e, i) => {
    const n = ie.toFiniteNumber(e.getContentLength());
    return n ?? Cv(i);
  },
  Ev =
    Da &&
    (async (e) => {
      let {
        url: i,
        method: n,
        data: c,
        signal: u,
        cancelToken: g,
        timeout: b,
        onDownloadProgress: k,
        onUploadProgress: E,
        responseType: I,
        headers: F,
        withCredentials: H = "same-origin",
        fetchOptions: G,
      } = dp(e);
      I = I ? (I + "").toLowerCase() : "text";
      let [K, q] = u || g || b ? bv([u, g], b) : [],
        Q,
        ue;
      const B = () => {
        !Q &&
          setTimeout(() => {
            K && K.unsubscribe();
          }),
          (Q = !0);
      };
      let L;
      try {
        if (
          E &&
          Sv &&
          n !== "get" &&
          n !== "head" &&
          (L = await Av(F, c)) !== 0
        ) {
          let oe = new Request(i, { method: "POST", body: c, duplex: "half" }),
            pe;
          ie.isFormData(c) &&
            (pe = oe.headers.get("content-type")) &&
            F.setContentType(pe),
            oe.body && (c = Uu(oe.body, $u, Zu(L, ua(E)), null, F0));
        }
        ie.isString(H) || (H = H ? "cors" : "omit"),
          (ue = new Request(i, {
            ...G,
            signal: K,
            method: n.toUpperCase(),
            headers: F.normalize().toJSON(),
            body: c,
            duplex: "half",
            withCredentials: H,
          }));
        let W = await fetch(ue);
        const te = D0 && (I === "stream" || I === "response");
        if (D0 && (k || te)) {
          const oe = {};
          ["status", "statusText", "headers"].forEach((ae) => {
            oe[ae] = W[ae];
          });
          const pe = ie.toFiniteNumber(W.headers.get("content-length"));
          W = new Response(
            Uu(W.body, $u, k && Zu(pe, ua(k, !0)), te && B, F0),
            oe,
          );
        }
        I = I || "text";
        let Z = await da[ie.findKey(da, I) || "text"](W, e);
        return (
          !te && B(),
          q && q(),
          await new Promise((oe, pe) => {
            hp(oe, pe, {
              data: Z,
              headers: hl.from(W.headers),
              status: W.status,
              statusText: W.statusText,
              config: e,
              request: ue,
            });
          })
        );
      } catch (W) {
        throw (
          (B(),
          W && W.name === "TypeError" && /fetch/i.test(W.message)
            ? Object.assign(new Ae("Network Error", Ae.ERR_NETWORK, e, ue), {
                cause: W.cause || W,
              })
            : Ae.from(W, W && W.code, e, ue))
        );
      }
    }),
  _0 = { http: H3, xhr: vv, fetch: Ev };
ie.forEach(_0, (e, i) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: i });
    } catch {}
    Object.defineProperty(e, "adapterName", { value: i });
  }
});
const qu = (e) => `- ${e}`,
  Pv = (e) => ie.isFunction(e) || e === null || e === !1,
  pp = {
    getAdapter: (e) => {
      e = ie.isArray(e) ? e : [e];
      const { length: i } = e;
      let n, c;
      const u = {};
      for (let g = 0; g < i; g++) {
        n = e[g];
        let b;
        if (
          ((c = n),
          !Pv(n) && ((c = _0[(b = String(n)).toLowerCase()]), c === void 0))
        )
          throw new Ae(`Unknown adapter '${b}'`);
        if (c) break;
        u[b || "#" + g] = c;
      }
      if (!c) {
        const g = Object.entries(u).map(
          ([k, E]) =>
            `adapter ${k} ` +
            (E === !1
              ? "is not supported by the environment"
              : "is not available in the build"),
        );
        let b = i
          ? g.length > 1
            ? `since :
` +
              g.map(qu).join(`
`)
            : " " + qu(g[0])
          : "as no adapter specified";
        throw new Ae(
          "There is no suitable adapter to dispatch the request " + b,
          "ERR_NOT_SUPPORT",
        );
      }
      return c;
    },
    adapters: _0,
  };
function Co(e) {
  if (
    (e.cancelToken && e.cancelToken.throwIfRequested(),
    e.signal && e.signal.aborted)
  )
    throw new Hr(null, e);
}
function Qu(e) {
  return (
    Co(e),
    (e.headers = hl.from(e.headers)),
    (e.data = So.call(e, e.transformRequest)),
    ["post", "put", "patch"].indexOf(e.method) !== -1 &&
      e.headers.setContentType("application/x-www-form-urlencoded", !1),
    pp
      .getAdapter(e.adapter || Qc.adapter)(e)
      .then(
        function (c) {
          return (
            Co(e),
            (c.data = So.call(e, e.transformResponse, c)),
            (c.headers = hl.from(c.headers)),
            c
          );
        },
        function (c) {
          return (
            cp(c) ||
              (Co(e),
              c &&
                c.response &&
                ((c.response.data = So.call(
                  e,
                  e.transformResponse,
                  c.response,
                )),
                (c.response.headers = hl.from(c.response.headers)))),
            Promise.reject(c)
          );
        },
      )
  );
}
const gp = "1.7.2",
  Kc = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(
  (e, i) => {
    Kc[e] = function (c) {
      return typeof c === e || "a" + (i < 1 ? "n " : " ") + e;
    };
  },
);
const Ku = {};
Kc.transitional = function (i, n, c) {
  function u(g, b) {
    return (
      "[Axios v" +
      gp +
      "] Transitional option '" +
      g +
      "'" +
      b +
      (c ? ". " + c : "")
    );
  }
  return (g, b, k) => {
    if (i === !1)
      throw new Ae(
        u(b, " has been removed" + (n ? " in " + n : "")),
        Ae.ERR_DEPRECATED,
      );
    return (
      n &&
        !Ku[b] &&
        ((Ku[b] = !0),
        console.warn(
          u(
            b,
            " has been deprecated since v" +
              n +
              " and will be removed in the near future",
          ),
        )),
      i ? i(g, b, k) : !0
    );
  };
};
function Lv(e, i, n) {
  if (typeof e != "object")
    throw new Ae("options must be an object", Ae.ERR_BAD_OPTION_VALUE);
  const c = Object.keys(e);
  let u = c.length;
  for (; u-- > 0; ) {
    const g = c[u],
      b = i[g];
    if (b) {
      const k = e[g],
        E = k === void 0 || b(k, g, e);
      if (E !== !0)
        throw new Ae("option " + g + " must be " + E, Ae.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0) throw new Ae("Unknown option " + g, Ae.ERR_BAD_OPTION);
  }
}
const j0 = { assertOptions: Lv, validators: Kc },
  Yl = j0.validators;
class fa {
  constructor(i) {
    (this.defaults = i),
      (this.interceptors = { request: new Wu(), response: new Wu() });
  }
  async request(i, n) {
    try {
      return await this._request(i, n);
    } catch (c) {
      if (c instanceof Error) {
        let u;
        Error.captureStackTrace
          ? Error.captureStackTrace((u = {}))
          : (u = new Error());
        const g = u.stack ? u.stack.replace(/^.+\n/, "") : "";
        try {
          c.stack
            ? g &&
              !String(c.stack).endsWith(g.replace(/^.+\n.+\n/, "")) &&
              (c.stack +=
                `
` + g)
            : (c.stack = g);
        } catch {}
      }
      throw c;
    }
  }
  _request(i, n) {
    typeof i == "string" ? ((n = n || {}), (n.url = i)) : (n = i || {}),
      (n = Hi(this.defaults, n));
    const { transitional: c, paramsSerializer: u, headers: g } = n;
    c !== void 0 &&
      j0.assertOptions(
        c,
        {
          silentJSONParsing: Yl.transitional(Yl.boolean),
          forcedJSONParsing: Yl.transitional(Yl.boolean),
          clarifyTimeoutError: Yl.transitional(Yl.boolean),
        },
        !1,
      ),
      u != null &&
        (ie.isFunction(u)
          ? (n.paramsSerializer = { serialize: u })
          : j0.assertOptions(
              u,
              { encode: Yl.function, serialize: Yl.function },
              !0,
            )),
      (n.method = (n.method || this.defaults.method || "get").toLowerCase());
    let b = g && ie.merge(g.common, g[n.method]);
    g &&
      ie.forEach(
        ["delete", "get", "head", "post", "put", "patch", "common"],
        (q) => {
          delete g[q];
        },
      ),
      (n.headers = hl.concat(b, g));
    const k = [];
    let E = !0;
    this.interceptors.request.forEach(function (Q) {
      (typeof Q.runWhen == "function" && Q.runWhen(n) === !1) ||
        ((E = E && Q.synchronous), k.unshift(Q.fulfilled, Q.rejected));
    });
    const I = [];
    this.interceptors.response.forEach(function (Q) {
      I.push(Q.fulfilled, Q.rejected);
    });
    let F,
      H = 0,
      G;
    if (!E) {
      const q = [Qu.bind(this), void 0];
      for (
        q.unshift.apply(q, k),
          q.push.apply(q, I),
          G = q.length,
          F = Promise.resolve(n);
        H < G;

      )
        F = F.then(q[H++], q[H++]);
      return F;
    }
    G = k.length;
    let K = n;
    for (H = 0; H < G; ) {
      const q = k[H++],
        Q = k[H++];
      try {
        K = q(K);
      } catch (ue) {
        Q.call(this, ue);
        break;
      }
    }
    try {
      F = Qu.call(this, K);
    } catch (q) {
      return Promise.reject(q);
    }
    for (H = 0, G = I.length; H < G; ) F = F.then(I[H++], I[H++]);
    return F;
  }
  getUri(i) {
    i = Hi(this.defaults, i);
    const n = up(i.baseURL, i.url);
    return sp(n, i.params, i.paramsSerializer);
  }
}
ie.forEach(["delete", "get", "head", "options"], function (i) {
  fa.prototype[i] = function (n, c) {
    return this.request(
      Hi(c || {}, { method: i, url: n, data: (c || {}).data }),
    );
  };
});
ie.forEach(["post", "put", "patch"], function (i) {
  function n(c) {
    return function (g, b, k) {
      return this.request(
        Hi(k || {}, {
          method: i,
          headers: c ? { "Content-Type": "multipart/form-data" } : {},
          url: g,
          data: b,
        }),
      );
    };
  }
  (fa.prototype[i] = n()), (fa.prototype[i + "Form"] = n(!0));
});
const Fs = fa;
class Jc {
  constructor(i) {
    if (typeof i != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function (g) {
      n = g;
    });
    const c = this;
    this.promise.then((u) => {
      if (!c._listeners) return;
      let g = c._listeners.length;
      for (; g-- > 0; ) c._listeners[g](u);
      c._listeners = null;
    }),
      (this.promise.then = (u) => {
        let g;
        const b = new Promise((k) => {
          c.subscribe(k), (g = k);
        }).then(u);
        return (
          (b.cancel = function () {
            c.unsubscribe(g);
          }),
          b
        );
      }),
      i(function (g, b, k) {
        c.reason || ((c.reason = new Hr(g, b, k)), n(c.reason));
      });
  }
  throwIfRequested() {
    if (this.reason) throw this.reason;
  }
  subscribe(i) {
    if (this.reason) {
      i(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(i) : (this._listeners = [i]);
  }
  unsubscribe(i) {
    if (!this._listeners) return;
    const n = this._listeners.indexOf(i);
    n !== -1 && this._listeners.splice(n, 1);
  }
  static source() {
    let i;
    return {
      token: new Jc(function (u) {
        i = u;
      }),
      cancel: i,
    };
  }
}
const Tv = Jc;
function Mv(e) {
  return function (n) {
    return e.apply(null, n);
  };
}
function Rv(e) {
  return ie.isObject(e) && e.isAxiosError === !0;
}
const X0 = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};
Object.entries(X0).forEach(([e, i]) => {
  X0[i] = e;
});
const Nv = X0;
function mp(e) {
  const i = new Fs(e),
    n = Zf(Fs.prototype.request, i);
  return (
    ie.extend(n, Fs.prototype, i, { allOwnKeys: !0 }),
    ie.extend(n, i, null, { allOwnKeys: !0 }),
    (n.create = function (u) {
      return mp(Hi(e, u));
    }),
    n
  );
}
const lt = mp(Qc);
lt.Axios = Fs;
lt.CanceledError = Hr;
lt.CancelToken = Tv;
lt.isCancel = cp;
lt.VERSION = gp;
lt.toFormData = za;
lt.AxiosError = Ae;
lt.Cancel = lt.CanceledError;
lt.all = function (i) {
  return Promise.all(i);
};
lt.spread = Mv;
lt.isAxiosError = Rv;
lt.mergeConfig = Hi;
lt.AxiosHeaders = hl;
lt.formToJSON = (e) => op(ie.isHTMLForm(e) ? new FormData(e) : e);
lt.getAdapter = pp.getAdapter;
lt.HttpStatusCode = Nv;
lt.default = lt;
const Iv = lt,
  Ov = "4UGNGQUUFZ6DU9M2WKXYGH3RJ",
  zv =
    "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/",
  Fv = async (e) => (await Iv.get(`${zv}${e}/?key=${Ov}`)).data,
  xp = (e) => (
    localStorage.setItem("city", e),
    l3({ queryKey: ["weather", e], queryFn: () => Fv(e), enabled: !!e })
  ),
  Ju = (e) => {
    let i;
    const n = new Set(),
      c = (F, H) => {
        const G = typeof F == "function" ? F(i) : F;
        if (!Object.is(G, i)) {
          const K = i;
          (i =
            H ?? (typeof G != "object" || G === null)
              ? G
              : Object.assign({}, i, G)),
            n.forEach((q) => q(i, K));
        }
      },
      u = () => i,
      E = {
        setState: c,
        getState: u,
        getInitialState: () => I,
        subscribe: (F) => (n.add(F), () => n.delete(F)),
        destroy: () => {
          n.clear();
        },
      },
      I = (i = e(c, u, E));
    return E;
  },
  Dv = (e) => (e ? Ju(e) : Ju);
var vp = { exports: {} },
  yp = {},
  bp = { exports: {} },
  wp = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var zr = ce;
function _v(e, i) {
  return (e === i && (e !== 0 || 1 / e === 1 / i)) || (e !== e && i !== i);
}
var jv = typeof Object.is == "function" ? Object.is : _v,
  Xv = zr.useState,
  Hv = zr.useEffect,
  Yv = zr.useLayoutEffect,
  Bv = zr.useDebugValue;
function Wv(e, i) {
  var n = i(),
    c = Xv({ inst: { value: n, getSnapshot: i } }),
    u = c[0].inst,
    g = c[1];
  return (
    Yv(
      function () {
        (u.value = n), (u.getSnapshot = i), Ao(u) && g({ inst: u });
      },
      [e, n, i],
    ),
    Hv(
      function () {
        return (
          Ao(u) && g({ inst: u }),
          e(function () {
            Ao(u) && g({ inst: u });
          })
        );
      },
      [e],
    ),
    Bv(n),
    n
  );
}
function Ao(e) {
  var i = e.getSnapshot;
  e = e.value;
  try {
    var n = i();
    return !jv(e, n);
  } catch {
    return !0;
  }
}
function Vv(e, i) {
  return i();
}
var Gv =
  typeof window > "u" ||
  typeof window.document > "u" ||
  typeof window.document.createElement > "u"
    ? Vv
    : Wv;
wp.useSyncExternalStore =
  zr.useSyncExternalStore !== void 0 ? zr.useSyncExternalStore : Gv;
bp.exports = wp;
var Uv = bp.exports;
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var _a = ce,
  Zv = Uv;
function $v(e, i) {
  return (e === i && (e !== 0 || 1 / e === 1 / i)) || (e !== e && i !== i);
}
var qv = typeof Object.is == "function" ? Object.is : $v,
  Qv = Zv.useSyncExternalStore,
  Kv = _a.useRef,
  Jv = _a.useEffect,
  ey = _a.useMemo,
  ty = _a.useDebugValue;
yp.useSyncExternalStoreWithSelector = function (e, i, n, c, u) {
  var g = Kv(null);
  if (g.current === null) {
    var b = { hasValue: !1, value: null };
    g.current = b;
  } else b = g.current;
  g = ey(
    function () {
      function E(K) {
        if (!I) {
          if (((I = !0), (F = K), (K = c(K)), u !== void 0 && b.hasValue)) {
            var q = b.value;
            if (u(q, K)) return (H = q);
          }
          return (H = K);
        }
        if (((q = H), qv(F, K))) return q;
        var Q = c(K);
        return u !== void 0 && u(q, Q) ? q : ((F = K), (H = Q));
      }
      var I = !1,
        F,
        H,
        G = n === void 0 ? null : n;
      return [
        function () {
          return E(i());
        },
        G === null
          ? void 0
          : function () {
              return E(G());
            },
      ];
    },
    [i, n, c, u],
  );
  var k = Qv(e, g[0], g[1]);
  return (
    Jv(
      function () {
        (b.hasValue = !0), (b.value = k);
      },
      [k],
    ),
    ty(k),
    k
  );
};
vp.exports = yp;
var ly = vp.exports;
const iy = Y0(ly),
  { useDebugValue: ry } = U0,
  { useSyncExternalStoreWithSelector: ny } = iy;
const sy = (e) => e;
function ay(e, i = sy, n) {
  const c = ny(
    e.subscribe,
    e.getState,
    e.getServerState || e.getInitialState,
    i,
    n,
  );
  return ry(c), c;
}
const e1 = (e) => {
    const i = typeof e == "function" ? Dv(e) : e,
      n = (c, u) => ay(i, c, u);
    return Object.assign(n, i), n;
  },
  oy = (e) => (e ? e1(e) : e1),
  es = oy((e) => ({ name: "vizag", updateName: (i) => e({ name: i }) })),
  cy = (e) => {
    const { name: i, updateName: n } = es(),
      [c, u] = ce.useState(""),
      [g, b] = ce.useState("");
    xp(i);
    const k = (E) => {
      E.preventDefault(), n(c), b(c);
    };
    return _.jsx("header", {
      className:
        "sticky top-0 z-999 flex w-full bg-white drop-shadow-1 dark:bg-boxdark dark:drop-shadow-none",
      children: _.jsxs("div", {
        className:
          "flex flex-grow items-center justify-between px-4 py-4 shadow-2 md:px-6 2xl:px-11",
        children: [
          _.jsxs("div", {
            className: "flex items-center gap-2 sm:gap-4 lg:hidden",
            children: [
              _.jsx("button", {
                "aria-controls": "sidebar",
                onClick: (E) => {
                  E.stopPropagation(), e.setSidebarOpen(!e.sidebarOpen);
                },
                className:
                  "z-99999 block rounded-sm border border-stroke bg-white p-1.5 shadow-sm dark:border-strokedark dark:bg-boxdark lg:hidden",
                children: _.jsxs("span", {
                  className: "relative block h-5.5 w-5.5 cursor-pointer",
                  children: [
                    _.jsxs("span", {
                      className: "du-block absolute right-0 h-full w-full",
                      children: [
                        _.jsx("span", {
                          className: `relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-[0] duration-200 ease-in-out dark:bg-white ${!e.sidebarOpen && "!w-full delay-300"}`,
                        }),
                        _.jsx("span", {
                          className: `relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-150 duration-200 ease-in-out dark:bg-white ${!e.sidebarOpen && "delay-400 !w-full"}`,
                        }),
                        _.jsx("span", {
                          className: `relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-200 duration-200 ease-in-out dark:bg-white ${!e.sidebarOpen && "!w-full delay-500"}`,
                        }),
                      ],
                    }),
                    _.jsxs("span", {
                      className: "absolute right-0 h-full w-full rotate-45",
                      children: [
                        _.jsx("span", {
                          className: `absolute left-2.5 top-0 block h-full w-0.5 rounded-sm bg-black delay-300 duration-200 ease-in-out dark:bg-white ${!e.sidebarOpen && "!h-0 !delay-[0]"}`,
                        }),
                        _.jsx("span", {
                          className: `delay-400 absolute left-0 top-2.5 block h-0.5 w-full rounded-sm bg-black duration-200 ease-in-out dark:bg-white ${!e.sidebarOpen && "!h-0 !delay-200"}`,
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              _.jsx(Yc, {
                className: "block flex-shrink-0 lg:hidden",
                to: "/",
                children: _.jsx("img", { src: yx, alt: "Logo" }),
              }),
            ],
          }),
          _.jsx("div", {
            className: "hidden sm:block",
            children: _.jsx("form", {
              onSubmit: k,
              method: "POST",
              children: _.jsxs("div", {
                className: "relative",
                children: [
                  _.jsx("button", {
                    type: "submit",
                    className: "absolute left-0 top-1/2 -translate-y-1/2",
                    children: _.jsxs("svg", {
                      className:
                        "fill-body hover:fill-primary dark:fill-bodydark dark:hover:fill-primary",
                      width: "20",
                      height: "20",
                      viewBox: "0 0 20 20",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      children: [
                        _.jsx("path", {
                          fillRule: "evenodd",
                          clipRule: "evenodd",
                          d: "M9.16666 3.33332C5.945 3.33332 3.33332 5.945 3.33332 9.16666C3.33332 12.3883 5.945 15 9.16666 15C12.3883 15 15 12.3883 15 9.16666C15 5.945 12.3883 3.33332 9.16666 3.33332ZM1.66666 9.16666C1.66666 5.02452 5.02452 1.66666 9.16666 1.66666C13.3088 1.66666 16.6667 5.02452 16.6667 9.16666C16.6667 13.3088 13.3088 16.6667 9.16666 16.6667C5.02452 16.6667 1.66666 13.3088 1.66666 9.16666Z",
                          fill: "",
                        }),
                        _.jsx("path", {
                          fillRule: "evenodd",
                          clipRule: "evenodd",
                          d: "M13.2857 13.2857C13.6112 12.9603 14.1388 12.9603 14.4642 13.2857L18.0892 16.9107C18.4147 17.2362 18.4147 17.7638 18.0892 18.0892C17.7638 18.4147 17.2362 18.4147 16.9107 18.0892L13.2857 14.4642C12.9603 14.1388 12.9603 13.6112 13.2857 13.2857Z",
                          fill: "",
                        }),
                      ],
                    }),
                  }),
                  _.jsx("input", {
                    type: "text",
                    placeholder: "Enter city or location for current weather",
                    className:
                      "w-full bg-transparent pl-9 pr-4 text-black focus:outline-none dark:text-white xl:w-125",
                    value: c,
                    onChange: (E) => u(E.target.value),
                  }),
                ],
              }),
            }),
          }),
          _.jsx("div", {
            className: "flex items-center gap-3 2xsm:gap-7",
            children: _.jsx("ul", {
              className: "flex items-center gap-2 2xsm:gap-4",
              children: _.jsx(kx, {}),
            }),
          }),
        ],
      }),
    });
  },
  hy = "/assets/logo-162ee3ec.svg",
  uy = ({ sidebarOpen: e, setSidebarOpen: i }) => {
    const n = xi(),
      { pathname: c } = n,
      u = ce.useRef(null),
      g = ce.useRef(null),
      b = localStorage.getItem("sidebar-expanded"),
      [k, E] = ce.useState(b === null ? !1 : b === "true");
    return (
      ce.useEffect(() => {
        const I = ({ target: F }) => {
          !g.current ||
            !u.current ||
            !e ||
            g.current.contains(F) ||
            u.current.contains(F) ||
            i(!1);
        };
        return (
          document.addEventListener("click", I),
          () => document.removeEventListener("click", I)
        );
      }),
      ce.useEffect(() => {
        const I = ({ keyCode: F }) => {
          !e || F !== 27 || i(!1);
        };
        return (
          document.addEventListener("keydown", I),
          () => document.removeEventListener("keydown", I)
        );
      }),
      ce.useEffect(() => {
        var I, F;
        localStorage.setItem("sidebar-expanded", k.toString()),
          k
            ? (I = document.querySelector("body")) == null ||
              I.classList.add("sidebar-expanded")
            : (F = document.querySelector("body")) == null ||
              F.classList.remove("sidebar-expanded");
      }, [k]),
      _.jsxs("aside", {
        ref: g,
        className: `absolute left-0 top-0 z-9999 flex h-screen w-72.5 flex-col overflow-y-hidden bg-black duration-300 ease-linear dark:bg-boxdark lg:static lg:translate-x-0 ${e ? "translate-x-0" : "-translate-x-full"}`,
        children: [
          _.jsxs("div", {
            className:
              "flex items-center justify-between gap-2 px-6 py-5.5 lg:py-6.5",
            children: [
              _.jsx(Mu, {
                to: "/",
                children: _.jsx("img", { src: hy, alt: "Logo" }),
              }),
              _.jsx("button", {
                ref: u,
                onClick: () => i(!e),
                "aria-controls": "sidebar",
                "aria-expanded": e,
                className: "block lg:hidden",
                children: _.jsx("svg", {
                  className: "fill-current",
                  width: "20",
                  height: "18",
                  viewBox: "0 0 20 18",
                  fill: "none",
                  xmlns: "http://www.w3.org/2000/svg",
                  children: _.jsx("path", {
                    d: "M19 8.175H2.98748L9.36248 1.6875C9.69998 1.35 9.69998 0.825 9.36248 0.4875C9.02498 0.15 8.49998 0.15 8.16248 0.4875L0.399976 8.3625C0.0624756 8.7 0.0624756 9.225 0.399976 9.5625L8.16248 17.4375C8.31248 17.5875 8.53748 17.7 8.76248 17.7C8.98748 17.7 9.17498 17.625 9.36248 17.475C9.69998 17.1375 9.69998 16.6125 9.36248 16.275L3.02498 9.8625H19C19.45 9.8625 19.825 9.4875 19.825 9.0375C19.825 8.55 19.45 8.175 19 8.175Z",
                    fill: "",
                  }),
                }),
              }),
            ],
          }),
          _.jsx("div", {
            className:
              "no-scrollbar flex flex-col overflow-y-auto duration-300 ease-linear",
            children: _.jsx("nav", {
              className: "mt-5 py-4 px-4 lg:mt-9 lg:px-6",
              children: _.jsxs("div", {
                children: [
                  _.jsx("h3", {
                    className: "mb-4 ml-4 text-sm font-semibold text-bodydark2",
                    children: "MENU",
                  }),
                  _.jsx("ul", {
                    className: "mb-6 flex flex-col gap-1.5",
                    children: _.jsx("li", {
                      children: _.jsxs(Mu, {
                        to: "/",
                        className: `group relative flex items-center gap-2.5 rounded-sm py-2 px-4 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 ${c.includes("") && "bg-graydark dark:bg-meta-4"}`,
                        children: [
                          _.jsx("svg", {
                            className: "fill-current",
                            width: "18",
                            height: "18",
                            viewBox: "0 0 18 18",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg",
                            children: _.jsx("path", {
                              d: "M15.7499 2.9812H14.2874V2.36245C14.2874 2.02495 14.0062 1.71558 13.6405 1.71558C13.2749 1.71558 12.9937 1.99683 12.9937 2.36245V2.9812H4.97803V2.36245C4.97803 2.02495 4.69678 1.71558 4.33115 1.71558C3.96553 1.71558 3.68428 1.99683 3.68428 2.36245V2.9812H2.2499C1.29365 2.9812 0.478027 3.7687 0.478027 4.75308V14.5406C0.478027 15.4968 1.26553 16.3125 2.2499 16.3125H15.7499C16.7062 16.3125 17.5218 15.525 17.5218 14.5406V4.72495C17.5218 3.7687 16.7062 2.9812 15.7499 2.9812ZM1.77178 8.21245H4.1624V10.9968H1.77178V8.21245ZM5.42803 8.21245H8.38115V10.9968H5.42803V8.21245ZM8.38115 12.2625V15.0187H5.42803V12.2625H8.38115ZM9.64678 12.2625H12.5999V15.0187H9.64678V12.2625ZM9.64678 10.9968V8.21245H12.5999V10.9968H9.64678ZM13.8374 8.21245H16.228V10.9968H13.8374V8.21245ZM2.2499 4.24683H3.7124V4.83745C3.7124 5.17495 3.99365 5.48433 4.35928 5.48433C4.7249 5.48433 5.00615 5.20308 5.00615 4.83745V4.24683H13.0499V4.83745C13.0499 5.17495 13.3312 5.48433 13.6968 5.48433C14.0624 5.48433 14.3437 5.20308 14.3437 4.83745V4.24683H15.7499C16.0312 4.24683 16.2562 4.47183 16.2562 4.75308V6.94683H1.77178V4.75308C1.77178 4.47183 1.96865 4.24683 2.2499 4.24683ZM1.77178 14.5125V12.2343H4.1624V14.9906H2.2499C1.96865 15.0187 1.77178 14.7937 1.77178 14.5125ZM15.7499 15.0187H13.8374V12.2625H16.228V14.5406C16.2562 14.7937 16.0312 15.0187 15.7499 15.0187Z",
                              fill: "",
                            }),
                          }),
                          "Weather report",
                        ],
                      }),
                    }),
                  }),
                ],
              }),
            }),
          }),
        ],
      })
    );
  },
  eh = ({ children: e }) => {
    const [i, n] = ce.useState(!1);
    return _.jsx("div", {
      className: "dark:bg-boxdark-2 dark:text-bodydark",
      children: _.jsxs("div", {
        className: "flex h-screen overflow-hidden",
        children: [
          _.jsx(uy, { sidebarOpen: i, setSidebarOpen: n }),
          _.jsxs("div", {
            className:
              "relative flex flex-1 flex-col overflow-y-auto overflow-x-hidden",
            children: [
              _.jsx(cy, { sidebarOpen: i, setSidebarOpen: n }),
              _.jsx("main", {
                children: _.jsx("div", {
                  className: "mx-auto max-w-screen-2xl p-4 md:p-6 2xl:p-10",
                  children: e,
                }),
              }),
            ],
          }),
        ],
      }),
    });
  },
  dy = () =>
    _.jsxs(eh, {
      children: [
        _.jsx(zf, { pageName: "Calendar" }),
        _.jsx("div", {
          className:
            "w-full max-w-full rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark",
          children: _.jsxs("table", {
            className: "w-full",
            children: [
              _.jsx("thead", {
                children: _.jsxs("tr", {
                  className:
                    "grid grid-cols-7 rounded-t-sm bg-primary text-white",
                  children: [
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center rounded-tl-sm p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Sunday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Sun ",
                        }),
                      ],
                    }),
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Monday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Mon ",
                        }),
                      ],
                    }),
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Tuesday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Tue ",
                        }),
                      ],
                    }),
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Wednesday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Wed ",
                        }),
                      ],
                    }),
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Thursday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Thur ",
                        }),
                      ],
                    }),
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Friday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Fri ",
                        }),
                      ],
                    }),
                    _.jsxs("th", {
                      className:
                        "flex h-15 items-center justify-center rounded-tr-sm p-1 text-xs font-semibold sm:text-base xl:p-5",
                      children: [
                        _.jsx("span", {
                          className: "hidden lg:block",
                          children: " Saturday ",
                        }),
                        _.jsx("span", {
                          className: "block lg:hidden",
                          children: " Sat ",
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              _.jsxs("tbody", {
                children: [
                  _.jsxs("tr", {
                    className: "grid grid-cols-7",
                    children: [
                      _.jsxs("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: [
                          _.jsx("span", {
                            className: "font-medium text-black dark:text-white",
                            children: "1",
                          }),
                          _.jsxs("div", {
                            className:
                              "group h-16 w-full flex-grow cursor-pointer py-1 md:h-30",
                            children: [
                              _.jsx("span", {
                                className: "group-hover:text-primary md:hidden",
                                children: "More",
                              }),
                              _.jsxs("div", {
                                className:
                                  "event invisible absolute left-2 z-99 mb-1 flex w-[200%] flex-col rounded-sm border-l-[3px] border-primary bg-gray px-3 py-1 text-left opacity-0 group-hover:visible group-hover:opacity-100 dark:bg-meta-4 md:visible md:w-[190%] md:opacity-100",
                                children: [
                                  _.jsx("span", {
                                    className:
                                      "event-name text-sm font-semibold text-black dark:text-white",
                                    children: "Redesign Website",
                                  }),
                                  _.jsx("span", {
                                    className:
                                      "time text-sm font-medium text-black dark:text-white",
                                    children: "1 Dec - 2 Dec",
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "2",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "3",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "4",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "5",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "6",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "7",
                        }),
                      }),
                    ],
                  }),
                  _.jsxs("tr", {
                    className: "grid grid-cols-7",
                    children: [
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "8",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "9",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "10",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "11",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "12",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "13",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "14",
                        }),
                      }),
                    ],
                  }),
                  _.jsxs("tr", {
                    className: "grid grid-cols-7",
                    children: [
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "15",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "16",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "17",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "18",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "19",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "20",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "21",
                        }),
                      }),
                    ],
                  }),
                  _.jsxs("tr", {
                    className: "grid grid-cols-7",
                    children: [
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "22",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "23",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "24",
                        }),
                      }),
                      _.jsxs("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: [
                          _.jsx("span", {
                            className: "font-medium text-black dark:text-white",
                            children: "25",
                          }),
                          _.jsxs("div", {
                            className:
                              "group h-16 w-full flex-grow cursor-pointer py-1 md:h-30",
                            children: [
                              _.jsx("span", {
                                className: "group-hover:text-primary md:hidden",
                                children: "More",
                              }),
                              _.jsxs("div", {
                                className:
                                  "event invisible absolute left-2 z-99 mb-1 flex w-[300%] flex-col rounded-sm border-l-[3px] border-primary bg-gray px-3 py-1 text-left opacity-0 group-hover:visible group-hover:opacity-100 dark:bg-meta-4 md:visible md:w-[290%] md:opacity-100",
                                children: [
                                  _.jsx("span", {
                                    className:
                                      "event-name text-sm font-semibold text-black dark:text-white",
                                    children: "App Design",
                                  }),
                                  _.jsx("span", {
                                    className:
                                      "time text-sm font-medium text-black dark:text-white",
                                    children: "25 Dec - 27 Dec",
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "26",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "27",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "28",
                        }),
                      }),
                    ],
                  }),
                  _.jsxs("tr", {
                    className: "grid grid-cols-7",
                    children: [
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "29",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "30",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "31",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "1",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "2",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "3",
                        }),
                      }),
                      _.jsx("td", {
                        className:
                          "ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31",
                        children: _.jsx("span", {
                          className: "font-medium text-black dark:text-white",
                          children: "4",
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    });
var kp = {},
  H0 = { exports: {} };
/*!
 * ApexCharts v3.41.0
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */ (function (e, i) {
  function n(T, t) {
    var l = Object.keys(T);
    if (Object.getOwnPropertySymbols) {
      var r = Object.getOwnPropertySymbols(T);
      t &&
        (r = r.filter(function (s) {
          return Object.getOwnPropertyDescriptor(T, s).enumerable;
        })),
        l.push.apply(l, r);
    }
    return l;
  }
  function c(T) {
    for (var t = 1; t < arguments.length; t++) {
      var l = arguments[t] != null ? arguments[t] : {};
      t % 2
        ? n(Object(l), !0).forEach(function (r) {
            E(T, r, l[r]);
          })
        : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(T, Object.getOwnPropertyDescriptors(l))
          : n(Object(l)).forEach(function (r) {
              Object.defineProperty(
                T,
                r,
                Object.getOwnPropertyDescriptor(l, r),
              );
            });
    }
    return T;
  }
  function u(T) {
    return (
      (u =
        typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
          ? function (t) {
              return typeof t;
            }
          : function (t) {
              return t &&
                typeof Symbol == "function" &&
                t.constructor === Symbol &&
                t !== Symbol.prototype
                ? "symbol"
                : typeof t;
            }),
      u(T)
    );
  }
  function g(T, t) {
    if (!(T instanceof t))
      throw new TypeError("Cannot call a class as a function");
  }
  function b(T, t) {
    for (var l = 0; l < t.length; l++) {
      var r = t[l];
      (r.enumerable = r.enumerable || !1),
        (r.configurable = !0),
        "value" in r && (r.writable = !0),
        Object.defineProperty(T, r.key, r);
    }
  }
  function k(T, t, l) {
    return t && b(T.prototype, t), l && b(T, l), T;
  }
  function E(T, t, l) {
    return (
      t in T
        ? Object.defineProperty(T, t, {
            value: l,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (T[t] = l),
      T
    );
  }
  function I(T, t) {
    if (typeof t != "function" && t !== null)
      throw new TypeError("Super expression must either be null or a function");
    (T.prototype = Object.create(t && t.prototype, {
      constructor: { value: T, writable: !0, configurable: !0 },
    })),
      t && H(T, t);
  }
  function F(T) {
    return (
      (F = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (t) {
            return t.__proto__ || Object.getPrototypeOf(t);
          }),
      F(T)
    );
  }
  function H(T, t) {
    return (
      (H =
        Object.setPrototypeOf ||
        function (l, r) {
          return (l.__proto__ = r), l;
        }),
      H(T, t)
    );
  }
  function G(T, t) {
    if (t && (typeof t == "object" || typeof t == "function")) return t;
    if (t !== void 0)
      throw new TypeError(
        "Derived constructors may only return object or undefined",
      );
    return (function (l) {
      if (l === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called",
        );
      return l;
    })(T);
  }
  function K(T) {
    var t = (function () {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function") return !0;
      try {
        return (
          Boolean.prototype.valueOf.call(
            Reflect.construct(Boolean, [], function () {}),
          ),
          !0
        );
      } catch {
        return !1;
      }
    })();
    return function () {
      var l,
        r = F(T);
      if (t) {
        var s = F(this).constructor;
        l = Reflect.construct(r, arguments, s);
      } else l = r.apply(this, arguments);
      return G(this, l);
    };
  }
  function q(T, t) {
    return (
      (function (l) {
        if (Array.isArray(l)) return l;
      })(T) ||
      (function (l, r) {
        var s =
          l == null
            ? null
            : (typeof Symbol < "u" && l[Symbol.iterator]) || l["@@iterator"];
        if (s != null) {
          var a,
            o,
            h = [],
            d = !0,
            p = !1;
          try {
            for (
              s = s.call(l);
              !(d = (a = s.next()).done) &&
              (h.push(a.value), !r || h.length !== r);
              d = !0
            );
          } catch (m) {
            (p = !0), (o = m);
          } finally {
            try {
              d || s.return == null || s.return();
            } finally {
              if (p) throw o;
            }
          }
          return h;
        }
      })(T, t) ||
      ue(T, t) ||
      (function () {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function Q(T) {
    return (
      (function (t) {
        if (Array.isArray(t)) return B(t);
      })(T) ||
      (function (t) {
        if (
          (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
          t["@@iterator"] != null
        )
          return Array.from(t);
      })(T) ||
      ue(T) ||
      (function () {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function ue(T, t) {
    if (T) {
      if (typeof T == "string") return B(T, t);
      var l = Object.prototype.toString.call(T).slice(8, -1);
      return (
        l === "Object" && T.constructor && (l = T.constructor.name),
        l === "Map" || l === "Set"
          ? Array.from(T)
          : l === "Arguments" ||
              /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l)
            ? B(T, t)
            : void 0
      );
    }
  }
  function B(T, t) {
    (t == null || t > T.length) && (t = T.length);
    for (var l = 0, r = new Array(t); l < t; l++) r[l] = T[l];
    return r;
  }
  var L = (function () {
      function T() {
        g(this, T);
      }
      return (
        k(
          T,
          [
            {
              key: "shadeRGBColor",
              value: function (t, l) {
                var r = l.split(","),
                  s = t < 0 ? 0 : 255,
                  a = t < 0 ? -1 * t : t,
                  o = parseInt(r[0].slice(4), 10),
                  h = parseInt(r[1], 10),
                  d = parseInt(r[2], 10);
                return (
                  "rgb(" +
                  (Math.round((s - o) * a) + o) +
                  "," +
                  (Math.round((s - h) * a) + h) +
                  "," +
                  (Math.round((s - d) * a) + d) +
                  ")"
                );
              },
            },
            {
              key: "shadeHexColor",
              value: function (t, l) {
                var r = parseInt(l.slice(1), 16),
                  s = t < 0 ? 0 : 255,
                  a = t < 0 ? -1 * t : t,
                  o = r >> 16,
                  h = (r >> 8) & 255,
                  d = 255 & r;
                return (
                  "#" +
                  (
                    16777216 +
                    65536 * (Math.round((s - o) * a) + o) +
                    256 * (Math.round((s - h) * a) + h) +
                    (Math.round((s - d) * a) + d)
                  )
                    .toString(16)
                    .slice(1)
                );
              },
            },
            {
              key: "shadeColor",
              value: function (t, l) {
                return T.isColorHex(l)
                  ? this.shadeHexColor(t, l)
                  : this.shadeRGBColor(t, l);
              },
            },
          ],
          [
            {
              key: "bind",
              value: function (t, l) {
                return function () {
                  return t.apply(l, arguments);
                };
              },
            },
            {
              key: "isObject",
              value: function (t) {
                return t && u(t) === "object" && !Array.isArray(t) && t != null;
              },
            },
            {
              key: "is",
              value: function (t, l) {
                return (
                  Object.prototype.toString.call(l) === "[object " + t + "]"
                );
              },
            },
            {
              key: "listToArray",
              value: function (t) {
                var l,
                  r = [];
                for (l = 0; l < t.length; l++) r[l] = t[l];
                return r;
              },
            },
            {
              key: "extend",
              value: function (t, l) {
                var r = this;
                typeof Object.assign != "function" &&
                  (Object.assign = function (a) {
                    if (a == null)
                      throw new TypeError(
                        "Cannot convert undefined or null to object",
                      );
                    for (var o = Object(a), h = 1; h < arguments.length; h++) {
                      var d = arguments[h];
                      if (d != null)
                        for (var p in d) d.hasOwnProperty(p) && (o[p] = d[p]);
                    }
                    return o;
                  });
                var s = Object.assign({}, t);
                return (
                  this.isObject(t) &&
                    this.isObject(l) &&
                    Object.keys(l).forEach(function (a) {
                      r.isObject(l[a]) && a in t
                        ? (s[a] = r.extend(t[a], l[a]))
                        : Object.assign(s, E({}, a, l[a]));
                    }),
                  s
                );
              },
            },
            {
              key: "extendArray",
              value: function (t, l) {
                var r = [];
                return (
                  t.map(function (s) {
                    r.push(T.extend(l, s));
                  }),
                  (t = r)
                );
              },
            },
            {
              key: "monthMod",
              value: function (t) {
                return t % 12;
              },
            },
            {
              key: "clone",
              value: function (t) {
                if (T.is("Array", t)) {
                  for (var l = [], r = 0; r < t.length; r++)
                    l[r] = this.clone(t[r]);
                  return l;
                }
                if (T.is("Null", t)) return null;
                if (T.is("Date", t)) return t;
                if (u(t) === "object") {
                  var s = {};
                  for (var a in t)
                    t.hasOwnProperty(a) && (s[a] = this.clone(t[a]));
                  return s;
                }
                return t;
              },
            },
            {
              key: "log10",
              value: function (t) {
                return Math.log(t) / Math.LN10;
              },
            },
            {
              key: "roundToBase10",
              value: function (t) {
                return Math.pow(10, Math.floor(Math.log10(t)));
              },
            },
            {
              key: "roundToBase",
              value: function (t, l) {
                return Math.pow(l, Math.floor(Math.log(t) / Math.log(l)));
              },
            },
            {
              key: "parseNumber",
              value: function (t) {
                return t === null ? t : parseFloat(t);
              },
            },
            {
              key: "randomId",
              value: function () {
                return (Math.random() + 1).toString(36).substring(4);
              },
            },
            {
              key: "noExponents",
              value: function (t) {
                var l = String(t).split(/[eE]/);
                if (l.length === 1) return l[0];
                var r = "",
                  s = t < 0 ? "-" : "",
                  a = l[0].replace(".", ""),
                  o = Number(l[1]) + 1;
                if (o < 0) {
                  for (r = s + "0."; o++; ) r += "0";
                  return r + a.replace(/^-/, "");
                }
                for (o -= a.length; o--; ) r += "0";
                return a + r;
              },
            },
            {
              key: "getDimensions",
              value: function (t) {
                var l = getComputedStyle(t, null),
                  r = t.clientHeight,
                  s = t.clientWidth;
                return (
                  (r -= parseFloat(l.paddingTop) + parseFloat(l.paddingBottom)),
                  [
                    (s -=
                      parseFloat(l.paddingLeft) + parseFloat(l.paddingRight)),
                    r,
                  ]
                );
              },
            },
            {
              key: "getBoundingClientRect",
              value: function (t) {
                var l = t.getBoundingClientRect();
                return {
                  top: l.top,
                  right: l.right,
                  bottom: l.bottom,
                  left: l.left,
                  width: t.clientWidth,
                  height: t.clientHeight,
                  x: l.left,
                  y: l.top,
                };
              },
            },
            {
              key: "getLargestStringFromArr",
              value: function (t) {
                return t.reduce(function (l, r) {
                  return (
                    Array.isArray(r) &&
                      (r = r.reduce(function (s, a) {
                        return s.length > a.length ? s : a;
                      })),
                    l.length > r.length ? l : r
                  );
                }, 0);
              },
            },
            {
              key: "hexToRgba",
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "#999999",
                  l =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0.6;
                t.substring(0, 1) !== "#" && (t = "#999999");
                var r = t.replace("#", "");
                r = r.match(new RegExp("(.{" + r.length / 3 + "})", "g"));
                for (var s = 0; s < r.length; s++)
                  r[s] = parseInt(r[s].length === 1 ? r[s] + r[s] : r[s], 16);
                return l !== void 0 && r.push(l), "rgba(" + r.join(",") + ")";
              },
            },
            {
              key: "getOpacityFromRGBA",
              value: function (t) {
                return parseFloat(t.replace(/^.*,(.+)\)/, "$1"));
              },
            },
            {
              key: "rgb2hex",
              value: function (t) {
                return (t = t.match(
                  /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i,
                )) && t.length === 4
                  ? "#" +
                      ("0" + parseInt(t[1], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(t[2], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(t[3], 10).toString(16)).slice(-2)
                  : "";
              },
            },
            {
              key: "isColorHex",
              value: function (t) {
                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                  t,
                );
              },
            },
            {
              key: "getPolygonPos",
              value: function (t, l) {
                for (var r = [], s = (2 * Math.PI) / l, a = 0; a < l; a++) {
                  var o = {};
                  (o.x = t * Math.sin(a * s)),
                    (o.y = -t * Math.cos(a * s)),
                    r.push(o);
                }
                return r;
              },
            },
            {
              key: "polarToCartesian",
              value: function (t, l, r, s) {
                var a = ((s - 90) * Math.PI) / 180;
                return { x: t + r * Math.cos(a), y: l + r * Math.sin(a) };
              },
            },
            {
              key: "escapeString",
              value: function (t) {
                var l =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "x",
                  r = t.toString().slice();
                return (r = r.replace(
                  /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                  l,
                ));
              },
            },
            {
              key: "negToZero",
              value: function (t) {
                return t < 0 ? 0 : t;
              },
            },
            {
              key: "moveIndexInArray",
              value: function (t, l, r) {
                if (r >= t.length)
                  for (var s = r - t.length + 1; s--; ) t.push(void 0);
                return t.splice(r, 0, t.splice(l, 1)[0]), t;
              },
            },
            {
              key: "extractNumber",
              value: function (t) {
                return parseFloat(t.replace(/[^\d.]*/g, ""));
              },
            },
            {
              key: "findAncestor",
              value: function (t, l) {
                for (; (t = t.parentElement) && !t.classList.contains(l); );
                return t;
              },
            },
            {
              key: "setELstyles",
              value: function (t, l) {
                for (var r in l) l.hasOwnProperty(r) && (t.style.key = l[r]);
              },
            },
            {
              key: "isNumber",
              value: function (t) {
                return (
                  !isNaN(t) &&
                  parseFloat(Number(t)) === t &&
                  !isNaN(parseInt(t, 10))
                );
              },
            },
            {
              key: "isFloat",
              value: function (t) {
                return Number(t) === t && t % 1 != 0;
              },
            },
            {
              key: "isSafari",
              value: function () {
                return /^((?!chrome|android).)*safari/i.test(
                  navigator.userAgent,
                );
              },
            },
            {
              key: "isFirefox",
              value: function () {
                return (
                  navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                );
              },
            },
            {
              key: "isIE11",
              value: function () {
                if (
                  window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                  window.navigator.appVersion.indexOf("Trident/") > -1
                )
                  return !0;
              },
            },
            {
              key: "isIE",
              value: function () {
                var t = window.navigator.userAgent,
                  l = t.indexOf("MSIE ");
                if (l > 0)
                  return parseInt(t.substring(l + 5, t.indexOf(".", l)), 10);
                if (t.indexOf("Trident/") > 0) {
                  var r = t.indexOf("rv:");
                  return parseInt(t.substring(r + 3, t.indexOf(".", r)), 10);
                }
                var s = t.indexOf("Edge/");
                return (
                  s > 0 && parseInt(t.substring(s + 5, t.indexOf(".", s)), 10)
                );
              },
            },
          ],
        ),
        T
      );
    })(),
    W = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w), this.setEasingFunctions();
      }
      return (
        k(T, [
          {
            key: "setEasingFunctions",
            value: function () {
              var t;
              if (!this.w.globals.easing) {
                switch (this.w.config.chart.animations.easing) {
                  case "linear":
                    t = "-";
                    break;
                  case "easein":
                    t = "<";
                    break;
                  case "easeout":
                    t = ">";
                    break;
                  case "easeinout":
                  default:
                    t = "<>";
                    break;
                  case "swing":
                    t = function (l) {
                      var r = 1.70158;
                      return (l -= 1) * l * ((r + 1) * l + r) + 1;
                    };
                    break;
                  case "bounce":
                    t = function (l) {
                      return l < 1 / 2.75
                        ? 7.5625 * l * l
                        : l < 2 / 2.75
                          ? 7.5625 * (l -= 1.5 / 2.75) * l + 0.75
                          : l < 2.5 / 2.75
                            ? 7.5625 * (l -= 2.25 / 2.75) * l + 0.9375
                            : 7.5625 * (l -= 2.625 / 2.75) * l + 0.984375;
                    };
                    break;
                  case "elastic":
                    t = function (l) {
                      return l === !!l
                        ? l
                        : Math.pow(2, -10 * l) *
                            Math.sin(((l - 0.075) * (2 * Math.PI)) / 0.3) +
                            1;
                    };
                }
                this.w.globals.easing = t;
              }
            },
          },
          {
            key: "animateLine",
            value: function (t, l, r, s) {
              t.attr(l).animate(s).attr(r);
            },
          },
          {
            key: "animateMarker",
            value: function (t, l, r, s, a, o) {
              l || (l = 0),
                t
                  .attr({ r: l, width: l, height: l })
                  .animate(s, a)
                  .attr({ r, width: r.width, height: r.height })
                  .afterAll(function () {
                    o();
                  });
            },
          },
          {
            key: "animateCircle",
            value: function (t, l, r, s, a) {
              t.attr({ r: l.r, cx: l.cx, cy: l.cy })
                .animate(s, a)
                .attr({ r: r.r, cx: r.cx, cy: r.cy });
            },
          },
          {
            key: "animateRect",
            value: function (t, l, r, s, a) {
              t.attr(l)
                .animate(s)
                .attr(r)
                .afterAll(function () {
                  return a();
                });
            },
          },
          {
            key: "animatePathsGradually",
            value: function (t) {
              var l = t.el,
                r = t.realIndex,
                s = t.j,
                a = t.fill,
                o = t.pathFrom,
                h = t.pathTo,
                d = t.speed,
                p = t.delay,
                m = this.w,
                x = 0;
              m.config.chart.animations.animateGradually.enabled &&
                (x = m.config.chart.animations.animateGradually.delay),
                m.config.chart.animations.dynamicAnimation.enabled &&
                  m.globals.dataChanged &&
                  m.config.chart.type !== "bar" &&
                  (x = 0),
                this.morphSVG(
                  l,
                  r,
                  s,
                  m.config.chart.type !== "line" || m.globals.comboCharts
                    ? a
                    : "stroke",
                  o,
                  h,
                  d,
                  p * x,
                );
            },
          },
          {
            key: "showDelayedElements",
            value: function () {
              this.w.globals.delayedElements.forEach(function (t) {
                var l = t.el;
                l.classList.remove("apexcharts-element-hidden"),
                  l.classList.add("apexcharts-hidden-element-shown");
              });
            },
          },
          {
            key: "animationCompleted",
            value: function (t) {
              var l = this.w;
              l.globals.animationEnded ||
                ((l.globals.animationEnded = !0),
                this.showDelayedElements(),
                typeof l.config.chart.events.animationEnd == "function" &&
                  l.config.chart.events.animationEnd(this.ctx, {
                    el: t,
                    w: l,
                  }));
            },
          },
          {
            key: "morphSVG",
            value: function (t, l, r, s, a, o, h, d) {
              var p = this,
                m = this.w;
              a || (a = t.attr("pathFrom")), o || (o = t.attr("pathTo"));
              var x = function (v) {
                return (
                  m.config.chart.type === "radar" && (h = 1),
                  "M 0 ".concat(m.globals.gridHeight)
                );
              };
              (!a || a.indexOf("undefined") > -1 || a.indexOf("NaN") > -1) &&
                (a = x()),
                (!o || o.indexOf("undefined") > -1 || o.indexOf("NaN") > -1) &&
                  (o = x()),
                m.globals.shouldAnimate || (h = 1),
                t
                  .plot(a)
                  .animate(1, m.globals.easing, d)
                  .plot(a)
                  .animate(h, m.globals.easing, d)
                  .plot(o)
                  .afterAll(function () {
                    L.isNumber(r)
                      ? r ===
                          m.globals.series[m.globals.maxValsInArrayIndex]
                            .length -
                            2 &&
                        m.globals.shouldAnimate &&
                        p.animationCompleted(t)
                      : s !== "none" &&
                        m.globals.shouldAnimate &&
                        ((!m.globals.comboCharts &&
                          l === m.globals.series.length - 1) ||
                          m.globals.comboCharts) &&
                        p.animationCompleted(t),
                      p.showDelayedElements();
                  });
            },
          },
        ]),
        T
      );
    })(),
    te = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "getDefaultFilter",
            value: function (t, l) {
              var r = this.w;
              t.unfilter(!0),
                new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                r.config.states.normal.filter !== "none"
                  ? this.applyFilter(
                      t,
                      l,
                      r.config.states.normal.filter.type,
                      r.config.states.normal.filter.value,
                    )
                  : r.config.chart.dropShadow.enabled &&
                    this.dropShadow(t, r.config.chart.dropShadow, l);
            },
          },
          {
            key: "addNormalFilter",
            value: function (t, l) {
              var r = this.w;
              r.config.chart.dropShadow.enabled &&
                !t.node.classList.contains("apexcharts-marker") &&
                this.dropShadow(t, r.config.chart.dropShadow, l);
            },
          },
          {
            key: "addLightenFilter",
            value: function (t, l, r) {
              var s = this,
                a = this.w,
                o = r.intensity;
              t.unfilter(!0),
                new window.SVG.Filter(),
                t.filter(function (h) {
                  var d = a.config.chart.dropShadow;
                  (d.enabled ? s.addShadow(h, l, d) : h).componentTransfer({
                    rgb: { type: "linear", slope: 1.5, intercept: o },
                  });
                }),
                t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(t.filterer.node);
            },
          },
          {
            key: "addDarkenFilter",
            value: function (t, l, r) {
              var s = this,
                a = this.w,
                o = r.intensity;
              t.unfilter(!0),
                new window.SVG.Filter(),
                t.filter(function (h) {
                  var d = a.config.chart.dropShadow;
                  (d.enabled ? s.addShadow(h, l, d) : h).componentTransfer({
                    rgb: { type: "linear", slope: o },
                  });
                }),
                t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(t.filterer.node);
            },
          },
          {
            key: "applyFilter",
            value: function (t, l, r) {
              var s =
                arguments.length > 3 && arguments[3] !== void 0
                  ? arguments[3]
                  : 0.5;
              switch (r) {
                case "none":
                  this.addNormalFilter(t, l);
                  break;
                case "lighten":
                  this.addLightenFilter(t, l, { intensity: s });
                  break;
                case "darken":
                  this.addDarkenFilter(t, l, { intensity: s });
              }
            },
          },
          {
            key: "addShadow",
            value: function (t, l, r) {
              var s = r.blur,
                a = r.top,
                o = r.left,
                h = r.color,
                d = r.opacity,
                p = t
                  .flood(Array.isArray(h) ? h[l] : h, d)
                  .composite(t.sourceAlpha, "in")
                  .offset(o, a)
                  .gaussianBlur(s)
                  .merge(t.source);
              return t.blend(t.source, p);
            },
          },
          {
            key: "dropShadow",
            value: function (t, l) {
              var r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 0,
                s = l.top,
                a = l.left,
                o = l.blur,
                h = l.color,
                d = l.opacity,
                p = l.noUserSpaceOnUse,
                m = this.w;
              return (
                t.unfilter(!0),
                (L.isIE() && m.config.chart.type === "radialBar") ||
                  ((h = Array.isArray(h) ? h[r] : h),
                  t.filter(function (x) {
                    var v = null;
                    (v =
                      L.isSafari() || L.isFirefox() || L.isIE()
                        ? x
                            .flood(h, d)
                            .composite(x.sourceAlpha, "in")
                            .offset(a, s)
                            .gaussianBlur(o)
                        : x
                            .flood(h, d)
                            .composite(x.sourceAlpha, "in")
                            .offset(a, s)
                            .gaussianBlur(o)
                            .merge(x.source)),
                      x.blend(x.source, v);
                  }),
                  p ||
                    t.filterer.node.setAttribute(
                      "filterUnits",
                      "userSpaceOnUse",
                    ),
                  this._scaleFilterSize(t.filterer.node)),
                t
              );
            },
          },
          {
            key: "setSelectionFilter",
            value: function (t, l, r) {
              var s = this.w;
              if (
                s.globals.selectedDataPoints[l] !== void 0 &&
                s.globals.selectedDataPoints[l].indexOf(r) > -1
              ) {
                t.node.setAttribute("selected", !0);
                var a = s.config.states.active.filter;
                a !== "none" && this.applyFilter(t, l, a.type, a.value);
              }
            },
          },
          {
            key: "_scaleFilterSize",
            value: function (t) {
              (function (l) {
                for (var r in l) l.hasOwnProperty(r) && t.setAttribute(r, l[r]);
              })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
            },
          },
        ]),
        T
      );
    })(),
    Z = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(
          T,
          [
            {
              key: "roundPathCorners",
              value: function (t, l) {
                function r(D, U, $) {
                  var le = U.x - D.x,
                    ne = U.y - D.y,
                    se = Math.sqrt(le * le + ne * ne);
                  return s(D, U, Math.min(1, $ / se));
                }
                function s(D, U, $) {
                  return { x: D.x + (U.x - D.x) * $, y: D.y + (U.y - D.y) * $ };
                }
                function a(D, U) {
                  D.length > 2 &&
                    ((D[D.length - 2] = U.x), (D[D.length - 1] = U.y));
                }
                function o(D) {
                  return {
                    x: parseFloat(D[D.length - 2]),
                    y: parseFloat(D[D.length - 1]),
                  };
                }
                t.indexOf("NaN") > -1 && (t = "");
                var h = t
                    .split(/[,\s]/)
                    .reduce(function (D, U) {
                      var $ = U.match("([a-zA-Z])(.+)");
                      return $ ? (D.push($[1]), D.push($[2])) : D.push(U), D;
                    }, [])
                    .reduce(function (D, U) {
                      return (
                        parseFloat(U) == U && D.length
                          ? D[D.length - 1].push(U)
                          : D.push([U]),
                        D
                      );
                    }, []),
                  d = [];
                if (h.length > 1) {
                  var p = o(h[0]),
                    m = null;
                  h[h.length - 1][0] == "Z" &&
                    h[0].length > 2 &&
                    ((m = ["L", p.x, p.y]), (h[h.length - 1] = m)),
                    d.push(h[0]);
                  for (var x = 1; x < h.length; x++) {
                    var v = d[d.length - 1],
                      w = h[x],
                      S = w == m ? h[1] : h[x + 1];
                    if (
                      S &&
                      v &&
                      v.length > 2 &&
                      w[0] == "L" &&
                      S.length > 2 &&
                      S[0] == "L"
                    ) {
                      var A,
                        P,
                        R = o(v),
                        O = o(w),
                        f = o(S);
                      (A = r(O, R, l)),
                        (P = r(O, f, l)),
                        a(w, A),
                        (w.origPoint = O),
                        d.push(w);
                      var y = s(A, O, 0.5),
                        C = s(O, P, 0.5),
                        M = ["C", y.x, y.y, C.x, C.y, P.x, P.y];
                      (M.origPoint = O), d.push(M);
                    } else d.push(w);
                  }
                  if (m) {
                    var z = o(d[d.length - 1]);
                    d.push(["Z"]), a(d[0], z);
                  }
                } else d = h;
                return d.reduce(function (D, U) {
                  return D + U.join(" ") + " ";
                }, "");
              },
            },
            {
              key: "drawLine",
              value: function (t, l, r, s) {
                var a =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : "#a8a8a8",
                  o =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : 0,
                  h =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  d =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : "butt";
                return this.w.globals.dom.Paper.line().attr({
                  x1: t,
                  y1: l,
                  x2: r,
                  y2: s,
                  stroke: a,
                  "stroke-dasharray": o,
                  "stroke-width": h,
                  "stroke-linecap": d,
                });
              },
            },
            {
              key: "drawRect",
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0,
                  l =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  r =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0,
                  a =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0,
                  o =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : "#fefefe",
                  h =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : 1,
                  d =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  p =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : null,
                  m =
                    arguments.length > 9 && arguments[9] !== void 0
                      ? arguments[9]
                      : 0,
                  x = this.w.globals.dom.Paper.rect();
                return (
                  x.attr({
                    x: t,
                    y: l,
                    width: r > 0 ? r : 0,
                    height: s > 0 ? s : 0,
                    rx: a,
                    ry: a,
                    opacity: h,
                    "stroke-width": d !== null ? d : 0,
                    stroke: p !== null ? p : "none",
                    "stroke-dasharray": m,
                  }),
                  x.node.setAttribute("fill", o),
                  x
                );
              },
            },
            {
              key: "drawPolygon",
              value: function (t) {
                var l =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "#e1e1e1",
                  r =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 1,
                  s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "none";
                return this.w.globals.dom.Paper.polygon(t).attr({
                  fill: s,
                  stroke: l,
                  "stroke-width": r,
                });
              },
            },
            {
              key: "drawCircle",
              value: function (t) {
                var l =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null;
                t < 0 && (t = 0);
                var r = this.w.globals.dom.Paper.circle(2 * t);
                return l !== null && r.attr(l), r;
              },
            },
            {
              key: "drawPath",
              value: function (t) {
                var l = t.d,
                  r = l === void 0 ? "" : l,
                  s = t.stroke,
                  a = s === void 0 ? "#a8a8a8" : s,
                  o = t.strokeWidth,
                  h = o === void 0 ? 1 : o,
                  d = t.fill,
                  p = t.fillOpacity,
                  m = p === void 0 ? 1 : p,
                  x = t.strokeOpacity,
                  v = x === void 0 ? 1 : x,
                  w = t.classes,
                  S = t.strokeLinecap,
                  A = S === void 0 ? null : S,
                  P = t.strokeDashArray,
                  R = P === void 0 ? 0 : P,
                  O = this.w;
                return (
                  A === null && (A = O.config.stroke.lineCap),
                  (r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) &&
                    (r = "M 0 ".concat(O.globals.gridHeight)),
                  O.globals.dom.Paper.path(r).attr({
                    fill: d,
                    "fill-opacity": m,
                    stroke: a,
                    "stroke-opacity": v,
                    "stroke-linecap": A,
                    "stroke-width": h,
                    "stroke-dasharray": R,
                    class: w,
                  })
                );
              },
            },
            {
              key: "group",
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  l = this.w.globals.dom.Paper.group();
                return t !== null && l.attr(t), l;
              },
            },
            {
              key: "move",
              value: function (t, l) {
                var r = ["M", t, l].join(" ");
                return r;
              },
            },
            {
              key: "line",
              value: function (t, l) {
                var r =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  s = null;
                return (
                  r === null
                    ? (s = [" L", t, l].join(" "))
                    : r === "H"
                      ? (s = [" H", t].join(" "))
                      : r === "V" && (s = [" V", l].join(" ")),
                  s
                );
              },
            },
            {
              key: "curve",
              value: function (t, l, r, s, a, o) {
                var h = ["C", t, l, r, s, a, o].join(" ");
                return h;
              },
            },
            {
              key: "quadraticCurve",
              value: function (t, l, r, s) {
                return ["Q", t, l, r, s].join(" ");
              },
            },
            {
              key: "arc",
              value: function (t, l, r, s, a, o, h) {
                var d = "A";
                arguments.length > 7 &&
                  arguments[7] !== void 0 &&
                  arguments[7] &&
                  (d = "a");
                var p = [d, t, l, r, s, a, o, h].join(" ");
                return p;
              },
            },
            {
              key: "renderPaths",
              value: function (t) {
                var l,
                  r = t.j,
                  s = t.realIndex,
                  a = t.pathFrom,
                  o = t.pathTo,
                  h = t.stroke,
                  d = t.strokeWidth,
                  p = t.strokeLinecap,
                  m = t.fill,
                  x = t.animationDelay,
                  v = t.initialSpeed,
                  w = t.dataChangeSpeed,
                  S = t.className,
                  A = t.shouldClipToGrid,
                  P = A === void 0 || A,
                  R = t.bindEventsOnPaths,
                  O = R === void 0 || R,
                  f = t.drawShadow,
                  y = f === void 0 || f,
                  C = this.w,
                  M = new te(this.ctx),
                  z = new W(this.ctx),
                  D = this.w.config.chart.animations.enabled,
                  U =
                    D &&
                    this.w.config.chart.animations.dynamicAnimation.enabled,
                  $ = !!(
                    (D && !C.globals.resized) ||
                    (U && C.globals.dataChanged && C.globals.shouldAnimate)
                  );
                $ ? (l = a) : ((l = o), (C.globals.animationEnded = !0));
                var le = C.config.stroke.dashArray,
                  ne = 0;
                ne = Array.isArray(le) ? le[s] : C.config.stroke.dashArray;
                var se = this.drawPath({
                  d: l,
                  stroke: h,
                  strokeWidth: d,
                  fill: m,
                  fillOpacity: 1,
                  classes: S,
                  strokeLinecap: p,
                  strokeDashArray: ne,
                });
                if (
                  (se.attr("index", s),
                  P &&
                    se.attr({
                      "clip-path": "url(#gridRectMask".concat(
                        C.globals.cuid,
                        ")",
                      ),
                    }),
                  C.config.states.normal.filter.type !== "none")
                )
                  M.getDefaultFilter(se, s);
                else if (
                  C.config.chart.dropShadow.enabled &&
                  y &&
                  (!C.config.chart.dropShadow.enabledOnSeries ||
                    (C.config.chart.dropShadow.enabledOnSeries &&
                      C.config.chart.dropShadow.enabledOnSeries.indexOf(s) !==
                        -1))
                ) {
                  var he = C.config.chart.dropShadow;
                  M.dropShadow(se, he, s);
                }
                O &&
                  (se.node.addEventListener(
                    "mouseenter",
                    this.pathMouseEnter.bind(this, se),
                  ),
                  se.node.addEventListener(
                    "mouseleave",
                    this.pathMouseLeave.bind(this, se),
                  ),
                  se.node.addEventListener(
                    "mousedown",
                    this.pathMouseDown.bind(this, se),
                  )),
                  se.attr({ pathTo: o, pathFrom: a });
                var ye = {
                  el: se,
                  j: r,
                  realIndex: s,
                  pathFrom: a,
                  pathTo: o,
                  fill: m,
                  strokeWidth: d,
                  delay: x,
                };
                return (
                  !D || C.globals.resized || C.globals.dataChanged
                    ? (!C.globals.resized && C.globals.dataChanged) ||
                      z.showDelayedElements()
                    : z.animatePathsGradually(c(c({}, ye), {}, { speed: v })),
                  C.globals.dataChanged &&
                    U &&
                    $ &&
                    z.animatePathsGradually(c(c({}, ye), {}, { speed: w })),
                  se
                );
              },
            },
            {
              key: "drawPattern",
              value: function (t, l, r) {
                var s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "#a8a8a8",
                  a =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0;
                return this.w.globals.dom.Paper.pattern(l, r, function (o) {
                  t === "horizontalLines"
                    ? o.line(0, 0, r, 0).stroke({ color: s, width: a + 1 })
                    : t === "verticalLines"
                      ? o.line(0, 0, 0, l).stroke({ color: s, width: a + 1 })
                      : t === "slantedLines"
                        ? o.line(0, 0, l, r).stroke({ color: s, width: a })
                        : t === "squares"
                          ? o
                              .rect(l, r)
                              .fill("none")
                              .stroke({ color: s, width: a })
                          : t === "circles" &&
                            o
                              .circle(l)
                              .fill("none")
                              .stroke({ color: s, width: a });
                });
              },
            },
            {
              key: "drawGradient",
              value: function (t, l, r, s, a) {
                var o,
                  h =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : null,
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  p =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  m =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : 0,
                  x = this.w;
                l.length < 9 && l.indexOf("#") === 0 && (l = L.hexToRgba(l, s)),
                  r.length < 9 &&
                    r.indexOf("#") === 0 &&
                    (r = L.hexToRgba(r, a));
                var v = 0,
                  w = 1,
                  S = 1,
                  A = null;
                d !== null &&
                  ((v = d[0] !== void 0 ? d[0] / 100 : 0),
                  (w = d[1] !== void 0 ? d[1] / 100 : 1),
                  (S = d[2] !== void 0 ? d[2] / 100 : 1),
                  (A = d[3] !== void 0 ? d[3] / 100 : null));
                var P = !(
                  x.config.chart.type !== "donut" &&
                  x.config.chart.type !== "pie" &&
                  x.config.chart.type !== "polarArea" &&
                  x.config.chart.type !== "bubble"
                );
                if (
                  ((o =
                    p === null || p.length === 0
                      ? x.globals.dom.Paper.gradient(
                          P ? "radial" : "linear",
                          function (f) {
                            f.at(v, l, s),
                              f.at(w, r, a),
                              f.at(S, r, a),
                              A !== null && f.at(A, l, s);
                          },
                        )
                      : x.globals.dom.Paper.gradient(
                          P ? "radial" : "linear",
                          function (f) {
                            (Array.isArray(p[m]) ? p[m] : p).forEach(
                              function (y) {
                                f.at(y.offset / 100, y.color, y.opacity);
                              },
                            );
                          },
                        )),
                  P)
                ) {
                  var R = x.globals.gridWidth / 2,
                    O = x.globals.gridHeight / 2;
                  x.config.chart.type !== "bubble"
                    ? o.attr({
                        gradientUnits: "userSpaceOnUse",
                        cx: R,
                        cy: O,
                        r: h,
                      })
                    : o.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
                } else
                  t === "vertical"
                    ? o.from(0, 0).to(0, 1)
                    : t === "diagonal"
                      ? o.from(0, 0).to(1, 1)
                      : t === "horizontal"
                        ? o.from(0, 1).to(1, 1)
                        : t === "diagonal2" && o.from(1, 0).to(0, 1);
                return o;
              },
            },
            {
              key: "getTextBasedOnMaxWidth",
              value: function (t) {
                var l = t.text,
                  r = t.maxWidth,
                  s = t.fontSize,
                  a = t.fontFamily,
                  o = this.getTextRects(l, s, a),
                  h = o.width / l.length,
                  d = Math.floor(r / h);
                return r < o.width ? l.slice(0, d - 3) + "..." : l;
              },
            },
            {
              key: "drawText",
              value: function (t) {
                var l = this,
                  r = t.x,
                  s = t.y,
                  a = t.text,
                  o = t.textAnchor,
                  h = t.fontSize,
                  d = t.fontFamily,
                  p = t.fontWeight,
                  m = t.foreColor,
                  x = t.opacity,
                  v = t.maxWidth,
                  w = t.cssClass,
                  S = w === void 0 ? "" : w,
                  A = t.isPlainText,
                  P = A === void 0 || A,
                  R = this.w;
                a === void 0 && (a = "");
                var O = a;
                o || (o = "start"),
                  (m && m.length) || (m = R.config.chart.foreColor),
                  (d = d || R.config.chart.fontFamily),
                  (p = p || "regular");
                var f,
                  y = {
                    maxWidth: v,
                    fontSize: (h = h || "11px"),
                    fontFamily: d,
                  };
                return (
                  Array.isArray(a)
                    ? (f = R.globals.dom.Paper.text(function (C) {
                        for (var M = 0; M < a.length; M++)
                          (O = a[M]),
                            v &&
                              (O = l.getTextBasedOnMaxWidth(
                                c({ text: a[M] }, y),
                              )),
                            M === 0 ? C.tspan(O) : C.tspan(O).newLine();
                      }))
                    : (v &&
                        (O = this.getTextBasedOnMaxWidth(c({ text: a }, y))),
                      (f = P
                        ? R.globals.dom.Paper.plain(a)
                        : R.globals.dom.Paper.text(function (C) {
                            return C.tspan(O);
                          }))),
                  f.attr({
                    x: r,
                    y: s,
                    "text-anchor": o,
                    "dominant-baseline": "auto",
                    "font-size": h,
                    "font-family": d,
                    "font-weight": p,
                    fill: m,
                    class: "apexcharts-text " + S,
                  }),
                  (f.node.style.fontFamily = d),
                  (f.node.style.opacity = x),
                  f
                );
              },
            },
            {
              key: "drawMarker",
              value: function (t, l, r) {
                t = t || 0;
                var s = r.pSize || 0,
                  a = null;
                if (r.shape === "square" || r.shape === "rect") {
                  var o = r.pRadius === void 0 ? s / 2 : r.pRadius;
                  (l !== null && s) || ((s = 0), (o = 0));
                  var h = 1.2 * s + o,
                    d = this.drawRect(h, h, h, h, o);
                  d.attr({
                    x: t - h / 2,
                    y: l - h / 2,
                    cx: t,
                    cy: l,
                    class: r.class ? r.class : "",
                    fill: r.pointFillColor,
                    "fill-opacity": r.pointFillOpacity ? r.pointFillOpacity : 1,
                    stroke: r.pointStrokeColor,
                    "stroke-width": r.pointStrokeWidth ? r.pointStrokeWidth : 0,
                    "stroke-opacity": r.pointStrokeOpacity
                      ? r.pointStrokeOpacity
                      : 1,
                  }),
                    (a = d);
                } else
                  (r.shape !== "circle" && r.shape) ||
                    (L.isNumber(l) || ((s = 0), (l = 0)),
                    (a = this.drawCircle(s, {
                      cx: t,
                      cy: l,
                      class: r.class ? r.class : "",
                      stroke: r.pointStrokeColor,
                      fill: r.pointFillColor,
                      "fill-opacity": r.pointFillOpacity
                        ? r.pointFillOpacity
                        : 1,
                      "stroke-width": r.pointStrokeWidth
                        ? r.pointStrokeWidth
                        : 0,
                      "stroke-opacity": r.pointStrokeOpacity
                        ? r.pointStrokeOpacity
                        : 1,
                    })));
                return a;
              },
            },
            {
              key: "pathMouseEnter",
              value: function (t, l) {
                var r = this.w,
                  s = new te(this.ctx),
                  a = parseInt(t.node.getAttribute("index"), 10),
                  o = parseInt(t.node.getAttribute("j"), 10);
                if (
                  (typeof r.config.chart.events.dataPointMouseEnter ==
                    "function" &&
                    r.config.chart.events.dataPointMouseEnter(l, this.ctx, {
                      seriesIndex: a,
                      dataPointIndex: o,
                      w: r,
                    }),
                  this.ctx.events.fireEvent("dataPointMouseEnter", [
                    l,
                    this.ctx,
                    { seriesIndex: a, dataPointIndex: o, w: r },
                  ]),
                  (r.config.states.active.filter.type === "none" ||
                    t.node.getAttribute("selected") !== "true") &&
                    r.config.states.hover.filter.type !== "none" &&
                    !r.globals.isTouchDevice)
                ) {
                  var h = r.config.states.hover.filter;
                  s.applyFilter(t, a, h.type, h.value);
                }
              },
            },
            {
              key: "pathMouseLeave",
              value: function (t, l) {
                var r = this.w,
                  s = new te(this.ctx),
                  a = parseInt(t.node.getAttribute("index"), 10),
                  o = parseInt(t.node.getAttribute("j"), 10);
                typeof r.config.chart.events.dataPointMouseLeave ==
                  "function" &&
                  r.config.chart.events.dataPointMouseLeave(l, this.ctx, {
                    seriesIndex: a,
                    dataPointIndex: o,
                    w: r,
                  }),
                  this.ctx.events.fireEvent("dataPointMouseLeave", [
                    l,
                    this.ctx,
                    { seriesIndex: a, dataPointIndex: o, w: r },
                  ]),
                  (r.config.states.active.filter.type !== "none" &&
                    t.node.getAttribute("selected") === "true") ||
                    (r.config.states.hover.filter.type !== "none" &&
                      s.getDefaultFilter(t, a));
              },
            },
            {
              key: "pathMouseDown",
              value: function (t, l) {
                var r = this.w,
                  s = new te(this.ctx),
                  a = parseInt(t.node.getAttribute("index"), 10),
                  o = parseInt(t.node.getAttribute("j"), 10),
                  h = "false";
                if (t.node.getAttribute("selected") === "true") {
                  if (
                    (t.node.setAttribute("selected", "false"),
                    r.globals.selectedDataPoints[a].indexOf(o) > -1)
                  ) {
                    var d = r.globals.selectedDataPoints[a].indexOf(o);
                    r.globals.selectedDataPoints[a].splice(d, 1);
                  }
                } else {
                  if (
                    !r.config.states.active.allowMultipleDataPointsSelection &&
                    r.globals.selectedDataPoints.length > 0
                  ) {
                    r.globals.selectedDataPoints = [];
                    var p = r.globals.dom.Paper.select(
                        ".apexcharts-series path",
                      ).members,
                      m = r.globals.dom.Paper.select(
                        ".apexcharts-series circle, .apexcharts-series rect",
                      ).members,
                      x = function (S) {
                        Array.prototype.forEach.call(S, function (A) {
                          A.node.setAttribute("selected", "false"),
                            s.getDefaultFilter(A, a);
                        });
                      };
                    x(p), x(m);
                  }
                  t.node.setAttribute("selected", "true"),
                    (h = "true"),
                    r.globals.selectedDataPoints[a] === void 0 &&
                      (r.globals.selectedDataPoints[a] = []),
                    r.globals.selectedDataPoints[a].push(o);
                }
                if (h === "true") {
                  var v = r.config.states.active.filter;
                  if (v !== "none") s.applyFilter(t, a, v.type, v.value);
                  else if (
                    r.config.states.hover.filter !== "none" &&
                    !r.globals.isTouchDevice
                  ) {
                    var w = r.config.states.hover.filter;
                    s.applyFilter(t, a, w.type, w.value);
                  }
                } else
                  r.config.states.active.filter.type !== "none" &&
                    (r.config.states.hover.filter.type === "none" ||
                    r.globals.isTouchDevice
                      ? s.getDefaultFilter(t, a)
                      : ((w = r.config.states.hover.filter),
                        s.applyFilter(t, a, w.type, w.value)));
                typeof r.config.chart.events.dataPointSelection == "function" &&
                  r.config.chart.events.dataPointSelection(l, this.ctx, {
                    selectedDataPoints: r.globals.selectedDataPoints,
                    seriesIndex: a,
                    dataPointIndex: o,
                    w: r,
                  }),
                  l &&
                    this.ctx.events.fireEvent("dataPointSelection", [
                      l,
                      this.ctx,
                      {
                        selectedDataPoints: r.globals.selectedDataPoints,
                        seriesIndex: a,
                        dataPointIndex: o,
                        w: r,
                      },
                    ]);
              },
            },
            {
              key: "rotateAroundCenter",
              value: function (t) {
                var l = {};
                return (
                  t && typeof t.getBBox == "function" && (l = t.getBBox()),
                  { x: l.x + l.width / 2, y: l.y + l.height / 2 }
                );
              },
            },
            {
              key: "getTextRects",
              value: function (t, l, r, s) {
                var a =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  o = this.w,
                  h = this.drawText({
                    x: -200,
                    y: -200,
                    text: t,
                    textAnchor: "start",
                    fontSize: l,
                    fontFamily: r,
                    foreColor: "#fff",
                    opacity: 0,
                  });
                s && h.attr("transform", s), o.globals.dom.Paper.add(h);
                var d = h.bbox();
                return (
                  a || (d = h.node.getBoundingClientRect()),
                  h.remove(),
                  { width: d.width, height: d.height }
                );
              },
            },
            {
              key: "placeTextWithEllipsis",
              value: function (t, l, r) {
                if (
                  typeof t.getComputedTextLength == "function" &&
                  ((t.textContent = l),
                  l.length > 0 && t.getComputedTextLength() >= r / 1.1)
                ) {
                  for (var s = l.length - 3; s > 0; s -= 3)
                    if (t.getSubStringLength(0, s) <= r / 1.1)
                      return void (t.textContent = l.substring(0, s) + "...");
                  t.textContent = ".";
                }
              },
            },
          ],
          [
            {
              key: "setAttrs",
              value: function (t, l) {
                for (var r in l) l.hasOwnProperty(r) && t.setAttribute(r, l[r]);
              },
            },
          ],
        ),
        T
      );
    })(),
    oe = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(
          T,
          [
            {
              key: "getStackedSeriesTotals",
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  l = this.w,
                  r = [];
                if (l.globals.series.length === 0) return r;
                for (
                  var s = 0;
                  s < l.globals.series[l.globals.maxValsInArrayIndex].length;
                  s++
                ) {
                  for (var a = 0, o = 0; o < l.globals.series.length; o++)
                    l.globals.series[o][s] !== void 0 &&
                      t.indexOf(o) === -1 &&
                      (a += l.globals.series[o][s]);
                  r.push(a);
                }
                return r;
              },
            },
            {
              key: "getSeriesTotalByIndex",
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return t === null
                  ? this.w.config.series.reduce(function (l, r) {
                      return l + r;
                    }, 0)
                  : this.w.globals.series[t].reduce(function (l, r) {
                      return l + r;
                    }, 0);
              },
            },
            {
              key: "isSeriesNull",
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return (
                  (t === null
                    ? this.w.config.series.filter(function (l) {
                        return l !== null;
                      })
                    : this.w.config.series[t].data.filter(function (l) {
                        return l !== null;
                      })
                  ).length === 0
                );
              },
            },
            {
              key: "seriesHaveSameValues",
              value: function (t) {
                return this.w.globals.series[t].every(function (l, r, s) {
                  return l === s[0];
                });
              },
            },
            {
              key: "getCategoryLabels",
              value: function (t) {
                var l = this.w,
                  r = t.slice();
                return (
                  l.config.xaxis.convertedCatToNumeric &&
                    (r = t.map(function (s, a) {
                      return l.config.xaxis.labels.formatter(
                        s - l.globals.minX + 1,
                      );
                    })),
                  r
                );
              },
            },
            {
              key: "getLargestSeries",
              value: function () {
                var t = this.w;
                t.globals.maxValsInArrayIndex = t.globals.series
                  .map(function (l) {
                    return l.length;
                  })
                  .indexOf(
                    Math.max.apply(
                      Math,
                      t.globals.series.map(function (l) {
                        return l.length;
                      }),
                    ),
                  );
              },
            },
            {
              key: "getLargestMarkerSize",
              value: function () {
                var t = this.w,
                  l = 0;
                return (
                  t.globals.markers.size.forEach(function (r) {
                    l = Math.max(l, r);
                  }),
                  t.config.markers.discrete &&
                    t.config.markers.discrete.length &&
                    t.config.markers.discrete.forEach(function (r) {
                      l = Math.max(l, r.size);
                    }),
                  l > 0 && (l += t.config.markers.hover.sizeOffset + 1),
                  (t.globals.markers.largestSize = l),
                  l
                );
              },
            },
            {
              key: "getSeriesTotals",
              value: function () {
                var t = this.w;
                t.globals.seriesTotals = t.globals.series.map(function (l, r) {
                  var s = 0;
                  if (Array.isArray(l))
                    for (var a = 0; a < l.length; a++) s += l[a];
                  else s += l;
                  return s;
                });
              },
            },
            {
              key: "getSeriesTotalsXRange",
              value: function (t, l) {
                var r = this.w;
                return r.globals.series.map(function (s, a) {
                  for (var o = 0, h = 0; h < s.length; h++)
                    r.globals.seriesX[a][h] > t &&
                      r.globals.seriesX[a][h] < l &&
                      (o += s[h]);
                  return o;
                });
              },
            },
            {
              key: "getPercentSeries",
              value: function () {
                var t = this.w;
                t.globals.seriesPercent = t.globals.series.map(function (l, r) {
                  var s = [];
                  if (Array.isArray(l))
                    for (var a = 0; a < l.length; a++) {
                      var o = t.globals.stackedSeriesTotals[a],
                        h = 0;
                      o && (h = (100 * l[a]) / o), s.push(h);
                    }
                  else {
                    var d =
                      (100 * l) /
                      t.globals.seriesTotals.reduce(function (p, m) {
                        return p + m;
                      }, 0);
                    s.push(d);
                  }
                  return s;
                });
              },
            },
            {
              key: "getCalculatedRatios",
              value: function () {
                var t,
                  l,
                  r,
                  s,
                  a = this.w.globals,
                  o = [],
                  h = 0,
                  d = [],
                  p = 0.1,
                  m = 0;
                if (((a.yRange = []), a.isMultipleYAxis))
                  for (var x = 0; x < a.minYArr.length; x++)
                    a.yRange.push(Math.abs(a.minYArr[x] - a.maxYArr[x])),
                      d.push(0);
                else a.yRange.push(Math.abs(a.minY - a.maxY));
                (a.xRange = Math.abs(a.maxX - a.minX)),
                  (a.zRange = Math.abs(a.maxZ - a.minZ));
                for (var v = 0; v < a.yRange.length; v++)
                  o.push(a.yRange[v] / a.gridHeight);
                if (
                  ((l = a.xRange / a.gridWidth),
                  (r = Math.abs(a.initialMaxX - a.initialMinX) / a.gridWidth),
                  (t = a.yRange / a.gridWidth),
                  (s = a.xRange / a.gridHeight),
                  (h = (a.zRange / a.gridHeight) * 16) || (h = 1),
                  a.minY !== Number.MIN_VALUE &&
                    Math.abs(a.minY) !== 0 &&
                    (a.hasNegs = !0),
                  a.isMultipleYAxis)
                ) {
                  d = [];
                  for (var w = 0; w < o.length; w++)
                    d.push(-a.minYArr[w] / o[w]);
                } else
                  d.push(-a.minY / o[0]),
                    a.minY !== Number.MIN_VALUE &&
                      Math.abs(a.minY) !== 0 &&
                      ((p = -a.minY / t), (m = a.minX / l));
                return {
                  yRatio: o,
                  invertedYRatio: t,
                  zRatio: h,
                  xRatio: l,
                  initialXRatio: r,
                  invertedXRatio: s,
                  baseLineInvertedY: p,
                  baseLineY: d,
                  baseLineX: m,
                };
              },
            },
            {
              key: "getLogSeries",
              value: function (t) {
                var l = this,
                  r = this.w;
                return (
                  (r.globals.seriesLog = t.map(function (s, a) {
                    return r.config.yaxis[a] && r.config.yaxis[a].logarithmic
                      ? s.map(function (o) {
                          return o === null
                            ? null
                            : l.getLogVal(r.config.yaxis[a].logBase, o, a);
                        })
                      : s;
                  })),
                  r.globals.invalidLogScale ? t : r.globals.seriesLog
                );
              },
            },
            {
              key: "getBaseLog",
              value: function (t, l) {
                return Math.log(l) / Math.log(t);
              },
            },
            {
              key: "getLogVal",
              value: function (t, l, r) {
                if (l === 0) return 0;
                var s = this.w,
                  a =
                    s.globals.minYArr[r] === 0
                      ? -1
                      : this.getBaseLog(t, s.globals.minYArr[r]),
                  o =
                    (s.globals.maxYArr[r] === 0
                      ? 0
                      : this.getBaseLog(t, s.globals.maxYArr[r])) - a;
                return l < 1 ? l / o : (this.getBaseLog(t, l) - a) / o;
              },
            },
            {
              key: "getLogYRatios",
              value: function (t) {
                var l = this,
                  r = this.w,
                  s = this.w.globals;
                return (
                  (s.yLogRatio = t.slice()),
                  (s.logYRange = s.yRange.map(function (a, o) {
                    if (r.config.yaxis[o] && l.w.config.yaxis[o].logarithmic) {
                      var h,
                        d = -Number.MAX_VALUE,
                        p = Number.MIN_VALUE;
                      return (
                        s.seriesLog.forEach(function (m, x) {
                          m.forEach(function (v) {
                            r.config.yaxis[x] &&
                              r.config.yaxis[x].logarithmic &&
                              ((d = Math.max(v, d)), (p = Math.min(v, p)));
                          });
                        }),
                        (h = Math.pow(
                          s.yRange[o],
                          Math.abs(p - d) / s.yRange[o],
                        )),
                        (s.yLogRatio[o] = h / s.gridHeight),
                        h
                      );
                    }
                  })),
                  s.invalidLogScale ? t.slice() : s.yLogRatio
                );
              },
            },
          ],
          [
            {
              key: "checkComboSeries",
              value: function (t) {
                var l = !1,
                  r = 0,
                  s = 0;
                return (
                  t.length &&
                    t[0].type !== void 0 &&
                    t.forEach(function (a) {
                      (a.type !== "bar" &&
                        a.type !== "column" &&
                        a.type !== "candlestick" &&
                        a.type !== "boxPlot") ||
                        r++,
                        a.type !== void 0 && s++;
                    }),
                  s > 0 && (l = !0),
                  { comboBarCount: r, comboCharts: l }
                );
              },
            },
            {
              key: "extendArrayProps",
              value: function (t, l, r) {
                return (
                  l.yaxis && (l = t.extendYAxis(l, r)),
                  l.annotations &&
                    (l.annotations.yaxis && (l = t.extendYAxisAnnotations(l)),
                    l.annotations.xaxis && (l = t.extendXAxisAnnotations(l)),
                    l.annotations.points && (l = t.extendPointAnnotations(l))),
                  l
                );
              },
            },
          ],
        ),
        T
      );
    })(),
    pe = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.annoCtx = t);
      }
      return (
        k(T, [
          {
            key: "setOrientations",
            value: function (t) {
              var l =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                r = this.w;
              if (t.label.orientation === "vertical") {
                var s = l !== null ? l : 0,
                  a = r.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                      s,
                      "']",
                    ),
                  );
                if (a !== null) {
                  var o = a.getBoundingClientRect();
                  a.setAttribute(
                    "x",
                    parseFloat(a.getAttribute("x")) - o.height + 4,
                  ),
                    t.label.position === "top"
                      ? a.setAttribute(
                          "y",
                          parseFloat(a.getAttribute("y")) + o.width,
                        )
                      : a.setAttribute(
                          "y",
                          parseFloat(a.getAttribute("y")) - o.width,
                        );
                  var h = this.annoCtx.graphics.rotateAroundCenter(a),
                    d = h.x,
                    p = h.y;
                  a.setAttribute(
                    "transform",
                    "rotate(-90 ".concat(d, " ").concat(p, ")"),
                  );
                }
              }
            },
          },
          {
            key: "addBackgroundToAnno",
            value: function (t, l) {
              var r = this.w;
              if (
                !t ||
                l.label.text === void 0 ||
                (l.label.text !== void 0 && !String(l.label.text).trim())
              )
                return null;
              var s = r.globals.dom.baseEl
                  .querySelector(".apexcharts-grid")
                  .getBoundingClientRect(),
                a = t.getBoundingClientRect(),
                o = l.label.style.padding.left,
                h = l.label.style.padding.right,
                d = l.label.style.padding.top,
                p = l.label.style.padding.bottom;
              l.label.orientation === "vertical" &&
                ((d = l.label.style.padding.left),
                (p = l.label.style.padding.right),
                (o = l.label.style.padding.top),
                (h = l.label.style.padding.bottom));
              var m = a.left - s.left - o,
                x = a.top - s.top - d,
                v = this.annoCtx.graphics.drawRect(
                  m - r.globals.barPadForNumericAxis,
                  x,
                  a.width + o + h,
                  a.height + d + p,
                  l.label.borderRadius,
                  l.label.style.background,
                  1,
                  l.label.borderWidth,
                  l.label.borderColor,
                  0,
                );
              return l.id && v.node.classList.add(l.id), v;
            },
          },
          {
            key: "annotationsBackground",
            value: function () {
              var t = this,
                l = this.w,
                r = function (s, a, o) {
                  var h = l.globals.dom.baseEl.querySelector(
                    ".apexcharts-"
                      .concat(o, "-annotations .apexcharts-")
                      .concat(o, "-annotation-label[rel='")
                      .concat(a, "']"),
                  );
                  if (h) {
                    var d = h.parentNode,
                      p = t.addBackgroundToAnno(h, s);
                    p &&
                      (d.insertBefore(p.node, h),
                      s.label.mouseEnter &&
                        p.node.addEventListener(
                          "mouseenter",
                          s.label.mouseEnter.bind(t, s),
                        ),
                      s.label.mouseLeave &&
                        p.node.addEventListener(
                          "mouseleave",
                          s.label.mouseLeave.bind(t, s),
                        ),
                      s.label.click &&
                        p.node.addEventListener(
                          "click",
                          s.label.click.bind(t, s),
                        ));
                  }
                };
              l.config.annotations.xaxis.map(function (s, a) {
                r(s, a, "xaxis");
              }),
                l.config.annotations.yaxis.map(function (s, a) {
                  r(s, a, "yaxis");
                }),
                l.config.annotations.points.map(function (s, a) {
                  r(s, a, "point");
                });
            },
          },
          {
            key: "getY1Y2",
            value: function (t, l) {
              var r,
                s = t === "y1" ? l.y : l.y2,
                a = this.w;
              if (this.annoCtx.invertAxis) {
                var o = a.globals.labels.indexOf(s);
                a.config.xaxis.convertedCatToNumeric &&
                  (o = a.globals.categoryLabels.indexOf(s));
                var h = a.globals.dom.baseEl.querySelector(
                  ".apexcharts-yaxis-texts-g text:nth-child(" + (o + 1) + ")",
                );
                h && (r = parseFloat(h.getAttribute("y")));
              } else {
                var d;
                a.config.yaxis[l.yAxisIndex].logarithmic
                  ? (d =
                      (s = new oe(this.annoCtx.ctx).getLogVal(
                        s,
                        l.yAxisIndex,
                      )) / a.globals.yLogRatio[l.yAxisIndex])
                  : (d =
                      (s - a.globals.minYArr[l.yAxisIndex]) /
                      (a.globals.yRange[l.yAxisIndex] / a.globals.gridHeight)),
                  (r = a.globals.gridHeight - d),
                  !l.marker || (l.y !== void 0 && l.y !== null) || (r = 0),
                  a.config.yaxis[l.yAxisIndex] &&
                    a.config.yaxis[l.yAxisIndex].reversed &&
                    (r = d);
              }
              return (
                typeof s == "string" &&
                  s.indexOf("px") > -1 &&
                  (r = parseFloat(s)),
                r
              );
            },
          },
          {
            key: "getX1X2",
            value: function (t, l) {
              var r = this.w,
                s = this.annoCtx.invertAxis ? r.globals.minY : r.globals.minX,
                a = this.annoCtx.invertAxis ? r.globals.maxY : r.globals.maxX,
                o = this.annoCtx.invertAxis
                  ? r.globals.yRange[0]
                  : r.globals.xRange,
                h = (l.x - s) / (o / r.globals.gridWidth);
              this.annoCtx.inversedReversedAxis &&
                (h = (a - l.x) / (o / r.globals.gridWidth)),
                (r.config.xaxis.type !== "category" &&
                  !r.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  r.globals.dataFormatXNumeric ||
                  (h = this.getStringX(l.x));
              var d = (l.x2 - s) / (o / r.globals.gridWidth);
              return (
                this.annoCtx.inversedReversedAxis &&
                  (d = (a - l.x2) / (o / r.globals.gridWidth)),
                (r.config.xaxis.type !== "category" &&
                  !r.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  r.globals.dataFormatXNumeric ||
                  (d = this.getStringX(l.x2)),
                (l.x !== void 0 && l.x !== null) ||
                  !l.marker ||
                  (h = r.globals.gridWidth),
                t === "x1" &&
                  typeof l.x == "string" &&
                  l.x.indexOf("px") > -1 &&
                  (h = parseFloat(l.x)),
                t === "x2" &&
                  typeof l.x2 == "string" &&
                  l.x2.indexOf("px") > -1 &&
                  (d = parseFloat(l.x2)),
                t === "x1" ? h : d
              );
            },
          },
          {
            key: "getStringX",
            value: function (t) {
              var l = this.w,
                r = t;
              l.config.xaxis.convertedCatToNumeric &&
                l.globals.categoryLabels.length &&
                (t = l.globals.categoryLabels.indexOf(t) + 1);
              var s = l.globals.labels.indexOf(t),
                a = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g text:nth-child(" + (s + 1) + ")",
                );
              return a && (r = parseFloat(a.getAttribute("x"))), r;
            },
          },
        ]),
        T
      );
    })(),
    ae = (function () {
      function T(t) {
        g(this, T),
          (this.w = t.w),
          (this.annoCtx = t),
          (this.invertAxis = this.annoCtx.invertAxis),
          (this.helpers = new pe(this.annoCtx));
      }
      return (
        k(T, [
          {
            key: "addXaxisAnnotation",
            value: function (t, l, r) {
              var s,
                a = this.w,
                o = this.helpers.getX1X2("x1", t),
                h = t.label.text,
                d = t.strokeDashArray;
              if (L.isNumber(o)) {
                if (t.x2 === null || t.x2 === void 0) {
                  var p = this.annoCtx.graphics.drawLine(
                    o + t.offsetX,
                    0 + t.offsetY,
                    o + t.offsetX,
                    a.globals.gridHeight + t.offsetY,
                    t.borderColor,
                    d,
                    t.borderWidth,
                  );
                  l.appendChild(p.node), t.id && p.node.classList.add(t.id);
                } else {
                  if ((s = this.helpers.getX1X2("x2", t)) < o) {
                    var m = o;
                    (o = s), (s = m);
                  }
                  var x = this.annoCtx.graphics.drawRect(
                    o + t.offsetX,
                    0 + t.offsetY,
                    s - o,
                    a.globals.gridHeight + t.offsetY,
                    0,
                    t.fillColor,
                    t.opacity,
                    1,
                    t.borderColor,
                    d,
                  );
                  x.node.classList.add("apexcharts-annotation-rect"),
                    x.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(a.globals.cuid, ")"),
                    ),
                    l.appendChild(x.node),
                    t.id && x.node.classList.add(t.id);
                }
                var v = this.annoCtx.graphics.getTextRects(
                    h,
                    parseFloat(t.label.style.fontSize),
                  ),
                  w =
                    t.label.position === "top"
                      ? 4
                      : t.label.position === "center"
                        ? a.globals.gridHeight / 2 +
                          (t.label.orientation === "vertical" ? v.width / 2 : 0)
                        : a.globals.gridHeight,
                  S = this.annoCtx.graphics.drawText({
                    x: o + t.label.offsetX,
                    y:
                      w +
                      t.label.offsetY -
                      (t.label.orientation === "vertical"
                        ? t.label.position === "top"
                          ? v.width / 2 - 12
                          : -v.width / 2
                        : 0),
                    text: h,
                    textAnchor: t.label.textAnchor,
                    fontSize: t.label.style.fontSize,
                    fontFamily: t.label.style.fontFamily,
                    fontWeight: t.label.style.fontWeight,
                    foreColor: t.label.style.color,
                    cssClass: "apexcharts-xaxis-annotation-label "
                      .concat(t.label.style.cssClass, " ")
                      .concat(t.id ? t.id : ""),
                  });
                S.attr({ rel: r }),
                  l.appendChild(S.node),
                  this.annoCtx.helpers.setOrientations(t, r);
              }
            },
          },
          {
            key: "drawXAxisAnnotations",
            value: function () {
              var t = this,
                l = this.w,
                r = this.annoCtx.graphics.group({
                  class: "apexcharts-xaxis-annotations",
                });
              return (
                l.config.annotations.xaxis.map(function (s, a) {
                  t.addXaxisAnnotation(s, r.node, a);
                }),
                r
              );
            },
          },
        ]),
        T
      );
    })(),
    ke = (function () {
      function T(t) {
        g(this, T),
          (this.w = t.w),
          (this.annoCtx = t),
          (this.helpers = new pe(this.annoCtx));
      }
      return (
        k(T, [
          {
            key: "addYaxisAnnotation",
            value: function (t, l, r) {
              var s,
                a = this.w,
                o = t.strokeDashArray,
                h = this.helpers.getY1Y2("y1", t),
                d = t.label.text;
              if (t.y2 === null || t.y2 === void 0) {
                var p = this.annoCtx.graphics.drawLine(
                  0 + t.offsetX,
                  h + t.offsetY,
                  this._getYAxisAnnotationWidth(t),
                  h + t.offsetY,
                  t.borderColor,
                  o,
                  t.borderWidth,
                );
                l.appendChild(p.node), t.id && p.node.classList.add(t.id);
              } else {
                if ((s = this.helpers.getY1Y2("y2", t)) > h) {
                  var m = h;
                  (h = s), (s = m);
                }
                var x = this.annoCtx.graphics.drawRect(
                  0 + t.offsetX,
                  s + t.offsetY,
                  this._getYAxisAnnotationWidth(t),
                  h - s,
                  0,
                  t.fillColor,
                  t.opacity,
                  1,
                  t.borderColor,
                  o,
                );
                x.node.classList.add("apexcharts-annotation-rect"),
                  x.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(a.globals.cuid, ")"),
                  ),
                  l.appendChild(x.node),
                  t.id && x.node.classList.add(t.id);
              }
              var v =
                  t.label.position === "right"
                    ? a.globals.gridWidth
                    : t.label.position === "center"
                      ? a.globals.gridWidth / 2
                      : 0,
                w = this.annoCtx.graphics.drawText({
                  x: v + t.label.offsetX,
                  y: (s ?? h) + t.label.offsetY - 3,
                  text: d,
                  textAnchor: t.label.textAnchor,
                  fontSize: t.label.style.fontSize,
                  fontFamily: t.label.style.fontFamily,
                  fontWeight: t.label.style.fontWeight,
                  foreColor: t.label.style.color,
                  cssClass: "apexcharts-yaxis-annotation-label "
                    .concat(t.label.style.cssClass, " ")
                    .concat(t.id ? t.id : ""),
                });
              w.attr({ rel: r }), l.appendChild(w.node);
            },
          },
          {
            key: "_getYAxisAnnotationWidth",
            value: function (t) {
              var l = this.w;
              return (
                l.globals.gridWidth,
                (t.width.indexOf("%") > -1
                  ? (l.globals.gridWidth * parseInt(t.width, 10)) / 100
                  : parseInt(t.width, 10)) + t.offsetX
              );
            },
          },
          {
            key: "drawYAxisAnnotations",
            value: function () {
              var t = this,
                l = this.w,
                r = this.annoCtx.graphics.group({
                  class: "apexcharts-yaxis-annotations",
                });
              return (
                l.config.annotations.yaxis.map(function (s, a) {
                  t.addYaxisAnnotation(s, r.node, a);
                }),
                r
              );
            },
          },
        ]),
        T
      );
    })(),
    Se = (function () {
      function T(t) {
        g(this, T),
          (this.w = t.w),
          (this.annoCtx = t),
          (this.helpers = new pe(this.annoCtx));
      }
      return (
        k(T, [
          {
            key: "addPointAnnotation",
            value: function (t, l, r) {
              this.w;
              var s = this.helpers.getX1X2("x1", t),
                a = this.helpers.getY1Y2("y1", t);
              if (L.isNumber(s)) {
                var o = {
                    pSize: t.marker.size,
                    pointStrokeWidth: t.marker.strokeWidth,
                    pointFillColor: t.marker.fillColor,
                    pointStrokeColor: t.marker.strokeColor,
                    shape: t.marker.shape,
                    pRadius: t.marker.radius,
                    class: "apexcharts-point-annotation-marker "
                      .concat(t.marker.cssClass, " ")
                      .concat(t.id ? t.id : ""),
                  },
                  h = this.annoCtx.graphics.drawMarker(
                    s + t.marker.offsetX,
                    a + t.marker.offsetY,
                    o,
                  );
                l.appendChild(h.node);
                var d = t.label.text ? t.label.text : "",
                  p = this.annoCtx.graphics.drawText({
                    x: s + t.label.offsetX,
                    y:
                      a +
                      t.label.offsetY -
                      t.marker.size -
                      parseFloat(t.label.style.fontSize) / 1.6,
                    text: d,
                    textAnchor: t.label.textAnchor,
                    fontSize: t.label.style.fontSize,
                    fontFamily: t.label.style.fontFamily,
                    fontWeight: t.label.style.fontWeight,
                    foreColor: t.label.style.color,
                    cssClass: "apexcharts-point-annotation-label "
                      .concat(t.label.style.cssClass, " ")
                      .concat(t.id ? t.id : ""),
                  });
                if (
                  (p.attr({ rel: r }), l.appendChild(p.node), t.customSVG.SVG)
                ) {
                  var m = this.annoCtx.graphics.group({
                    class:
                      "apexcharts-point-annotations-custom-svg " +
                      t.customSVG.cssClass,
                  });
                  m.attr({
                    transform: "translate("
                      .concat(s + t.customSVG.offsetX, ", ")
                      .concat(a + t.customSVG.offsetY, ")"),
                  }),
                    (m.node.innerHTML = t.customSVG.SVG),
                    l.appendChild(m.node);
                }
                if (t.image.path) {
                  var x = t.image.width ? t.image.width : 20,
                    v = t.image.height ? t.image.height : 20;
                  h = this.annoCtx.addImage({
                    x: s + t.image.offsetX - x / 2,
                    y: a + t.image.offsetY - v / 2,
                    width: x,
                    height: v,
                    path: t.image.path,
                    appendTo: ".apexcharts-point-annotations",
                  });
                }
                t.mouseEnter &&
                  h.node.addEventListener(
                    "mouseenter",
                    t.mouseEnter.bind(this, t),
                  ),
                  t.mouseLeave &&
                    h.node.addEventListener(
                      "mouseleave",
                      t.mouseLeave.bind(this, t),
                    ),
                  t.click &&
                    h.node.addEventListener("click", t.click.bind(this, t));
              }
            },
          },
          {
            key: "drawPointAnnotations",
            value: function () {
              var t = this,
                l = this.w,
                r = this.annoCtx.graphics.group({
                  class: "apexcharts-point-annotations",
                });
              return (
                l.config.annotations.points.map(function (s, a) {
                  t.addPointAnnotation(s, r.node, a);
                }),
                r
              );
            },
          },
        ]),
        T
      );
    })(),
    it = {
      name: "en",
      options: {
        months: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        shortMonths: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        days: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        toolbar: {
          exportToSVG: "Download SVG",
          exportToPNG: "Download PNG",
          exportToCSV: "Download CSV",
          menu: "Menu",
          selection: "Selection",
          selectionZoom: "Selection Zoom",
          zoomIn: "Zoom In",
          zoomOut: "Zoom Out",
          pan: "Panning",
          reset: "Reset Zoom",
        },
      },
    },
    gt = (function () {
      function T() {
        g(this, T),
          (this.yAxis = {
            show: !0,
            showAlways: !1,
            showForNullSeries: !0,
            seriesName: void 0,
            opposite: !1,
            reversed: !1,
            logarithmic: !1,
            logBase: 10,
            tickAmount: void 0,
            forceNiceScale: !1,
            max: void 0,
            min: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            labels: {
              show: !0,
              minWidth: 0,
              maxWidth: 160,
              offsetX: 0,
              offsetY: 0,
              align: void 0,
              rotate: 0,
              padding: 20,
              style: {
                colors: [],
                fontSize: "11px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: "",
              },
              formatter: void 0,
            },
            axisBorder: {
              show: !1,
              color: "#e0e0e0",
              width: 1,
              offsetX: 0,
              offsetY: 0,
            },
            axisTicks: {
              show: !1,
              color: "#e0e0e0",
              width: 6,
              offsetX: 0,
              offsetY: 0,
            },
            title: {
              text: void 0,
              rotate: -90,
              offsetY: 0,
              offsetX: 0,
              style: {
                color: void 0,
                fontSize: "11px",
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: "",
              },
            },
            tooltip: { enabled: !1, offsetX: 0 },
            crosshairs: {
              show: !0,
              position: "front",
              stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
            },
          }),
          (this.pointAnnotation = {
            id: void 0,
            x: 0,
            y: null,
            yAxisIndex: 0,
            seriesIndex: 0,
            mouseEnter: void 0,
            mouseLeave: void 0,
            click: void 0,
            marker: {
              size: 4,
              fillColor: "#fff",
              strokeWidth: 2,
              strokeColor: "#333",
              shape: "circle",
              offsetX: 0,
              offsetY: 0,
              radius: 2,
              cssClass: "",
            },
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
            customSVG: {
              SVG: void 0,
              cssClass: void 0,
              offsetX: 0,
              offsetY: 0,
            },
            image: {
              path: void 0,
              width: 20,
              height: 20,
              offsetX: 0,
              offsetY: 0,
            },
          }),
          (this.yAxisAnnotation = {
            id: void 0,
            y: 0,
            y2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            width: "100%",
            yAxisIndex: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "end",
              position: "right",
              offsetX: 0,
              offsetY: -3,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.xAxisAnnotation = {
            id: void 0,
            x: 0,
            x2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              orientation: "vertical",
              position: "top",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.text = {
            x: 0,
            y: 0,
            text: "",
            textAnchor: "start",
            foreColor: void 0,
            fontSize: "13px",
            fontFamily: void 0,
            fontWeight: 400,
            appendTo: ".apexcharts-annotations",
            backgroundColor: "transparent",
            borderColor: "#c2c2c2",
            borderRadius: 0,
            borderWidth: 0,
            paddingLeft: 4,
            paddingRight: 4,
            paddingTop: 2,
            paddingBottom: 2,
          });
      }
      return (
        k(T, [
          {
            key: "init",
            value: function () {
              return {
                annotations: {
                  yaxis: [this.yAxisAnnotation],
                  xaxis: [this.xAxisAnnotation],
                  points: [this.pointAnnotation],
                  texts: [],
                  images: [],
                  shapes: [],
                },
                chart: {
                  animations: {
                    enabled: !0,
                    easing: "easeinout",
                    speed: 800,
                    animateGradually: { delay: 150, enabled: !0 },
                    dynamicAnimation: { enabled: !0, speed: 350 },
                  },
                  background: "transparent",
                  locales: [it],
                  defaultLocale: "en",
                  dropShadow: {
                    enabled: !1,
                    enabledOnSeries: void 0,
                    top: 2,
                    left: 2,
                    blur: 4,
                    color: "#000",
                    opacity: 0.35,
                  },
                  events: {
                    animationEnd: void 0,
                    beforeMount: void 0,
                    mounted: void 0,
                    updated: void 0,
                    click: void 0,
                    mouseMove: void 0,
                    mouseLeave: void 0,
                    xAxisLabelClick: void 0,
                    legendClick: void 0,
                    markerClick: void 0,
                    selection: void 0,
                    dataPointSelection: void 0,
                    dataPointMouseEnter: void 0,
                    dataPointMouseLeave: void 0,
                    beforeZoom: void 0,
                    beforeResetZoom: void 0,
                    zoomed: void 0,
                    scrolled: void 0,
                    brushScrolled: void 0,
                  },
                  foreColor: "#373d3f",
                  fontFamily: "Helvetica, Arial, sans-serif",
                  height: "auto",
                  parentHeightOffset: 15,
                  redrawOnParentResize: !0,
                  redrawOnWindowResize: !0,
                  id: void 0,
                  group: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  selection: {
                    enabled: !1,
                    type: "x",
                    fill: { color: "#24292e", opacity: 0.1 },
                    stroke: {
                      width: 1,
                      color: "#24292e",
                      opacity: 0.4,
                      dashArray: 3,
                    },
                    xaxis: { min: void 0, max: void 0 },
                    yaxis: { min: void 0, max: void 0 },
                  },
                  sparkline: { enabled: !1 },
                  brush: { enabled: !1, autoScaleYaxis: !0, target: void 0 },
                  stacked: !1,
                  stackType: "normal",
                  toolbar: {
                    show: !0,
                    offsetX: 0,
                    offsetY: 0,
                    tools: {
                      download: !0,
                      selection: !0,
                      zoom: !0,
                      zoomin: !0,
                      zoomout: !0,
                      pan: !0,
                      reset: !0,
                      customIcons: [],
                    },
                    export: {
                      csv: {
                        filename: void 0,
                        columnDelimiter: ",",
                        headerCategory: "category",
                        headerValue: "value",
                        dateFormatter: function (t) {
                          return new Date(t).toDateString();
                        },
                      },
                      png: { filename: void 0 },
                      svg: { filename: void 0 },
                    },
                    autoSelected: "zoom",
                  },
                  type: "line",
                  width: "100%",
                  zoom: {
                    enabled: !0,
                    type: "x",
                    autoScaleYaxis: !1,
                    zoomedArea: {
                      fill: { color: "#90CAF9", opacity: 0.4 },
                      stroke: { color: "#0D47A1", opacity: 0.4, width: 1 },
                    },
                  },
                },
                plotOptions: {
                  area: { fillTo: "origin" },
                  bar: {
                    horizontal: !1,
                    columnWidth: "70%",
                    barHeight: "70%",
                    distributed: !1,
                    borderRadius: 0,
                    borderRadiusApplication: "around",
                    borderRadiusWhenStacked: "last",
                    rangeBarOverlap: !0,
                    rangeBarGroupRows: !1,
                    hideZeroBarsWhenGrouped: !1,
                    isDumbbell: !1,
                    dumbbellColors: void 0,
                    isFunnel: !1,
                    isFunnel3d: !0,
                    colors: {
                      ranges: [],
                      backgroundBarColors: [],
                      backgroundBarOpacity: 1,
                      backgroundBarRadius: 0,
                    },
                    dataLabels: {
                      position: "top",
                      maxItems: 100,
                      hideOverflowingLabels: !0,
                      orientation: "horizontal",
                      total: {
                        enabled: !1,
                        formatter: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: "#373d3f",
                          fontSize: "12px",
                          fontFamily: void 0,
                          fontWeight: 600,
                        },
                      },
                    },
                  },
                  bubble: {
                    zScaling: !0,
                    minBubbleRadius: void 0,
                    maxBubbleRadius: void 0,
                  },
                  candlestick: {
                    colors: { upward: "#00B746", downward: "#EF403C" },
                    wick: { useFillColor: !0 },
                  },
                  boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } },
                  heatmap: {
                    radius: 2,
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    reverseNegativeShade: !1,
                    distributed: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  treemap: {
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    distributed: !1,
                    reverseNegativeShade: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  radialBar: {
                    inverseOrder: !1,
                    startAngle: 0,
                    endAngle: 360,
                    offsetX: 0,
                    offsetY: 0,
                    hollow: {
                      margin: 5,
                      size: "50%",
                      background: "transparent",
                      image: void 0,
                      imageWidth: 150,
                      imageHeight: 150,
                      imageOffsetX: 0,
                      imageOffsetY: 0,
                      imageClipped: !0,
                      position: "front",
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    track: {
                      show: !0,
                      startAngle: void 0,
                      endAngle: void 0,
                      background: "#f2f2f2",
                      strokeWidth: "97%",
                      opacity: 1,
                      margin: 5,
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    dataLabels: {
                      show: !0,
                      name: {
                        show: !0,
                        fontSize: "16px",
                        fontFamily: void 0,
                        fontWeight: 600,
                        color: void 0,
                        offsetY: 0,
                        formatter: function (t) {
                          return t;
                        },
                      },
                      value: {
                        show: !0,
                        fontSize: "14px",
                        fontFamily: void 0,
                        fontWeight: 400,
                        color: void 0,
                        offsetY: 16,
                        formatter: function (t) {
                          return t + "%";
                        },
                      },
                      total: {
                        show: !1,
                        label: "Total",
                        fontSize: "16px",
                        fontWeight: 600,
                        fontFamily: void 0,
                        color: void 0,
                        formatter: function (t) {
                          return (
                            t.globals.seriesTotals.reduce(function (l, r) {
                              return l + r;
                            }, 0) /
                              t.globals.series.length +
                            "%"
                          );
                        },
                      },
                    },
                  },
                  pie: {
                    customScale: 1,
                    offsetX: 0,
                    offsetY: 0,
                    startAngle: 0,
                    endAngle: 360,
                    expandOnClick: !0,
                    dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                    donut: {
                      size: "65%",
                      background: "transparent",
                      labels: {
                        show: !1,
                        name: {
                          show: !0,
                          fontSize: "16px",
                          fontFamily: void 0,
                          fontWeight: 600,
                          color: void 0,
                          offsetY: -10,
                          formatter: function (t) {
                            return t;
                          },
                        },
                        value: {
                          show: !0,
                          fontSize: "20px",
                          fontFamily: void 0,
                          fontWeight: 400,
                          color: void 0,
                          offsetY: 10,
                          formatter: function (t) {
                            return t;
                          },
                        },
                        total: {
                          show: !1,
                          showAlways: !1,
                          label: "Total",
                          fontSize: "16px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          color: void 0,
                          formatter: function (t) {
                            return t.globals.seriesTotals.reduce(function (
                              l,
                              r,
                            ) {
                              return l + r;
                            }, 0);
                          },
                        },
                      },
                    },
                  },
                  polarArea: {
                    rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                    spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" },
                  },
                  radar: {
                    size: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    polygons: {
                      strokeWidth: 1,
                      strokeColors: "#e8e8e8",
                      connectorColors: "#e8e8e8",
                      fill: { colors: void 0 },
                    },
                  },
                },
                colors: void 0,
                dataLabels: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  formatter: function (t) {
                    return t !== null ? t : "";
                  },
                  textAnchor: "middle",
                  distributed: !1,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    colors: void 0,
                  },
                  background: {
                    enabled: !0,
                    foreColor: "#fff",
                    borderRadius: 2,
                    padding: 4,
                    opacity: 0.9,
                    borderWidth: 1,
                    borderColor: "#fff",
                    dropShadow: {
                      enabled: !1,
                      top: 1,
                      left: 1,
                      blur: 1,
                      color: "#000",
                      opacity: 0.45,
                    },
                  },
                  dropShadow: {
                    enabled: !1,
                    top: 1,
                    left: 1,
                    blur: 1,
                    color: "#000",
                    opacity: 0.45,
                  },
                },
                fill: {
                  type: "solid",
                  colors: void 0,
                  opacity: 0.85,
                  gradient: {
                    shade: "dark",
                    type: "horizontal",
                    shadeIntensity: 0.5,
                    gradientToColors: void 0,
                    inverseColors: !0,
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [0, 50, 100],
                    colorStops: [],
                  },
                  image: { src: [], width: void 0, height: void 0 },
                  pattern: {
                    style: "squares",
                    width: 6,
                    height: 6,
                    strokeWidth: 2,
                  },
                },
                forecastDataPoints: {
                  count: 0,
                  fillOpacity: 0.5,
                  strokeWidth: void 0,
                  dashArray: 4,
                },
                grid: {
                  show: !0,
                  borderColor: "#e0e0e0",
                  strokeDashArray: 0,
                  position: "back",
                  xaxis: { lines: { show: !1 } },
                  yaxis: { lines: { show: !0 } },
                  row: { colors: void 0, opacity: 0.5 },
                  column: { colors: void 0, opacity: 0.5 },
                  padding: { top: 0, right: 10, bottom: 0, left: 12 },
                },
                labels: [],
                legend: {
                  show: !0,
                  showForSingleSeries: !1,
                  showForNullSeries: !0,
                  showForZeroSeries: !0,
                  floating: !1,
                  position: "bottom",
                  horizontalAlign: "center",
                  inverseOrder: !1,
                  fontSize: "12px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  width: void 0,
                  height: void 0,
                  formatter: void 0,
                  tooltipHoverFormatter: void 0,
                  offsetX: -20,
                  offsetY: 4,
                  customLegendItems: [],
                  labels: { colors: void 0, useSeriesColors: !1 },
                  markers: {
                    width: 12,
                    height: 12,
                    strokeWidth: 0,
                    fillColors: void 0,
                    strokeColor: "#fff",
                    radius: 12,
                    customHTML: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    onClick: void 0,
                  },
                  itemMargin: { horizontal: 5, vertical: 2 },
                  onItemClick: { toggleDataSeries: !0 },
                  onItemHover: { highlightDataSeries: !0 },
                },
                markers: {
                  discrete: [],
                  size: 0,
                  colors: void 0,
                  strokeColors: "#fff",
                  strokeWidth: 2,
                  strokeOpacity: 0.9,
                  strokeDashArray: 0,
                  fillOpacity: 1,
                  shape: "circle",
                  width: 8,
                  height: 8,
                  radius: 2,
                  offsetX: 0,
                  offsetY: 0,
                  onClick: void 0,
                  onDblClick: void 0,
                  showNullDataPoints: !0,
                  hover: { size: void 0, sizeOffset: 3 },
                },
                noData: {
                  text: void 0,
                  align: "center",
                  verticalAlign: "middle",
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: void 0,
                    fontSize: "14px",
                    fontFamily: void 0,
                  },
                },
                responsive: [],
                series: void 0,
                states: {
                  normal: { filter: { type: "none", value: 0 } },
                  hover: { filter: { type: "lighten", value: 0.1 } },
                  active: {
                    allowMultipleDataPointsSelection: !1,
                    filter: { type: "darken", value: 0.5 },
                  },
                },
                title: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 0,
                  floating: !1,
                  style: {
                    fontSize: "14px",
                    fontWeight: 900,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                subtitle: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 30,
                  floating: !1,
                  style: {
                    fontSize: "12px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                stroke: {
                  show: !0,
                  curve: "smooth",
                  lineCap: "butt",
                  width: 2,
                  colors: void 0,
                  dashArray: 0,
                  fill: {
                    type: "solid",
                    colors: void 0,
                    opacity: 0.85,
                    gradient: {
                      shade: "dark",
                      type: "horizontal",
                      shadeIntensity: 0.5,
                      gradientToColors: void 0,
                      inverseColors: !0,
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [0, 50, 100],
                      colorStops: [],
                    },
                  },
                },
                tooltip: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  shared: !0,
                  followCursor: !1,
                  intersect: !1,
                  inverseOrder: !1,
                  custom: void 0,
                  fillSeriesColor: !1,
                  theme: "light",
                  cssClass: "",
                  style: { fontSize: "12px", fontFamily: void 0 },
                  onDatasetHover: { highlightDataSeries: !1 },
                  x: { show: !0, format: "dd MMM", formatter: void 0 },
                  y: {
                    formatter: void 0,
                    title: {
                      formatter: function (t) {
                        return t ? t + ": " : "";
                      },
                    },
                  },
                  z: { formatter: void 0, title: "Size: " },
                  marker: { show: !0, fillColors: void 0 },
                  items: { display: "flex" },
                  fixed: {
                    enabled: !1,
                    position: "topRight",
                    offsetX: 0,
                    offsetY: 0,
                  },
                },
                xaxis: {
                  type: "category",
                  categories: [],
                  convertedCatToNumeric: !1,
                  offsetX: 0,
                  offsetY: 0,
                  overwriteCategories: void 0,
                  labels: {
                    show: !0,
                    rotate: -45,
                    rotateAlways: !1,
                    hideOverlappingLabels: !0,
                    trim: !1,
                    minHeight: void 0,
                    maxHeight: 120,
                    showDuplicates: !0,
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                    offsetX: 0,
                    offsetY: 0,
                    format: void 0,
                    formatter: void 0,
                    datetimeUTC: !0,
                    datetimeFormatter: {
                      year: "yyyy",
                      month: "MMM 'yy",
                      day: "dd MMM",
                      hour: "HH:mm",
                      minute: "HH:mm:ss",
                      second: "HH:mm:ss",
                    },
                  },
                  group: {
                    groups: [],
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  axisBorder: {
                    show: !0,
                    color: "#e0e0e0",
                    width: "100%",
                    height: 1,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  axisTicks: {
                    show: !0,
                    color: "#e0e0e0",
                    height: 6,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  tickAmount: void 0,
                  tickPlacement: "on",
                  min: void 0,
                  max: void 0,
                  range: void 0,
                  floating: !1,
                  decimalsInFloat: void 0,
                  position: "bottom",
                  title: {
                    text: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      color: void 0,
                      fontSize: "12px",
                      fontWeight: 900,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  crosshairs: {
                    show: !0,
                    width: 1,
                    position: "back",
                    opacity: 0.9,
                    stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                    fill: {
                      type: "solid",
                      color: "#B1B9C4",
                      gradient: {
                        colorFrom: "#D8E3F0",
                        colorTo: "#BED1E6",
                        stops: [0, 100],
                        opacityFrom: 0.4,
                        opacityTo: 0.5,
                      },
                    },
                    dropShadow: {
                      enabled: !1,
                      left: 0,
                      top: 0,
                      blur: 1,
                      opacity: 0.4,
                    },
                  },
                  tooltip: {
                    enabled: !0,
                    offsetY: 0,
                    formatter: void 0,
                    style: { fontSize: "12px", fontFamily: void 0 },
                  },
                },
                yaxis: this.yAxis,
                theme: {
                  mode: "light",
                  palette: "palette1",
                  monochrome: {
                    enabled: !1,
                    color: "#008FFB",
                    shadeTo: "light",
                    shadeIntensity: 0.65,
                  },
                },
              };
            },
          },
        ]),
        T
      );
    })(),
    fl = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.graphics = new Z(this.ctx)),
          this.w.globals.isBarHorizontal && (this.invertAxis = !0),
          (this.helpers = new pe(this)),
          (this.xAxisAnnotations = new ae(this)),
          (this.yAxisAnnotations = new ke(this)),
          (this.pointsAnnotations = new Se(this)),
          this.w.globals.isBarHorizontal &&
            this.w.config.yaxis[0].reversed &&
            (this.inversedReversedAxis = !0),
          (this.xDivision =
            this.w.globals.gridWidth / this.w.globals.dataPoints);
      }
      return (
        k(T, [
          {
            key: "drawAxesAnnotations",
            value: function () {
              var t = this.w;
              if (t.globals.axisCharts) {
                for (
                  var l = this.yAxisAnnotations.drawYAxisAnnotations(),
                    r = this.xAxisAnnotations.drawXAxisAnnotations(),
                    s = this.pointsAnnotations.drawPointAnnotations(),
                    a = t.config.chart.animations.enabled,
                    o = [l, r, s],
                    h = [r.node, l.node, s.node],
                    d = 0;
                  d < 3;
                  d++
                )
                  t.globals.dom.elGraphical.add(o[d]),
                    !a ||
                      t.globals.resized ||
                      t.globals.dataChanged ||
                      (t.config.chart.type !== "scatter" &&
                        t.config.chart.type !== "bubble" &&
                        t.globals.dataPoints > 1 &&
                        h[d].classList.add("apexcharts-element-hidden")),
                    t.globals.delayedElements.push({ el: h[d], index: 0 });
                this.helpers.annotationsBackground();
              }
            },
          },
          {
            key: "drawImageAnnos",
            value: function () {
              var t = this;
              this.w.config.annotations.images.map(function (l, r) {
                t.addImage(l, r);
              });
            },
          },
          {
            key: "drawTextAnnos",
            value: function () {
              var t = this;
              this.w.config.annotations.texts.map(function (l, r) {
                t.addText(l, r);
              });
            },
          },
          {
            key: "addXaxisAnnotation",
            value: function (t, l, r) {
              this.xAxisAnnotations.addXaxisAnnotation(t, l, r);
            },
          },
          {
            key: "addYaxisAnnotation",
            value: function (t, l, r) {
              this.yAxisAnnotations.addYaxisAnnotation(t, l, r);
            },
          },
          {
            key: "addPointAnnotation",
            value: function (t, l, r) {
              this.pointsAnnotations.addPointAnnotation(t, l, r);
            },
          },
          {
            key: "addText",
            value: function (t, l) {
              var r = t.x,
                s = t.y,
                a = t.text,
                o = t.textAnchor,
                h = t.foreColor,
                d = t.fontSize,
                p = t.fontFamily,
                m = t.fontWeight,
                x = t.cssClass,
                v = t.backgroundColor,
                w = t.borderWidth,
                S = t.strokeDashArray,
                A = t.borderRadius,
                P = t.borderColor,
                R = t.appendTo,
                O = R === void 0 ? ".apexcharts-annotations" : R,
                f = t.paddingLeft,
                y = f === void 0 ? 4 : f,
                C = t.paddingRight,
                M = C === void 0 ? 4 : C,
                z = t.paddingBottom,
                D = z === void 0 ? 2 : z,
                U = t.paddingTop,
                $ = U === void 0 ? 2 : U,
                le = this.w,
                ne = this.graphics.drawText({
                  x: r,
                  y: s,
                  text: a,
                  textAnchor: o || "start",
                  fontSize: d || "12px",
                  fontWeight: m || "regular",
                  fontFamily: p || le.config.chart.fontFamily,
                  foreColor: h || le.config.chart.foreColor,
                  cssClass: x,
                }),
                se = le.globals.dom.baseEl.querySelector(O);
              se && se.appendChild(ne.node);
              var he = ne.bbox();
              if (a) {
                var ye = this.graphics.drawRect(
                  he.x - y,
                  he.y - $,
                  he.width + y + M,
                  he.height + D + $,
                  A,
                  v || "transparent",
                  1,
                  w,
                  P,
                  S,
                );
                se.insertBefore(ye.node, ne.node);
              }
            },
          },
          {
            key: "addImage",
            value: function (t, l) {
              var r = this.w,
                s = t.path,
                a = t.x,
                o = a === void 0 ? 0 : a,
                h = t.y,
                d = h === void 0 ? 0 : h,
                p = t.width,
                m = p === void 0 ? 20 : p,
                x = t.height,
                v = x === void 0 ? 20 : x,
                w = t.appendTo,
                S = w === void 0 ? ".apexcharts-annotations" : w,
                A = r.globals.dom.Paper.image(s);
              A.size(m, v).move(o, d);
              var P = r.globals.dom.baseEl.querySelector(S);
              return P && P.appendChild(A.node), A;
            },
          },
          {
            key: "addXaxisAnnotationExternal",
            value: function (t, l, r) {
              return (
                this.addAnnotationExternal({
                  params: t,
                  pushToMemory: l,
                  context: r,
                  type: "xaxis",
                  contextMethod: r.addXaxisAnnotation,
                }),
                r
              );
            },
          },
          {
            key: "addYaxisAnnotationExternal",
            value: function (t, l, r) {
              return (
                this.addAnnotationExternal({
                  params: t,
                  pushToMemory: l,
                  context: r,
                  type: "yaxis",
                  contextMethod: r.addYaxisAnnotation,
                }),
                r
              );
            },
          },
          {
            key: "addPointAnnotationExternal",
            value: function (t, l, r) {
              return (
                this.invertAxis === void 0 &&
                  (this.invertAxis = r.w.globals.isBarHorizontal),
                this.addAnnotationExternal({
                  params: t,
                  pushToMemory: l,
                  context: r,
                  type: "point",
                  contextMethod: r.addPointAnnotation,
                }),
                r
              );
            },
          },
          {
            key: "addAnnotationExternal",
            value: function (t) {
              var l = t.params,
                r = t.pushToMemory,
                s = t.context,
                a = t.type,
                o = t.contextMethod,
                h = s,
                d = h.w,
                p = d.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(a, "-annotations"),
                ),
                m = p.childNodes.length + 1,
                x = new gt(),
                v = Object.assign(
                  {},
                  a === "xaxis"
                    ? x.xAxisAnnotation
                    : a === "yaxis"
                      ? x.yAxisAnnotation
                      : x.pointAnnotation,
                ),
                w = L.extend(v, l);
              switch (a) {
                case "xaxis":
                  this.addXaxisAnnotation(w, p, m);
                  break;
                case "yaxis":
                  this.addYaxisAnnotation(w, p, m);
                  break;
                case "point":
                  this.addPointAnnotation(w, p, m);
              }
              var S = d.globals.dom.baseEl.querySelector(
                  ".apexcharts-"
                    .concat(a, "-annotations .apexcharts-")
                    .concat(a, "-annotation-label[rel='")
                    .concat(m, "']"),
                ),
                A = this.helpers.addBackgroundToAnno(S, w);
              return (
                A && p.insertBefore(A.node, S),
                r &&
                  d.globals.memory.methodsToExec.push({
                    context: h,
                    id: w.id ? w.id : L.randomId(),
                    method: o,
                    label: "addAnnotation",
                    params: l,
                  }),
                s
              );
            },
          },
          {
            key: "clearAnnotations",
            value: function (t) {
              var l = t.w,
                r = l.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations",
                );
              l.globals.memory.methodsToExec.map(function (s, a) {
                (s.label !== "addText" && s.label !== "addAnnotation") ||
                  l.globals.memory.methodsToExec.splice(a, 1);
              }),
                (r = L.listToArray(r)),
                Array.prototype.forEach.call(r, function (s) {
                  for (; s.firstChild; ) s.removeChild(s.firstChild);
                });
            },
          },
          {
            key: "removeAnnotation",
            value: function (t, l) {
              var r = t.w,
                s = r.globals.dom.baseEl.querySelectorAll(".".concat(l));
              s &&
                (r.globals.memory.methodsToExec.map(function (a, o) {
                  a.id === l && r.globals.memory.methodsToExec.splice(o, 1);
                }),
                Array.prototype.forEach.call(s, function (a) {
                  a.parentElement.removeChild(a);
                }));
            },
          },
        ]),
        T
      );
    })(),
    Ze = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
          (this.months30 = [2, 4, 6, 9, 11]),
          (this.daysCntOfYear = [
            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
          ]);
      }
      return (
        k(T, [
          {
            key: "isValidDate",
            value: function (t) {
              return !isNaN(this.parseDate(t));
            },
          },
          {
            key: "getTimeStamp",
            value: function (t) {
              return Date.parse(t)
                ? this.w.config.xaxis.labels.datetimeUTC
                  ? new Date(new Date(t).toISOString().substr(0, 25)).getTime()
                  : new Date(t).getTime()
                : t;
            },
          },
          {
            key: "getDate",
            value: function (t) {
              return this.w.config.xaxis.labels.datetimeUTC
                ? new Date(new Date(t).toUTCString())
                : new Date(t);
            },
          },
          {
            key: "parseDate",
            value: function (t) {
              var l = Date.parse(t);
              if (!isNaN(l)) return this.getTimeStamp(t);
              var r = Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
              return (r = this.getTimeStamp(r));
            },
          },
          {
            key: "parseDateWithTimezone",
            value: function (t) {
              return Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
            },
          },
          {
            key: "formatDate",
            value: function (t, l) {
              var r = this.w.globals.locale,
                s = this.w.config.xaxis.labels.datetimeUTC,
                a = ["\0"].concat(Q(r.months)),
                o = [""].concat(Q(r.shortMonths)),
                h = [""].concat(Q(r.days)),
                d = [""].concat(Q(r.shortDays));
              function p(D, U) {
                var $ = D + "";
                for (U = U || 2; $.length < U; ) $ = "0" + $;
                return $;
              }
              var m = s ? t.getUTCFullYear() : t.getFullYear();
              l = (l = (l = l.replace(/(^|[^\\])yyyy+/g, "$1" + m)).replace(
                /(^|[^\\])yy/g,
                "$1" + m.toString().substr(2, 2),
              )).replace(/(^|[^\\])y/g, "$1" + m);
              var x = (s ? t.getUTCMonth() : t.getMonth()) + 1;
              l = (l = (l = (l = l.replace(
                /(^|[^\\])MMMM+/g,
                "$1" + a[0],
              )).replace(/(^|[^\\])MMM/g, "$1" + o[0])).replace(
                /(^|[^\\])MM/g,
                "$1" + p(x),
              )).replace(/(^|[^\\])M/g, "$1" + x);
              var v = s ? t.getUTCDate() : t.getDate();
              l = (l = (l = (l = l.replace(
                /(^|[^\\])dddd+/g,
                "$1" + h[0],
              )).replace(/(^|[^\\])ddd/g, "$1" + d[0])).replace(
                /(^|[^\\])dd/g,
                "$1" + p(v),
              )).replace(/(^|[^\\])d/g, "$1" + v);
              var w = s ? t.getUTCHours() : t.getHours(),
                S = w > 12 ? w - 12 : w === 0 ? 12 : w;
              l = (l = (l = (l = l.replace(
                /(^|[^\\])HH+/g,
                "$1" + p(w),
              )).replace(/(^|[^\\])H/g, "$1" + w)).replace(
                /(^|[^\\])hh+/g,
                "$1" + p(S),
              )).replace(/(^|[^\\])h/g, "$1" + S);
              var A = s ? t.getUTCMinutes() : t.getMinutes();
              l = (l = l.replace(/(^|[^\\])mm+/g, "$1" + p(A))).replace(
                /(^|[^\\])m/g,
                "$1" + A,
              );
              var P = s ? t.getUTCSeconds() : t.getSeconds();
              l = (l = l.replace(/(^|[^\\])ss+/g, "$1" + p(P))).replace(
                /(^|[^\\])s/g,
                "$1" + P,
              );
              var R = s ? t.getUTCMilliseconds() : t.getMilliseconds();
              (l = l.replace(/(^|[^\\])fff+/g, "$1" + p(R, 3))),
                (R = Math.round(R / 10)),
                (l = l.replace(/(^|[^\\])ff/g, "$1" + p(R))),
                (R = Math.round(R / 10));
              var O = w < 12 ? "AM" : "PM";
              l = (l = (l = l.replace(/(^|[^\\])f/g, "$1" + R)).replace(
                /(^|[^\\])TT+/g,
                "$1" + O,
              )).replace(/(^|[^\\])T/g, "$1" + O.charAt(0));
              var f = O.toLowerCase();
              l = (l = l.replace(/(^|[^\\])tt+/g, "$1" + f)).replace(
                /(^|[^\\])t/g,
                "$1" + f.charAt(0),
              );
              var y = -t.getTimezoneOffset(),
                C = s || !y ? "Z" : y > 0 ? "+" : "-";
              if (!s) {
                var M = (y = Math.abs(y)) % 60;
                C += p(Math.floor(y / 60)) + ":" + p(M);
              }
              l = l.replace(/(^|[^\\])K/g, "$1" + C);
              var z = (s ? t.getUTCDay() : t.getDay()) + 1;
              return (l = (l = (l = (l = (l = l.replace(
                new RegExp(h[0], "g"),
                h[z],
              )).replace(new RegExp(d[0], "g"), d[z])).replace(
                new RegExp(a[0], "g"),
                a[x],
              )).replace(new RegExp(o[0], "g"), o[x])).replace(/\\(.)/g, "$1"));
            },
          },
          {
            key: "getTimeUnitsfromTimestamp",
            value: function (t, l, r) {
              var s = this.w;
              s.config.xaxis.min !== void 0 && (t = s.config.xaxis.min),
                s.config.xaxis.max !== void 0 && (l = s.config.xaxis.max);
              var a = this.getDate(t),
                o = this.getDate(l),
                h = this.formatDate(a, "yyyy MM dd HH mm ss fff").split(" "),
                d = this.formatDate(o, "yyyy MM dd HH mm ss fff").split(" ");
              return {
                minMillisecond: parseInt(h[6], 10),
                maxMillisecond: parseInt(d[6], 10),
                minSecond: parseInt(h[5], 10),
                maxSecond: parseInt(d[5], 10),
                minMinute: parseInt(h[4], 10),
                maxMinute: parseInt(d[4], 10),
                minHour: parseInt(h[3], 10),
                maxHour: parseInt(d[3], 10),
                minDate: parseInt(h[2], 10),
                maxDate: parseInt(d[2], 10),
                minMonth: parseInt(h[1], 10) - 1,
                maxMonth: parseInt(d[1], 10) - 1,
                minYear: parseInt(h[0], 10),
                maxYear: parseInt(d[0], 10),
              };
            },
          },
          {
            key: "isLeapYear",
            value: function (t) {
              return (t % 4 == 0 && t % 100 != 0) || t % 400 == 0;
            },
          },
          {
            key: "calculcateLastDaysOfMonth",
            value: function (t, l, r) {
              return this.determineDaysOfMonths(t, l) - r;
            },
          },
          {
            key: "determineDaysOfYear",
            value: function (t) {
              var l = 365;
              return this.isLeapYear(t) && (l = 366), l;
            },
          },
          {
            key: "determineRemainingDaysOfYear",
            value: function (t, l, r) {
              var s = this.daysCntOfYear[l] + r;
              return l > 1 && this.isLeapYear() && s++, s;
            },
          },
          {
            key: "determineDaysOfMonths",
            value: function (t, l) {
              var r = 30;
              switch (((t = L.monthMod(t)), !0)) {
                case this.months30.indexOf(t) > -1:
                  t === 2 && (r = this.isLeapYear(l) ? 29 : 28);
                  break;
                case this.months31.indexOf(t) > -1:
                default:
                  r = 31;
              }
              return r;
            },
          },
        ]),
        T
      );
    })(),
    pl = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.tooltipKeyFormat = "dd MMM");
      }
      return (
        k(T, [
          {
            key: "xLabelFormat",
            value: function (t, l, r, s) {
              var a = this.w;
              if (
                a.config.xaxis.type === "datetime" &&
                a.config.xaxis.labels.formatter === void 0 &&
                a.config.tooltip.x.formatter === void 0
              ) {
                var o = new Ze(this.ctx);
                return o.formatDate(o.getDate(l), a.config.tooltip.x.format);
              }
              return t(l, r, s);
            },
          },
          {
            key: "defaultGeneralFormatter",
            value: function (t) {
              return Array.isArray(t)
                ? t.map(function (l) {
                    return l;
                  })
                : t;
            },
          },
          {
            key: "defaultYFormatter",
            value: function (t, l, r) {
              var s = this.w;
              return (
                L.isNumber(t) &&
                  (t =
                    s.globals.yValueDecimal !== 0
                      ? t.toFixed(
                          l.decimalsInFloat !== void 0
                            ? l.decimalsInFloat
                            : s.globals.yValueDecimal,
                        )
                      : s.globals.maxYArr[r] - s.globals.minYArr[r] < 5
                        ? t.toFixed(1)
                        : t.toFixed(0)),
                t
              );
            },
          },
          {
            key: "setLabelFormatters",
            value: function () {
              var t = this,
                l = this.w;
              return (
                (l.globals.xaxisTooltipFormatter = function (r) {
                  return t.defaultGeneralFormatter(r);
                }),
                (l.globals.ttKeyFormatter = function (r) {
                  return t.defaultGeneralFormatter(r);
                }),
                (l.globals.ttZFormatter = function (r) {
                  return r;
                }),
                (l.globals.legendFormatter = function (r) {
                  return t.defaultGeneralFormatter(r);
                }),
                l.config.xaxis.labels.formatter !== void 0
                  ? (l.globals.xLabelFormatter =
                      l.config.xaxis.labels.formatter)
                  : (l.globals.xLabelFormatter = function (r) {
                      if (L.isNumber(r)) {
                        if (
                          !l.config.xaxis.convertedCatToNumeric &&
                          l.config.xaxis.type === "numeric"
                        ) {
                          if (L.isNumber(l.config.xaxis.decimalsInFloat))
                            return r.toFixed(l.config.xaxis.decimalsInFloat);
                          var s = l.globals.maxX - l.globals.minX;
                          return s > 0 && s < 100 ? r.toFixed(1) : r.toFixed(0);
                        }
                        return l.globals.isBarHorizontal &&
                          l.globals.maxY - l.globals.minYArr < 4
                          ? r.toFixed(1)
                          : r.toFixed(0);
                      }
                      return r;
                    }),
                typeof l.config.tooltip.x.formatter == "function"
                  ? (l.globals.ttKeyFormatter = l.config.tooltip.x.formatter)
                  : (l.globals.ttKeyFormatter = l.globals.xLabelFormatter),
                typeof l.config.xaxis.tooltip.formatter == "function" &&
                  (l.globals.xaxisTooltipFormatter =
                    l.config.xaxis.tooltip.formatter),
                (Array.isArray(l.config.tooltip.y) ||
                  l.config.tooltip.y.formatter !== void 0) &&
                  (l.globals.ttVal = l.config.tooltip.y),
                l.config.tooltip.z.formatter !== void 0 &&
                  (l.globals.ttZFormatter = l.config.tooltip.z.formatter),
                l.config.legend.formatter !== void 0 &&
                  (l.globals.legendFormatter = l.config.legend.formatter),
                l.config.yaxis.forEach(function (r, s) {
                  r.labels.formatter !== void 0
                    ? (l.globals.yLabelFormatters[s] = r.labels.formatter)
                    : (l.globals.yLabelFormatters[s] = function (a) {
                        return l.globals.xyCharts
                          ? Array.isArray(a)
                            ? a.map(function (o) {
                                return t.defaultYFormatter(o, r, s);
                              })
                            : t.defaultYFormatter(a, r, s)
                          : a;
                      });
                }),
                l.globals
              );
            },
          },
          {
            key: "heatmapLabelFormatters",
            value: function () {
              var t = this.w;
              if (t.config.chart.type === "heatmap") {
                t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
                var l = t.globals.seriesNames.reduce(function (r, s) {
                  return r.length > s.length ? r : s;
                }, 0);
                (t.globals.yAxisScale[0].niceMax = l),
                  (t.globals.yAxisScale[0].niceMin = l);
              }
            },
          },
        ]),
        T
      );
    })(),
    Al = function (T) {
      var t,
        l = T.isTimeline,
        r = T.ctx,
        s = T.seriesIndex,
        a = T.dataPointIndex,
        o = T.y1,
        h = T.y2,
        d = T.w,
        p = d.globals.seriesRangeStart[s][a],
        m = d.globals.seriesRangeEnd[s][a],
        x = d.globals.labels[a],
        v = d.config.series[s].name ? d.config.series[s].name : "",
        w = d.globals.ttKeyFormatter,
        S = d.config.tooltip.y.title.formatter,
        A = { w: d, seriesIndex: s, dataPointIndex: a, start: p, end: m };
      typeof S == "function" && (v = S(v, A)),
        (t = d.config.series[s].data[a]) !== null &&
          t !== void 0 &&
          t.x &&
          (x = d.config.series[s].data[a].x),
        l ||
          (d.config.xaxis.type === "datetime" &&
            (x = new pl(r).xLabelFormat(d.globals.ttKeyFormatter, x, x, {
              i: void 0,
              dateFormatter: new Ze(r).formatDate,
              w: d,
            }))),
        typeof w == "function" && (x = w(x, A)),
        Number.isFinite(o) && Number.isFinite(h) && ((p = o), (m = h));
      var P = "",
        R = "",
        O = d.globals.colors[s];
      if (d.config.tooltip.x.formatter === void 0)
        if (d.config.xaxis.type === "datetime") {
          var f = new Ze(r);
          (P = f.formatDate(f.getDate(p), d.config.tooltip.x.format)),
            (R = f.formatDate(f.getDate(m), d.config.tooltip.x.format));
        } else (P = p), (R = m);
      else
        (P = d.config.tooltip.x.formatter(p)),
          (R = d.config.tooltip.x.formatter(m));
      return {
        start: p,
        end: m,
        startVal: P,
        endVal: R,
        ylabel: x,
        color: O,
        seriesName: v,
      };
    },
    El = function (T) {
      var t = T.color,
        l = T.seriesName,
        r = T.ylabel,
        s = T.start,
        a = T.end,
        o = T.seriesIndex,
        h = T.dataPointIndex,
        d = T.ctx.tooltip.tooltipLabels.getFormatters(o);
      (s = d.yLbFormatter(s)), (a = d.yLbFormatter(a));
      var p = d.yLbFormatter(T.w.globals.series[o][h]),
        m = `<span class="value start-value">
  `
          .concat(
            s,
            `
  </span> <span class="separator">-</span> <span class="value end-value">
  `,
          )
          .concat(
            a,
            `
  </span>`,
          );
      return (
        '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
        t +
        '">' +
        (l || "") +
        '</span></div><div> <span class="category">' +
        r +
        ": </span> " +
        (T.w.globals.comboCharts
          ? T.w.config.series[o].type === "rangeArea" ||
            T.w.config.series[o].type === "rangeBar"
            ? m
            : "<span>".concat(p, "</span>")
          : m) +
        " </div></div>"
      );
    },
    ge = (function () {
      function T(t) {
        g(this, T), (this.opts = t);
      }
      return (
        k(T, [
          {
            key: "hideYAxis",
            value: function () {
              (this.opts.yaxis[0].show = !1),
                (this.opts.yaxis[0].title.text = ""),
                (this.opts.yaxis[0].axisBorder.show = !1),
                (this.opts.yaxis[0].axisTicks.show = !1),
                (this.opts.yaxis[0].floating = !0);
            },
          },
          {
            key: "line",
            value: function () {
              return {
                chart: { animations: { easing: "swing" } },
                dataLabels: { enabled: !1 },
                stroke: { width: 5, curve: "straight" },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "sparkline",
            value: function (t) {
              return (
                this.hideYAxis(),
                L.extend(t, {
                  grid: {
                    show: !1,
                    padding: { left: 0, right: 0, top: 0, bottom: 0 },
                  },
                  legend: { show: !1 },
                  xaxis: {
                    labels: { show: !1 },
                    tooltip: { enabled: !1 },
                    axisBorder: { show: !1 },
                    axisTicks: { show: !1 },
                  },
                  chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                  dataLabels: { enabled: !1 },
                })
              );
            },
          },
          {
            key: "bar",
            value: function () {
              return {
                chart: { stacked: !1, animations: { easing: "swing" } },
                plotOptions: { bar: { dataLabels: { position: "center" } } },
                dataLabels: {
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                },
                stroke: { width: 0, lineCap: "round" },
                fill: { opacity: 0.85 },
                legend: { markers: { shape: "square", radius: 2, size: 8 } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: {
                  tooltip: { enabled: !1 },
                  tickPlacement: "between",
                  crosshairs: {
                    width: "barWidth",
                    position: "back",
                    fill: { type: "gradient" },
                    dropShadow: { enabled: !1 },
                    stroke: { width: 0 },
                  },
                },
              };
            },
          },
          {
            key: "funnel",
            value: function () {
              return (
                this.hideYAxis(),
                c(
                  c({}, this.bar()),
                  {},
                  {
                    chart: {
                      animations: {
                        easing: "linear",
                        speed: 800,
                        animateGradually: { enabled: !1 },
                      },
                    },
                    plotOptions: {
                      bar: {
                        horizontal: !0,
                        borderRadiusApplication: "around",
                        borderRadius: 0,
                        dataLabels: { position: "center" },
                      },
                    },
                    grid: { show: !1, padding: { left: 0, right: 0 } },
                    xaxis: {
                      labels: { show: !1 },
                      tooltip: { enabled: !1 },
                      axisBorder: { show: !1 },
                      axisTicks: { show: !1 },
                    },
                  },
                )
              );
            },
          },
          {
            key: "candlestick",
            value: function () {
              var t = this;
              return {
                stroke: { width: 1, colors: ["#333"] },
                fill: { opacity: 1 },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (l) {
                    var r = l.seriesIndex,
                      s = l.dataPointIndex,
                      a = l.w;
                    return t._getBoxTooltip(
                      a,
                      r,
                      s,
                      ["Open", "High", "", "Low", "Close"],
                      "candlestick",
                    );
                  },
                },
                states: { active: { filter: { type: "none" } } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "boxPlot",
            value: function () {
              var t = this;
              return {
                chart: { animations: { dynamicAnimation: { enabled: !1 } } },
                stroke: { width: 1, colors: ["#24292e"] },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (l) {
                    var r = l.seriesIndex,
                      s = l.dataPointIndex,
                      a = l.w;
                    return t._getBoxTooltip(
                      a,
                      r,
                      s,
                      ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                      "boxPlot",
                    );
                  },
                },
                markers: { size: 5, strokeWidth: 1, strokeColors: "#111" },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "rangeBar",
            value: function () {
              return {
                chart: { animations: { animateGradually: !1 } },
                stroke: { width: 0, lineCap: "square" },
                plotOptions: {
                  bar: { borderRadius: 0, dataLabels: { position: "center" } },
                },
                dataLabels: {
                  enabled: !1,
                  formatter: function (t, l) {
                    l.ctx;
                    var r = l.seriesIndex,
                      s = l.dataPointIndex,
                      a = l.w,
                      o = function () {
                        var h = a.globals.seriesRangeStart[r][s];
                        return a.globals.seriesRangeEnd[r][s] - h;
                      };
                    return a.globals.comboCharts
                      ? a.config.series[r].type === "rangeBar" ||
                        a.config.series[r].type === "rangeArea"
                        ? o()
                        : t
                      : o();
                  },
                  background: { enabled: !1 },
                  style: { colors: ["#fff"] },
                },
                markers: { size: 10 },
                tooltip: {
                  shared: !1,
                  followCursor: !0,
                  custom: function (t) {
                    return t.w.config.plotOptions &&
                      t.w.config.plotOptions.bar &&
                      t.w.config.plotOptions.bar.horizontal
                      ? (function (l) {
                          var r = Al(c(c({}, l), {}, { isTimeline: !0 })),
                            s = r.color,
                            a = r.seriesName,
                            o = r.ylabel,
                            h = r.startVal,
                            d = r.endVal;
                          return El(
                            c(
                              c({}, l),
                              {},
                              {
                                color: s,
                                seriesName: a,
                                ylabel: o,
                                start: h,
                                end: d,
                              },
                            ),
                          );
                        })(t)
                      : (function (l) {
                          var r = Al(l),
                            s = r.color,
                            a = r.seriesName,
                            o = r.ylabel,
                            h = r.start,
                            d = r.end;
                          return El(
                            c(
                              c({}, l),
                              {},
                              {
                                color: s,
                                seriesName: a,
                                ylabel: o,
                                start: h,
                                end: d,
                              },
                            ),
                          );
                        })(t);
                  },
                },
                xaxis: {
                  tickPlacement: "between",
                  tooltip: { enabled: !1 },
                  crosshairs: { stroke: { width: 0 } },
                },
              };
            },
          },
          {
            key: "dumbbell",
            value: function (t) {
              var l, r;
              return (
                ((l = t.plotOptions.bar) !== null &&
                  l !== void 0 &&
                  l.barHeight) ||
                  (t.plotOptions.bar.barHeight = 2),
                ((r = t.plotOptions.bar) !== null &&
                  r !== void 0 &&
                  r.columnWidth) ||
                  (t.plotOptions.bar.columnWidth = 2),
                t
              );
            },
          },
          {
            key: "area",
            value: function () {
              return {
                stroke: {
                  width: 4,
                  fill: {
                    type: "solid",
                    gradient: {
                      inverseColors: !1,
                      shade: "light",
                      type: "vertical",
                      opacityFrom: 0.65,
                      opacityTo: 0.5,
                      stops: [0, 100, 100],
                    },
                  },
                },
                fill: {
                  type: "gradient",
                  gradient: {
                    inverseColors: !1,
                    shade: "light",
                    type: "vertical",
                    opacityFrom: 0.65,
                    opacityTo: 0.5,
                    stops: [0, 100, 100],
                  },
                },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                tooltip: { followCursor: !1 },
              };
            },
          },
          {
            key: "rangeArea",
            value: function () {
              return {
                stroke: { curve: "straight", width: 0 },
                fill: { type: "solid", opacity: 0.6 },
                markers: { size: 0 },
                states: {
                  hover: { filter: { type: "none" } },
                  active: { filter: { type: "none" } },
                },
                tooltip: {
                  intersect: !1,
                  shared: !0,
                  followCursor: !0,
                  custom: function (t) {
                    return (function (l) {
                      var r = Al(l),
                        s = r.color,
                        a = r.seriesName,
                        o = r.ylabel,
                        h = r.start,
                        d = r.end;
                      return El(
                        c(
                          c({}, l),
                          {},
                          {
                            color: s,
                            seriesName: a,
                            ylabel: o,
                            start: h,
                            end: d,
                          },
                        ),
                      );
                    })(t);
                  },
                },
              };
            },
          },
          {
            key: "brush",
            value: function (t) {
              return L.extend(t, {
                chart: {
                  toolbar: { autoSelected: "selection", show: !1 },
                  zoom: { enabled: !1 },
                },
                dataLabels: { enabled: !1 },
                stroke: { width: 1 },
                tooltip: { enabled: !1 },
                xaxis: { tooltip: { enabled: !1 } },
              });
            },
          },
          {
            key: "stacked100",
            value: function (t) {
              (t.dataLabels = t.dataLabels || {}),
                (t.dataLabels.formatter = t.dataLabels.formatter || void 0);
              var l = t.dataLabels.formatter;
              return (
                t.yaxis.forEach(function (r, s) {
                  (t.yaxis[s].min = 0), (t.yaxis[s].max = 100);
                }),
                t.chart.type === "bar" &&
                  (t.dataLabels.formatter =
                    l ||
                    function (r) {
                      return typeof r == "number" && r ? r.toFixed(0) + "%" : r;
                    }),
                t
              );
            },
          },
          {
            key: "stackedBars",
            value: function () {
              var t = this.bar();
              return c(
                c({}, t),
                {},
                {
                  plotOptions: c(
                    c({}, t.plotOptions),
                    {},
                    {
                      bar: c(
                        c({}, t.plotOptions.bar),
                        {},
                        {
                          borderRadiusApplication: "end",
                          borderRadiusWhenStacked: "last",
                        },
                      ),
                    },
                  ),
                },
              );
            },
          },
          {
            key: "convertCatToNumeric",
            value: function (t) {
              return (t.xaxis.convertedCatToNumeric = !0), t;
            },
          },
          {
            key: "convertCatToNumericXaxis",
            value: function (t, l, r) {
              (t.xaxis.type = "numeric"),
                (t.xaxis.labels = t.xaxis.labels || {}),
                (t.xaxis.labels.formatter =
                  t.xaxis.labels.formatter ||
                  function (o) {
                    return L.isNumber(o) ? Math.floor(o) : o;
                  });
              var s = t.xaxis.labels.formatter,
                a =
                  t.xaxis.categories && t.xaxis.categories.length
                    ? t.xaxis.categories
                    : t.labels;
              return (
                r &&
                  r.length &&
                  (a = r.map(function (o) {
                    return Array.isArray(o) ? o : String(o);
                  })),
                a &&
                  a.length &&
                  (t.xaxis.labels.formatter = function (o) {
                    return L.isNumber(o) ? s(a[Math.floor(o) - 1]) : s(o);
                  }),
                (t.xaxis.categories = []),
                (t.labels = []),
                (t.xaxis.tickAmount = t.xaxis.tickAmount || "dataPoints"),
                t
              );
            },
          },
          {
            key: "bubble",
            value: function () {
              return {
                dataLabels: { style: { colors: ["#fff"] } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: { crosshairs: { width: 0 } },
                fill: {
                  type: "solid",
                  gradient: {
                    shade: "light",
                    inverse: !0,
                    shadeIntensity: 0.55,
                    opacityFrom: 0.4,
                    opacityTo: 0.8,
                  },
                },
              };
            },
          },
          {
            key: "scatter",
            value: function () {
              return {
                dataLabels: { enabled: !1 },
                tooltip: { shared: !1, intersect: !0 },
                markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } },
              };
            },
          },
          {
            key: "heatmap",
            value: function () {
              return {
                chart: { stacked: !1 },
                fill: { opacity: 1 },
                dataLabels: { style: { colors: ["#fff"] } },
                stroke: { colors: ["#fff"] },
                tooltip: {
                  followCursor: !0,
                  marker: { show: !1 },
                  x: { show: !1 },
                },
                legend: {
                  position: "top",
                  markers: { shape: "square", size: 10, offsetY: 2 },
                },
                grid: { padding: { right: 20 } },
              };
            },
          },
          {
            key: "treemap",
            value: function () {
              return {
                chart: { zoom: { enabled: !1 } },
                dataLabels: {
                  style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] },
                },
                stroke: { show: !0, width: 2, colors: ["#fff"] },
                legend: { show: !1 },
                fill: { gradient: { stops: [0, 100] } },
                tooltip: { followCursor: !0, x: { show: !1 } },
                grid: { padding: { left: 0, right: 0 } },
                xaxis: { crosshairs: { show: !1 }, tooltip: { enabled: !1 } },
              };
            },
          },
          {
            key: "pie",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                dataLabels: {
                  formatter: function (t) {
                    return t.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: { shade: "light", stops: [0, 100] },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "donut",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                dataLabels: {
                  formatter: function (t) {
                    return t.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: {
                    shade: "light",
                    shadeIntensity: 0.35,
                    stops: [80, 100],
                    opacityFrom: 1,
                    opacityTo: 1,
                  },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "polarArea",
            value: function () {
              return (
                (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount
                  ? this.opts.yaxis[0].tickAmount
                  : 6),
                {
                  chart: { toolbar: { show: !1 } },
                  dataLabels: {
                    formatter: function (t) {
                      return t.toFixed(1) + "%";
                    },
                    enabled: !1,
                  },
                  stroke: { show: !0, width: 2 },
                  fill: { opacity: 0.7 },
                  tooltip: { theme: "dark", fillSeriesColor: !0 },
                  legend: { position: "right" },
                }
              );
            },
          },
          {
            key: "radar",
            value: function () {
              return (
                (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels
                  .offsetY
                  ? this.opts.yaxis[0].labels.offsetY
                  : 6),
                {
                  dataLabels: { enabled: !1, style: { fontSize: "11px" } },
                  stroke: { width: 2 },
                  markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                  fill: { opacity: 0.2 },
                  tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                  grid: { show: !1 },
                  xaxis: {
                    labels: {
                      formatter: function (t) {
                        return t;
                      },
                      style: { colors: ["#a8a8a8"], fontSize: "11px" },
                    },
                    tooltip: { enabled: !1 },
                    crosshairs: { show: !1 },
                  },
                }
              );
            },
          },
          {
            key: "radialBar",
            value: function () {
              return {
                chart: {
                  animations: { dynamicAnimation: { enabled: !0, speed: 800 } },
                  toolbar: { show: !1 },
                },
                fill: {
                  gradient: {
                    shade: "dark",
                    shadeIntensity: 0.4,
                    inverseColors: !1,
                    type: "diagonal2",
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [70, 98, 100],
                  },
                },
                legend: { show: !1, position: "right" },
                tooltip: { enabled: !1, fillSeriesColor: !0 },
              };
            },
          },
          {
            key: "_getBoxTooltip",
            value: function (t, l, r, s, a) {
              var o = t.globals.seriesCandleO[l][r],
                h = t.globals.seriesCandleH[l][r],
                d = t.globals.seriesCandleM[l][r],
                p = t.globals.seriesCandleL[l][r],
                m = t.globals.seriesCandleC[l][r];
              return t.config.series[l].type && t.config.series[l].type !== a
                ? `<div class="apexcharts-custom-tooltip">
          `
                    .concat(
                      t.config.series[l].name
                        ? t.config.series[l].name
                        : "series-" + (l + 1),
                      ": <strong>",
                    )
                    .concat(
                      t.globals.series[l][r],
                      `</strong>
        </div>`,
                    )
                : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                    t.config.chart.type,
                    '">',
                  ) +
                    "<div>".concat(s[0], ': <span class="value">') +
                    o +
                    "</span></div>" +
                    "<div>".concat(s[1], ': <span class="value">') +
                    h +
                    "</span></div>" +
                    (d
                      ? "<div>".concat(s[2], ': <span class="value">') +
                        d +
                        "</span></div>"
                      : "") +
                    "<div>".concat(s[3], ': <span class="value">') +
                    p +
                    "</span></div>" +
                    "<div>".concat(s[4], ': <span class="value">') +
                    m +
                    "</span></div></div>";
            },
          },
        ]),
        T
      );
    })(),
    we = (function () {
      function T(t) {
        g(this, T), (this.opts = t);
      }
      return (
        k(T, [
          {
            key: "init",
            value: function (t) {
              var l = t.responsiveOverride,
                r = this.opts,
                s = new gt(),
                a = new ge(r);
              (this.chartType = r.chart.type),
                (r = this.extendYAxis(r)),
                (r = this.extendAnnotations(r));
              var o = s.init(),
                h = {};
              if (r && u(r) === "object") {
                var d,
                  p,
                  m,
                  x,
                  v,
                  w,
                  S,
                  A,
                  P = {};
                (P =
                  [
                    "line",
                    "area",
                    "bar",
                    "candlestick",
                    "boxPlot",
                    "rangeBar",
                    "rangeArea",
                    "bubble",
                    "scatter",
                    "heatmap",
                    "treemap",
                    "pie",
                    "polarArea",
                    "donut",
                    "radar",
                    "radialBar",
                  ].indexOf(r.chart.type) !== -1
                    ? a[r.chart.type]()
                    : a.line()),
                  (d = r.plotOptions) !== null &&
                    d !== void 0 &&
                    (p = d.bar) !== null &&
                    p !== void 0 &&
                    p.isFunnel &&
                    (P = a.funnel()),
                  r.chart.stacked &&
                    r.chart.type === "bar" &&
                    (P = a.stackedBars()),
                  (m = r.chart.brush) !== null &&
                    m !== void 0 &&
                    m.enabled &&
                    (P = a.brush(P)),
                  r.chart.stacked &&
                    r.chart.stackType === "100%" &&
                    (r = a.stacked100(r)),
                  (x = r.plotOptions) !== null &&
                    x !== void 0 &&
                    (v = x.bar) !== null &&
                    v !== void 0 &&
                    v.isDumbbell &&
                    (r = a.dumbbell(r)),
                  this.checkForDarkTheme(window.Apex),
                  this.checkForDarkTheme(r),
                  (r.xaxis = r.xaxis || window.Apex.xaxis || {}),
                  l || (r.xaxis.convertedCatToNumeric = !1),
                  (((w = (r = this.checkForCatToNumericXAxis(
                    this.chartType,
                    P,
                    r,
                  )).chart.sparkline) !== null &&
                    w !== void 0 &&
                    w.enabled) ||
                    ((S = window.Apex.chart) !== null &&
                      S !== void 0 &&
                      (A = S.sparkline) !== null &&
                      A !== void 0 &&
                      A.enabled)) &&
                    (P = a.sparkline(P)),
                  (h = L.extend(o, P));
              }
              var R = L.extend(h, window.Apex);
              return (o = L.extend(R, r)), (o = this.handleUserInputErrors(o));
            },
          },
          {
            key: "checkForCatToNumericXAxis",
            value: function (t, l, r) {
              var s,
                a,
                o = new ge(r),
                h =
                  (t === "bar" || t === "boxPlot") &&
                  ((s = r.plotOptions) === null ||
                  s === void 0 ||
                  (a = s.bar) === null ||
                  a === void 0
                    ? void 0
                    : a.horizontal),
                d =
                  t === "pie" ||
                  t === "polarArea" ||
                  t === "donut" ||
                  t === "radar" ||
                  t === "radialBar" ||
                  t === "heatmap",
                p = r.xaxis.type !== "datetime" && r.xaxis.type !== "numeric",
                m = r.xaxis.tickPlacement
                  ? r.xaxis.tickPlacement
                  : l.xaxis && l.xaxis.tickPlacement;
              return (
                h ||
                  d ||
                  !p ||
                  m === "between" ||
                  (r = o.convertCatToNumeric(r)),
                r
              );
            },
          },
          {
            key: "extendYAxis",
            value: function (t, l) {
              var r = new gt();
              (t.yaxis === void 0 ||
                !t.yaxis ||
                (Array.isArray(t.yaxis) && t.yaxis.length === 0)) &&
                (t.yaxis = {}),
                t.yaxis.constructor !== Array &&
                  window.Apex.yaxis &&
                  window.Apex.yaxis.constructor !== Array &&
                  (t.yaxis = L.extend(t.yaxis, window.Apex.yaxis)),
                t.yaxis.constructor !== Array
                  ? (t.yaxis = [L.extend(r.yAxis, t.yaxis)])
                  : (t.yaxis = L.extendArray(t.yaxis, r.yAxis));
              var s = !1;
              t.yaxis.forEach(function (o) {
                o.logarithmic && (s = !0);
              });
              var a = t.series;
              return (
                l && !a && (a = l.config.series),
                s &&
                  a.length !== t.yaxis.length &&
                  a.length &&
                  (t.yaxis = a.map(function (o, h) {
                    if (
                      (o.name || (a[h].name = "series-".concat(h + 1)),
                      t.yaxis[h])
                    )
                      return (t.yaxis[h].seriesName = a[h].name), t.yaxis[h];
                    var d = L.extend(r.yAxis, t.yaxis[0]);
                    return (d.show = !1), d;
                  })),
                s &&
                  a.length > 1 &&
                  a.length !== t.yaxis.length &&
                  console.warn(
                    "A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.",
                  ),
                t
              );
            },
          },
          {
            key: "extendAnnotations",
            value: function (t) {
              return (
                t.annotations === void 0 &&
                  ((t.annotations = {}),
                  (t.annotations.yaxis = []),
                  (t.annotations.xaxis = []),
                  (t.annotations.points = [])),
                (t = this.extendYAxisAnnotations(t)),
                (t = this.extendXAxisAnnotations(t)),
                (t = this.extendPointAnnotations(t))
              );
            },
          },
          {
            key: "extendYAxisAnnotations",
            value: function (t) {
              var l = new gt();
              return (
                (t.annotations.yaxis = L.extendArray(
                  t.annotations.yaxis !== void 0 ? t.annotations.yaxis : [],
                  l.yAxisAnnotation,
                )),
                t
              );
            },
          },
          {
            key: "extendXAxisAnnotations",
            value: function (t) {
              var l = new gt();
              return (
                (t.annotations.xaxis = L.extendArray(
                  t.annotations.xaxis !== void 0 ? t.annotations.xaxis : [],
                  l.xAxisAnnotation,
                )),
                t
              );
            },
          },
          {
            key: "extendPointAnnotations",
            value: function (t) {
              var l = new gt();
              return (
                (t.annotations.points = L.extendArray(
                  t.annotations.points !== void 0 ? t.annotations.points : [],
                  l.pointAnnotation,
                )),
                t
              );
            },
          },
          {
            key: "checkForDarkTheme",
            value: function (t) {
              t.theme &&
                t.theme.mode === "dark" &&
                (t.tooltip || (t.tooltip = {}),
                t.tooltip.theme !== "light" && (t.tooltip.theme = "dark"),
                t.chart.foreColor || (t.chart.foreColor = "#f6f7f8"),
                t.chart.background || (t.chart.background = "#424242"),
                t.theme.palette || (t.theme.palette = "palette4"));
            },
          },
          {
            key: "handleUserInputErrors",
            value: function (t) {
              var l = t;
              if (l.tooltip.shared && l.tooltip.intersect)
                throw new Error(
                  "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.",
                );
              if (l.chart.type === "bar" && l.plotOptions.bar.horizontal) {
                if (l.yaxis.length > 1)
                  throw new Error(
                    "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false",
                  );
                l.yaxis[0].reversed && (l.yaxis[0].opposite = !0),
                  (l.xaxis.tooltip.enabled = !1),
                  (l.yaxis[0].tooltip.enabled = !1),
                  (l.chart.zoom.enabled = !1);
              }
              return (
                (l.chart.type !== "bar" && l.chart.type !== "rangeBar") ||
                  (l.tooltip.shared &&
                    l.xaxis.crosshairs.width === "barWidth" &&
                    l.series.length > 1 &&
                    (l.xaxis.crosshairs.width = "tickWidth")),
                (l.chart.type !== "candlestick" &&
                  l.chart.type !== "boxPlot") ||
                  (l.yaxis[0].reversed &&
                    (console.warn(
                      "Reversed y-axis in ".concat(
                        l.chart.type,
                        " chart is not supported.",
                      ),
                    ),
                    (l.yaxis[0].reversed = !1))),
                l
              );
            },
          },
        ]),
        T
      );
    })(),
    Ce = (function () {
      function T() {
        g(this, T);
      }
      return (
        k(T, [
          {
            key: "initGlobalVars",
            value: function (t) {
              (t.series = []),
                (t.seriesCandleO = []),
                (t.seriesCandleH = []),
                (t.seriesCandleM = []),
                (t.seriesCandleL = []),
                (t.seriesCandleC = []),
                (t.seriesRangeStart = []),
                (t.seriesRangeEnd = []),
                (t.seriesRange = []),
                (t.seriesPercent = []),
                (t.seriesGoals = []),
                (t.seriesX = []),
                (t.seriesZ = []),
                (t.seriesNames = []),
                (t.seriesTotals = []),
                (t.seriesLog = []),
                (t.seriesColors = []),
                (t.stackedSeriesTotals = []),
                (t.seriesXvalues = []),
                (t.seriesYvalues = []),
                (t.labels = []),
                (t.hasXaxisGroups = !1),
                (t.groups = []),
                (t.hasSeriesGroups = !1),
                (t.seriesGroups = []),
                (t.categoryLabels = []),
                (t.timescaleLabels = []),
                (t.noLabelsProvided = !1),
                (t.resizeTimer = null),
                (t.selectionResizeTimer = null),
                (t.delayedElements = []),
                (t.pointsArray = []),
                (t.dataLabelsRects = []),
                (t.isXNumeric = !1),
                (t.skipLastTimelinelabel = !1),
                (t.skipFirstTimelinelabel = !1),
                (t.isDataXYZ = !1),
                (t.isMultiLineX = !1),
                (t.isMultipleYAxis = !1),
                (t.maxY = -Number.MAX_VALUE),
                (t.minY = Number.MIN_VALUE),
                (t.minYArr = []),
                (t.maxYArr = []),
                (t.maxX = -Number.MAX_VALUE),
                (t.minX = Number.MAX_VALUE),
                (t.initialMaxX = -Number.MAX_VALUE),
                (t.initialMinX = Number.MAX_VALUE),
                (t.maxDate = 0),
                (t.minDate = Number.MAX_VALUE),
                (t.minZ = Number.MAX_VALUE),
                (t.maxZ = -Number.MAX_VALUE),
                (t.minXDiff = Number.MAX_VALUE),
                (t.yAxisScale = []),
                (t.xAxisScale = null),
                (t.xAxisTicksPositions = []),
                (t.yLabelsCoords = []),
                (t.yTitleCoords = []),
                (t.barPadForNumericAxis = 0),
                (t.padHorizontal = 0),
                (t.xRange = 0),
                (t.yRange = []),
                (t.zRange = 0),
                (t.dataPoints = 0),
                (t.xTickAmount = 0);
            },
          },
          {
            key: "globalVars",
            value: function (t) {
              return {
                chartID: null,
                cuid: null,
                events: {
                  beforeMount: [],
                  mounted: [],
                  updated: [],
                  clicked: [],
                  selection: [],
                  dataPointSelection: [],
                  zoomed: [],
                  scrolled: [],
                },
                colors: [],
                clientX: null,
                clientY: null,
                fill: { colors: [] },
                stroke: { colors: [] },
                dataLabels: { style: { colors: [] } },
                radarPolygons: { fill: { colors: [] } },
                markers: { colors: [], size: t.markers.size, largestSize: 0 },
                animationEnded: !1,
                isTouchDevice:
                  "ontouchstart" in window || navigator.msMaxTouchPoints,
                isDirty: !1,
                isExecCalled: !1,
                initialConfig: null,
                initialSeries: [],
                lastXAxis: [],
                lastYAxis: [],
                columnSeries: null,
                labels: [],
                timescaleLabels: [],
                noLabelsProvided: !1,
                allSeriesCollapsed: !1,
                collapsedSeries: [],
                collapsedSeriesIndices: [],
                ancillaryCollapsedSeries: [],
                ancillaryCollapsedSeriesIndices: [],
                risingSeries: [],
                dataFormatXNumeric: !1,
                capturedSeriesIndex: -1,
                capturedDataPointIndex: -1,
                selectedDataPoints: [],
                goldenPadding: 35,
                invalidLogScale: !1,
                ignoreYAxisIndexes: [],
                yAxisSameScaleIndices: [],
                maxValsInArrayIndex: 0,
                radialSize: 0,
                selection: void 0,
                zoomEnabled:
                  t.chart.toolbar.autoSelected === "zoom" &&
                  t.chart.toolbar.tools.zoom &&
                  t.chart.zoom.enabled,
                panEnabled:
                  t.chart.toolbar.autoSelected === "pan" &&
                  t.chart.toolbar.tools.pan,
                selectionEnabled:
                  t.chart.toolbar.autoSelected === "selection" &&
                  t.chart.toolbar.tools.selection,
                yaxis: null,
                mousedown: !1,
                lastClientPosition: {},
                visibleXRange: void 0,
                yValueDecimal: 0,
                total: 0,
                SVGNS: "http://www.w3.org/2000/svg",
                svgWidth: 0,
                svgHeight: 0,
                noData: !1,
                locale: {},
                dom: {},
                memory: { methodsToExec: [] },
                shouldAnimate: !0,
                skipLastTimelinelabel: !1,
                skipFirstTimelinelabel: !1,
                delayedElements: [],
                axisCharts: !0,
                isDataXYZ: !1,
                resized: !1,
                resizeTimer: null,
                comboCharts: !1,
                dataChanged: !1,
                previousPaths: [],
                allSeriesHasEqualX: !0,
                pointsArray: [],
                dataLabelsRects: [],
                lastDrawnDataLabelsIndexes: [],
                hasNullValues: !1,
                easing: null,
                zoomed: !1,
                gridWidth: 0,
                gridHeight: 0,
                rotateXLabels: !1,
                defaultLabels: !1,
                xLabelFormatter: void 0,
                yLabelFormatters: [],
                xaxisTooltipFormatter: void 0,
                ttKeyFormatter: void 0,
                ttVal: void 0,
                ttZFormatter: void 0,
                LINE_HEIGHT_RATIO: 1.618,
                xAxisLabelsHeight: 0,
                xAxisGroupLabelsHeight: 0,
                xAxisLabelsWidth: 0,
                yAxisLabelsWidth: 0,
                scaleX: 1,
                scaleY: 1,
                translateX: 0,
                translateY: 0,
                translateYAxisX: [],
                yAxisWidths: [],
                translateXAxisY: 0,
                translateXAxisX: 0,
                tooltip: null,
              };
            },
          },
          {
            key: "init",
            value: function (t) {
              var l = this.globalVars(t);
              return (
                this.initGlobalVars(l),
                (l.initialConfig = L.extend({}, t)),
                (l.initialSeries = L.clone(t.series)),
                (l.lastXAxis = L.clone(l.initialConfig.xaxis)),
                (l.lastYAxis = L.clone(l.initialConfig.yaxis)),
                l
              );
            },
          },
        ]),
        T
      );
    })(),
    ze = (function () {
      function T(t) {
        g(this, T), (this.opts = t);
      }
      return (
        k(T, [
          {
            key: "init",
            value: function () {
              var t = new we(this.opts).init({ responsiveOverride: !1 });
              return { config: t, globals: new Ce().init(t) };
            },
          },
        ]),
        T
      );
    })(),
    Te = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.opts = null),
          (this.seriesIndex = 0);
      }
      return (
        k(T, [
          {
            key: "clippedImgArea",
            value: function (t) {
              var l = this.w,
                r = l.config,
                s = parseInt(l.globals.gridWidth, 10),
                a = parseInt(l.globals.gridHeight, 10),
                o = s > a ? s : a,
                h = t.image,
                d = 0,
                p = 0;
              t.width === void 0 && t.height === void 0
                ? r.fill.image.width !== void 0 &&
                  r.fill.image.height !== void 0
                  ? ((d = r.fill.image.width + 1), (p = r.fill.image.height))
                  : ((d = o + 1), (p = o))
                : ((d = t.width), (p = t.height));
              var m = document.createElementNS(l.globals.SVGNS, "pattern");
              Z.setAttrs(m, {
                id: t.patternID,
                patternUnits: t.patternUnits
                  ? t.patternUnits
                  : "userSpaceOnUse",
                width: d + "px",
                height: p + "px",
              });
              var x = document.createElementNS(l.globals.SVGNS, "image");
              m.appendChild(x),
                x.setAttributeNS(window.SVG.xlink, "href", h),
                Z.setAttrs(x, {
                  x: 0,
                  y: 0,
                  preserveAspectRatio: "none",
                  width: d + "px",
                  height: p + "px",
                }),
                (x.style.opacity = t.opacity),
                l.globals.dom.elDefs.node.appendChild(m);
            },
          },
          {
            key: "getSeriesIndex",
            value: function (t) {
              var l = this.w,
                r = l.config.chart.type;
              return (
                ((r === "bar" || r === "rangeBar") &&
                  l.config.plotOptions.bar.distributed) ||
                r === "heatmap" ||
                r === "treemap"
                  ? (this.seriesIndex = t.seriesNumber)
                  : (this.seriesIndex =
                      t.seriesNumber % l.globals.series.length),
                this.seriesIndex
              );
            },
          },
          {
            key: "fillPath",
            value: function (t) {
              var l = this.w;
              this.opts = t;
              var r,
                s,
                a,
                o = this.w.config;
              this.seriesIndex = this.getSeriesIndex(t);
              var h = this.getFillColors()[this.seriesIndex];
              l.globals.seriesColors[this.seriesIndex] !== void 0 &&
                (h = l.globals.seriesColors[this.seriesIndex]),
                typeof h == "function" &&
                  (h = h({
                    seriesIndex: this.seriesIndex,
                    dataPointIndex: t.dataPointIndex,
                    value: t.value,
                    w: l,
                  }));
              var d = t.fillType
                  ? t.fillType
                  : this.getFillType(this.seriesIndex),
                p = Array.isArray(o.fill.opacity)
                  ? o.fill.opacity[this.seriesIndex]
                  : o.fill.opacity;
              t.color && (h = t.color);
              var m = h;
              if (
                (h.indexOf("rgb") === -1
                  ? h.length < 9 && (m = L.hexToRgba(h, p))
                  : h.indexOf("rgba") > -1 && (p = L.getOpacityFromRGBA(h)),
                t.opacity && (p = t.opacity),
                d === "pattern" &&
                  (s = this.handlePatternFill({
                    fillConfig: t.fillConfig,
                    patternFill: s,
                    fillColor: h,
                    fillOpacity: p,
                    defaultColor: m,
                  })),
                d === "gradient" &&
                  (a = this.handleGradientFill({
                    fillConfig: t.fillConfig,
                    fillColor: h,
                    fillOpacity: p,
                    i: this.seriesIndex,
                  })),
                d === "image")
              ) {
                var x = o.fill.image.src,
                  v = t.patternID ? t.patternID : "";
                this.clippedImgArea({
                  opacity: p,
                  image: Array.isArray(x)
                    ? t.seriesNumber < x.length
                      ? x[t.seriesNumber]
                      : x[0]
                    : x,
                  width: t.width ? t.width : void 0,
                  height: t.height ? t.height : void 0,
                  patternUnits: t.patternUnits,
                  patternID: "pattern"
                    .concat(l.globals.cuid)
                    .concat(t.seriesNumber + 1)
                    .concat(v),
                }),
                  (r = "url(#pattern"
                    .concat(l.globals.cuid)
                    .concat(t.seriesNumber + 1)
                    .concat(v, ")"));
              } else r = d === "gradient" ? a : d === "pattern" ? s : m;
              return t.solid && (r = m), r;
            },
          },
          {
            key: "getFillType",
            value: function (t) {
              var l = this.w;
              return Array.isArray(l.config.fill.type)
                ? l.config.fill.type[t]
                : l.config.fill.type;
            },
          },
          {
            key: "getFillColors",
            value: function () {
              var t = this.w,
                l = t.config,
                r = this.opts,
                s = [];
              return (
                t.globals.comboCharts
                  ? t.config.series[this.seriesIndex].type === "line"
                    ? Array.isArray(t.globals.stroke.colors)
                      ? (s = t.globals.stroke.colors)
                      : s.push(t.globals.stroke.colors)
                    : Array.isArray(t.globals.fill.colors)
                      ? (s = t.globals.fill.colors)
                      : s.push(t.globals.fill.colors)
                  : l.chart.type === "line"
                    ? Array.isArray(t.globals.stroke.colors)
                      ? (s = t.globals.stroke.colors)
                      : s.push(t.globals.stroke.colors)
                    : Array.isArray(t.globals.fill.colors)
                      ? (s = t.globals.fill.colors)
                      : s.push(t.globals.fill.colors),
                r.fillColors !== void 0 &&
                  ((s = []),
                  Array.isArray(r.fillColors)
                    ? (s = r.fillColors.slice())
                    : s.push(r.fillColors)),
                s
              );
            },
          },
          {
            key: "handlePatternFill",
            value: function (t) {
              var l = t.fillConfig,
                r = t.patternFill,
                s = t.fillColor,
                a = t.fillOpacity,
                o = t.defaultColor,
                h = this.w.config.fill;
              l && (h = l);
              var d = this.opts,
                p = new Z(this.ctx),
                m = Array.isArray(h.pattern.strokeWidth)
                  ? h.pattern.strokeWidth[this.seriesIndex]
                  : h.pattern.strokeWidth,
                x = s;
              return (
                Array.isArray(h.pattern.style)
                  ? (r =
                      h.pattern.style[d.seriesNumber] !== void 0
                        ? p.drawPattern(
                            h.pattern.style[d.seriesNumber],
                            h.pattern.width,
                            h.pattern.height,
                            x,
                            m,
                            a,
                          )
                        : o)
                  : (r = p.drawPattern(
                      h.pattern.style,
                      h.pattern.width,
                      h.pattern.height,
                      x,
                      m,
                      a,
                    )),
                r
              );
            },
          },
          {
            key: "handleGradientFill",
            value: function (t) {
              var l = t.fillColor,
                r = t.fillOpacity,
                s = t.fillConfig,
                a = t.i,
                o = this.w.config.fill;
              s && (o = c(c({}, o), s));
              var h,
                d = this.opts,
                p = new Z(this.ctx),
                m = new L(),
                x = o.gradient.type,
                v = l,
                w =
                  o.gradient.opacityFrom === void 0
                    ? r
                    : Array.isArray(o.gradient.opacityFrom)
                      ? o.gradient.opacityFrom[a]
                      : o.gradient.opacityFrom;
              v.indexOf("rgba") > -1 && (w = L.getOpacityFromRGBA(v));
              var S =
                o.gradient.opacityTo === void 0
                  ? r
                  : Array.isArray(o.gradient.opacityTo)
                    ? o.gradient.opacityTo[a]
                    : o.gradient.opacityTo;
              if (
                o.gradient.gradientToColors === void 0 ||
                o.gradient.gradientToColors.length === 0
              )
                h =
                  o.gradient.shade === "dark"
                    ? m.shadeColor(
                        -1 * parseFloat(o.gradient.shadeIntensity),
                        l.indexOf("rgb") > -1 ? L.rgb2hex(l) : l,
                      )
                    : m.shadeColor(
                        parseFloat(o.gradient.shadeIntensity),
                        l.indexOf("rgb") > -1 ? L.rgb2hex(l) : l,
                      );
              else if (o.gradient.gradientToColors[d.seriesNumber]) {
                var A = o.gradient.gradientToColors[d.seriesNumber];
                (h = A),
                  A.indexOf("rgba") > -1 && (S = L.getOpacityFromRGBA(A));
              } else h = l;
              if (
                (o.gradient.gradientFrom && (v = o.gradient.gradientFrom),
                o.gradient.gradientTo && (h = o.gradient.gradientTo),
                o.gradient.inverseColors)
              ) {
                var P = v;
                (v = h), (h = P);
              }
              return (
                v.indexOf("rgb") > -1 && (v = L.rgb2hex(v)),
                h.indexOf("rgb") > -1 && (h = L.rgb2hex(h)),
                p.drawGradient(
                  x,
                  v,
                  h,
                  w,
                  S,
                  d.size,
                  o.gradient.stops,
                  o.gradient.colorStops,
                  a,
                )
              );
            },
          },
        ]),
        T
      );
    })(),
    Wt = (function () {
      function T(t, l) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "setGlobalMarkerSize",
            value: function () {
              var t = this.w;
              if (
                ((t.globals.markers.size = Array.isArray(t.config.markers.size)
                  ? t.config.markers.size
                  : [t.config.markers.size]),
                t.globals.markers.size.length > 0)
              ) {
                if (t.globals.markers.size.length < t.globals.series.length + 1)
                  for (var l = 0; l <= t.globals.series.length; l++)
                    t.globals.markers.size[l] === void 0 &&
                      t.globals.markers.size.push(t.globals.markers.size[0]);
              } else
                t.globals.markers.size = t.config.series.map(function (r) {
                  return t.config.markers.size;
                });
            },
          },
          {
            key: "plotChartMarkers",
            value: function (t, l, r, s) {
              var a,
                o =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4],
                h = this.w,
                d = l,
                p = t,
                m = null,
                x = new Z(this.ctx),
                v =
                  h.config.markers.discrete && h.config.markers.discrete.length;
              if (
                ((h.globals.markers.size[l] > 0 || o || v) &&
                  (m = x.group({
                    class: o || v ? "" : "apexcharts-series-markers",
                  })).attr(
                    "clip-path",
                    "url(#gridRectMarkerMask".concat(h.globals.cuid, ")"),
                  ),
                Array.isArray(p.x))
              )
                for (var w = 0; w < p.x.length; w++) {
                  var S = r;
                  r === 1 && w === 0 && (S = 0), r === 1 && w === 1 && (S = 1);
                  var A = "apexcharts-marker";
                  if (
                    ((h.config.chart.type !== "line" &&
                      h.config.chart.type !== "area") ||
                      h.globals.comboCharts ||
                      h.config.tooltip.intersect ||
                      (A += " no-pointer-events"),
                    (Array.isArray(h.config.markers.size)
                      ? h.globals.markers.size[l] > 0
                      : h.config.markers.size > 0) ||
                      o ||
                      v)
                  ) {
                    L.isNumber(p.y[w])
                      ? (A += " w".concat(L.randomId()))
                      : (A = "apexcharts-nullpoint");
                    var P = this.getMarkerConfig({
                      cssClass: A,
                      seriesIndex: l,
                      dataPointIndex: S,
                    });
                    h.config.series[d].data[S] &&
                      (h.config.series[d].data[S].fillColor &&
                        (P.pointFillColor =
                          h.config.series[d].data[S].fillColor),
                      h.config.series[d].data[S].strokeColor &&
                        (P.pointStrokeColor =
                          h.config.series[d].data[S].strokeColor)),
                      s && (P.pSize = s),
                      (p.x[w] < 0 ||
                        p.x[w] > h.globals.gridWidth ||
                        p.y[w] < 0 ||
                        p.y[w] > h.globals.gridHeight) &&
                        (P.pSize = 0),
                      (a = x.drawMarker(p.x[w], p.y[w], P)).attr("rel", S),
                      a.attr("j", S),
                      a.attr("index", l),
                      a.node.setAttribute("default-marker-size", P.pSize),
                      new te(this.ctx).setSelectionFilter(a, l, S),
                      this.addEvents(a),
                      m && m.add(a);
                  } else
                    h.globals.pointsArray[l] === void 0 &&
                      (h.globals.pointsArray[l] = []),
                      h.globals.pointsArray[l].push([p.x[w], p.y[w]]);
                }
              return m;
            },
          },
          {
            key: "getMarkerConfig",
            value: function (t) {
              var l = t.cssClass,
                r = t.seriesIndex,
                s = t.dataPointIndex,
                a = s === void 0 ? null : s,
                o = t.finishRadius,
                h = o === void 0 ? null : o,
                d = this.w,
                p = this.getMarkerStyle(r),
                m = d.globals.markers.size[r],
                x = d.config.markers;
              return (
                a !== null &&
                  x.discrete.length &&
                  x.discrete.map(function (v) {
                    v.seriesIndex === r &&
                      v.dataPointIndex === a &&
                      ((p.pointStrokeColor = v.strokeColor),
                      (p.pointFillColor = v.fillColor),
                      (m = v.size),
                      (p.pointShape = v.shape));
                  }),
                {
                  pSize: h === null ? m : h,
                  pRadius: x.radius,
                  width: Array.isArray(x.width) ? x.width[r] : x.width,
                  height: Array.isArray(x.height) ? x.height[r] : x.height,
                  pointStrokeWidth: Array.isArray(x.strokeWidth)
                    ? x.strokeWidth[r]
                    : x.strokeWidth,
                  pointStrokeColor: p.pointStrokeColor,
                  pointFillColor: p.pointFillColor,
                  shape:
                    p.pointShape ||
                    (Array.isArray(x.shape) ? x.shape[r] : x.shape),
                  class: l,
                  pointStrokeOpacity: Array.isArray(x.strokeOpacity)
                    ? x.strokeOpacity[r]
                    : x.strokeOpacity,
                  pointStrokeDashArray: Array.isArray(x.strokeDashArray)
                    ? x.strokeDashArray[r]
                    : x.strokeDashArray,
                  pointFillOpacity: Array.isArray(x.fillOpacity)
                    ? x.fillOpacity[r]
                    : x.fillOpacity,
                  seriesIndex: r,
                }
              );
            },
          },
          {
            key: "addEvents",
            value: function (t) {
              var l = this.w,
                r = new Z(this.ctx);
              t.node.addEventListener(
                "mouseenter",
                r.pathMouseEnter.bind(this.ctx, t),
              ),
                t.node.addEventListener(
                  "mouseleave",
                  r.pathMouseLeave.bind(this.ctx, t),
                ),
                t.node.addEventListener(
                  "mousedown",
                  r.pathMouseDown.bind(this.ctx, t),
                ),
                t.node.addEventListener("click", l.config.markers.onClick),
                t.node.addEventListener(
                  "dblclick",
                  l.config.markers.onDblClick,
                ),
                t.node.addEventListener(
                  "touchstart",
                  r.pathMouseDown.bind(this.ctx, t),
                  { passive: !0 },
                );
            },
          },
          {
            key: "getMarkerStyle",
            value: function (t) {
              var l = this.w,
                r = l.globals.markers.colors,
                s =
                  l.config.markers.strokeColor || l.config.markers.strokeColors;
              return {
                pointStrokeColor: Array.isArray(s) ? s[t] : s,
                pointFillColor: Array.isArray(r) ? r[t] : r,
              };
            },
          },
        ]),
        T
      );
    })(),
    Vt = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t, l, r) {
              var s = this.w,
                a = new Z(this.ctx),
                o = r.realIndex,
                h = r.pointsPos,
                d = r.zRatio,
                p = r.elParent,
                m = a.group({
                  class: "apexcharts-series-markers apexcharts-series-".concat(
                    s.config.chart.type,
                  ),
                });
              if (
                (m.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(s.globals.cuid, ")"),
                ),
                Array.isArray(h.x))
              )
                for (var x = 0; x < h.x.length; x++) {
                  var v = l + 1,
                    w = !0;
                  l === 0 && x === 0 && (v = 0), l === 0 && x === 1 && (v = 1);
                  var S = 0,
                    A = s.globals.markers.size[o];
                  if (d !== 1 / 0) {
                    var P = s.config.plotOptions.bubble;
                    (A = s.globals.seriesZ[o][v]),
                      P.zScaling && (A /= d),
                      P.minBubbleRadius &&
                        A < P.minBubbleRadius &&
                        (A = P.minBubbleRadius),
                      P.maxBubbleRadius &&
                        A > P.maxBubbleRadius &&
                        (A = P.maxBubbleRadius);
                  }
                  s.config.chart.animations.enabled || (S = A);
                  var R = h.x[x],
                    O = h.y[x];
                  if (
                    ((S = S || 0),
                    (O !== null && s.globals.series[o][v] !== void 0) ||
                      (w = !1),
                    w)
                  ) {
                    var f = this.drawPoint(R, O, S, A, o, v, l);
                    m.add(f);
                  }
                  p.add(m);
                }
            },
          },
          {
            key: "drawPoint",
            value: function (t, l, r, s, a, o, h) {
              var d = this.w,
                p = a,
                m = new W(this.ctx),
                x = new te(this.ctx),
                v = new Te(this.ctx),
                w = new Wt(this.ctx),
                S = new Z(this.ctx),
                A = w.getMarkerConfig({
                  cssClass: "apexcharts-marker",
                  seriesIndex: p,
                  dataPointIndex: o,
                  finishRadius:
                    d.config.chart.type === "bubble" ||
                    (d.globals.comboCharts &&
                      d.config.series[a] &&
                      d.config.series[a].type === "bubble")
                      ? s
                      : null,
                });
              s = A.pSize;
              var P,
                R = v.fillPath({
                  seriesNumber: a,
                  dataPointIndex: o,
                  color: A.pointFillColor,
                  patternUnits: "objectBoundingBox",
                  value: d.globals.series[a][h],
                });
              if (
                (A.shape === "circle"
                  ? (P = S.drawCircle(r))
                  : (A.shape !== "square" && A.shape !== "rect") ||
                    (P = S.drawRect(
                      0,
                      0,
                      A.width - A.pointStrokeWidth / 2,
                      A.height - A.pointStrokeWidth / 2,
                      A.pRadius,
                    )),
                d.config.series[p].data[o] &&
                  d.config.series[p].data[o].fillColor &&
                  (R = d.config.series[p].data[o].fillColor),
                P.attr({
                  x: t - A.width / 2 - A.pointStrokeWidth / 2,
                  y: l - A.height / 2 - A.pointStrokeWidth / 2,
                  cx: t,
                  cy: l,
                  fill: R,
                  "fill-opacity": A.pointFillOpacity,
                  stroke: A.pointStrokeColor,
                  r: s,
                  "stroke-width": A.pointStrokeWidth,
                  "stroke-dasharray": A.pointStrokeDashArray,
                  "stroke-opacity": A.pointStrokeOpacity,
                }),
                d.config.chart.dropShadow.enabled)
              ) {
                var O = d.config.chart.dropShadow;
                x.dropShadow(P, O, a);
              }
              if (
                !this.initialAnim ||
                d.globals.dataChanged ||
                d.globals.resized
              )
                d.globals.animationEnded = !0;
              else {
                var f = d.config.chart.animations.speed;
                m.animateMarker(
                  P,
                  0,
                  A.shape === "circle"
                    ? s
                    : { width: A.width, height: A.height },
                  f,
                  d.globals.easing,
                  function () {
                    window.setTimeout(function () {
                      m.animationCompleted(P);
                    }, 100);
                  },
                );
              }
              if (d.globals.dataChanged && A.shape === "circle")
                if (this.dynamicAnim) {
                  var y,
                    C,
                    M,
                    z,
                    D = d.config.chart.animations.dynamicAnimation.speed;
                  (z =
                    d.globals.previousPaths[a] &&
                    d.globals.previousPaths[a][h]) != null &&
                    ((y = z.x), (C = z.y), (M = z.r !== void 0 ? z.r : s));
                  for (var U = 0; U < d.globals.collapsedSeries.length; U++)
                    d.globals.collapsedSeries[U].index === a &&
                      ((D = 1), (s = 0));
                  t === 0 && l === 0 && (s = 0),
                    m.animateCircle(
                      P,
                      { cx: y, cy: C, r: M },
                      { cx: t, cy: l, r: s },
                      D,
                      d.globals.easing,
                    );
                } else P.attr({ r: s });
              return (
                P.attr({ rel: o, j: o, index: a, "default-marker-size": s }),
                x.setSelectionFilter(P, a, o),
                w.addEvents(P),
                P.node.classList.add("apexcharts-marker"),
                P
              );
            },
          },
          {
            key: "centerTextInBubble",
            value: function (t) {
              var l = this.w;
              return {
                y: (t += parseInt(l.config.dataLabels.style.fontSize, 10) / 4),
              };
            },
          },
        ]),
        T
      );
    })(),
    Gt = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "dataLabelsCorrection",
            value: function (t, l, r, s, a, o, h) {
              var d = this.w,
                p = !1,
                m = new Z(this.ctx).getTextRects(r, h),
                x = m.width,
                v = m.height;
              l < 0 && (l = 0),
                l > d.globals.gridHeight + v &&
                  (l = d.globals.gridHeight + v / 2),
                d.globals.dataLabelsRects[s] === void 0 &&
                  (d.globals.dataLabelsRects[s] = []),
                d.globals.dataLabelsRects[s].push({
                  x: t,
                  y: l,
                  width: x,
                  height: v,
                });
              var w = d.globals.dataLabelsRects[s].length - 2,
                S =
                  d.globals.lastDrawnDataLabelsIndexes[s] !== void 0
                    ? d.globals.lastDrawnDataLabelsIndexes[s][
                        d.globals.lastDrawnDataLabelsIndexes[s].length - 1
                      ]
                    : 0;
              if (d.globals.dataLabelsRects[s][w] !== void 0) {
                var A = d.globals.dataLabelsRects[s][S];
                (t > A.x + A.width + 2 ||
                  l > A.y + A.height + 2 ||
                  t + x < A.x) &&
                  (p = !0);
              }
              return (
                (a === 0 || o) && (p = !0),
                { x: t, y: l, textRects: m, drawnextLabel: p }
              );
            },
          },
          {
            key: "drawDataLabel",
            value: function (t) {
              var l = this,
                r = t.type,
                s = t.pos,
                a = t.i,
                o = t.j,
                h = t.isRangeStart,
                d = t.strokeWidth,
                p = d === void 0 ? 2 : d,
                m = this.w,
                x = new Z(this.ctx),
                v = m.config.dataLabels,
                w = 0,
                S = 0,
                A = o,
                P = null;
              if (!v.enabled || !Array.isArray(s.x)) return P;
              P = x.group({ class: "apexcharts-data-labels" });
              for (var R = 0; R < s.x.length; R++)
                if (
                  ((w = s.x[R] + v.offsetX),
                  (S = s.y[R] + v.offsetY + p),
                  !isNaN(w))
                ) {
                  o === 1 && R === 0 && (A = 0), o === 1 && R === 1 && (A = 1);
                  var O = m.globals.series[a][A];
                  r === "rangeArea" &&
                    (O = h
                      ? m.globals.seriesRangeStart[a][A]
                      : m.globals.seriesRangeEnd[a][A]);
                  var f = "",
                    y = function (C) {
                      return m.config.dataLabels.formatter(C, {
                        ctx: l.ctx,
                        seriesIndex: a,
                        dataPointIndex: A,
                        w: m,
                      });
                    };
                  m.config.chart.type === "bubble"
                    ? ((f = y((O = m.globals.seriesZ[a][A]))),
                      (S = s.y[R]),
                      (S = new Vt(this.ctx).centerTextInBubble(S, a, A).y))
                    : O !== void 0 && (f = y(O)),
                    this.plotDataLabelsText({
                      x: w,
                      y: S,
                      text: f,
                      i: a,
                      j: A,
                      parent: P,
                      offsetCorrection: !0,
                      dataLabelsConfig: m.config.dataLabels,
                    });
                }
              return P;
            },
          },
          {
            key: "plotDataLabelsText",
            value: function (t) {
              var l = this.w,
                r = new Z(this.ctx),
                s = t.x,
                a = t.y,
                o = t.i,
                h = t.j,
                d = t.text,
                p = t.textAnchor,
                m = t.fontSize,
                x = t.parent,
                v = t.dataLabelsConfig,
                w = t.color,
                S = t.alwaysDrawDataLabel,
                A = t.offsetCorrection;
              if (
                !(
                  Array.isArray(l.config.dataLabels.enabledOnSeries) &&
                  l.config.dataLabels.enabledOnSeries.indexOf(o) < 0
                )
              ) {
                var P = { x: s, y: a, drawnextLabel: !0, textRects: null };
                A &&
                  (P = this.dataLabelsCorrection(
                    s,
                    a,
                    d,
                    o,
                    h,
                    S,
                    parseInt(v.style.fontSize, 10),
                  )),
                  l.globals.zoomed || ((s = P.x), (a = P.y)),
                  P.textRects &&
                    (s < -10 - P.textRects.width ||
                      s > l.globals.gridWidth + P.textRects.width + 10) &&
                    (d = "");
                var R = l.globals.dataLabels.style.colors[o];
                (((l.config.chart.type === "bar" ||
                  l.config.chart.type === "rangeBar") &&
                  l.config.plotOptions.bar.distributed) ||
                  l.config.dataLabels.distributed) &&
                  (R = l.globals.dataLabels.style.colors[h]),
                  typeof R == "function" &&
                    (R = R({
                      series: l.globals.series,
                      seriesIndex: o,
                      dataPointIndex: h,
                      w: l,
                    })),
                  w && (R = w);
                var O = v.offsetX,
                  f = v.offsetY;
                if (
                  ((l.config.chart.type !== "bar" &&
                    l.config.chart.type !== "rangeBar") ||
                    ((O = 0), (f = 0)),
                  P.drawnextLabel)
                ) {
                  var y = r.drawText({
                    width: 100,
                    height: parseInt(v.style.fontSize, 10),
                    x: s + O,
                    y: a + f,
                    foreColor: R,
                    textAnchor: p || v.textAnchor,
                    text: d,
                    fontSize: m || v.style.fontSize,
                    fontFamily: v.style.fontFamily,
                    fontWeight: v.style.fontWeight || "normal",
                  });
                  if (
                    (y.attr({ class: "apexcharts-datalabel", cx: s, cy: a }),
                    v.dropShadow.enabled)
                  ) {
                    var C = v.dropShadow;
                    new te(this.ctx).dropShadow(y, C);
                  }
                  x.add(y),
                    l.globals.lastDrawnDataLabelsIndexes[o] === void 0 &&
                      (l.globals.lastDrawnDataLabelsIndexes[o] = []),
                    l.globals.lastDrawnDataLabelsIndexes[o].push(h);
                }
              }
            },
          },
          {
            key: "addBackgroundToDataLabel",
            value: function (t, l) {
              var r = this.w,
                s = r.config.dataLabels.background,
                a = s.padding,
                o = s.padding / 2,
                h = l.width,
                d = l.height,
                p = new Z(this.ctx).drawRect(
                  l.x - a,
                  l.y - o / 2,
                  h + 2 * a,
                  d + o,
                  s.borderRadius,
                  r.config.chart.background === "transparent"
                    ? "#fff"
                    : r.config.chart.background,
                  s.opacity,
                  s.borderWidth,
                  s.borderColor,
                );
              return (
                s.dropShadow.enabled &&
                  new te(this.ctx).dropShadow(p, s.dropShadow),
                p
              );
            },
          },
          {
            key: "dataLabelsBackground",
            value: function () {
              var t = this.w;
              if (t.config.chart.type !== "bubble")
                for (
                  var l = t.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-datalabels text",
                    ),
                    r = 0;
                  r < l.length;
                  r++
                ) {
                  var s = l[r],
                    a = s.getBBox(),
                    o = null;
                  if (
                    (a.width &&
                      a.height &&
                      (o = this.addBackgroundToDataLabel(s, a)),
                    o)
                  ) {
                    s.parentNode.insertBefore(o.node, s);
                    var h = s.getAttribute("fill");
                    t.config.chart.animations.enabled &&
                    !t.globals.resized &&
                    !t.globals.dataChanged
                      ? o.animate().attr({ fill: h })
                      : o.attr({ fill: h }),
                      s.setAttribute(
                        "fill",
                        t.config.dataLabels.background.foreColor,
                      );
                  }
                }
            },
          },
          {
            key: "bringForward",
            value: function () {
              for (
                var t = this.w,
                  l = t.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-datalabels",
                  ),
                  r = t.globals.dom.baseEl.querySelector(
                    ".apexcharts-plot-series:last-child",
                  ),
                  s = 0;
                s < l.length;
                s++
              )
                r && r.insertBefore(l[s], r.nextSibling);
            },
          },
        ]),
        T
      );
    })(),
    $e = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.legendInactiveClass = "legend-mouseover-inactive");
      }
      return (
        k(T, [
          {
            key: "getAllSeriesEls",
            value: function () {
              return this.w.globals.dom.baseEl.getElementsByClassName(
                "apexcharts-series",
              );
            },
          },
          {
            key: "getSeriesByName",
            value: function (t) {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                  L.escapeString(t),
                  "']",
                ),
              );
            },
          },
          {
            key: "isSeriesHidden",
            value: function (t) {
              var l = this.getSeriesByName(t),
                r = parseInt(l.getAttribute("data:realIndex"), 10);
              return {
                isHidden: l.classList.contains("apexcharts-series-collapsed"),
                realIndex: r,
              };
            },
          },
          {
            key: "addCollapsedClassToSeries",
            value: function (t, l) {
              var r = this.w;
              function s(a) {
                for (var o = 0; o < a.length; o++)
                  a[o].index === l &&
                    t.node.classList.add("apexcharts-series-collapsed");
              }
              s(r.globals.collapsedSeries),
                s(r.globals.ancillaryCollapsedSeries);
            },
          },
          {
            key: "toggleSeries",
            value: function (t) {
              var l = this.isSeriesHidden(t);
              return (
                this.ctx.legend.legendHelpers.toggleDataSeries(
                  l.realIndex,
                  l.isHidden,
                ),
                l.isHidden
              );
            },
          },
          {
            key: "showSeries",
            value: function (t) {
              var l = this.isSeriesHidden(t);
              l.isHidden &&
                this.ctx.legend.legendHelpers.toggleDataSeries(l.realIndex, !0);
            },
          },
          {
            key: "hideSeries",
            value: function (t) {
              var l = this.isSeriesHidden(t);
              l.isHidden ||
                this.ctx.legend.legendHelpers.toggleDataSeries(l.realIndex, !1);
            },
          },
          {
            key: "resetSeries",
            value: function () {
              var t =
                  !(arguments.length > 0 && arguments[0] !== void 0) ||
                  arguments[0],
                l =
                  !(arguments.length > 1 && arguments[1] !== void 0) ||
                  arguments[1],
                r =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                s = this.w,
                a = L.clone(s.globals.initialSeries);
              (s.globals.previousPaths = []),
                r
                  ? ((s.globals.collapsedSeries = []),
                    (s.globals.ancillaryCollapsedSeries = []),
                    (s.globals.collapsedSeriesIndices = []),
                    (s.globals.ancillaryCollapsedSeriesIndices = []))
                  : (a = this.emptyCollapsedSeries(a)),
                (s.config.series = a),
                t &&
                  (l &&
                    ((s.globals.zoomed = !1),
                    this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                  this.ctx.updateHelpers._updateSeries(
                    a,
                    s.config.chart.animations.dynamicAnimation.enabled,
                  ));
            },
          },
          {
            key: "emptyCollapsedSeries",
            value: function (t) {
              for (var l = this.w, r = 0; r < t.length; r++)
                l.globals.collapsedSeriesIndices.indexOf(r) > -1 &&
                  (t[r].data = []);
              return t;
            },
          },
          {
            key: "toggleSeriesOnHover",
            value: function (t, l) {
              var r = this.w;
              l || (l = t.target);
              var s = r.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series, .apexcharts-datalabels",
              );
              if (t.type === "mousemove") {
                var a = parseInt(l.getAttribute("rel"), 10) - 1,
                  o = null,
                  h = null;
                r.globals.axisCharts || r.config.chart.type === "radialBar"
                  ? r.globals.axisCharts
                    ? ((o = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(a, "']"),
                      )),
                      (h = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabels[data\\:realIndex='".concat(
                          a,
                          "']",
                        ),
                      )))
                    : (o = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(a + 1, "']"),
                      ))
                  : (o = r.globals.dom.baseEl.querySelector(
                      ".apexcharts-series[rel='".concat(a + 1, "'] path"),
                    ));
                for (var d = 0; d < s.length; d++)
                  s[d].classList.add(this.legendInactiveClass);
                o !== null &&
                  (r.globals.axisCharts ||
                    o.parentNode.classList.remove(this.legendInactiveClass),
                  o.classList.remove(this.legendInactiveClass),
                  h !== null && h.classList.remove(this.legendInactiveClass));
              } else if (t.type === "mouseout")
                for (var p = 0; p < s.length; p++)
                  s[p].classList.remove(this.legendInactiveClass);
            },
          },
          {
            key: "highlightRangeInSeries",
            value: function (t, l) {
              var r = this,
                s = this.w,
                a = s.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-heatmap-rect",
                ),
                o = function (d) {
                  for (var p = 0; p < a.length; p++)
                    a[p].classList[d](r.legendInactiveClass);
                };
              if (t.type === "mousemove") {
                var h = parseInt(l.getAttribute("rel"), 10) - 1;
                o("add"),
                  (function (d) {
                    for (var p = 0; p < a.length; p++) {
                      var m = parseInt(a[p].getAttribute("val"), 10);
                      m >= d.from &&
                        m <= d.to &&
                        a[p].classList.remove(r.legendInactiveClass);
                    }
                  })(s.config.plotOptions.heatmap.colorScale.ranges[h]);
              } else t.type === "mouseout" && o("remove");
            },
          },
          {
            key: "getActiveConfigSeriesIndex",
            value: function () {
              var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : "asc",
                l =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : [],
                r = this.w,
                s = 0;
              if (r.config.series.length > 1) {
                for (
                  var a = r.config.series.map(function (h, d) {
                      return h.data &&
                        h.data.length > 0 &&
                        r.globals.collapsedSeriesIndices.indexOf(d) === -1 &&
                        (!r.globals.comboCharts ||
                          l.length === 0 ||
                          (l.length && l.indexOf(r.config.series[d].type) > -1))
                        ? d
                        : -1;
                    }),
                    o = t === "asc" ? 0 : a.length - 1;
                  t === "asc" ? o < a.length : o >= 0;
                  t === "asc" ? o++ : o--
                )
                  if (a[o] !== -1) {
                    s = a[o];
                    break;
                  }
              }
              return s;
            },
          },
          {
            key: "getBarSeriesIndices",
            value: function () {
              return this.w.globals.comboCharts
                ? this.w.config.series
                    .map(function (t, l) {
                      return t.type === "bar" || t.type === "column" ? l : -1;
                    })
                    .filter(function (t) {
                      return t !== -1;
                    })
                : this.w.config.series.map(function (t, l) {
                    return l;
                  });
            },
          },
          {
            key: "getPreviousPaths",
            value: function () {
              var t = this.w;
              function l(o, h, d) {
                for (
                  var p = o[h].childNodes,
                    m = {
                      type: d,
                      paths: [],
                      realIndex: o[h].getAttribute("data:realIndex"),
                    },
                    x = 0;
                  x < p.length;
                  x++
                )
                  if (p[x].hasAttribute("pathTo")) {
                    var v = p[x].getAttribute("pathTo");
                    m.paths.push({ d: v });
                  }
                t.globals.previousPaths.push(m);
              }
              (t.globals.previousPaths = []),
                [
                  "line",
                  "area",
                  "bar",
                  "rangebar",
                  "rangeArea",
                  "candlestick",
                  "radar",
                ].forEach(function (o) {
                  for (
                    var h,
                      d =
                        ((h = o),
                        t.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-".concat(
                            h,
                            "-series .apexcharts-series",
                          ),
                        )),
                      p = 0;
                    p < d.length;
                    p++
                  )
                    l(d, p, o);
                }),
                this.handlePrevBubbleScatterPaths("bubble"),
                this.handlePrevBubbleScatterPaths("scatter");
              var r = t.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-".concat(
                  t.config.chart.type,
                  " .apexcharts-series",
                ),
              );
              if (r.length > 0)
                for (
                  var s = function (o) {
                      for (
                        var h = t.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-"
                              .concat(
                                t.config.chart.type,
                                " .apexcharts-series[data\\:realIndex='",
                              )
                              .concat(o, "'] rect"),
                          ),
                          d = [],
                          p = function (x) {
                            var v = function (S) {
                                return h[x].getAttribute(S);
                              },
                              w = {
                                x: parseFloat(v("x")),
                                y: parseFloat(v("y")),
                                width: parseFloat(v("width")),
                                height: parseFloat(v("height")),
                              };
                            d.push({
                              rect: w,
                              color: h[x].getAttribute("color"),
                            });
                          },
                          m = 0;
                        m < h.length;
                        m++
                      )
                        p(m);
                      t.globals.previousPaths.push(d);
                    },
                    a = 0;
                  a < r.length;
                  a++
                )
                  s(a);
              t.globals.axisCharts ||
                (t.globals.previousPaths = t.globals.series);
            },
          },
          {
            key: "handlePrevBubbleScatterPaths",
            value: function (t) {
              var l = this.w,
                r = l.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-".concat(t, "-series .apexcharts-series"),
                );
              if (r.length > 0)
                for (var s = 0; s < r.length; s++) {
                  for (
                    var a = l.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-"
                          .concat(
                            t,
                            "-series .apexcharts-series[data\\:realIndex='",
                          )
                          .concat(s, "'] circle"),
                      ),
                      o = [],
                      h = 0;
                    h < a.length;
                    h++
                  )
                    o.push({
                      x: a[h].getAttribute("cx"),
                      y: a[h].getAttribute("cy"),
                      r: a[h].getAttribute("r"),
                    });
                  l.globals.previousPaths.push(o);
                }
            },
          },
          {
            key: "clearPreviousPaths",
            value: function () {
              var t = this.w;
              (t.globals.previousPaths = []),
                (t.globals.allSeriesCollapsed = !1);
            },
          },
          {
            key: "handleNoData",
            value: function () {
              var t = this.w,
                l = t.config.noData,
                r = new Z(this.ctx),
                s = t.globals.svgWidth / 2,
                a = t.globals.svgHeight / 2,
                o = "middle";
              if (
                ((t.globals.noData = !0),
                (t.globals.animationEnded = !0),
                l.align === "left"
                  ? ((s = 10), (o = "start"))
                  : l.align === "right" &&
                    ((s = t.globals.svgWidth - 10), (o = "end")),
                l.verticalAlign === "top"
                  ? (a = 50)
                  : l.verticalAlign === "bottom" &&
                    (a = t.globals.svgHeight - 50),
                (s += l.offsetX),
                (a = a + parseInt(l.style.fontSize, 10) + 2 + l.offsetY),
                l.text !== void 0 && l.text !== "")
              ) {
                var h = r.drawText({
                  x: s,
                  y: a,
                  text: l.text,
                  textAnchor: o,
                  fontSize: l.style.fontSize,
                  fontFamily: l.style.fontFamily,
                  foreColor: l.style.color,
                  opacity: 1,
                  class: "apexcharts-text-nodata",
                });
                t.globals.dom.Paper.add(h);
              }
            },
          },
          {
            key: "setNullSeriesToZeroValues",
            value: function (t) {
              for (var l = this.w, r = 0; r < t.length; r++)
                if (t[r].length === 0)
                  for (
                    var s = 0;
                    s < t[l.globals.maxValsInArrayIndex].length;
                    s++
                  )
                    t[r].push(0);
              return t;
            },
          },
          {
            key: "hasAllSeriesEqualX",
            value: function () {
              for (
                var t = !0, l = this.w, r = this.filteredSeriesX(), s = 0;
                s < r.length - 1;
                s++
              )
                if (r[s][0] !== r[s + 1][0]) {
                  t = !1;
                  break;
                }
              return (l.globals.allSeriesHasEqualX = t), t;
            },
          },
          {
            key: "filteredSeriesX",
            value: function () {
              var t = this.w.globals.seriesX.map(function (l) {
                return l.length > 0 ? l : [];
              });
              return t;
            },
          },
        ]),
        T
      );
    })(),
    Pl = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.twoDSeries = []),
          (this.threeDSeries = []),
          (this.twoDSeriesX = []),
          (this.seriesGoals = []),
          (this.coreUtils = new oe(this.ctx));
      }
      return (
        k(T, [
          {
            key: "isMultiFormat",
            value: function () {
              return this.isFormatXY() || this.isFormat2DArray();
            },
          },
          {
            key: "isFormatXY",
            value: function () {
              var t = this.w.config.series.slice(),
                l = new $e(this.ctx);
              if (
                ((this.activeSeriesIndex = l.getActiveConfigSeriesIndex()),
                t[this.activeSeriesIndex].data !== void 0 &&
                  t[this.activeSeriesIndex].data.length > 0 &&
                  t[this.activeSeriesIndex].data[0] !== null &&
                  t[this.activeSeriesIndex].data[0].x !== void 0 &&
                  t[this.activeSeriesIndex].data[0] !== null)
              )
                return !0;
            },
          },
          {
            key: "isFormat2DArray",
            value: function () {
              var t = this.w.config.series.slice(),
                l = new $e(this.ctx);
              if (
                ((this.activeSeriesIndex = l.getActiveConfigSeriesIndex()),
                t[this.activeSeriesIndex].data !== void 0 &&
                  t[this.activeSeriesIndex].data.length > 0 &&
                  t[this.activeSeriesIndex].data[0] !== void 0 &&
                  t[this.activeSeriesIndex].data[0] !== null &&
                  t[this.activeSeriesIndex].data[0].constructor === Array)
              )
                return !0;
            },
          },
          {
            key: "handleFormat2DArray",
            value: function (t, l) {
              for (
                var r = this.w.config,
                  s = this.w.globals,
                  a =
                    r.chart.type === "boxPlot" ||
                    r.series[l].type === "boxPlot",
                  o = 0;
                o < t[l].data.length;
                o++
              )
                if (
                  (t[l].data[o][1] !== void 0 &&
                    (Array.isArray(t[l].data[o][1]) &&
                    t[l].data[o][1].length === 4 &&
                    !a
                      ? this.twoDSeries.push(L.parseNumber(t[l].data[o][1][3]))
                      : t[l].data[o].length >= 5
                        ? this.twoDSeries.push(L.parseNumber(t[l].data[o][4]))
                        : this.twoDSeries.push(L.parseNumber(t[l].data[o][1])),
                    (s.dataFormatXNumeric = !0)),
                  r.xaxis.type === "datetime")
                ) {
                  var h = new Date(t[l].data[o][0]);
                  (h = new Date(h).getTime()), this.twoDSeriesX.push(h);
                } else this.twoDSeriesX.push(t[l].data[o][0]);
              for (var d = 0; d < t[l].data.length; d++)
                t[l].data[d][2] !== void 0 &&
                  (this.threeDSeries.push(t[l].data[d][2]), (s.isDataXYZ = !0));
            },
          },
          {
            key: "handleFormatXY",
            value: function (t, l) {
              var r = this.w.config,
                s = this.w.globals,
                a = new Ze(this.ctx),
                o = l;
              s.collapsedSeriesIndices.indexOf(l) > -1 &&
                (o = this.activeSeriesIndex);
              for (var h = 0; h < t[l].data.length; h++)
                t[l].data[h].y !== void 0 &&
                  (Array.isArray(t[l].data[h].y)
                    ? this.twoDSeries.push(
                        L.parseNumber(
                          t[l].data[h].y[t[l].data[h].y.length - 1],
                        ),
                      )
                    : this.twoDSeries.push(L.parseNumber(t[l].data[h].y))),
                  t[l].data[h].goals !== void 0 &&
                  Array.isArray(t[l].data[h].goals)
                    ? (this.seriesGoals[l] === void 0 &&
                        (this.seriesGoals[l] = []),
                      this.seriesGoals[l].push(t[l].data[h].goals))
                    : (this.seriesGoals[l] === void 0 &&
                        (this.seriesGoals[l] = []),
                      this.seriesGoals[l].push(null));
              for (var d = 0; d < t[o].data.length; d++) {
                var p = typeof t[o].data[d].x == "string",
                  m = Array.isArray(t[o].data[d].x),
                  x = !m && !!a.isValidDate(t[o].data[d].x.toString());
                if (p || x)
                  if (p || r.xaxis.convertedCatToNumeric) {
                    var v = s.isBarHorizontal && s.isRangeData;
                    r.xaxis.type !== "datetime" || v
                      ? ((this.fallbackToCategory = !0),
                        this.twoDSeriesX.push(t[o].data[d].x))
                      : this.twoDSeriesX.push(a.parseDate(t[o].data[d].x));
                  } else
                    r.xaxis.type === "datetime"
                      ? this.twoDSeriesX.push(
                          a.parseDate(t[o].data[d].x.toString()),
                        )
                      : ((s.dataFormatXNumeric = !0),
                        (s.isXNumeric = !0),
                        this.twoDSeriesX.push(parseFloat(t[o].data[d].x)));
                else
                  m
                    ? ((this.fallbackToCategory = !0),
                      this.twoDSeriesX.push(t[o].data[d].x))
                    : ((s.isXNumeric = !0),
                      (s.dataFormatXNumeric = !0),
                      this.twoDSeriesX.push(t[o].data[d].x));
              }
              if (t[l].data[0] && t[l].data[0].z !== void 0) {
                for (var w = 0; w < t[l].data.length; w++)
                  this.threeDSeries.push(t[l].data[w].z);
                s.isDataXYZ = !0;
              }
            },
          },
          {
            key: "handleRangeData",
            value: function (t, l) {
              var r = this.w.globals,
                s = {};
              return (
                this.isFormat2DArray()
                  ? (s = this.handleRangeDataFormat("array", t, l))
                  : this.isFormatXY() &&
                    (s = this.handleRangeDataFormat("xy", t, l)),
                r.seriesRangeStart.push(s.start),
                r.seriesRangeEnd.push(s.end),
                r.seriesRange.push(s.rangeUniques),
                r.seriesRange.forEach(function (a, o) {
                  a &&
                    a.forEach(function (h, d) {
                      h.y.forEach(function (p, m) {
                        for (var x = 0; x < h.y.length; x++)
                          if (m !== x) {
                            var v = p.y1,
                              w = p.y2,
                              S = h.y[x].y1;
                            v <= h.y[x].y2 &&
                              S <= w &&
                              (h.overlaps.indexOf(p.rangeName) < 0 &&
                                h.overlaps.push(p.rangeName),
                              h.overlaps.indexOf(h.y[x].rangeName) < 0 &&
                                h.overlaps.push(h.y[x].rangeName));
                          }
                      });
                    });
                }),
                s
              );
            },
          },
          {
            key: "handleCandleStickBoxData",
            value: function (t, l) {
              var r = this.w.globals,
                s = {};
              return (
                this.isFormat2DArray()
                  ? (s = this.handleCandleStickBoxDataFormat("array", t, l))
                  : this.isFormatXY() &&
                    (s = this.handleCandleStickBoxDataFormat("xy", t, l)),
                (r.seriesCandleO[l] = s.o),
                (r.seriesCandleH[l] = s.h),
                (r.seriesCandleM[l] = s.m),
                (r.seriesCandleL[l] = s.l),
                (r.seriesCandleC[l] = s.c),
                s
              );
            },
          },
          {
            key: "handleRangeDataFormat",
            value: function (t, l, r) {
              var s = [],
                a = [],
                o = l[r].data
                  .filter(function (m, x, v) {
                    return (
                      x ===
                      v.findIndex(function (w) {
                        return w.x === m.x;
                      })
                    );
                  })
                  .map(function (m, x) {
                    return { x: m.x, overlaps: [], y: [] };
                  });
              if (t === "array")
                for (var h = 0; h < l[r].data.length; h++)
                  Array.isArray(l[r].data[h])
                    ? (s.push(l[r].data[h][1][0]), a.push(l[r].data[h][1][1]))
                    : (s.push(l[r].data[h]), a.push(l[r].data[h]));
              else if (t === "xy")
                for (
                  var d = function (m) {
                      var x = Array.isArray(l[r].data[m].y),
                        v = L.randomId(),
                        w = l[r].data[m].x,
                        S = {
                          y1: x ? l[r].data[m].y[0] : l[r].data[m].y,
                          y2: x ? l[r].data[m].y[1] : l[r].data[m].y,
                          rangeName: v,
                        };
                      l[r].data[m].rangeName = v;
                      var A = o.findIndex(function (P) {
                        return P.x === w;
                      });
                      o[A].y.push(S), s.push(S.y1), a.push(S.y2);
                    },
                    p = 0;
                  p < l[r].data.length;
                  p++
                )
                  d(p);
              return { start: s, end: a, rangeUniques: o };
            },
          },
          {
            key: "handleCandleStickBoxDataFormat",
            value: function (t, l, r) {
              var s = this.w,
                a =
                  s.config.chart.type === "boxPlot" ||
                  s.config.series[r].type === "boxPlot",
                o = [],
                h = [],
                d = [],
                p = [],
                m = [];
              if (t === "array")
                if (
                  (a && l[r].data[0].length === 6) ||
                  (!a && l[r].data[0].length === 5)
                )
                  for (var x = 0; x < l[r].data.length; x++)
                    o.push(l[r].data[x][1]),
                      h.push(l[r].data[x][2]),
                      a
                        ? (d.push(l[r].data[x][3]),
                          p.push(l[r].data[x][4]),
                          m.push(l[r].data[x][5]))
                        : (p.push(l[r].data[x][3]), m.push(l[r].data[x][4]));
                else
                  for (var v = 0; v < l[r].data.length; v++)
                    Array.isArray(l[r].data[v][1]) &&
                      (o.push(l[r].data[v][1][0]),
                      h.push(l[r].data[v][1][1]),
                      a
                        ? (d.push(l[r].data[v][1][2]),
                          p.push(l[r].data[v][1][3]),
                          m.push(l[r].data[v][1][4]))
                        : (p.push(l[r].data[v][1][2]),
                          m.push(l[r].data[v][1][3])));
              else if (t === "xy")
                for (var w = 0; w < l[r].data.length; w++)
                  Array.isArray(l[r].data[w].y) &&
                    (o.push(l[r].data[w].y[0]),
                    h.push(l[r].data[w].y[1]),
                    a
                      ? (d.push(l[r].data[w].y[2]),
                        p.push(l[r].data[w].y[3]),
                        m.push(l[r].data[w].y[4]))
                      : (p.push(l[r].data[w].y[2]), m.push(l[r].data[w].y[3])));
              return { o, h, m: d, l: p, c: m };
            },
          },
          {
            key: "parseDataAxisCharts",
            value: function (t) {
              var l,
                r = this,
                s =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : this.ctx,
                a = this.w.config,
                o = this.w.globals,
                h = new Ze(s),
                d =
                  a.labels.length > 0
                    ? a.labels.slice()
                    : a.xaxis.categories.slice();
              if (
                ((o.isRangeBar =
                  a.chart.type === "rangeBar" && o.isBarHorizontal),
                (o.hasXaxisGroups =
                  a.xaxis.type === "category" &&
                  a.xaxis.group.groups.length > 0),
                o.hasXaxisGroups && (o.groups = a.xaxis.group.groups),
                (o.hasSeriesGroups =
                  (l = t[0]) === null || l === void 0 ? void 0 : l.group),
                o.hasSeriesGroups)
              ) {
                var p = [],
                  m = Q(
                    new Set(
                      t.map(function (S) {
                        return S.group;
                      }),
                    ),
                  );
                t.forEach(function (S, A) {
                  var P = m.indexOf(S.group);
                  p[P] || (p[P] = []), p[P].push(S.name);
                }),
                  (o.seriesGroups = p);
              }
              for (
                var x = function () {
                    for (var S = 0; S < d.length; S++)
                      if (typeof d[S] == "string") {
                        if (!h.isValidDate(d[S]))
                          throw new Error(
                            "You have provided invalid Date format. Please provide a valid JavaScript Date",
                          );
                        r.twoDSeriesX.push(h.parseDate(d[S]));
                      } else r.twoDSeriesX.push(d[S]);
                  },
                  v = 0;
                v < t.length;
                v++
              ) {
                if (
                  ((this.twoDSeries = []),
                  (this.twoDSeriesX = []),
                  (this.threeDSeries = []),
                  t[v].data === void 0)
                )
                  return void console.error(
                    "It is a possibility that you may have not included 'data' property in series.",
                  );
                if (
                  ((a.chart.type !== "rangeBar" &&
                    a.chart.type !== "rangeArea" &&
                    t[v].type !== "rangeBar" &&
                    t[v].type !== "rangeArea") ||
                    ((o.isRangeData = !0),
                    o.isComboCharts
                      ? (t[v].type !== "rangeBar" &&
                          t[v].type !== "rangeArea") ||
                        this.handleRangeData(t, v)
                      : (a.chart.type !== "rangeBar" &&
                          a.chart.type !== "rangeArea") ||
                        this.handleRangeData(t, v)),
                  this.isMultiFormat())
                )
                  this.isFormat2DArray()
                    ? this.handleFormat2DArray(t, v)
                    : this.isFormatXY() && this.handleFormatXY(t, v),
                    (a.chart.type !== "candlestick" &&
                      t[v].type !== "candlestick" &&
                      a.chart.type !== "boxPlot" &&
                      t[v].type !== "boxPlot") ||
                      this.handleCandleStickBoxData(t, v),
                    o.series.push(this.twoDSeries),
                    o.labels.push(this.twoDSeriesX),
                    o.seriesX.push(this.twoDSeriesX),
                    (o.seriesGoals = this.seriesGoals),
                    v !== this.activeSeriesIndex ||
                      this.fallbackToCategory ||
                      (o.isXNumeric = !0);
                else {
                  a.xaxis.type === "datetime"
                    ? ((o.isXNumeric = !0),
                      x(),
                      o.seriesX.push(this.twoDSeriesX))
                    : a.xaxis.type === "numeric" &&
                      ((o.isXNumeric = !0),
                      d.length > 0 &&
                        ((this.twoDSeriesX = d),
                        o.seriesX.push(this.twoDSeriesX))),
                    o.labels.push(this.twoDSeriesX);
                  var w = t[v].data.map(function (S) {
                    return L.parseNumber(S);
                  });
                  o.series.push(w);
                }
                o.seriesZ.push(this.threeDSeries),
                  t[v].name !== void 0
                    ? o.seriesNames.push(t[v].name)
                    : o.seriesNames.push("series-" + parseInt(v + 1, 10)),
                  t[v].color !== void 0
                    ? o.seriesColors.push(t[v].color)
                    : o.seriesColors.push(void 0);
              }
              return this.w;
            },
          },
          {
            key: "parseDataNonAxisCharts",
            value: function (t) {
              var l = this.w.globals,
                r = this.w.config;
              (l.series = t.slice()), (l.seriesNames = r.labels.slice());
              for (var s = 0; s < l.series.length; s++)
                l.seriesNames[s] === void 0 &&
                  l.seriesNames.push("series-" + (s + 1));
              return this.w;
            },
          },
          {
            key: "handleExternalLabelsData",
            value: function (t) {
              var l = this.w.config,
                r = this.w.globals;
              l.xaxis.categories.length > 0
                ? (r.labels = l.xaxis.categories)
                : l.labels.length > 0
                  ? (r.labels = l.labels.slice())
                  : this.fallbackToCategory
                    ? ((r.labels = r.labels[0]),
                      r.seriesRange.length &&
                        (r.seriesRange.map(function (s) {
                          s.forEach(function (a) {
                            r.labels.indexOf(a.x) < 0 &&
                              a.x &&
                              r.labels.push(a.x);
                          });
                        }),
                        (r.labels = Array.from(
                          new Set(r.labels.map(JSON.stringify)),
                          JSON.parse,
                        ))),
                      l.xaxis.convertedCatToNumeric &&
                        (new ge(l).convertCatToNumericXaxis(
                          l,
                          this.ctx,
                          r.seriesX[0],
                        ),
                        this._generateExternalLabels(t)))
                    : this._generateExternalLabels(t);
            },
          },
          {
            key: "_generateExternalLabels",
            value: function (t) {
              var l = this.w.globals,
                r = this.w.config,
                s = [];
              if (l.axisCharts) {
                if (l.series.length > 0)
                  if (this.isFormatXY())
                    for (
                      var a = r.series.map(function (x, v) {
                          return x.data.filter(function (w, S, A) {
                            return (
                              A.findIndex(function (P) {
                                return P.x === w.x;
                              }) === S
                            );
                          });
                        }),
                        o = a.reduce(function (x, v, w, S) {
                          return S[x].length > v.length ? x : w;
                        }, 0),
                        h = 0;
                      h < a[o].length;
                      h++
                    )
                      s.push(h + 1);
                  else
                    for (
                      var d = 0;
                      d < l.series[l.maxValsInArrayIndex].length;
                      d++
                    )
                      s.push(d + 1);
                l.seriesX = [];
                for (var p = 0; p < t.length; p++) l.seriesX.push(s);
                l.isXNumeric = !0;
              }
              if (s.length === 0) {
                s = l.axisCharts
                  ? []
                  : l.series.map(function (x, v) {
                      return v + 1;
                    });
                for (var m = 0; m < t.length; m++) l.seriesX.push(s);
              }
              (l.labels = s),
                r.xaxis.convertedCatToNumeric &&
                  (l.categoryLabels = s.map(function (x) {
                    return r.xaxis.labels.formatter(x);
                  })),
                (l.noLabelsProvided = !0);
            },
          },
          {
            key: "parseData",
            value: function (t) {
              var l = this.w,
                r = l.config,
                s = l.globals;
              if (
                (this.excludeCollapsedSeriesInYAxis(),
                (this.fallbackToCategory = !1),
                this.ctx.core.resetGlobals(),
                this.ctx.core.isMultipleY(),
                s.axisCharts
                  ? (this.parseDataAxisCharts(t),
                    this.coreUtils.getLargestSeries())
                  : this.parseDataNonAxisCharts(t),
                r.chart.stacked)
              ) {
                var a = new $e(this.ctx);
                s.series = a.setNullSeriesToZeroValues(s.series);
              }
              this.coreUtils.getSeriesTotals(),
                s.axisCharts &&
                  (s.stackedSeriesTotals =
                    this.coreUtils.getStackedSeriesTotals()),
                this.coreUtils.getPercentSeries(),
                s.dataFormatXNumeric ||
                  (s.isXNumeric &&
                    (r.xaxis.type !== "numeric" ||
                      r.labels.length !== 0 ||
                      r.xaxis.categories.length !== 0)) ||
                  this.handleExternalLabelsData(t);
              for (
                var o = this.coreUtils.getCategoryLabels(s.labels), h = 0;
                h < o.length;
                h++
              )
                if (Array.isArray(o[h])) {
                  s.isMultiLineX = !0;
                  break;
                }
            },
          },
          {
            key: "excludeCollapsedSeriesInYAxis",
            value: function () {
              var t = this,
                l = this.w;
              l.globals.ignoreYAxisIndexes = l.globals.collapsedSeries.map(
                function (r, s) {
                  if (t.w.globals.isMultipleYAxis && !l.config.chart.stacked)
                    return r.index;
                },
              );
            },
          },
        ]),
        T
      );
    })(),
    mt = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "getLabel",
            value: function (t, l, r, s) {
              var a =
                  arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : [],
                o =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : "12px",
                h =
                  !(arguments.length > 6 && arguments[6] !== void 0) ||
                  arguments[6],
                d = this.w,
                p = t[s] === void 0 ? "" : t[s],
                m = p,
                x = d.globals.xLabelFormatter,
                v = d.config.xaxis.labels.formatter,
                w = !1,
                S = new pl(this.ctx),
                A = p;
              h &&
                ((m = S.xLabelFormat(x, p, A, {
                  i: s,
                  dateFormatter: new Ze(this.ctx).formatDate,
                  w: d,
                })),
                v !== void 0 &&
                  (m = v(p, t[s], {
                    i: s,
                    dateFormatter: new Ze(this.ctx).formatDate,
                    w: d,
                  })));
              var P, R;
              l.length > 0
                ? ((P = l[s].unit),
                  (R = null),
                  l.forEach(function (C) {
                    C.unit === "month"
                      ? (R = "year")
                      : C.unit === "day"
                        ? (R = "month")
                        : C.unit === "hour"
                          ? (R = "day")
                          : C.unit === "minute" && (R = "hour");
                  }),
                  (w = R === P),
                  (r = l[s].position),
                  (m = l[s].value))
                : d.config.xaxis.type === "datetime" &&
                  v === void 0 &&
                  (m = ""),
                m === void 0 && (m = ""),
                (m = Array.isArray(m) ? m : m.toString());
              var O = new Z(this.ctx),
                f = {};
              f =
                d.globals.rotateXLabels && h
                  ? O.getTextRects(
                      m,
                      parseInt(o, 10),
                      null,
                      "rotate(".concat(d.config.xaxis.labels.rotate, " 0 0)"),
                      !1,
                    )
                  : O.getTextRects(m, parseInt(o, 10));
              var y =
                !d.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
              return (
                !Array.isArray(m) &&
                  (m.indexOf("NaN") === 0 ||
                    m.toLowerCase().indexOf("invalid") === 0 ||
                    m.toLowerCase().indexOf("infinity") >= 0 ||
                    (a.indexOf(m) >= 0 && y)) &&
                  (m = ""),
                { x: r, text: m, textRect: f, isBold: w }
              );
            },
          },
          {
            key: "checkLabelBasedOnTickamount",
            value: function (t, l, r) {
              var s = this.w,
                a = s.config.xaxis.tickAmount;
              return (
                a === "dataPoints" &&
                  (a = Math.round(s.globals.gridWidth / 120)),
                a > r || t % Math.round(r / (a + 1)) == 0 || (l.text = ""),
                l
              );
            },
          },
          {
            key: "checkForOverflowingLabels",
            value: function (t, l, r, s, a) {
              var o = this.w;
              if (
                (t === 0 && o.globals.skipFirstTimelinelabel && (l.text = ""),
                t === r - 1 && o.globals.skipLastTimelinelabel && (l.text = ""),
                o.config.xaxis.labels.hideOverlappingLabels && s.length > 0)
              ) {
                var h = a[a.length - 1];
                l.x <
                  h.textRect.width /
                    (o.globals.rotateXLabels
                      ? Math.abs(o.config.xaxis.labels.rotate) / 12
                      : 1.01) +
                    h.x && (l.text = "");
              }
              return l;
            },
          },
          {
            key: "checkForReversedLabels",
            value: function (t, l) {
              var r = this.w;
              return (
                r.config.yaxis[t] && r.config.yaxis[t].reversed && l.reverse(),
                l
              );
            },
          },
          {
            key: "isYAxisHidden",
            value: function (t) {
              var l = this.w,
                r = new oe(this.ctx);
              return (
                !l.config.yaxis[t].show ||
                (!l.config.yaxis[t].showForNullSeries &&
                  r.isSeriesNull(t) &&
                  l.globals.collapsedSeriesIndices.indexOf(t) === -1)
              );
            },
          },
          {
            key: "getYAxisForeColor",
            value: function (t, l) {
              var r = this.w;
              return (
                Array.isArray(t) &&
                  r.globals.yAxisScale[l] &&
                  this.ctx.theme.pushExtraColors(
                    t,
                    r.globals.yAxisScale[l].result.length,
                    !1,
                  ),
                t
              );
            },
          },
          {
            key: "drawYAxisTicks",
            value: function (t, l, r, s, a, o, h) {
              var d = this.w,
                p = new Z(this.ctx),
                m = d.globals.translateY;
              if (s.show && l > 0) {
                d.config.yaxis[a].opposite === !0 && (t += s.width);
                for (var x = l; x >= 0; x--) {
                  var v = m + l / 10 + d.config.yaxis[a].labels.offsetY - 1;
                  d.globals.isBarHorizontal && (v = o * x),
                    d.config.chart.type === "heatmap" && (v += o / 2);
                  var w = p.drawLine(
                    t + r.offsetX - s.width + s.offsetX,
                    v + s.offsetY,
                    t + r.offsetX + s.offsetX,
                    v + s.offsetY,
                    s.color,
                  );
                  h.add(w), (m += o);
                }
              }
            },
          },
        ]),
        T
      );
    })(),
    Gi = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "scaleSvgNode",
            value: function (t, l) {
              var r = parseFloat(t.getAttributeNS(null, "width")),
                s = parseFloat(t.getAttributeNS(null, "height"));
              t.setAttributeNS(null, "width", r * l),
                t.setAttributeNS(null, "height", s * l),
                t.setAttributeNS(null, "viewBox", "0 0 " + r + " " + s);
            },
          },
          {
            key: "fixSvgStringForIe11",
            value: function (t) {
              if (!L.isIE11()) return t.replace(/&nbsp;/g, "&#160;");
              var l = 0,
                r = t.replace(
                  /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                  function (s) {
                    return ++l === 2
                      ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                      : s;
                  },
                );
              return (r = (r = r.replace(/xmlns:NS\d+=""/g, "")).replace(
                /NS\d+:(\w+:\w+=")/g,
                "$1",
              ));
            },
          },
          {
            key: "getSvgString",
            value: function (t) {
              t == null && (t = 1);
              var l = this.w.globals.dom.Paper.svg();
              if (t !== 1) {
                var r = this.w.globals.dom.Paper.node.cloneNode(!0);
                this.scaleSvgNode(r, t),
                  (l = new XMLSerializer().serializeToString(r));
              }
              return this.fixSvgStringForIe11(l);
            },
          },
          {
            key: "cleanup",
            value: function () {
              var t = this.w,
                l = t.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-xcrosshairs",
                ),
                r = t.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-ycrosshairs",
                ),
                s = t.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-zoom-rect, .apexcharts-selection-rect",
                );
              Array.prototype.forEach.call(s, function (a) {
                a.setAttribute("width", 0);
              }),
                l &&
                  l[0] &&
                  (l[0].setAttribute("x", -500),
                  l[0].setAttribute("x1", -500),
                  l[0].setAttribute("x2", -500)),
                r &&
                  r[0] &&
                  (r[0].setAttribute("y", -100),
                  r[0].setAttribute("y1", -100),
                  r[0].setAttribute("y2", -100));
            },
          },
          {
            key: "svgUrl",
            value: function () {
              this.cleanup();
              var t = this.getSvgString(),
                l = new Blob([t], { type: "image/svg+xml;charset=utf-8" });
              return URL.createObjectURL(l);
            },
          },
          {
            key: "dataURI",
            value: function (t) {
              var l = this;
              return new Promise(function (r) {
                var s = l.w,
                  a = t ? t.scale || t.width / s.globals.svgWidth : 1;
                l.cleanup();
                var o = document.createElement("canvas");
                (o.width = s.globals.svgWidth * a),
                  (o.height =
                    parseInt(s.globals.dom.elWrap.style.height, 10) * a);
                var h =
                    s.config.chart.background === "transparent"
                      ? "#fff"
                      : s.config.chart.background,
                  d = o.getContext("2d");
                (d.fillStyle = h), d.fillRect(0, 0, o.width * a, o.height * a);
                var p = l.getSvgString(a);
                if (window.canvg && L.isIE11()) {
                  var m = window.canvg.Canvg.fromString(d, p, {
                    ignoreClear: !0,
                    ignoreDimensions: !0,
                  });
                  m.start();
                  var x = o.msToBlob();
                  m.stop(), r({ blob: x });
                } else {
                  var v = "data:image/svg+xml," + encodeURIComponent(p),
                    w = new Image();
                  (w.crossOrigin = "anonymous"),
                    (w.onload = function () {
                      if ((d.drawImage(w, 0, 0), o.msToBlob)) {
                        var S = o.msToBlob();
                        r({ blob: S });
                      } else {
                        var A = o.toDataURL("image/png");
                        r({ imgURI: A });
                      }
                    }),
                    (w.src = v);
                }
              });
            },
          },
          {
            key: "exportToSVG",
            value: function () {
              this.triggerDownload(
                this.svgUrl(),
                this.w.config.chart.toolbar.export.svg.filename,
                ".svg",
              );
            },
          },
          {
            key: "exportToPng",
            value: function () {
              var t = this;
              this.dataURI().then(function (l) {
                var r = l.imgURI,
                  s = l.blob;
                s
                  ? navigator.msSaveOrOpenBlob(s, t.w.globals.chartID + ".png")
                  : t.triggerDownload(
                      r,
                      t.w.config.chart.toolbar.export.png.filename,
                      ".png",
                    );
              });
            },
          },
          {
            key: "exportToCSV",
            value: function (t) {
              var l = this,
                r = t.series,
                s = t.fileName,
                a = t.columnDelimiter,
                o = a === void 0 ? "," : a,
                h = t.lineDelimiter,
                d =
                  h === void 0
                    ? `
`
                    : h,
                p = this.w;
              r || (r = p.config.series);
              var m = [],
                x = [],
                v = "",
                w = p.globals.series.map(function (f, y) {
                  return p.globals.collapsedSeriesIndices.indexOf(y) === -1
                    ? f
                    : [];
                }),
                S = Math.max.apply(
                  Math,
                  Q(
                    r.map(function (f) {
                      return f.data ? f.data.length : 0;
                    }),
                  ),
                ),
                A = new Pl(this.ctx),
                P = new mt(this.ctx),
                R = function (f) {
                  var y = "";
                  if (p.globals.axisCharts) {
                    if (
                      p.config.xaxis.type === "category" ||
                      p.config.xaxis.convertedCatToNumeric
                    )
                      if (p.globals.isBarHorizontal) {
                        var C = p.globals.yLabelFormatters[0],
                          M = new $e(l.ctx).getActiveConfigSeriesIndex();
                        y = C(p.globals.labels[f], {
                          seriesIndex: M,
                          dataPointIndex: f,
                          w: p,
                        });
                      } else
                        y = P.getLabel(
                          p.globals.labels,
                          p.globals.timescaleLabels,
                          0,
                          f,
                        ).text;
                    p.config.xaxis.type === "datetime" &&
                      (p.config.xaxis.categories.length
                        ? (y = p.config.xaxis.categories[f])
                        : p.config.labels.length && (y = p.config.labels[f]));
                  } else y = p.config.labels[f];
                  return (
                    Array.isArray(y) && (y = y.join(" ")),
                    L.isNumber(y) ? y : y.split(o).join("")
                  );
                },
                O = function (f, y) {
                  if ((m.length && y === 0 && x.push(m.join(o)), f.data)) {
                    f.data =
                      (f.data.length && f.data) ||
                      Q(Array(S)).map(function () {
                        return "";
                      });
                    for (var C = 0; C < f.data.length; C++) {
                      m = [];
                      var M = R(C);
                      if (
                        (M ||
                          (A.isFormatXY()
                            ? (M = r[y].data[C].x)
                            : A.isFormat2DArray() &&
                              (M = r[y].data[C] ? r[y].data[C][0] : "")),
                        y === 0)
                      ) {
                        m.push(
                          ((D = M),
                          p.config.xaxis.type === "datetime" &&
                          String(D).length >= 10
                            ? p.config.chart.toolbar.export.csv.dateFormatter(M)
                            : L.isNumber(M)
                              ? M
                              : M.split(o).join("")),
                        );
                        for (var z = 0; z < p.globals.series.length; z++)
                          A.isFormatXY()
                            ? m.push(r[z].data[C].y)
                            : m.push(w[z][C]);
                      }
                      (p.config.chart.type === "candlestick" ||
                        (f.type && f.type === "candlestick")) &&
                        (m.pop(),
                        m.push(p.globals.seriesCandleO[y][C]),
                        m.push(p.globals.seriesCandleH[y][C]),
                        m.push(p.globals.seriesCandleL[y][C]),
                        m.push(p.globals.seriesCandleC[y][C])),
                        (p.config.chart.type === "boxPlot" ||
                          (f.type && f.type === "boxPlot")) &&
                          (m.pop(),
                          m.push(p.globals.seriesCandleO[y][C]),
                          m.push(p.globals.seriesCandleH[y][C]),
                          m.push(p.globals.seriesCandleM[y][C]),
                          m.push(p.globals.seriesCandleL[y][C]),
                          m.push(p.globals.seriesCandleC[y][C])),
                        p.config.chart.type === "rangeBar" &&
                          (m.pop(),
                          m.push(p.globals.seriesRangeStart[y][C]),
                          m.push(p.globals.seriesRangeEnd[y][C])),
                        m.length && x.push(m.join(o));
                    }
                  }
                  var D;
                };
              m.push(p.config.chart.toolbar.export.csv.headerCategory),
                p.config.chart.type === "boxPlot"
                  ? (m.push("minimum"),
                    m.push("q1"),
                    m.push("median"),
                    m.push("q3"),
                    m.push("maximum"))
                  : p.config.chart.type === "candlestick"
                    ? (m.push("open"),
                      m.push("high"),
                      m.push("low"),
                      m.push("close"))
                    : p.config.chart.type === "rangeBar"
                      ? (m.push("minimum"), m.push("maximum"))
                      : r.map(function (f, y) {
                          var C = f.name ? f.name : "series-".concat(y);
                          p.globals.axisCharts &&
                            m.push(
                              C.split(o).join("")
                                ? C.split(o).join("")
                                : "series-".concat(y),
                            );
                        }),
                p.globals.axisCharts ||
                  (m.push(p.config.chart.toolbar.export.csv.headerValue),
                  x.push(m.join(o))),
                r.map(function (f, y) {
                  p.globals.axisCharts
                    ? O(f, y)
                    : ((m = []).push(p.globals.labels[y].split(o).join("")),
                      m.push(w[y]),
                      x.push(m.join(o)));
                }),
                (v += x.join(d)),
                this.triggerDownload(
                  "data:text/csv; charset=utf-8," +
                    encodeURIComponent("\uFEFF" + v),
                  s || p.config.chart.toolbar.export.csv.filename,
                  ".csv",
                );
            },
          },
          {
            key: "triggerDownload",
            value: function (t, l, r) {
              var s = document.createElement("a");
              (s.href = t),
                (s.download = (l || this.w.globals.chartID) + r),
                document.body.appendChild(s),
                s.click(),
                document.body.removeChild(s);
            },
          },
        ]),
        T
      );
    })(),
    X = (function () {
      function T(t, l) {
        g(this, T), (this.ctx = t), (this.elgrid = l), (this.w = t.w);
        var r = this.w;
        (this.axesUtils = new mt(t)),
          (this.xaxisLabels = r.globals.labels.slice()),
          r.globals.timescaleLabels.length > 0 &&
            !r.globals.isBarHorizontal &&
            (this.xaxisLabels = r.globals.timescaleLabels.slice()),
          r.config.xaxis.overwriteCategories &&
            (this.xaxisLabels = r.config.xaxis.overwriteCategories),
          (this.drawnLabels = []),
          (this.drawnLabelsRects = []),
          r.config.xaxis.position === "top"
            ? (this.offY = 0)
            : (this.offY = r.globals.gridHeight + 1),
          (this.offY = this.offY + r.config.xaxis.axisBorder.offsetY),
          (this.isCategoryBarHorizontal =
            r.config.chart.type === "bar" &&
            r.config.plotOptions.bar.horizontal),
          (this.xaxisFontSize = r.config.xaxis.labels.style.fontSize),
          (this.xaxisFontFamily = r.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = r.config.xaxis.labels.style.colors),
          (this.xaxisBorderWidth = r.config.xaxis.axisBorder.width),
          this.isCategoryBarHorizontal &&
            (this.xaxisBorderWidth =
              r.config.yaxis[0].axisBorder.width.toString()),
          this.xaxisBorderWidth.indexOf("%") > -1
            ? (this.xaxisBorderWidth =
                (r.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) /
                100)
            : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
          (this.xaxisBorderHeight = r.config.xaxis.axisBorder.height),
          (this.yaxis = r.config.yaxis[0]);
      }
      return (
        k(T, [
          {
            key: "drawXaxis",
            value: function () {
              var t = this.w,
                l = new Z(this.ctx),
                r = l.group({
                  class: "apexcharts-xaxis",
                  transform: "translate("
                    .concat(t.config.xaxis.offsetX, ", ")
                    .concat(t.config.xaxis.offsetY, ")"),
                }),
                s = l.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(t.globals.translateXAxisX, ", ")
                    .concat(t.globals.translateXAxisY, ")"),
                });
              r.add(s);
              for (var a = [], o = 0; o < this.xaxisLabels.length; o++)
                a.push(this.xaxisLabels[o]);
              if (
                (this.drawXAxisLabelAndGroup(
                  !0,
                  l,
                  s,
                  a,
                  t.globals.isXNumeric,
                  function (S, A) {
                    return A;
                  },
                ),
                t.globals.hasXaxisGroups)
              ) {
                var h = t.globals.groups;
                a = [];
                for (var d = 0; d < h.length; d++) a.push(h[d].title);
                var p = {};
                t.config.xaxis.group.style &&
                  ((p.xaxisFontSize = t.config.xaxis.group.style.fontSize),
                  (p.xaxisFontFamily = t.config.xaxis.group.style.fontFamily),
                  (p.xaxisForeColors = t.config.xaxis.group.style.colors),
                  (p.fontWeight = t.config.xaxis.group.style.fontWeight),
                  (p.cssClass = t.config.xaxis.group.style.cssClass)),
                  this.drawXAxisLabelAndGroup(
                    !1,
                    l,
                    s,
                    a,
                    !1,
                    function (S, A) {
                      return h[S].cols * A;
                    },
                    p,
                  );
              }
              if (t.config.xaxis.title.text !== void 0) {
                var m = l.group({ class: "apexcharts-xaxis-title" }),
                  x = l.drawText({
                    x: t.globals.gridWidth / 2 + t.config.xaxis.title.offsetX,
                    y:
                      this.offY +
                      parseFloat(this.xaxisFontSize) +
                      (t.config.xaxis.position === "bottom"
                        ? t.globals.xAxisLabelsHeight
                        : -t.globals.xAxisLabelsHeight - 10) +
                      t.config.xaxis.title.offsetY,
                    text: t.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: t.config.xaxis.title.style.fontSize,
                    fontFamily: t.config.xaxis.title.style.fontFamily,
                    fontWeight: t.config.xaxis.title.style.fontWeight,
                    foreColor: t.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      t.config.xaxis.title.style.cssClass,
                  });
                m.add(x), r.add(m);
              }
              if (t.config.xaxis.axisBorder.show) {
                var v = t.globals.barPadForNumericAxis,
                  w = l.drawLine(
                    t.globals.padHorizontal +
                      t.config.xaxis.axisBorder.offsetX -
                      v,
                    this.offY,
                    this.xaxisBorderWidth + v,
                    this.offY,
                    t.config.xaxis.axisBorder.color,
                    0,
                    this.xaxisBorderHeight,
                  );
                this.elgrid && this.elgrid.elGridBorders && t.config.grid.show
                  ? this.elgrid.elGridBorders.add(w)
                  : r.add(w);
              }
              return r;
            },
          },
          {
            key: "drawXAxisLabelAndGroup",
            value: function (t, l, r, s, a, o) {
              var h,
                d = this,
                p =
                  arguments.length > 6 && arguments[6] !== void 0
                    ? arguments[6]
                    : {},
                m = [],
                x = [],
                v = this.w,
                w = p.xaxisFontSize || this.xaxisFontSize,
                S = p.xaxisFontFamily || this.xaxisFontFamily,
                A = p.xaxisForeColors || this.xaxisForeColors,
                P = p.fontWeight || v.config.xaxis.labels.style.fontWeight,
                R = p.cssClass || v.config.xaxis.labels.style.cssClass,
                O = v.globals.padHorizontal,
                f = s.length,
                y =
                  v.config.xaxis.type === "category" ? v.globals.dataPoints : f;
              if ((y === 0 && f > y && (y = f), a)) {
                var C = y > 1 ? y - 1 : y;
                (h = v.globals.gridWidth / C),
                  (O = O + o(0, h) / 2 + v.config.xaxis.labels.offsetX);
              } else
                (h = v.globals.gridWidth / y),
                  (O = O + o(0, h) + v.config.xaxis.labels.offsetX);
              for (
                var M = function (D) {
                    var U = O - o(D, h) / 2 + v.config.xaxis.labels.offsetX;
                    D === 0 &&
                      f === 1 &&
                      h / 2 === O &&
                      y === 1 &&
                      (U = v.globals.gridWidth / 2);
                    var $ = d.axesUtils.getLabel(
                        s,
                        v.globals.timescaleLabels,
                        U,
                        D,
                        m,
                        w,
                        t,
                      ),
                      le = 28;
                    if (
                      (v.globals.rotateXLabels && t && (le = 22),
                      v.config.xaxis.title.text &&
                        v.config.xaxis.position === "top" &&
                        (le +=
                          parseFloat(v.config.xaxis.title.style.fontSize) + 2),
                      t ||
                        (le =
                          le +
                          parseFloat(w) +
                          (v.globals.xAxisLabelsHeight -
                            v.globals.xAxisGroupLabelsHeight) +
                          (v.globals.rotateXLabels ? 10 : 0)),
                      ($ =
                        v.config.xaxis.tickAmount !== void 0 &&
                        v.config.xaxis.tickAmount !== "dataPoints" &&
                        v.config.xaxis.type !== "datetime"
                          ? d.axesUtils.checkLabelBasedOnTickamount(D, $, f)
                          : d.axesUtils.checkForOverflowingLabels(
                              D,
                              $,
                              f,
                              m,
                              x,
                            )),
                      v.config.xaxis.labels.show)
                    ) {
                      var ne = l.drawText({
                        x: $.x,
                        y:
                          d.offY +
                          v.config.xaxis.labels.offsetY +
                          le -
                          (v.config.xaxis.position === "top"
                            ? v.globals.xAxisHeight +
                              v.config.xaxis.axisTicks.height -
                              2
                            : 0),
                        text: $.text,
                        textAnchor: "middle",
                        fontWeight: $.isBold ? 600 : P,
                        fontSize: w,
                        fontFamily: S,
                        foreColor: Array.isArray(A)
                          ? t && v.config.xaxis.convertedCatToNumeric
                            ? A[v.globals.minX + D - 1]
                            : A[D]
                          : A,
                        isPlainText: !1,
                        cssClass:
                          (t
                            ? "apexcharts-xaxis-label "
                            : "apexcharts-xaxis-group-label ") + R,
                      });
                      if (
                        (r.add(ne),
                        ne.on("click", function (he) {
                          if (
                            typeof v.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var ye = Object.assign({}, v, { labelIndex: D });
                            v.config.chart.events.xAxisLabelClick(
                              he,
                              d.ctx,
                              ye,
                            );
                          }
                        }),
                        t)
                      ) {
                        var se = document.createElementNS(
                          v.globals.SVGNS,
                          "title",
                        );
                        (se.textContent = Array.isArray($.text)
                          ? $.text.join(" ")
                          : $.text),
                          ne.node.appendChild(se),
                          $.text !== "" && (m.push($.text), x.push($));
                      }
                    }
                    D < f - 1 && (O += o(D + 1, h));
                  },
                  z = 0;
                z <= f - 1;
                z++
              )
                M(z);
            },
          },
          {
            key: "drawXaxisInversed",
            value: function (t) {
              var l,
                r,
                s = this,
                a = this.w,
                o = new Z(this.ctx),
                h = a.config.yaxis[0].opposite
                  ? a.globals.translateYAxisX[t]
                  : 0,
                d = o.group({
                  class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                  rel: t,
                }),
                p = o.group({
                  class:
                    "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                  transform: "translate(" + h + ", 0)",
                });
              d.add(p);
              var m = [];
              if (a.config.yaxis[t].show)
                for (var x = 0; x < this.xaxisLabels.length; x++)
                  m.push(this.xaxisLabels[x]);
              (l = a.globals.gridHeight / m.length), (r = -l / 2.2);
              var v = a.globals.yLabelFormatters[0],
                w = a.config.yaxis[0].labels;
              if (w.show)
                for (
                  var S = function (C) {
                      var M = m[C] === void 0 ? "" : m[C];
                      M = v(M, { seriesIndex: t, dataPointIndex: C, w: a });
                      var z = s.axesUtils.getYAxisForeColor(w.style.colors, t),
                        D = 0;
                      Array.isArray(M) &&
                        (D = (M.length / 2) * parseInt(w.style.fontSize, 10));
                      var U = w.offsetX - 15,
                        $ = "end";
                      s.yaxis.opposite && ($ = "start"),
                        a.config.yaxis[0].labels.align === "left"
                          ? ((U = w.offsetX), ($ = "start"))
                          : a.config.yaxis[0].labels.align === "center"
                            ? ((U = w.offsetX), ($ = "middle"))
                            : a.config.yaxis[0].labels.align === "right" &&
                              ($ = "end");
                      var le = o.drawText({
                        x: U,
                        y: r + l + w.offsetY - D,
                        text: M,
                        textAnchor: $,
                        foreColor: Array.isArray(z) ? z[C] : z,
                        fontSize: w.style.fontSize,
                        fontFamily: w.style.fontFamily,
                        fontWeight: w.style.fontWeight,
                        isPlainText: !1,
                        cssClass: "apexcharts-yaxis-label " + w.style.cssClass,
                        maxWidth: w.maxWidth,
                      });
                      p.add(le),
                        le.on("click", function (he) {
                          if (
                            typeof a.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var ye = Object.assign({}, a, { labelIndex: C });
                            a.config.chart.events.xAxisLabelClick(
                              he,
                              s.ctx,
                              ye,
                            );
                          }
                        });
                      var ne = document.createElementNS(
                        a.globals.SVGNS,
                        "title",
                      );
                      if (
                        ((ne.textContent = Array.isArray(M) ? M.join(" ") : M),
                        le.node.appendChild(ne),
                        a.config.yaxis[t].labels.rotate !== 0)
                      ) {
                        var se = o.rotateAroundCenter(le.node);
                        le.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(a.config.yaxis[t].labels.rotate, " 0 ")
                            .concat(se.y, ")"),
                        );
                      }
                      r += l;
                    },
                    A = 0;
                  A <= m.length - 1;
                  A++
                )
                  S(A);
              if (a.config.yaxis[0].title.text !== void 0) {
                var P = o.group({
                    class:
                      "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                    transform: "translate(" + h + ", 0)",
                  }),
                  R = o.drawText({
                    x: a.config.yaxis[0].title.offsetX,
                    y:
                      a.globals.gridHeight / 2 +
                      a.config.yaxis[0].title.offsetY,
                    text: a.config.yaxis[0].title.text,
                    textAnchor: "middle",
                    foreColor: a.config.yaxis[0].title.style.color,
                    fontSize: a.config.yaxis[0].title.style.fontSize,
                    fontWeight: a.config.yaxis[0].title.style.fontWeight,
                    fontFamily: a.config.yaxis[0].title.style.fontFamily,
                    cssClass:
                      "apexcharts-yaxis-title-text " +
                      a.config.yaxis[0].title.style.cssClass,
                  });
                P.add(R), d.add(P);
              }
              var O = 0;
              this.isCategoryBarHorizontal &&
                a.config.yaxis[0].opposite &&
                (O = a.globals.gridWidth);
              var f = a.config.xaxis.axisBorder;
              if (f.show) {
                var y = o.drawLine(
                  a.globals.padHorizontal + f.offsetX + O,
                  1 + f.offsetY,
                  a.globals.padHorizontal + f.offsetX + O,
                  a.globals.gridHeight + f.offsetY,
                  f.color,
                  0,
                );
                this.elgrid && this.elgrid.elGridBorders && a.config.grid.show
                  ? this.elgrid.elGridBorders.add(y)
                  : d.add(y);
              }
              return (
                a.config.yaxis[0].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    O,
                    m.length,
                    a.config.yaxis[0].axisBorder,
                    a.config.yaxis[0].axisTicks,
                    0,
                    l,
                    d,
                  ),
                d
              );
            },
          },
          {
            key: "drawXaxisTicks",
            value: function (t, l, r) {
              var s = this.w,
                a = t;
              if (!(t < 0 || t - 2 > s.globals.gridWidth)) {
                var o = this.offY + s.config.xaxis.axisTicks.offsetY;
                if (
                  ((l = l + o + s.config.xaxis.axisTicks.height),
                  s.config.xaxis.position === "top" &&
                    (l = o - s.config.xaxis.axisTicks.height),
                  s.config.xaxis.axisTicks.show)
                ) {
                  var h = new Z(this.ctx).drawLine(
                    t + s.config.xaxis.axisTicks.offsetX,
                    o + s.config.xaxis.offsetY,
                    a + s.config.xaxis.axisTicks.offsetX,
                    l + s.config.xaxis.offsetY,
                    s.config.xaxis.axisTicks.color,
                  );
                  r.add(h), h.node.classList.add("apexcharts-xaxis-tick");
                }
              }
            },
          },
          {
            key: "getXAxisTicksPositions",
            value: function () {
              var t = this.w,
                l = [],
                r = this.xaxisLabels.length,
                s = t.globals.padHorizontal;
              if (t.globals.timescaleLabels.length > 0)
                for (var a = 0; a < r; a++)
                  (s = this.xaxisLabels[a].position), l.push(s);
              else
                for (var o = r, h = 0; h < o; h++) {
                  var d = o;
                  t.globals.isXNumeric &&
                    t.config.chart.type !== "bar" &&
                    (d -= 1),
                    (s += t.globals.gridWidth / d),
                    l.push(s);
                }
              return l;
            },
          },
          {
            key: "xAxisLabelCorrections",
            value: function () {
              var t = this.w,
                l = new Z(this.ctx),
                r = t.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g",
                ),
                s = t.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)",
                ),
                a = t.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-inversed text",
                ),
                o = t.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-inversed-texts-g text tspan",
                );
              if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways)
                for (var h = 0; h < s.length; h++) {
                  var d = l.rotateAroundCenter(s[h]);
                  (d.y = d.y - 1),
                    (d.x = d.x + 1),
                    s[h].setAttribute(
                      "transform",
                      "rotate("
                        .concat(t.config.xaxis.labels.rotate, " ")
                        .concat(d.x, " ")
                        .concat(d.y, ")"),
                    ),
                    s[h].setAttribute("text-anchor", "end"),
                    r.setAttribute(
                      "transform",
                      "translate(0, ".concat(-10, ")"),
                    );
                  var p = s[h].childNodes;
                  t.config.xaxis.labels.trim &&
                    Array.prototype.forEach.call(p, function (w) {
                      l.placeTextWithEllipsis(
                        w,
                        w.textContent,
                        t.globals.xAxisLabelsHeight -
                          (t.config.legend.position === "bottom" ? 20 : 10),
                      );
                    });
                }
              else
                (function () {
                  for (
                    var w = t.globals.gridWidth / (t.globals.labels.length + 1),
                      S = 0;
                    S < s.length;
                    S++
                  ) {
                    var A = s[S].childNodes;
                    t.config.xaxis.labels.trim &&
                      t.config.xaxis.type !== "datetime" &&
                      Array.prototype.forEach.call(A, function (P) {
                        l.placeTextWithEllipsis(P, P.textContent, w);
                      });
                  }
                })();
              if (a.length > 0) {
                var m = a[a.length - 1].getBBox(),
                  x = a[0].getBBox();
                m.x < -20 &&
                  a[a.length - 1].parentNode.removeChild(a[a.length - 1]),
                  x.x + x.width > t.globals.gridWidth &&
                    !t.globals.isBarHorizontal &&
                    a[0].parentNode.removeChild(a[0]);
                for (var v = 0; v < o.length; v++)
                  l.placeTextWithEllipsis(
                    o[v],
                    o[v].textContent,
                    t.config.yaxis[0].labels.maxWidth -
                      (t.config.yaxis[0].title.text
                        ? 2 * parseFloat(t.config.yaxis[0].title.style.fontSize)
                        : 0) -
                      15,
                  );
              }
            },
          },
        ]),
        T
      );
    })(),
    V = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
        var l = this.w;
        (this.xaxisLabels = l.globals.labels.slice()),
          (this.axesUtils = new mt(t)),
          (this.isRangeBar = l.globals.seriesRange.length),
          l.globals.timescaleLabels.length > 0 &&
            (this.xaxisLabels = l.globals.timescaleLabels.slice());
      }
      return (
        k(T, [
          {
            key: "drawGridArea",
            value: function () {
              var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null,
                l = this.w,
                r = new Z(this.ctx);
              t === null && (t = r.group({ class: "apexcharts-grid" }));
              var s = r.drawLine(
                  l.globals.padHorizontal,
                  1,
                  l.globals.padHorizontal,
                  l.globals.gridHeight,
                  "transparent",
                ),
                a = r.drawLine(
                  l.globals.padHorizontal,
                  l.globals.gridHeight,
                  l.globals.gridWidth,
                  l.globals.gridHeight,
                  "transparent",
                );
              return t.add(a), t.add(s), t;
            },
          },
          {
            key: "drawGrid",
            value: function () {
              var t = null;
              return (
                this.w.globals.axisCharts &&
                  ((t = this.renderGrid()), this.drawGridArea(t.el)),
                t
              );
            },
          },
          {
            key: "createGridMask",
            value: function () {
              var t = this.w,
                l = t.globals,
                r = new Z(this.ctx),
                s = Array.isArray(t.config.stroke.width)
                  ? 0
                  : t.config.stroke.width;
              if (Array.isArray(t.config.stroke.width)) {
                var a = 0;
                t.config.stroke.width.forEach(function (x) {
                  a = Math.max(a, x);
                }),
                  (s = a);
              }
              (l.dom.elGridRectMask = document.createElementNS(
                l.SVGNS,
                "clipPath",
              )),
                l.dom.elGridRectMask.setAttribute(
                  "id",
                  "gridRectMask".concat(l.cuid),
                ),
                (l.dom.elGridRectMarkerMask = document.createElementNS(
                  l.SVGNS,
                  "clipPath",
                )),
                l.dom.elGridRectMarkerMask.setAttribute(
                  "id",
                  "gridRectMarkerMask".concat(l.cuid),
                ),
                (l.dom.elForecastMask = document.createElementNS(
                  l.SVGNS,
                  "clipPath",
                )),
                l.dom.elForecastMask.setAttribute(
                  "id",
                  "forecastMask".concat(l.cuid),
                ),
                (l.dom.elNonForecastMask = document.createElementNS(
                  l.SVGNS,
                  "clipPath",
                )),
                l.dom.elNonForecastMask.setAttribute(
                  "id",
                  "nonForecastMask".concat(l.cuid),
                );
              var o = t.config.chart.type,
                h = 0,
                d = 0;
              (o === "bar" ||
                o === "rangeBar" ||
                o === "candlestick" ||
                o === "boxPlot" ||
                t.globals.comboBarCount > 0) &&
                t.globals.isXNumeric &&
                !t.globals.isBarHorizontal &&
                ((h = t.config.grid.padding.left),
                (d = t.config.grid.padding.right),
                l.barPadForNumericAxis > h &&
                  ((h = l.barPadForNumericAxis), (d = l.barPadForNumericAxis))),
                (l.dom.elGridRect = r.drawRect(
                  -s / 2 - h - 2,
                  -s / 2,
                  l.gridWidth + s + d + h + 4,
                  l.gridHeight + s,
                  0,
                  "#fff",
                ));
              var p = t.globals.markers.largestSize + 1;
              (l.dom.elGridRectMarker = r.drawRect(
                2 * -p,
                2 * -p,
                l.gridWidth + 4 * p,
                l.gridHeight + 4 * p,
                0,
                "#fff",
              )),
                l.dom.elGridRectMask.appendChild(l.dom.elGridRect.node),
                l.dom.elGridRectMarkerMask.appendChild(
                  l.dom.elGridRectMarker.node,
                );
              var m = l.dom.baseEl.querySelector("defs");
              m.appendChild(l.dom.elGridRectMask),
                m.appendChild(l.dom.elForecastMask),
                m.appendChild(l.dom.elNonForecastMask),
                m.appendChild(l.dom.elGridRectMarkerMask);
            },
          },
          {
            key: "_drawGridLines",
            value: function (t) {
              var l = t.i,
                r = t.x1,
                s = t.y1,
                a = t.x2,
                o = t.y2,
                h = t.xCount,
                d = t.parent,
                p = this.w;
              if (
                !(
                  (l === 0 && p.globals.skipFirstTimelinelabel) ||
                  (l === h - 1 &&
                    p.globals.skipLastTimelinelabel &&
                    !p.config.xaxis.labels.formatter) ||
                  p.config.chart.type === "radar"
                )
              ) {
                p.config.grid.xaxis.lines.show &&
                  this._drawGridLine({
                    i: l,
                    x1: r,
                    y1: s,
                    x2: a,
                    y2: o,
                    xCount: h,
                    parent: d,
                  });
                var m = 0;
                if (
                  p.globals.hasXaxisGroups &&
                  p.config.xaxis.tickPlacement === "between"
                ) {
                  var x = p.globals.groups;
                  if (x) {
                    for (var v = 0, w = 0; v < l && w < x.length; w++)
                      v += x[w].cols;
                    v === l && (m = 0.6 * p.globals.xAxisLabelsHeight);
                  }
                }
                new X(this.ctx).drawXaxisTicks(r, m, p.globals.dom.elGraphical);
              }
            },
          },
          {
            key: "_drawGridLine",
            value: function (t) {
              var l = t.i,
                r = t.x1,
                s = t.y1,
                a = t.x2,
                o = t.y2,
                h = t.xCount,
                d = t.parent,
                p = this.w,
                m = !1,
                x = d.node.classList.contains(
                  "apexcharts-gridlines-horizontal",
                ),
                v = p.config.grid.strokeDashArray,
                w = p.globals.barPadForNumericAxis;
              ((s === 0 && o === 0) || (r === 0 && a === 0)) && (m = !0),
                s === p.globals.gridHeight &&
                  o === p.globals.gridHeight &&
                  (m = !0),
                !p.globals.isBarHorizontal ||
                  (l !== 0 && l !== h - 1) ||
                  (m = !0);
              var S = new Z(this).drawLine(
                r - (x ? w : 0),
                s,
                a + (x ? w : 0),
                o,
                p.config.grid.borderColor,
                v,
              );
              S.node.classList.add("apexcharts-gridline"),
                m && p.config.grid.show ? this.elGridBorders.add(S) : d.add(S);
            },
          },
          {
            key: "_drawGridBandRect",
            value: function (t) {
              var l = t.c,
                r = t.x1,
                s = t.y1,
                a = t.x2,
                o = t.y2,
                h = t.type,
                d = this.w,
                p = new Z(this.ctx),
                m = d.globals.barPadForNumericAxis;
              if (h !== "column" || d.config.xaxis.type !== "datetime") {
                var x = d.config.grid[h].colors[l],
                  v = p.drawRect(
                    r - (h === "row" ? m : 0),
                    s,
                    a + (h === "row" ? 2 * m : 0),
                    o,
                    0,
                    x,
                    d.config.grid[h].opacity,
                  );
                this.elg.add(v),
                  v.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(d.globals.cuid, ")"),
                  ),
                  v.node.classList.add("apexcharts-grid-".concat(h));
              }
            },
          },
          {
            key: "_drawXYLines",
            value: function (t) {
              var l = this,
                r = t.xCount,
                s = t.tickAmount,
                a = this.w;
              if (
                a.config.grid.xaxis.lines.show ||
                a.config.xaxis.axisTicks.show
              ) {
                var o,
                  h = a.globals.padHorizontal,
                  d = a.globals.gridHeight;
                a.globals.timescaleLabels.length
                  ? (function (S) {
                      for (
                        var A = S.xC,
                          P = S.x1,
                          R = S.y1,
                          O = S.x2,
                          f = S.y2,
                          y = 0;
                        y < A;
                        y++
                      )
                        (P = l.xaxisLabels[y].position),
                          (O = l.xaxisLabels[y].position),
                          l._drawGridLines({
                            i: y,
                            x1: P,
                            y1: R,
                            x2: O,
                            y2: f,
                            xCount: r,
                            parent: l.elgridLinesV,
                          });
                    })({ xC: r, x1: h, y1: 0, x2: o, y2: d })
                  : (a.globals.isXNumeric &&
                      (r = a.globals.xAxisScale.result.length),
                    (function (S) {
                      for (
                        var A = S.xC,
                          P = S.x1,
                          R = S.y1,
                          O = S.x2,
                          f = S.y2,
                          y = 0;
                        y < A + (a.globals.isXNumeric ? 0 : 1);
                        y++
                      )
                        y === 0 &&
                          A === 1 &&
                          a.globals.dataPoints === 1 &&
                          (O = P = a.globals.gridWidth / 2),
                          l._drawGridLines({
                            i: y,
                            x1: P,
                            y1: R,
                            x2: O,
                            y2: f,
                            xCount: r,
                            parent: l.elgridLinesV,
                          }),
                          (O = P +=
                            a.globals.gridWidth /
                            (a.globals.isXNumeric ? A - 1 : A));
                    })({ xC: r, x1: h, y1: 0, x2: o, y2: d }));
              }
              if (a.config.grid.yaxis.lines.show) {
                var p = 0,
                  m = 0,
                  x = a.globals.gridWidth,
                  v = s + 1;
                this.isRangeBar && (v = a.globals.labels.length);
                for (var w = 0; w < v + (this.isRangeBar ? 1 : 0); w++)
                  this._drawGridLine({
                    i: w,
                    xCount: v + (this.isRangeBar ? 1 : 0),
                    x1: 0,
                    y1: p,
                    x2: x,
                    y2: m,
                    parent: this.elgridLinesH,
                  }),
                    (m = p += a.globals.gridHeight / (this.isRangeBar ? v : s));
              }
            },
          },
          {
            key: "_drawInvertedXYLines",
            value: function (t) {
              var l = t.xCount,
                r = this.w;
              if (
                r.config.grid.xaxis.lines.show ||
                r.config.xaxis.axisTicks.show
              )
                for (
                  var s,
                    a = r.globals.padHorizontal,
                    o = r.globals.gridHeight,
                    h = 0;
                  h < l + 1;
                  h++
                )
                  r.config.grid.xaxis.lines.show &&
                    this._drawGridLine({
                      i: h,
                      xCount: l + 1,
                      x1: a,
                      y1: 0,
                      x2: s,
                      y2: o,
                      parent: this.elgridLinesV,
                    }),
                    new X(this.ctx).drawXaxisTicks(
                      a,
                      0,
                      r.globals.dom.elGraphical,
                    ),
                    (s = a = a + r.globals.gridWidth / l + 0.3);
              if (r.config.grid.yaxis.lines.show)
                for (
                  var d = 0, p = 0, m = r.globals.gridWidth, x = 0;
                  x < r.globals.dataPoints + 1;
                  x++
                )
                  this._drawGridLine({
                    i: x,
                    xCount: r.globals.dataPoints + 1,
                    x1: 0,
                    y1: d,
                    x2: m,
                    y2: p,
                    parent: this.elgridLinesH,
                  }),
                    (p = d += r.globals.gridHeight / r.globals.dataPoints);
            },
          },
          {
            key: "renderGrid",
            value: function () {
              var t = this.w,
                l = new Z(this.ctx);
              (this.elg = l.group({ class: "apexcharts-grid" })),
                (this.elgridLinesH = l.group({
                  class: "apexcharts-gridlines-horizontal",
                })),
                (this.elgridLinesV = l.group({
                  class: "apexcharts-gridlines-vertical",
                })),
                (this.elGridBorders = l.group({
                  class: "apexcharts-grid-borders",
                })),
                this.elg.add(this.elgridLinesH),
                this.elg.add(this.elgridLinesV),
                t.config.grid.show ||
                  (this.elgridLinesV.hide(),
                  this.elgridLinesH.hide(),
                  this.elGridBorders.hide());
              for (
                var r,
                  s = t.globals.yAxisScale.length
                    ? t.globals.yAxisScale[0].result.length - 1
                    : 5,
                  a = 0;
                a < t.globals.series.length &&
                (t.globals.yAxisScale[a] !== void 0 &&
                  (s = t.globals.yAxisScale[a].result.length - 1),
                !(s > 2));
                a++
              );
              return (
                !t.globals.isBarHorizontal || this.isRangeBar
                  ? ((r = this.xaxisLabels.length),
                    this.isRangeBar &&
                      t.globals.isBarHorizontal &&
                      (r--,
                      (s = t.globals.labels.length),
                      t.config.xaxis.tickAmount &&
                        t.config.xaxis.labels.formatter &&
                        (r = t.config.xaxis.tickAmount)),
                    this._drawXYLines({ xCount: r, tickAmount: s }))
                  : ((r = s),
                    (s = t.globals.xTickAmount),
                    this._drawInvertedXYLines({ xCount: r, tickAmount: s })),
                this.drawGridBands(r, s),
                {
                  el: this.elg,
                  elGridBorders: this.elGridBorders,
                  xAxisTickWidth: t.globals.gridWidth / r,
                }
              );
            },
          },
          {
            key: "drawGridBands",
            value: function (t, l) {
              var r = this.w;
              if (
                r.config.grid.row.colors !== void 0 &&
                r.config.grid.row.colors.length > 0
              )
                for (
                  var s = 0,
                    a = r.globals.gridHeight / l,
                    o = r.globals.gridWidth,
                    h = 0,
                    d = 0;
                  h < l;
                  h++, d++
                )
                  d >= r.config.grid.row.colors.length && (d = 0),
                    this._drawGridBandRect({
                      c: d,
                      x1: 0,
                      y1: s,
                      x2: o,
                      y2: a,
                      type: "row",
                    }),
                    (s += r.globals.gridHeight / l);
              if (
                r.config.grid.column.colors !== void 0 &&
                r.config.grid.column.colors.length > 0
              )
                for (
                  var p =
                      r.globals.isBarHorizontal ||
                      (r.config.xaxis.type !== "category" &&
                        !r.config.xaxis.convertedCatToNumeric)
                        ? t
                        : t - 1,
                    m = r.globals.padHorizontal,
                    x = r.globals.padHorizontal + r.globals.gridWidth / p,
                    v = r.globals.gridHeight,
                    w = 0,
                    S = 0;
                  w < t;
                  w++, S++
                )
                  S >= r.config.grid.column.colors.length && (S = 0),
                    this._drawGridBandRect({
                      c: S,
                      x1: m,
                      y1: 0,
                      x2: x,
                      y2: v,
                      type: "column",
                    }),
                    (m += r.globals.gridWidth / p);
            },
          },
        ]),
        T
      );
    })(),
    N = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "niceScale",
            value: function (t, l) {
              var r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 0,
                a = arguments.length > 4 ? arguments[4] : void 0,
                o = this.w,
                h = Math.abs(l - t);
              if (
                ((r = this._adjustTicksForSmallRange(r, s, h)) ===
                  "dataPoints" && (r = o.globals.dataPoints - 1),
                (t === Number.MIN_VALUE && l === 0) ||
                  (!L.isNumber(t) && !L.isNumber(l)) ||
                  (t === Number.MIN_VALUE && l === -Number.MAX_VALUE))
              )
                return (t = 0), (l = r), this.linearScale(t, l, r);
              t > l
                ? (console.warn("axis.min cannot be greater than axis.max"),
                  (l = t + 0.1))
                : t === l &&
                  ((t = t === 0 ? 0 : t - 0.5), (l = l === 0 ? 2 : l + 0.5));
              var d = [];
              h < 1 &&
                a &&
                (o.config.chart.type === "candlestick" ||
                  o.config.series[s].type === "candlestick" ||
                  o.config.chart.type === "boxPlot" ||
                  o.config.series[s].type === "boxPlot" ||
                  o.globals.isRangeData) &&
                (l *= 1.01);
              var p = r + 1;
              p < 2 ? (p = 2) : p > 2 && (p -= 2);
              var m = h / p,
                x = Math.floor(L.log10(m)),
                v = Math.pow(10, x),
                w = Math.round(m / v);
              w < 1 && (w = 1);
              var S = w * v,
                A = S * Math.floor(t / S),
                P = S * Math.ceil(l / S),
                R = A;
              if (a && h > 2) {
                for (; d.push(R), !((R += S) > P); );
                return { result: d, niceMin: d[0], niceMax: d[d.length - 1] };
              }
              var O = t;
              (d = []).push(O);
              for (var f = Math.abs(l - t) / r, y = 0; y <= r; y++)
                (O += f), d.push(O);
              return (
                d[d.length - 2] >= l && d.pop(),
                { result: d, niceMin: d[0], niceMax: d[d.length - 1] }
              );
            },
          },
          {
            key: "linearScale",
            value: function (t, l) {
              var r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                s = arguments.length > 3 ? arguments[3] : void 0,
                a = Math.abs(l - t);
              (r = this._adjustTicksForSmallRange(r, s, a)) === "dataPoints" &&
                (r = this.w.globals.dataPoints - 1);
              var o = a / r;
              r === Number.MAX_VALUE && ((r = 10), (o = 1));
              for (var h = [], d = t; r >= 0; ) h.push(d), (d += o), (r -= 1);
              return { result: h, niceMin: h[0], niceMax: h[h.length - 1] };
            },
          },
          {
            key: "logarithmicScaleNice",
            value: function (t, l, r) {
              l <= 0 && (l = Math.max(t, r)), t <= 0 && (t = Math.min(l, r));
              for (
                var s = [],
                  a = Math.ceil(Math.log(l) / Math.log(r) + 1),
                  o = Math.floor(Math.log(t) / Math.log(r));
                o < a;
                o++
              )
                s.push(Math.pow(r, o));
              return { result: s, niceMin: s[0], niceMax: s[s.length - 1] };
            },
          },
          {
            key: "logarithmicScale",
            value: function (t, l, r) {
              l <= 0 && (l = Math.max(t, r)), t <= 0 && (t = Math.min(l, r));
              for (
                var s = [],
                  a = Math.log(l) / Math.log(r),
                  o = Math.log(t) / Math.log(r),
                  h = a - o,
                  d = Math.round(h),
                  p = h / d,
                  m = 0,
                  x = o;
                m < d;
                m++, x += p
              )
                s.push(Math.pow(r, x));
              return (
                s.push(Math.pow(r, a)), { result: s, niceMin: t, niceMax: l }
              );
            },
          },
          {
            key: "_adjustTicksForSmallRange",
            value: function (t, l, r) {
              var s = t;
              if (
                l !== void 0 &&
                this.w.config.yaxis[l].labels.formatter &&
                this.w.config.yaxis[l].tickAmount === void 0
              ) {
                var a = Number(this.w.config.yaxis[l].labels.formatter(1));
                L.isNumber(a) &&
                  this.w.globals.yValueDecimal === 0 &&
                  (s = Math.ceil(r));
              }
              return s < t ? s : t;
            },
          },
          {
            key: "setYScaleForIndex",
            value: function (t, l, r) {
              var s = this.w.globals,
                a = this.w.config,
                o = s.isBarHorizontal ? a.xaxis : a.yaxis[t];
              s.yAxisScale[t] === void 0 && (s.yAxisScale[t] = []);
              var h = Math.abs(r - l);
              if (
                (o.logarithmic && h <= 5 && (s.invalidLogScale = !0),
                o.logarithmic && h > 5)
              )
                (s.allSeriesCollapsed = !1),
                  (s.yAxisScale[t] = this.logarithmicScale(l, r, o.logBase)),
                  (s.yAxisScale[t] = o.forceNiceScale
                    ? this.logarithmicScaleNice(l, r, o.logBase)
                    : this.logarithmicScale(l, r, o.logBase));
              else if (r !== -Number.MAX_VALUE && L.isNumber(r))
                if (
                  ((s.allSeriesCollapsed = !1),
                  (o.min === void 0 && o.max === void 0) || o.forceNiceScale)
                ) {
                  var d =
                    (a.yaxis[t].max === void 0 && a.yaxis[t].min === void 0) ||
                    a.yaxis[t].forceNiceScale;
                  s.yAxisScale[t] = this.niceScale(
                    l,
                    r,
                    o.tickAmount ? o.tickAmount : h < 5 && h > 1 ? h + 1 : 5,
                    t,
                    d,
                  );
                } else
                  s.yAxisScale[t] = this.linearScale(l, r, o.tickAmount, t);
              else s.yAxisScale[t] = this.linearScale(0, 5, 5);
            },
          },
          {
            key: "setXScale",
            value: function (t, l) {
              var r = this.w,
                s = r.globals,
                a = r.config.xaxis,
                o = Math.abs(l - t);
              return (
                l !== -Number.MAX_VALUE && L.isNumber(l)
                  ? (s.xAxisScale = this.linearScale(
                      t,
                      l,
                      a.tickAmount ? a.tickAmount : o < 5 && o > 1 ? o + 1 : 5,
                      0,
                    ))
                  : (s.xAxisScale = this.linearScale(0, 5, 5)),
                s.xAxisScale
              );
            },
          },
          {
            key: "setMultipleYScales",
            value: function () {
              var t = this,
                l = this.w.globals,
                r = this.w.config,
                s = l.minYArr.concat([]),
                a = l.maxYArr.concat([]),
                o = [];
              r.yaxis.forEach(function (h, d) {
                var p = d;
                r.series.forEach(function (v, w) {
                  v.name === h.seriesName &&
                    ((p = w),
                    d !== w
                      ? o.push({ index: w, similarIndex: d, alreadyExists: !0 })
                      : o.push({ index: w }));
                });
                var m = s[p],
                  x = a[p];
                t.setYScaleForIndex(d, m, x);
              }),
                this.sameScaleInMultipleAxes(s, a, o);
            },
          },
          {
            key: "sameScaleInMultipleAxes",
            value: function (t, l, r) {
              var s = this,
                a = this.w.config,
                o = this.w.globals,
                h = [];
              r.forEach(function (A) {
                A.alreadyExists &&
                  (h[A.index] === void 0 && (h[A.index] = []),
                  h[A.index].push(A.index),
                  h[A.index].push(A.similarIndex));
              }),
                (o.yAxisSameScaleIndices = h),
                h.forEach(function (A, P) {
                  h.forEach(function (R, O) {
                    var f, y;
                    P !== O &&
                      ((f = A),
                      (y = R),
                      f.filter(function (C) {
                        return y.indexOf(C) !== -1;
                      })).length > 0 &&
                      (h[P] = h[P].concat(h[O]));
                  });
                });
              var d = h
                .map(function (A) {
                  return A.filter(function (P, R) {
                    return A.indexOf(P) === R;
                  });
                })
                .map(function (A) {
                  return A.sort();
                });
              h = h.filter(function (A) {
                return !!A;
              });
              var p = d.slice(),
                m = p.map(function (A) {
                  return JSON.stringify(A);
                });
              p = p.filter(function (A, P) {
                return m.indexOf(JSON.stringify(A)) === P;
              });
              var x = [],
                v = [];
              t.forEach(function (A, P) {
                p.forEach(function (R, O) {
                  R.indexOf(P) > -1 &&
                    (x[O] === void 0 && ((x[O] = []), (v[O] = [])),
                    x[O].push({ key: P, value: A }),
                    v[O].push({ key: P, value: l[P] }));
                });
              });
              var w = Array.apply(null, Array(p.length)).map(
                  Number.prototype.valueOf,
                  Number.MIN_VALUE,
                ),
                S = Array.apply(null, Array(p.length)).map(
                  Number.prototype.valueOf,
                  -Number.MAX_VALUE,
                );
              x.forEach(function (A, P) {
                A.forEach(function (R, O) {
                  w[P] = Math.min(R.value, w[P]);
                });
              }),
                v.forEach(function (A, P) {
                  A.forEach(function (R, O) {
                    S[P] = Math.max(R.value, S[P]);
                  });
                }),
                t.forEach(function (A, P) {
                  v.forEach(function (R, O) {
                    var f = w[O],
                      y = S[O];
                    a.chart.stacked &&
                      ((y = 0),
                      R.forEach(function (C, M) {
                        C.value !== -Number.MAX_VALUE && (y += C.value),
                          f !== Number.MIN_VALUE && (f += x[O][M].value);
                      })),
                      R.forEach(function (C, M) {
                        R[M].key === P &&
                          (a.yaxis[P].min !== void 0 &&
                            (f =
                              typeof a.yaxis[P].min == "function"
                                ? a.yaxis[P].min(o.minY)
                                : a.yaxis[P].min),
                          a.yaxis[P].max !== void 0 &&
                            (y =
                              typeof a.yaxis[P].max == "function"
                                ? a.yaxis[P].max(o.maxY)
                                : a.yaxis[P].max),
                          s.setYScaleForIndex(P, f, y));
                      });
                  });
                });
            },
          },
          {
            key: "autoScaleY",
            value: function (t, l, r) {
              t || (t = this);
              var s = t.w;
              if (s.globals.isMultipleYAxis || s.globals.collapsedSeries.length)
                return (
                  console.warn(
                    "autoScaleYaxis is not supported in a multi-yaxis chart.",
                  ),
                  l
                );
              var a = s.globals.seriesX[0],
                o = s.config.chart.stacked;
              return (
                l.forEach(function (h, d) {
                  for (var p = 0, m = 0; m < a.length; m++)
                    if (a[m] >= r.xaxis.min) {
                      p = m;
                      break;
                    }
                  var x,
                    v,
                    w = s.globals.minYArr[d],
                    S = s.globals.maxYArr[d],
                    A = s.globals.stackedSeriesTotals;
                  s.globals.series.forEach(function (P, R) {
                    var O = P[p];
                    o
                      ? ((O = A[p]),
                        (x = v = O),
                        A.forEach(function (f, y) {
                          a[y] <= r.xaxis.max &&
                            a[y] >= r.xaxis.min &&
                            (f > v && f !== null && (v = f),
                            P[y] < x && P[y] !== null && (x = P[y]));
                        }))
                      : ((x = v = O),
                        P.forEach(function (f, y) {
                          if (a[y] <= r.xaxis.max && a[y] >= r.xaxis.min) {
                            var C = f,
                              M = f;
                            s.globals.series.forEach(function (z, D) {
                              f !== null &&
                                ((C = Math.min(z[y], C)),
                                (M = Math.max(z[y], M)));
                            }),
                              M > v && M !== null && (v = M),
                              C < x && C !== null && (x = C);
                          }
                        })),
                      x === void 0 && v === void 0 && ((x = w), (v = S)),
                      (v *= v < 0 ? 0.9 : 1.1),
                      (x *= x < 0 ? 1.1 : 0.9) === 0 &&
                        v === 0 &&
                        ((x = -1), (v = 1)),
                      v < 0 && v < S && (v = S),
                      x < 0 && x > w && (x = w),
                      l.length > 1
                        ? ((l[R].min = h.min === void 0 ? x : h.min),
                          (l[R].max = h.max === void 0 ? v : h.max))
                        : ((l[0].min = h.min === void 0 ? x : h.min),
                          (l[0].max = h.max === void 0 ? v : h.max));
                  });
                }),
                l
              );
            },
          },
        ]),
        T
      );
    })(),
    j = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w), (this.scales = new N(t));
      }
      return (
        k(T, [
          {
            key: "init",
            value: function () {
              this.setYRange(), this.setXRange(), this.setZRange();
            },
          },
          {
            key: "getMinYMaxY",
            value: function (t) {
              var l =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : Number.MAX_VALUE,
                r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : -Number.MAX_VALUE,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                a = this.w.config,
                o = this.w.globals,
                h = -Number.MAX_VALUE,
                d = Number.MIN_VALUE;
              s === null && (s = t + 1);
              var p = o.series,
                m = p,
                x = p;
              a.chart.type === "candlestick"
                ? ((m = o.seriesCandleL), (x = o.seriesCandleH))
                : a.chart.type === "boxPlot"
                  ? ((m = o.seriesCandleO), (x = o.seriesCandleC))
                  : o.isRangeData &&
                    ((m = o.seriesRangeStart), (x = o.seriesRangeEnd));
              for (var v = t; v < s; v++) {
                (o.dataPoints = Math.max(o.dataPoints, p[v].length)),
                  o.categoryLabels.length &&
                    (o.dataPoints = o.categoryLabels.filter(function (A) {
                      return A !== void 0;
                    }).length),
                  o.labels.length &&
                    (o.dataPoints = Math.max(o.dataPoints, o.labels.length));
                for (var w = 0; w < o.series[v].length; w++) {
                  var S = p[v][w];
                  S !== null && L.isNumber(S)
                    ? (x[v][w] !== void 0 &&
                        ((h = Math.max(h, x[v][w])),
                        (l = Math.min(l, x[v][w]))),
                      m[v][w] !== void 0 &&
                        ((l = Math.min(l, m[v][w])),
                        (r = Math.max(r, m[v][w]))),
                      (this.w.config.chart.type !== "candlestick" &&
                        this.w.config.chart.type !== "boxPlot" &&
                        this.w.config.chart.type === "rangeArea" &&
                        this.w.config.chart.type === "rangeBar") ||
                        ((this.w.config.chart.type !== "candlestick" &&
                          this.w.config.chart.type !== "boxPlot") ||
                          (o.seriesCandleC[v][w] !== void 0 &&
                            ((h = Math.max(h, o.seriesCandleO[v][w])),
                            (h = Math.max(h, o.seriesCandleH[v][w])),
                            (h = Math.max(h, o.seriesCandleL[v][w])),
                            (h = Math.max(h, o.seriesCandleC[v][w])),
                            this.w.config.chart.type === "boxPlot" &&
                              (h = Math.max(h, o.seriesCandleM[v][w])))),
                        !a.series[v].type ||
                          (a.series[v].type === "candlestick" &&
                            a.series[v].type === "boxPlot" &&
                            a.series[v].type === "rangeArea" &&
                            a.series[v].type === "rangeBar") ||
                          ((h = Math.max(h, o.series[v][w])),
                          (l = Math.min(l, o.series[v][w]))),
                        (r = h)),
                      o.seriesGoals[v] &&
                        o.seriesGoals[v][w] &&
                        Array.isArray(o.seriesGoals[v][w]) &&
                        o.seriesGoals[v][w].forEach(function (A) {
                          d !== Number.MIN_VALUE &&
                            ((d = Math.min(d, A.value)), (l = d)),
                            (h = Math.max(h, A.value)),
                            (r = h);
                        }),
                      L.isFloat(S) &&
                        ((S = L.noExponents(S)),
                        (o.yValueDecimal = Math.max(
                          o.yValueDecimal,
                          S.toString().split(".")[1].length,
                        ))),
                      d > m[v][w] && m[v][w] < 0 && (d = m[v][w]))
                    : (o.hasNullValues = !0);
                }
              }
              return (
                a.chart.type === "rangeBar" &&
                  o.seriesRangeStart.length &&
                  o.isBarHorizontal &&
                  (d = l),
                a.chart.type === "bar" &&
                  (d < 0 && h < 0 && (h = 0),
                  d === Number.MIN_VALUE && (d = 0)),
                { minY: d, maxY: h, lowestY: l, highestY: r }
              );
            },
          },
          {
            key: "setYRange",
            value: function () {
              var t = this.w.globals,
                l = this.w.config;
              (t.maxY = -Number.MAX_VALUE), (t.minY = Number.MIN_VALUE);
              var r = Number.MAX_VALUE;
              if (t.isMultipleYAxis)
                for (var s = 0; s < t.series.length; s++) {
                  var a = this.getMinYMaxY(s, r, null, s + 1);
                  t.minYArr.push(a.minY),
                    t.maxYArr.push(a.maxY),
                    (r = a.lowestY);
                }
              var o = this.getMinYMaxY(0, r, null, t.series.length);
              if (
                ((t.minY = o.minY),
                (t.maxY = o.maxY),
                (r = o.lowestY),
                l.chart.stacked && this._setStackedMinMax(),
                (l.chart.type === "line" ||
                  l.chart.type === "area" ||
                  l.chart.type === "candlestick" ||
                  l.chart.type === "boxPlot" ||
                  (l.chart.type === "rangeBar" && !t.isBarHorizontal)) &&
                  t.minY === Number.MIN_VALUE &&
                  r !== -Number.MAX_VALUE &&
                  r !== t.maxY)
              ) {
                var h = t.maxY - r;
                ((r >= 0 && r <= 10) ||
                  l.yaxis[0].min !== void 0 ||
                  l.yaxis[0].max !== void 0) &&
                  (h = 0),
                  (t.minY = r - (5 * h) / 100),
                  r > 0 && t.minY < 0 && (t.minY = 0),
                  (t.maxY = t.maxY + (5 * h) / 100);
              }
              return (
                l.yaxis.forEach(function (d, p) {
                  d.max !== void 0 &&
                    (typeof d.max == "number"
                      ? (t.maxYArr[p] = d.max)
                      : typeof d.max == "function" &&
                        (t.maxYArr[p] = d.max(
                          t.isMultipleYAxis ? t.maxYArr[p] : t.maxY,
                        )),
                    (t.maxY = t.maxYArr[p])),
                    d.min !== void 0 &&
                      (typeof d.min == "number"
                        ? (t.minYArr[p] = d.min)
                        : typeof d.min == "function" &&
                          (t.minYArr[p] = d.min(
                            t.isMultipleYAxis
                              ? t.minYArr[p] === Number.MIN_VALUE
                                ? 0
                                : t.minYArr[p]
                              : t.minY,
                          )),
                      (t.minY = t.minYArr[p]));
                }),
                t.isBarHorizontal &&
                  ["min", "max"].forEach(function (d) {
                    l.xaxis[d] !== void 0 &&
                      typeof l.xaxis[d] == "number" &&
                      (d === "min"
                        ? (t.minY = l.xaxis[d])
                        : (t.maxY = l.xaxis[d]));
                  }),
                t.isMultipleYAxis
                  ? (this.scales.setMultipleYScales(),
                    (t.minY = r),
                    t.yAxisScale.forEach(function (d, p) {
                      (t.minYArr[p] = d.niceMin), (t.maxYArr[p] = d.niceMax);
                    }))
                  : (this.scales.setYScaleForIndex(0, t.minY, t.maxY),
                    (t.minY = t.yAxisScale[0].niceMin),
                    (t.maxY = t.yAxisScale[0].niceMax),
                    (t.minYArr[0] = t.yAxisScale[0].niceMin),
                    (t.maxYArr[0] = t.yAxisScale[0].niceMax)),
                {
                  minY: t.minY,
                  maxY: t.maxY,
                  minYArr: t.minYArr,
                  maxYArr: t.maxYArr,
                  yAxisScale: t.yAxisScale,
                }
              );
            },
          },
          {
            key: "setXRange",
            value: function () {
              var t = this.w.globals,
                l = this.w.config,
                r =
                  l.xaxis.type === "numeric" ||
                  l.xaxis.type === "datetime" ||
                  (l.xaxis.type === "category" && !t.noLabelsProvided) ||
                  t.noLabelsProvided ||
                  t.isXNumeric;
              if (
                (t.isXNumeric &&
                  (function () {
                    for (var h = 0; h < t.series.length; h++)
                      if (t.labels[h])
                        for (var d = 0; d < t.labels[h].length; d++)
                          t.labels[h][d] !== null &&
                            L.isNumber(t.labels[h][d]) &&
                            ((t.maxX = Math.max(t.maxX, t.labels[h][d])),
                            (t.initialMaxX = Math.max(t.maxX, t.labels[h][d])),
                            (t.minX = Math.min(t.minX, t.labels[h][d])),
                            (t.initialMinX = Math.min(t.minX, t.labels[h][d])));
                  })(),
                t.noLabelsProvided &&
                  l.xaxis.categories.length === 0 &&
                  ((t.maxX = t.labels[t.labels.length - 1]),
                  (t.initialMaxX = t.labels[t.labels.length - 1]),
                  (t.minX = 1),
                  (t.initialMinX = 1)),
                t.isXNumeric || t.noLabelsProvided || t.dataFormatXNumeric)
              ) {
                var s;
                if (
                  (l.xaxis.tickAmount === void 0
                    ? ((s = Math.round(t.svgWidth / 150)),
                      l.xaxis.type === "numeric" &&
                        t.dataPoints < 30 &&
                        (s = t.dataPoints - 1),
                      s > t.dataPoints &&
                        t.dataPoints !== 0 &&
                        (s = t.dataPoints - 1))
                    : l.xaxis.tickAmount === "dataPoints"
                      ? (t.series.length > 1 &&
                          (s = t.series[t.maxValsInArrayIndex].length - 1),
                        t.isXNumeric && (s = t.maxX - t.minX - 1))
                      : (s = l.xaxis.tickAmount),
                  (t.xTickAmount = s),
                  l.xaxis.max !== void 0 &&
                    typeof l.xaxis.max == "number" &&
                    (t.maxX = l.xaxis.max),
                  l.xaxis.min !== void 0 &&
                    typeof l.xaxis.min == "number" &&
                    (t.minX = l.xaxis.min),
                  l.xaxis.range !== void 0 && (t.minX = t.maxX - l.xaxis.range),
                  t.minX !== Number.MAX_VALUE && t.maxX !== -Number.MAX_VALUE)
                )
                  if (l.xaxis.convertedCatToNumeric && !t.dataFormatXNumeric) {
                    for (var a = [], o = t.minX - 1; o < t.maxX; o++)
                      a.push(o + 1);
                    t.xAxisScale = {
                      result: a,
                      niceMin: a[0],
                      niceMax: a[a.length - 1],
                    };
                  } else t.xAxisScale = this.scales.setXScale(t.minX, t.maxX);
                else
                  (t.xAxisScale = this.scales.linearScale(1, s, s)),
                    t.noLabelsProvided &&
                      t.labels.length > 0 &&
                      ((t.xAxisScale = this.scales.linearScale(
                        1,
                        t.labels.length,
                        s - 1,
                      )),
                      (t.seriesX = t.labels.slice()));
                r && (t.labels = t.xAxisScale.result.slice());
              }
              return (
                t.isBarHorizontal &&
                  t.labels.length &&
                  (t.xTickAmount = t.labels.length),
                this._handleSingleDataPoint(),
                this._getMinXDiff(),
                { minX: t.minX, maxX: t.maxX }
              );
            },
          },
          {
            key: "setZRange",
            value: function () {
              var t = this.w.globals;
              if (t.isDataXYZ) {
                for (var l = 0; l < t.series.length; l++)
                  if (t.seriesZ[l] !== void 0)
                    for (var r = 0; r < t.seriesZ[l].length; r++)
                      t.seriesZ[l][r] !== null &&
                        L.isNumber(t.seriesZ[l][r]) &&
                        ((t.maxZ = Math.max(t.maxZ, t.seriesZ[l][r])),
                        (t.minZ = Math.min(t.minZ, t.seriesZ[l][r])));
              }
            },
          },
          {
            key: "_handleSingleDataPoint",
            value: function () {
              var t = this.w.globals,
                l = this.w.config;
              if (t.minX === t.maxX) {
                var r = new Ze(this.ctx);
                if (l.xaxis.type === "datetime") {
                  var s = r.getDate(t.minX);
                  l.xaxis.labels.datetimeUTC
                    ? s.setUTCDate(s.getUTCDate() - 2)
                    : s.setDate(s.getDate() - 2),
                    (t.minX = new Date(s).getTime());
                  var a = r.getDate(t.maxX);
                  l.xaxis.labels.datetimeUTC
                    ? a.setUTCDate(a.getUTCDate() + 2)
                    : a.setDate(a.getDate() + 2),
                    (t.maxX = new Date(a).getTime());
                } else
                  (l.xaxis.type === "numeric" ||
                    (l.xaxis.type === "category" && !t.noLabelsProvided)) &&
                    ((t.minX = t.minX - 2),
                    (t.initialMinX = t.minX),
                    (t.maxX = t.maxX + 2),
                    (t.initialMaxX = t.maxX));
              }
            },
          },
          {
            key: "_getMinXDiff",
            value: function () {
              var t = this.w.globals;
              t.isXNumeric &&
                t.seriesX.forEach(function (l, r) {
                  l.length === 1 &&
                    l.push(
                      t.seriesX[t.maxValsInArrayIndex][
                        t.seriesX[t.maxValsInArrayIndex].length - 1
                      ],
                    );
                  var s = l.slice();
                  s.sort(function (a, o) {
                    return a - o;
                  }),
                    s.forEach(function (a, o) {
                      if (o > 0) {
                        var h = a - s[o - 1];
                        h > 0 && (t.minXDiff = Math.min(h, t.minXDiff));
                      }
                    }),
                    (t.dataPoints !== 1 && t.minXDiff !== Number.MAX_VALUE) ||
                      (t.minXDiff = 0.5);
                });
            },
          },
          {
            key: "_setStackedMinMax",
            value: function () {
              var t = this,
                l = this.w.globals;
              if (l.series.length) {
                var r = l.seriesGroups;
                r.length ||
                  (r = [
                    this.w.config.series.map(function (o) {
                      return o.name;
                    }),
                  ]);
                var s = {},
                  a = {};
                r.forEach(function (o) {
                  (s[o] = []),
                    (a[o] = []),
                    t.w.config.series
                      .map(function (h, d) {
                        return o.indexOf(h.name) > -1 ? d : null;
                      })
                      .filter(function (h) {
                        return h !== null;
                      })
                      .forEach(function (h) {
                        for (
                          var d = 0;
                          d < l.series[l.maxValsInArrayIndex].length;
                          d++
                        )
                          s[o][d] === void 0 && ((s[o][d] = 0), (a[o][d] = 0)),
                            l.series[h][d] !== null &&
                              L.isNumber(l.series[h][d]) &&
                              (l.series[h][d] > 0
                                ? (s[o][d] += parseFloat(l.series[h][d]) + 1e-4)
                                : (a[o][d] += parseFloat(l.series[h][d])));
                      });
                }),
                  Object.entries(s).forEach(function (o) {
                    var h = q(o, 1)[0];
                    s[h].forEach(function (d, p) {
                      (l.maxY = Math.max(l.maxY, s[h][p])),
                        (l.minY = Math.min(l.minY, a[h][p]));
                    });
                  });
              }
            },
          },
        ]),
        T
      );
    })(),
    Y = (function () {
      function T(t, l) {
        g(this, T), (this.ctx = t), (this.elgrid = l), (this.w = t.w);
        var r = this.w;
        (this.xaxisFontSize = r.config.xaxis.labels.style.fontSize),
          (this.axisFontFamily = r.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = r.config.xaxis.labels.style.colors),
          (this.isCategoryBarHorizontal =
            r.config.chart.type === "bar" &&
            r.config.plotOptions.bar.horizontal),
          (this.xAxisoffX = 0),
          r.config.xaxis.position === "bottom" &&
            (this.xAxisoffX = r.globals.gridHeight),
          (this.drawnLabels = []),
          (this.axesUtils = new mt(t));
      }
      return (
        k(T, [
          {
            key: "drawYaxis",
            value: function (t) {
              var l = this,
                r = this.w,
                s = new Z(this.ctx),
                a = r.config.yaxis[t].labels.style,
                o = a.fontSize,
                h = a.fontFamily,
                d = a.fontWeight,
                p = s.group({
                  class: "apexcharts-yaxis",
                  rel: t,
                  transform:
                    "translate(" + r.globals.translateYAxisX[t] + ", 0)",
                });
              if (this.axesUtils.isYAxisHidden(t)) return p;
              var m = s.group({ class: "apexcharts-yaxis-texts-g" });
              p.add(m);
              var x = r.globals.yAxisScale[t].result.length - 1,
                v = r.globals.gridHeight / x,
                w = r.globals.translateY,
                S = r.globals.yLabelFormatters[t],
                A = r.globals.yAxisScale[t].result.slice();
              A = this.axesUtils.checkForReversedLabels(t, A);
              var P = "";
              if (r.config.yaxis[t].labels.show)
                for (
                  var R = function (U) {
                      var $ = A[U];
                      $ = S($, U, r);
                      var le = r.config.yaxis[t].labels.padding;
                      r.config.yaxis[t].opposite &&
                        r.config.yaxis.length !== 0 &&
                        (le *= -1);
                      var ne = "end";
                      r.config.yaxis[t].opposite && (ne = "start"),
                        r.config.yaxis[t].labels.align === "left"
                          ? (ne = "start")
                          : r.config.yaxis[t].labels.align === "center"
                            ? (ne = "middle")
                            : r.config.yaxis[t].labels.align === "right" &&
                              (ne = "end");
                      var se = l.axesUtils.getYAxisForeColor(a.colors, t),
                        he = s.drawText({
                          x: le,
                          y: w + x / 10 + r.config.yaxis[t].labels.offsetY + 1,
                          text: $,
                          textAnchor: ne,
                          fontSize: o,
                          fontFamily: h,
                          fontWeight: d,
                          maxWidth: r.config.yaxis[t].labels.maxWidth,
                          foreColor: Array.isArray(se) ? se[U] : se,
                          isPlainText: !1,
                          cssClass: "apexcharts-yaxis-label " + a.cssClass,
                        });
                      U === x && (P = he), m.add(he);
                      var ye = document.createElementNS(
                        r.globals.SVGNS,
                        "title",
                      );
                      if (
                        ((ye.textContent = Array.isArray($) ? $.join(" ") : $),
                        he.node.appendChild(ye),
                        r.config.yaxis[t].labels.rotate !== 0)
                      ) {
                        var Pe = s.rotateAroundCenter(P.node),
                          Le = s.rotateAroundCenter(he.node);
                        he.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(r.config.yaxis[t].labels.rotate, " ")
                            .concat(Pe.x, " ")
                            .concat(Le.y, ")"),
                        );
                      }
                      w += v;
                    },
                    O = x;
                  O >= 0;
                  O--
                )
                  R(O);
              if (r.config.yaxis[t].title.text !== void 0) {
                var f = s.group({ class: "apexcharts-yaxis-title" }),
                  y = 0;
                r.config.yaxis[t].opposite &&
                  (y = r.globals.translateYAxisX[t]);
                var C = s.drawText({
                  x: y,
                  y:
                    r.globals.gridHeight / 2 +
                    r.globals.translateY +
                    r.config.yaxis[t].title.offsetY,
                  text: r.config.yaxis[t].title.text,
                  textAnchor: "end",
                  foreColor: r.config.yaxis[t].title.style.color,
                  fontSize: r.config.yaxis[t].title.style.fontSize,
                  fontWeight: r.config.yaxis[t].title.style.fontWeight,
                  fontFamily: r.config.yaxis[t].title.style.fontFamily,
                  cssClass:
                    "apexcharts-yaxis-title-text " +
                    r.config.yaxis[t].title.style.cssClass,
                });
                f.add(C), p.add(f);
              }
              var M = r.config.yaxis[t].axisBorder,
                z = 31 + M.offsetX;
              if (
                (r.config.yaxis[t].opposite && (z = -31 - M.offsetX), M.show)
              ) {
                var D = s.drawLine(
                  z,
                  r.globals.translateY + M.offsetY - 2,
                  z,
                  r.globals.gridHeight + r.globals.translateY + M.offsetY + 2,
                  M.color,
                  0,
                  M.width,
                );
                p.add(D);
              }
              return (
                r.config.yaxis[t].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    z,
                    x,
                    M,
                    r.config.yaxis[t].axisTicks,
                    t,
                    v,
                    p,
                  ),
                p
              );
            },
          },
          {
            key: "drawYaxisInversed",
            value: function (t) {
              var l = this.w,
                r = new Z(this.ctx),
                s = r.group({
                  class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                }),
                a = r.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(l.globals.translateXAxisX, ", ")
                    .concat(l.globals.translateXAxisY, ")"),
                });
              s.add(a);
              var o = l.globals.yAxisScale[t].result.length - 1,
                h = l.globals.gridWidth / o + 0.1,
                d = h + l.config.xaxis.labels.offsetX,
                p = l.globals.xLabelFormatter,
                m = l.globals.yAxisScale[t].result.slice(),
                x = l.globals.timescaleLabels;
              x.length > 0 &&
                ((this.xaxisLabels = x.slice()), (o = (m = x.slice()).length)),
                (m = this.axesUtils.checkForReversedLabels(t, m));
              var v = x.length;
              if (l.config.xaxis.labels.show)
                for (var w = v ? 0 : o; v ? w < v : w >= 0; v ? w++ : w--) {
                  var S = m[w];
                  S = p(S, w, l);
                  var A =
                    l.globals.gridWidth +
                    l.globals.padHorizontal -
                    (d - h + l.config.xaxis.labels.offsetX);
                  if (x.length) {
                    var P = this.axesUtils.getLabel(
                      m,
                      x,
                      A,
                      w,
                      this.drawnLabels,
                      this.xaxisFontSize,
                    );
                    (A = P.x),
                      (S = P.text),
                      this.drawnLabels.push(P.text),
                      w === 0 && l.globals.skipFirstTimelinelabel && (S = ""),
                      w === m.length - 1 &&
                        l.globals.skipLastTimelinelabel &&
                        (S = "");
                  }
                  var R = r.drawText({
                    x: A,
                    y:
                      this.xAxisoffX +
                      l.config.xaxis.labels.offsetY +
                      30 -
                      (l.config.xaxis.position === "top"
                        ? l.globals.xAxisHeight +
                          l.config.xaxis.axisTicks.height -
                          2
                        : 0),
                    text: S,
                    textAnchor: "middle",
                    foreColor: Array.isArray(this.xaxisForeColors)
                      ? this.xaxisForeColors[t]
                      : this.xaxisForeColors,
                    fontSize: this.xaxisFontSize,
                    fontFamily: this.xaxisFontFamily,
                    fontWeight: l.config.xaxis.labels.style.fontWeight,
                    isPlainText: !1,
                    cssClass:
                      "apexcharts-xaxis-label " +
                      l.config.xaxis.labels.style.cssClass,
                  });
                  a.add(R), R.tspan(S);
                  var O = document.createElementNS(l.globals.SVGNS, "title");
                  (O.textContent = S), R.node.appendChild(O), (d += h);
                }
              return (
                this.inversedYAxisTitleText(s), this.inversedYAxisBorder(s), s
              );
            },
          },
          {
            key: "inversedYAxisBorder",
            value: function (t) {
              var l = this.w,
                r = new Z(this.ctx),
                s = l.config.xaxis.axisBorder;
              if (s.show) {
                var a = 0;
                l.config.chart.type === "bar" &&
                  l.globals.isXNumeric &&
                  (a -= 15);
                var o = r.drawLine(
                  l.globals.padHorizontal + a + s.offsetX,
                  this.xAxisoffX,
                  l.globals.gridWidth,
                  this.xAxisoffX,
                  s.color,
                  0,
                  s.height,
                );
                this.elgrid && this.elgrid.elGridBorders && l.config.grid.show
                  ? this.elgrid.elGridBorders.add(o)
                  : t.add(o);
              }
            },
          },
          {
            key: "inversedYAxisTitleText",
            value: function (t) {
              var l = this.w,
                r = new Z(this.ctx);
              if (l.config.xaxis.title.text !== void 0) {
                var s = r.group({
                    class:
                      "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                  }),
                  a = r.drawText({
                    x: l.globals.gridWidth / 2 + l.config.xaxis.title.offsetX,
                    y:
                      this.xAxisoffX +
                      parseFloat(this.xaxisFontSize) +
                      parseFloat(l.config.xaxis.title.style.fontSize) +
                      l.config.xaxis.title.offsetY +
                      20,
                    text: l.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: l.config.xaxis.title.style.fontSize,
                    fontFamily: l.config.xaxis.title.style.fontFamily,
                    fontWeight: l.config.xaxis.title.style.fontWeight,
                    foreColor: l.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      l.config.xaxis.title.style.cssClass,
                  });
                s.add(a), t.add(s);
              }
            },
          },
          {
            key: "yAxisTitleRotate",
            value: function (t, l) {
              var r = this.w,
                s = new Z(this.ctx),
                a = { width: 0, height: 0 },
                o = { width: 0, height: 0 },
                h = r.globals.dom.baseEl.querySelector(
                  " .apexcharts-yaxis[rel='".concat(
                    t,
                    "'] .apexcharts-yaxis-texts-g",
                  ),
                );
              h !== null && (a = h.getBoundingClientRect());
              var d = r.globals.dom.baseEl.querySelector(
                ".apexcharts-yaxis[rel='".concat(
                  t,
                  "'] .apexcharts-yaxis-title text",
                ),
              );
              if ((d !== null && (o = d.getBoundingClientRect()), d !== null)) {
                var p = this.xPaddingForYAxisTitle(t, a, o, l);
                d.setAttribute("x", p.xPos - (l ? 10 : 0));
              }
              if (d !== null) {
                var m = s.rotateAroundCenter(d);
                d.setAttribute(
                  "transform",
                  "rotate("
                    .concat(
                      l
                        ? -1 * r.config.yaxis[t].title.rotate
                        : r.config.yaxis[t].title.rotate,
                      " ",
                    )
                    .concat(m.x, " ")
                    .concat(m.y, ")"),
                );
              }
            },
          },
          {
            key: "xPaddingForYAxisTitle",
            value: function (t, l, r, s) {
              var a = this.w,
                o = 0,
                h = 0,
                d = 10;
              return a.config.yaxis[t].title.text === void 0 || t < 0
                ? { xPos: h, padd: 0 }
                : (s
                    ? ((h =
                        l.width +
                        a.config.yaxis[t].title.offsetX +
                        r.width / 2 +
                        d / 2),
                      (o += 1) === 0 && (h -= d / 2))
                    : ((h =
                        -1 * l.width +
                        a.config.yaxis[t].title.offsetX +
                        d / 2 +
                        r.width / 2),
                      a.globals.isBarHorizontal &&
                        ((d = 25),
                        (h =
                          -1 * l.width - a.config.yaxis[t].title.offsetX - d))),
                  { xPos: h, padd: d });
            },
          },
          {
            key: "setYAxisXPosition",
            value: function (t, l) {
              var r = this.w,
                s = 0,
                a = 0,
                o = 18,
                h = 1;
              r.config.yaxis.length > 1 && (this.multipleYs = !0),
                r.config.yaxis.map(function (d, p) {
                  var m =
                      r.globals.ignoreYAxisIndexes.indexOf(p) > -1 ||
                      !d.show ||
                      d.floating ||
                      t[p].width === 0,
                    x = t[p].width + l[p].width;
                  d.opposite
                    ? r.globals.isBarHorizontal
                      ? ((a = r.globals.gridWidth + r.globals.translateX - 1),
                        (r.globals.translateYAxisX[p] = a - d.labels.offsetX))
                      : ((a = r.globals.gridWidth + r.globals.translateX + h),
                        m || (h = h + x + 20),
                        (r.globals.translateYAxisX[p] =
                          a - d.labels.offsetX + 20))
                    : ((s = r.globals.translateX - o),
                      m || (o = o + x + 20),
                      (r.globals.translateYAxisX[p] = s + d.labels.offsetX));
                });
            },
          },
          {
            key: "setYAxisTextAlignments",
            value: function () {
              var t = this.w,
                l =
                  t.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-yaxis",
                  );
              (l = L.listToArray(l)).forEach(function (r, s) {
                var a = t.config.yaxis[s];
                if (a && !a.floating && a.labels.align !== void 0) {
                  var o = t.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-texts-g",
                      ),
                    ),
                    h = t.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-label",
                      ),
                    );
                  h = L.listToArray(h);
                  var d = o.getBoundingClientRect();
                  a.labels.align === "left"
                    ? (h.forEach(function (p, m) {
                        p.setAttribute("text-anchor", "start");
                      }),
                      a.opposite ||
                        o.setAttribute(
                          "transform",
                          "translate(-".concat(d.width, ", 0)"),
                        ))
                    : a.labels.align === "center"
                      ? (h.forEach(function (p, m) {
                          p.setAttribute("text-anchor", "middle");
                        }),
                        o.setAttribute(
                          "transform",
                          "translate(".concat(
                            (d.width / 2) * (a.opposite ? 1 : -1),
                            ", 0)",
                          ),
                        ))
                      : a.labels.align === "right" &&
                        (h.forEach(function (p, m) {
                          p.setAttribute("text-anchor", "end");
                        }),
                        a.opposite &&
                          o.setAttribute(
                            "transform",
                            "translate(".concat(d.width, ", 0)"),
                          ));
                }
              });
            },
          },
        ]),
        T
      );
    })(),
    ee = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.documentEvent = L.bind(this.documentEvent, this));
      }
      return (
        k(T, [
          {
            key: "addEventListener",
            value: function (t, l) {
              var r = this.w;
              r.globals.events.hasOwnProperty(t)
                ? r.globals.events[t].push(l)
                : (r.globals.events[t] = [l]);
            },
          },
          {
            key: "removeEventListener",
            value: function (t, l) {
              var r = this.w;
              if (r.globals.events.hasOwnProperty(t)) {
                var s = r.globals.events[t].indexOf(l);
                s !== -1 && r.globals.events[t].splice(s, 1);
              }
            },
          },
          {
            key: "fireEvent",
            value: function (t, l) {
              var r = this.w;
              if (r.globals.events.hasOwnProperty(t)) {
                (l && l.length) || (l = []);
                for (
                  var s = r.globals.events[t], a = s.length, o = 0;
                  o < a;
                  o++
                )
                  s[o].apply(null, l);
              }
            },
          },
          {
            key: "setupEventHandlers",
            value: function () {
              var t = this,
                l = this.w,
                r = this.ctx,
                s = l.globals.dom.baseEl.querySelector(l.globals.chartClass);
              this.ctx.eventList.forEach(function (a) {
                s.addEventListener(
                  a,
                  function (o) {
                    var h = Object.assign({}, l, {
                      seriesIndex: l.globals.capturedSeriesIndex,
                      dataPointIndex: l.globals.capturedDataPointIndex,
                    });
                    o.type === "mousemove" || o.type === "touchmove"
                      ? typeof l.config.chart.events.mouseMove == "function" &&
                        l.config.chart.events.mouseMove(o, r, h)
                      : o.type === "mouseleave" || o.type === "touchleave"
                        ? typeof l.config.chart.events.mouseLeave ==
                            "function" &&
                          l.config.chart.events.mouseLeave(o, r, h)
                        : ((o.type === "mouseup" && o.which === 1) ||
                            o.type === "touchend") &&
                          (typeof l.config.chart.events.click == "function" &&
                            l.config.chart.events.click(o, r, h),
                          r.ctx.events.fireEvent("click", [o, r, h]));
                  },
                  { capture: !1, passive: !0 },
                );
              }),
                this.ctx.eventList.forEach(function (a) {
                  l.globals.dom.baseEl.addEventListener(a, t.documentEvent, {
                    passive: !0,
                  });
                }),
                this.ctx.core.setupBrushHandler();
            },
          },
          {
            key: "documentEvent",
            value: function (t) {
              var l = this.w,
                r = t.target.className;
              if (t.type === "click") {
                var s = l.globals.dom.baseEl.querySelector(".apexcharts-menu");
                s &&
                  s.classList.contains("apexcharts-menu-open") &&
                  r !== "apexcharts-menu-icon" &&
                  s.classList.remove("apexcharts-menu-open");
              }
              (l.globals.clientX =
                t.type === "touchmove" ? t.touches[0].clientX : t.clientX),
                (l.globals.clientY =
                  t.type === "touchmove" ? t.touches[0].clientY : t.clientY);
            },
          },
        ]),
        T
      );
    })(),
    re = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "setCurrentLocaleValues",
            value: function (t) {
              var l = this.w.config.chart.locales;
              window.Apex.chart &&
                window.Apex.chart.locales &&
                window.Apex.chart.locales.length > 0 &&
                (l = this.w.config.chart.locales.concat(
                  window.Apex.chart.locales,
                ));
              var r = l.filter(function (a) {
                return a.name === t;
              })[0];
              if (!r)
                throw new Error(
                  "Wrong locale name provided. Please make sure you set the correct locale name in options",
                );
              var s = L.extend(it, r);
              this.w.globals.locale = s.options;
            },
          },
        ]),
        T
      );
    })(),
    fe = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "drawAxis",
            value: function (t, l) {
              var r,
                s,
                a = this,
                o = this.w.globals,
                h = this.w.config,
                d = new X(this.ctx, l),
                p = new Y(this.ctx, l);
              o.axisCharts &&
                t !== "radar" &&
                (o.isBarHorizontal
                  ? ((s = p.drawYaxisInversed(0)),
                    (r = d.drawXaxisInversed(0)),
                    o.dom.elGraphical.add(r),
                    o.dom.elGraphical.add(s))
                  : ((r = d.drawXaxis()),
                    o.dom.elGraphical.add(r),
                    h.yaxis.map(function (m, x) {
                      if (
                        o.ignoreYAxisIndexes.indexOf(x) === -1 &&
                        ((s = p.drawYaxis(x)),
                        o.dom.Paper.add(s),
                        a.w.config.grid.position === "back")
                      ) {
                        var v = o.dom.Paper.children()[1];
                        v.remove(), o.dom.Paper.add(v);
                      }
                    })));
            },
          },
        ]),
        T
      );
    })(),
    xe = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "drawXCrosshairs",
            value: function () {
              var t = this.w,
                l = new Z(this.ctx),
                r = new te(this.ctx),
                s = t.config.xaxis.crosshairs.fill.gradient,
                a = t.config.xaxis.crosshairs.dropShadow,
                o = t.config.xaxis.crosshairs.fill.type,
                h = s.colorFrom,
                d = s.colorTo,
                p = s.opacityFrom,
                m = s.opacityTo,
                x = s.stops,
                v = a.enabled,
                w = a.left,
                S = a.top,
                A = a.blur,
                P = a.color,
                R = a.opacity,
                O = t.config.xaxis.crosshairs.fill.color;
              if (t.config.xaxis.crosshairs.show) {
                o === "gradient" &&
                  (O = l.drawGradient("vertical", h, d, p, m, null, x, null));
                var f = l.drawRect();
                t.config.xaxis.crosshairs.width === 1 && (f = l.drawLine());
                var y = t.globals.gridHeight;
                (!L.isNumber(y) || y < 0) && (y = 0);
                var C = t.config.xaxis.crosshairs.width;
                (!L.isNumber(C) || C < 0) && (C = 0),
                  f.attr({
                    class: "apexcharts-xcrosshairs",
                    x: 0,
                    y: 0,
                    y2: y,
                    width: C,
                    height: y,
                    fill: O,
                    filter: "none",
                    "fill-opacity": t.config.xaxis.crosshairs.opacity,
                    stroke: t.config.xaxis.crosshairs.stroke.color,
                    "stroke-width": t.config.xaxis.crosshairs.stroke.width,
                    "stroke-dasharray":
                      t.config.xaxis.crosshairs.stroke.dashArray,
                  }),
                  v &&
                    (f = r.dropShadow(f, {
                      left: w,
                      top: S,
                      blur: A,
                      color: P,
                      opacity: R,
                    })),
                  t.globals.dom.elGraphical.add(f);
              }
            },
          },
          {
            key: "drawYCrosshairs",
            value: function () {
              var t = this.w,
                l = new Z(this.ctx),
                r = t.config.yaxis[0].crosshairs,
                s = t.globals.barPadForNumericAxis;
              if (t.config.yaxis[0].crosshairs.show) {
                var a = l.drawLine(
                  -s,
                  0,
                  t.globals.gridWidth + s,
                  0,
                  r.stroke.color,
                  r.stroke.dashArray,
                  r.stroke.width,
                );
                a.attr({ class: "apexcharts-ycrosshairs" }),
                  t.globals.dom.elGraphical.add(a);
              }
              var o = l.drawLine(
                -s,
                0,
                t.globals.gridWidth + s,
                0,
                r.stroke.color,
                0,
                0,
              );
              o.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                t.globals.dom.elGraphical.add(o);
            },
          },
        ]),
        T
      );
    })(),
    Me = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "checkResponsiveConfig",
            value: function (t) {
              var l = this,
                r = this.w,
                s = r.config;
              if (s.responsive.length !== 0) {
                var a = s.responsive.slice();
                a.sort(function (p, m) {
                  return p.breakpoint > m.breakpoint
                    ? 1
                    : m.breakpoint > p.breakpoint
                      ? -1
                      : 0;
                }).reverse();
                var o = new we({}),
                  h = function () {
                    var p =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : {},
                      m = a[0].breakpoint,
                      x =
                        window.innerWidth > 0
                          ? window.innerWidth
                          : screen.width;
                    if (x > m) {
                      var v = oe.extendArrayProps(
                        o,
                        r.globals.initialConfig,
                        r,
                      );
                      (p = L.extend(v, p)),
                        (p = L.extend(r.config, p)),
                        l.overrideResponsiveOptions(p);
                    } else
                      for (var w = 0; w < a.length; w++)
                        x < a[w].breakpoint &&
                          ((p = oe.extendArrayProps(o, a[w].options, r)),
                          (p = L.extend(r.config, p)),
                          l.overrideResponsiveOptions(p));
                  };
                if (t) {
                  var d = oe.extendArrayProps(o, t, r);
                  (d = L.extend(r.config, d)), h((d = L.extend(d, t)));
                } else h({});
              }
            },
          },
          {
            key: "overrideResponsiveOptions",
            value: function (t) {
              var l = new we(t).init({ responsiveOverride: !0 });
              this.w.config = l;
            },
          },
        ]),
        T
      );
    })(),
    Fe = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.colors = []), (this.w = t.w);
        var l = this.w;
        (this.isColorFn = !1),
          (this.isHeatmapDistributed =
            (l.config.chart.type === "treemap" &&
              l.config.plotOptions.treemap.distributed) ||
            (l.config.chart.type === "heatmap" &&
              l.config.plotOptions.heatmap.distributed)),
          (this.isBarDistributed =
            l.config.plotOptions.bar.distributed &&
            (l.config.chart.type === "bar" ||
              l.config.chart.type === "rangeBar"));
      }
      return (
        k(T, [
          {
            key: "init",
            value: function () {
              this.setDefaultColors();
            },
          },
          {
            key: "setDefaultColors",
            value: function () {
              var t,
                l = this,
                r = this.w,
                s = new L();
              if (
                (r.globals.dom.elWrap.classList.add(
                  "apexcharts-theme-".concat(r.config.theme.mode),
                ),
                r.config.colors === void 0 ||
                ((t = r.config.colors) === null || t === void 0
                  ? void 0
                  : t.length) === 0
                  ? (r.globals.colors = this.predefined())
                  : ((r.globals.colors = r.config.colors),
                    Array.isArray(r.config.colors) &&
                      r.config.colors.length > 0 &&
                      typeof r.config.colors[0] == "function" &&
                      (r.globals.colors = r.config.series.map(function (S, A) {
                        var P = r.config.colors[A];
                        return (
                          P || (P = r.config.colors[0]),
                          typeof P == "function"
                            ? ((l.isColorFn = !0),
                              P({
                                value: r.globals.axisCharts
                                  ? r.globals.series[A][0]
                                    ? r.globals.series[A][0]
                                    : 0
                                  : r.globals.series[A],
                                seriesIndex: A,
                                dataPointIndex: A,
                                w: r,
                              }))
                            : P
                        );
                      }))),
                r.globals.seriesColors.map(function (S, A) {
                  S && (r.globals.colors[A] = S);
                }),
                r.config.theme.monochrome.enabled)
              ) {
                var a = [],
                  o = r.globals.series.length;
                (this.isBarDistributed || this.isHeatmapDistributed) &&
                  (o = r.globals.series[0].length * r.globals.series.length);
                for (
                  var h = r.config.theme.monochrome.color,
                    d = 1 / (o / r.config.theme.monochrome.shadeIntensity),
                    p = r.config.theme.monochrome.shadeTo,
                    m = 0,
                    x = 0;
                  x < o;
                  x++
                ) {
                  var v = void 0;
                  p === "dark"
                    ? ((v = s.shadeColor(-1 * m, h)), (m += d))
                    : ((v = s.shadeColor(m, h)), (m += d)),
                    a.push(v);
                }
                r.globals.colors = a.slice();
              }
              var w = r.globals.colors.slice();
              this.pushExtraColors(r.globals.colors),
                ["fill", "stroke"].forEach(function (S) {
                  r.config[S].colors === void 0
                    ? (r.globals[S].colors = l.isColorFn ? r.config.colors : w)
                    : (r.globals[S].colors = r.config[S].colors.slice()),
                    l.pushExtraColors(r.globals[S].colors);
                }),
                r.config.dataLabels.style.colors === void 0
                  ? (r.globals.dataLabels.style.colors = w)
                  : (r.globals.dataLabels.style.colors =
                      r.config.dataLabels.style.colors.slice()),
                this.pushExtraColors(r.globals.dataLabels.style.colors, 50),
                r.config.plotOptions.radar.polygons.fill.colors === void 0
                  ? (r.globals.radarPolygons.fill.colors = [
                      r.config.theme.mode === "dark" ? "#424242" : "none",
                    ])
                  : (r.globals.radarPolygons.fill.colors =
                      r.config.plotOptions.radar.polygons.fill.colors.slice()),
                this.pushExtraColors(r.globals.radarPolygons.fill.colors, 20),
                r.config.markers.colors === void 0
                  ? (r.globals.markers.colors = w)
                  : (r.globals.markers.colors =
                      r.config.markers.colors.slice()),
                this.pushExtraColors(r.globals.markers.colors);
            },
          },
          {
            key: "pushExtraColors",
            value: function (t, l) {
              var r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s = this.w,
                a = l || s.globals.series.length;
              if (
                (r === null &&
                  (r =
                    this.isBarDistributed ||
                    this.isHeatmapDistributed ||
                    (s.config.chart.type === "heatmap" &&
                      s.config.plotOptions.heatmap.colorScale.inverse)),
                r &&
                  s.globals.series.length &&
                  (a =
                    s.globals.series[s.globals.maxValsInArrayIndex].length *
                    s.globals.series.length),
                t.length < a)
              )
                for (var o = a - t.length, h = 0; h < o; h++) t.push(t[h]);
            },
          },
          {
            key: "updateThemeOptions",
            value: function (t) {
              (t.chart = t.chart || {}), (t.tooltip = t.tooltip || {});
              var l = t.theme.mode || "light",
                r = t.theme.palette
                  ? t.theme.palette
                  : l === "dark"
                    ? "palette4"
                    : "palette1",
                s = t.chart.foreColor
                  ? t.chart.foreColor
                  : l === "dark"
                    ? "#f6f7f8"
                    : "#373d3f";
              return (
                (t.tooltip.theme = l),
                (t.chart.foreColor = s),
                (t.theme.palette = r),
                t
              );
            },
          },
          {
            key: "predefined",
            value: function () {
              switch (this.w.config.theme.palette) {
                case "palette1":
                default:
                  this.colors = [
                    "#008FFB",
                    "#00E396",
                    "#FEB019",
                    "#FF4560",
                    "#775DD0",
                  ];
                  break;
                case "palette2":
                  this.colors = [
                    "#3f51b5",
                    "#03a9f4",
                    "#4caf50",
                    "#f9ce1d",
                    "#FF9800",
                  ];
                  break;
                case "palette3":
                  this.colors = [
                    "#33b2df",
                    "#546E7A",
                    "#d4526e",
                    "#13d8aa",
                    "#A5978B",
                  ];
                  break;
                case "palette4":
                  this.colors = [
                    "#4ecdc4",
                    "#c7f464",
                    "#81D4FA",
                    "#fd6a6a",
                    "#546E7A",
                  ];
                  break;
                case "palette5":
                  this.colors = [
                    "#2b908f",
                    "#f9a3a4",
                    "#90ee7e",
                    "#fa4443",
                    "#69d2e7",
                  ];
                  break;
                case "palette6":
                  this.colors = [
                    "#449DD1",
                    "#F86624",
                    "#EA3546",
                    "#662E9B",
                    "#C5D86D",
                  ];
                  break;
                case "palette7":
                  this.colors = [
                    "#D7263D",
                    "#1B998B",
                    "#2E294E",
                    "#F46036",
                    "#E2C044",
                  ];
                  break;
                case "palette8":
                  this.colors = [
                    "#662E9B",
                    "#F86624",
                    "#F9C80E",
                    "#EA3546",
                    "#43BCCD",
                  ];
                  break;
                case "palette9":
                  this.colors = [
                    "#5C4742",
                    "#A5978B",
                    "#8D5B4C",
                    "#5A2A27",
                    "#C4BBAF",
                  ];
                  break;
                case "palette10":
                  this.colors = [
                    "#A300D6",
                    "#7D02EB",
                    "#5653FE",
                    "#2983FF",
                    "#00B1F2",
                  ];
              }
              return this.colors;
            },
          },
        ]),
        T
      );
    })(),
    Xe = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function () {
              this.drawTitleSubtitle("title"),
                this.drawTitleSubtitle("subtitle");
            },
          },
          {
            key: "drawTitleSubtitle",
            value: function (t) {
              var l = this.w,
                r = t === "title" ? l.config.title : l.config.subtitle,
                s = l.globals.svgWidth / 2,
                a = r.offsetY,
                o = "middle";
              if (
                (r.align === "left"
                  ? ((s = 10), (o = "start"))
                  : r.align === "right" &&
                    ((s = l.globals.svgWidth - 10), (o = "end")),
                (s += r.offsetX),
                (a = a + parseInt(r.style.fontSize, 10) + r.margin / 2),
                r.text !== void 0)
              ) {
                var h = new Z(this.ctx).drawText({
                  x: s,
                  y: a,
                  text: r.text,
                  textAnchor: o,
                  fontSize: r.style.fontSize,
                  fontFamily: r.style.fontFamily,
                  fontWeight: r.style.fontWeight,
                  foreColor: r.style.color,
                  opacity: 1,
                });
                h.node.setAttribute("class", "apexcharts-".concat(t, "-text")),
                  l.globals.dom.Paper.add(h);
              }
            },
          },
        ]),
        T
      );
    })(),
    rt = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(T, [
          {
            key: "getTitleSubtitleCoords",
            value: function (t) {
              var l = this.w,
                r = 0,
                s = 0,
                a =
                  t === "title"
                    ? l.config.title.floating
                    : l.config.subtitle.floating,
                o = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(t, "-text"),
                );
              if (o !== null && !a) {
                var h = o.getBoundingClientRect();
                (r = h.width),
                  (s = l.globals.axisCharts ? h.height + 5 : h.height);
              }
              return { width: r, height: s };
            },
          },
          {
            key: "getLegendsRect",
            value: function () {
              var t = this.w,
                l = t.globals.dom.elLegendWrap;
              t.config.legend.height ||
                (t.config.legend.position !== "top" &&
                  t.config.legend.position !== "bottom") ||
                (l.style.maxHeight = t.globals.svgHeight / 2 + "px");
              var r = Object.assign({}, L.getBoundingClientRect(l));
              return (
                l !== null && !t.config.legend.floating && t.config.legend.show
                  ? (this.dCtx.lgRect = {
                      x: r.x,
                      y: r.y,
                      height: r.height,
                      width: r.height === 0 ? 0 : r.width,
                    })
                  : (this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }),
                (t.config.legend.position !== "left" &&
                  t.config.legend.position !== "right") ||
                  (1.5 * this.dCtx.lgRect.width > t.globals.svgWidth &&
                    (this.dCtx.lgRect.width = t.globals.svgWidth / 1.5)),
                this.dCtx.lgRect
              );
            },
          },
          {
            key: "getLargestStringFromMultiArr",
            value: function (t, l) {
              var r = t;
              if (this.w.globals.isMultiLineX) {
                var s = l.map(function (o, h) {
                    return Array.isArray(o) ? o.length : 1;
                  }),
                  a = Math.max.apply(Math, Q(s));
                r = l[s.indexOf(a)];
              }
              return r;
            },
          },
        ]),
        T
      );
    })(),
    nt = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(T, [
          {
            key: "getxAxisLabelsCoords",
            value: function () {
              var t,
                l = this.w,
                r = l.globals.labels.slice();
              if (
                (l.config.xaxis.convertedCatToNumeric &&
                  r.length === 0 &&
                  (r = l.globals.categoryLabels),
                l.globals.timescaleLabels.length > 0)
              ) {
                var s = this.getxAxisTimeScaleLabelsCoords();
                (t = { width: s.width, height: s.height }),
                  (l.globals.rotateXLabels = !1);
              } else {
                this.dCtx.lgWidthForSideLegends =
                  (l.config.legend.position !== "left" &&
                    l.config.legend.position !== "right") ||
                  l.config.legend.floating
                    ? 0
                    : this.dCtx.lgRect.width;
                var a = l.globals.xLabelFormatter,
                  o = L.getLargestStringFromArr(r),
                  h = this.dCtx.dimHelpers.getLargestStringFromMultiArr(o, r);
                l.globals.isBarHorizontal &&
                  (h = o =
                    l.globals.yAxisScale[0].result.reduce(function (S, A) {
                      return S.length > A.length ? S : A;
                    }, 0));
                var d = new pl(this.dCtx.ctx),
                  p = o;
                (o = d.xLabelFormat(a, o, p, {
                  i: void 0,
                  dateFormatter: new Ze(this.dCtx.ctx).formatDate,
                  w: l,
                })),
                  (h = d.xLabelFormat(a, h, p, {
                    i: void 0,
                    dateFormatter: new Ze(this.dCtx.ctx).formatDate,
                    w: l,
                  })),
                  ((l.config.xaxis.convertedCatToNumeric && o === void 0) ||
                    String(o).trim() === "") &&
                    (h = o = "1");
                var m = new Z(this.dCtx.ctx),
                  x = m.getTextRects(o, l.config.xaxis.labels.style.fontSize),
                  v = x;
                if (
                  (o !== h &&
                    (v = m.getTextRects(
                      h,
                      l.config.xaxis.labels.style.fontSize,
                    )),
                  ((t = {
                    width: x.width >= v.width ? x.width : v.width,
                    height: x.height >= v.height ? x.height : v.height,
                  }).width *
                    r.length >
                    l.globals.svgWidth -
                      this.dCtx.lgWidthForSideLegends -
                      this.dCtx.yAxisWidth -
                      this.dCtx.gridPad.left -
                      this.dCtx.gridPad.right &&
                    l.config.xaxis.labels.rotate !== 0) ||
                    l.config.xaxis.labels.rotateAlways)
                ) {
                  if (!l.globals.isBarHorizontal) {
                    l.globals.rotateXLabels = !0;
                    var w = function (S) {
                      return m.getTextRects(
                        S,
                        l.config.xaxis.labels.style.fontSize,
                        l.config.xaxis.labels.style.fontFamily,
                        "rotate(".concat(l.config.xaxis.labels.rotate, " 0 0)"),
                        !1,
                      );
                    };
                    (x = w(o)),
                      o !== h && (v = w(h)),
                      (t.height =
                        (x.height > v.height ? x.height : v.height) / 1.5),
                      (t.width = x.width > v.width ? x.width : v.width);
                  }
                } else l.globals.rotateXLabels = !1;
              }
              return (
                l.config.xaxis.labels.show || (t = { width: 0, height: 0 }),
                { width: t.width, height: t.height }
              );
            },
          },
          {
            key: "getxAxisGroupLabelsCoords",
            value: function () {
              var t,
                l = this.w;
              if (!l.globals.hasXaxisGroups) return { width: 0, height: 0 };
              var r,
                s =
                  ((t = l.config.xaxis.group.style) === null || t === void 0
                    ? void 0
                    : t.fontSize) || l.config.xaxis.labels.style.fontSize,
                a = l.globals.groups.map(function (x) {
                  return x.title;
                }),
                o = L.getLargestStringFromArr(a),
                h = this.dCtx.dimHelpers.getLargestStringFromMultiArr(o, a),
                d = new Z(this.dCtx.ctx),
                p = d.getTextRects(o, s),
                m = p;
              return (
                o !== h && (m = d.getTextRects(h, s)),
                (r = {
                  width: p.width >= m.width ? p.width : m.width,
                  height: p.height >= m.height ? p.height : m.height,
                }),
                l.config.xaxis.labels.show || (r = { width: 0, height: 0 }),
                { width: r.width, height: r.height }
              );
            },
          },
          {
            key: "getxAxisTitleCoords",
            value: function () {
              var t = this.w,
                l = 0,
                r = 0;
              if (t.config.xaxis.title.text !== void 0) {
                var s = new Z(this.dCtx.ctx).getTextRects(
                  t.config.xaxis.title.text,
                  t.config.xaxis.title.style.fontSize,
                );
                (l = s.width), (r = s.height);
              }
              return { width: l, height: r };
            },
          },
          {
            key: "getxAxisTimeScaleLabelsCoords",
            value: function () {
              var t,
                l = this.w;
              this.dCtx.timescaleLabels = l.globals.timescaleLabels.slice();
              var r = this.dCtx.timescaleLabels.map(function (a) {
                  return a.value;
                }),
                s = r.reduce(function (a, o) {
                  return a === void 0
                    ? (console.error(
                        "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date",
                      ),
                      0)
                    : a.length > o.length
                      ? a
                      : o;
                }, 0);
              return (
                1.05 *
                  (t = new Z(this.dCtx.ctx).getTextRects(
                    s,
                    l.config.xaxis.labels.style.fontSize,
                  )).width *
                  r.length >
                  l.globals.gridWidth &&
                  l.config.xaxis.labels.rotate !== 0 &&
                  (l.globals.overlappingXLabels = !0),
                t
              );
            },
          },
          {
            key: "additionalPaddingXLabels",
            value: function (t) {
              var l = this,
                r = this.w,
                s = r.globals,
                a = r.config,
                o = a.xaxis.type,
                h = t.width;
              (s.skipLastTimelinelabel = !1), (s.skipFirstTimelinelabel = !1);
              var d = r.config.yaxis[0].opposite && r.globals.isBarHorizontal,
                p = function (m, x) {
                  (a.yaxis.length > 1 &&
                    (function (v) {
                      return s.collapsedSeriesIndices.indexOf(v) !== -1;
                    })(x)) ||
                    (function (v) {
                      if (
                        l.dCtx.timescaleLabels &&
                        l.dCtx.timescaleLabels.length
                      ) {
                        var w = l.dCtx.timescaleLabels[0],
                          S =
                            l.dCtx.timescaleLabels[
                              l.dCtx.timescaleLabels.length - 1
                            ].position +
                            h / 1.75 -
                            l.dCtx.yAxisWidthRight,
                          A = w.position - h / 1.75 + l.dCtx.yAxisWidthLeft,
                          P =
                            r.config.legend.position === "right" &&
                            l.dCtx.lgRect.width > 0
                              ? l.dCtx.lgRect.width
                              : 0;
                        S > s.svgWidth - s.translateX - P &&
                          (s.skipLastTimelinelabel = !0),
                          A <
                            -((v.show && !v.floating) ||
                            (a.chart.type !== "bar" &&
                              a.chart.type !== "candlestick" &&
                              a.chart.type !== "rangeBar" &&
                              a.chart.type !== "boxPlot")
                              ? 10
                              : h / 1.75) && (s.skipFirstTimelinelabel = !0);
                      } else
                        o === "datetime"
                          ? l.dCtx.gridPad.right < h &&
                            !s.rotateXLabels &&
                            (s.skipLastTimelinelabel = !0)
                          : o !== "datetime" &&
                            l.dCtx.gridPad.right <
                              h / 2 - l.dCtx.yAxisWidthRight &&
                            !s.rotateXLabels &&
                            !r.config.xaxis.labels.trim &&
                            (r.config.xaxis.tickPlacement !== "between" ||
                              r.globals.isBarHorizontal) &&
                            (l.dCtx.xPadRight = h / 2 + 1);
                    })(m);
                };
              a.yaxis.forEach(function (m, x) {
                d
                  ? (l.dCtx.gridPad.left < h && (l.dCtx.xPadLeft = h / 2 + 1),
                    (l.dCtx.xPadRight = h / 2 + 1))
                  : p(m, x);
              });
            },
          },
        ]),
        T
      );
    })(),
    Ee = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(T, [
          {
            key: "getyAxisLabelsCoords",
            value: function () {
              var t = this,
                l = this.w,
                r = [],
                s = 10,
                a = new mt(this.dCtx.ctx);
              return (
                l.config.yaxis.map(function (o, h) {
                  var d = l.globals.yAxisScale[h],
                    p = 0;
                  if (
                    (!a.isYAxisHidden(h) &&
                      o.labels.show &&
                      o.labels.minWidth !== void 0 &&
                      (p = o.labels.minWidth),
                    !a.isYAxisHidden(h) && o.labels.show && d.result.length)
                  ) {
                    var m = l.globals.yLabelFormatters[h],
                      x = d.niceMin === Number.MIN_VALUE ? 0 : d.niceMin,
                      v =
                        String(x).length > String(d.niceMax).length
                          ? x
                          : d.niceMax,
                      w = m(v, { seriesIndex: h, dataPointIndex: -1, w: l }),
                      S = w;
                    if (
                      ((w !== void 0 && w.length !== 0) || (w = v),
                      l.globals.isBarHorizontal)
                    ) {
                      s = 0;
                      var A = l.globals.labels.slice();
                      (w = m((w = L.getLargestStringFromArr(A)), {
                        seriesIndex: h,
                        dataPointIndex: -1,
                        w: l,
                      })),
                        (S = t.dCtx.dimHelpers.getLargestStringFromMultiArr(
                          w,
                          A,
                        ));
                    }
                    var P = new Z(t.dCtx.ctx),
                      R = "rotate(".concat(o.labels.rotate, " 0 0)"),
                      O = P.getTextRects(
                        w,
                        o.labels.style.fontSize,
                        o.labels.style.fontFamily,
                        R,
                        !1,
                      ),
                      f = O;
                    w !== S &&
                      (f = P.getTextRects(
                        S,
                        o.labels.style.fontSize,
                        o.labels.style.fontFamily,
                        R,
                        !1,
                      )),
                      r.push({
                        width:
                          (p > f.width || p > O.width
                            ? p
                            : f.width > O.width
                              ? f.width
                              : O.width) + s,
                        height: f.height > O.height ? f.height : O.height,
                      });
                  } else r.push({ width: 0, height: 0 });
                }),
                r
              );
            },
          },
          {
            key: "getyAxisTitleCoords",
            value: function () {
              var t = this,
                l = this.w,
                r = [];
              return (
                l.config.yaxis.map(function (s, a) {
                  if (s.show && s.title.text !== void 0) {
                    var o = new Z(t.dCtx.ctx),
                      h = "rotate(".concat(s.title.rotate, " 0 0)"),
                      d = o.getTextRects(
                        s.title.text,
                        s.title.style.fontSize,
                        s.title.style.fontFamily,
                        h,
                        !1,
                      );
                    r.push({ width: d.width, height: d.height });
                  } else r.push({ width: 0, height: 0 });
                }),
                r
              );
            },
          },
          {
            key: "getTotalYAxisWidth",
            value: function () {
              var t = this.w,
                l = 0,
                r = 0,
                s = 0,
                a = t.globals.yAxisScale.length > 1 ? 10 : 0,
                o = new mt(this.dCtx.ctx),
                h = function (d, p) {
                  var m = t.config.yaxis[p].floating,
                    x = 0;
                  d.width > 0 && !m
                    ? ((x = d.width + a),
                      (function (v) {
                        return t.globals.ignoreYAxisIndexes.indexOf(v) > -1;
                      })(p) && (x = x - d.width - a))
                    : (x = m || o.isYAxisHidden(p) ? 0 : 5),
                    t.config.yaxis[p].opposite ? (s += x) : (r += x),
                    (l += x);
                };
              return (
                t.globals.yLabelsCoords.map(function (d, p) {
                  h(d, p);
                }),
                t.globals.yTitleCoords.map(function (d, p) {
                  h(d, p);
                }),
                t.globals.isBarHorizontal &&
                  !t.config.yaxis[0].floating &&
                  (l =
                    t.globals.yLabelsCoords[0].width +
                    t.globals.yTitleCoords[0].width +
                    15),
                (this.dCtx.yAxisWidthLeft = r),
                (this.dCtx.yAxisWidthRight = s),
                l
              );
            },
          },
        ]),
        T
      );
    })(),
    St = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(T, [
          {
            key: "gridPadForColumnsInNumericAxis",
            value: function (t) {
              var l = this.w;
              if (l.globals.noData || l.globals.allSeriesCollapsed) return 0;
              var r = function (m) {
                  return (
                    m === "bar" ||
                    m === "rangeBar" ||
                    m === "candlestick" ||
                    m === "boxPlot"
                  );
                },
                s = l.config.chart.type,
                a = 0,
                o = r(s) ? l.config.series.length : 1;
              if (
                (l.globals.comboBarCount > 0 && (o = l.globals.comboBarCount),
                l.globals.collapsedSeries.forEach(function (m) {
                  r(m.type) && (o -= 1);
                }),
                l.config.chart.stacked && (o = 1),
                (r(s) || l.globals.comboBarCount > 0) &&
                  l.globals.isXNumeric &&
                  !l.globals.isBarHorizontal &&
                  o > 0)
              ) {
                var h,
                  d,
                  p = Math.abs(l.globals.initialMaxX - l.globals.initialMinX);
                p <= 3 && (p = l.globals.dataPoints),
                  (h = p / t),
                  l.globals.minXDiff &&
                    l.globals.minXDiff / h > 0 &&
                    (d = l.globals.minXDiff / h),
                  d > t / 2 && (d /= 2),
                  (a =
                    ((d / o) *
                      parseInt(l.config.plotOptions.bar.columnWidth, 10)) /
                    100) < 1 && (a = 1),
                  (a = a / (o > 1 ? 1 : 1.5) + 5),
                  (l.globals.barPadForNumericAxis = a);
              }
              return a;
            },
          },
          {
            key: "gridPadFortitleSubtitle",
            value: function () {
              var t = this,
                l = this.w,
                r = l.globals,
                s = this.dCtx.isSparkline || !l.globals.axisCharts ? 0 : 10;
              ["title", "subtitle"].forEach(function (h) {
                l.config[h].text !== void 0
                  ? (s += l.config[h].margin)
                  : (s += t.dCtx.isSparkline || !l.globals.axisCharts ? 0 : 5);
              }),
                !l.config.legend.show ||
                  l.config.legend.position !== "bottom" ||
                  l.config.legend.floating ||
                  l.globals.axisCharts ||
                  (s += 10);
              var a = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                o = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
              (r.gridHeight = r.gridHeight - a.height - o.height - s),
                (r.translateY = r.translateY + a.height + o.height + s);
            },
          },
          {
            key: "setGridXPosForDualYAxis",
            value: function (t, l) {
              var r = this.w,
                s = new mt(this.dCtx.ctx);
              r.config.yaxis.map(function (a, o) {
                r.globals.ignoreYAxisIndexes.indexOf(o) !== -1 ||
                  a.floating ||
                  s.isYAxisHidden(o) ||
                  (a.opposite &&
                    (r.globals.translateX =
                      r.globals.translateX -
                      (l[o].width + t[o].width) -
                      parseInt(r.config.yaxis[o].labels.style.fontSize, 10) /
                        1.2 -
                      12),
                  r.globals.translateX < 2 && (r.globals.translateX = 2));
              });
            },
          },
        ]),
        T
      );
    })(),
    gl = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.lgRect = {}),
          (this.yAxisWidth = 0),
          (this.yAxisWidthLeft = 0),
          (this.yAxisWidthRight = 0),
          (this.xAxisHeight = 0),
          (this.isSparkline = this.w.config.chart.sparkline.enabled),
          (this.dimHelpers = new rt(this)),
          (this.dimYAxis = new Ee(this)),
          (this.dimXAxis = new nt(this)),
          (this.dimGrid = new St(this)),
          (this.lgWidthForSideLegends = 0),
          (this.gridPad = this.w.config.grid.padding),
          (this.xPadRight = 0),
          (this.xPadLeft = 0);
      }
      return (
        k(T, [
          {
            key: "plotCoords",
            value: function () {
              var t = this,
                l = this.w,
                r = l.globals;
              (this.lgRect = this.dimHelpers.getLegendsRect()),
                this.isSparkline &&
                  (l.config.markers.discrete.length > 0 ||
                    l.config.markers.size > 0) &&
                  Object.entries(this.gridPad).forEach(function (a) {
                    var o = q(a, 2),
                      h = o[0],
                      d = o[1];
                    t.gridPad[h] = Math.max(
                      d,
                      t.w.globals.markers.largestSize / 1.5,
                    );
                  }),
                r.axisCharts
                  ? this.setDimensionsForAxisCharts()
                  : this.setDimensionsForNonAxisCharts(),
                this.dimGrid.gridPadFortitleSubtitle(),
                (r.gridHeight =
                  r.gridHeight - this.gridPad.top - this.gridPad.bottom),
                (r.gridWidth =
                  r.gridWidth -
                  this.gridPad.left -
                  this.gridPad.right -
                  this.xPadRight -
                  this.xPadLeft);
              var s = this.dimGrid.gridPadForColumnsInNumericAxis(r.gridWidth);
              (r.gridWidth = r.gridWidth - 2 * s),
                (r.translateX =
                  r.translateX +
                  this.gridPad.left +
                  this.xPadLeft +
                  (s > 0 ? s + 4 : 0)),
                (r.translateY = r.translateY + this.gridPad.top);
            },
          },
          {
            key: "setDimensionsForAxisCharts",
            value: function () {
              var t = this,
                l = this.w,
                r = l.globals,
                s = this.dimYAxis.getyAxisLabelsCoords(),
                a = this.dimYAxis.getyAxisTitleCoords();
              (l.globals.yLabelsCoords = []),
                (l.globals.yTitleCoords = []),
                l.config.yaxis.map(function (w, S) {
                  l.globals.yLabelsCoords.push({ width: s[S].width, index: S }),
                    l.globals.yTitleCoords.push({
                      width: a[S].width,
                      index: S,
                    });
                }),
                (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
              var o = this.dimXAxis.getxAxisLabelsCoords(),
                h = this.dimXAxis.getxAxisGroupLabelsCoords(),
                d = this.dimXAxis.getxAxisTitleCoords();
              this.conditionalChecksForAxisCoords(o, d, h),
                (r.translateXAxisY = l.globals.rotateXLabels
                  ? this.xAxisHeight / 8
                  : -4),
                (r.translateXAxisX =
                  l.globals.rotateXLabels &&
                  l.globals.isXNumeric &&
                  l.config.xaxis.labels.rotate <= -45
                    ? -this.xAxisWidth / 4
                    : 0),
                l.globals.isBarHorizontal &&
                  ((r.rotateXLabels = !1),
                  (r.translateXAxisY =
                    (parseInt(l.config.xaxis.labels.style.fontSize, 10) / 1.5) *
                    -1)),
                (r.translateXAxisY =
                  r.translateXAxisY + l.config.xaxis.labels.offsetY),
                (r.translateXAxisX =
                  r.translateXAxisX + l.config.xaxis.labels.offsetX);
              var p = this.yAxisWidth,
                m = this.xAxisHeight;
              (r.xAxisLabelsHeight = this.xAxisHeight - d.height),
                (r.xAxisGroupLabelsHeight = r.xAxisLabelsHeight - o.height),
                (r.xAxisLabelsWidth = this.xAxisWidth),
                (r.xAxisHeight = this.xAxisHeight);
              var x = 10;
              (l.config.chart.type === "radar" || this.isSparkline) &&
                ((p = 0), (m = r.goldenPadding)),
                this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                (this.isSparkline || l.config.chart.type === "treemap") &&
                  ((p = 0), (m = 0), (x = 0)),
                this.isSparkline || this.dimXAxis.additionalPaddingXLabels(o);
              var v = function () {
                (r.translateX = p),
                  (r.gridHeight =
                    r.svgHeight -
                    t.lgRect.height -
                    m -
                    (t.isSparkline || l.config.chart.type === "treemap"
                      ? 0
                      : l.globals.rotateXLabels
                        ? 10
                        : 15)),
                  (r.gridWidth = r.svgWidth - p);
              };
              switch (
                (l.config.xaxis.position === "top" &&
                  (x = r.xAxisHeight - l.config.xaxis.axisTicks.height - 5),
                l.config.legend.position)
              ) {
                case "bottom":
                  (r.translateY = x), v();
                  break;
                case "top":
                  (r.translateY = this.lgRect.height + x), v();
                  break;
                case "left":
                  (r.translateY = x),
                    (r.translateX = this.lgRect.width + p),
                    (r.gridHeight = r.svgHeight - m - 12),
                    (r.gridWidth = r.svgWidth - this.lgRect.width - p);
                  break;
                case "right":
                  (r.translateY = x),
                    (r.translateX = p),
                    (r.gridHeight = r.svgHeight - m - 12),
                    (r.gridWidth = r.svgWidth - this.lgRect.width - p - 5);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
              this.dimGrid.setGridXPosForDualYAxis(a, s),
                new Y(this.ctx).setYAxisXPosition(s, a);
            },
          },
          {
            key: "setDimensionsForNonAxisCharts",
            value: function () {
              var t = this.w,
                l = t.globals,
                r = t.config,
                s = 0;
              t.config.legend.show && !t.config.legend.floating && (s = 20);
              var a =
                  r.chart.type === "pie" ||
                  r.chart.type === "polarArea" ||
                  r.chart.type === "donut"
                    ? "pie"
                    : "radialBar",
                o = r.plotOptions[a].offsetY,
                h = r.plotOptions[a].offsetX;
              if (!r.legend.show || r.legend.floating)
                return (
                  (l.gridHeight =
                    l.svgHeight - r.grid.padding.left + r.grid.padding.right),
                  (l.gridWidth = l.gridHeight),
                  (l.translateY = o),
                  void (l.translateX = h + (l.svgWidth - l.gridWidth) / 2)
                );
              switch (r.legend.position) {
                case "bottom":
                  (l.gridHeight =
                    l.svgHeight - this.lgRect.height - l.goldenPadding),
                    (l.gridWidth = l.svgWidth),
                    (l.translateY = o - 10),
                    (l.translateX = h + (l.svgWidth - l.gridWidth) / 2);
                  break;
                case "top":
                  (l.gridHeight =
                    l.svgHeight - this.lgRect.height - l.goldenPadding),
                    (l.gridWidth = l.svgWidth),
                    (l.translateY = this.lgRect.height + o + 10),
                    (l.translateX = h + (l.svgWidth - l.gridWidth) / 2);
                  break;
                case "left":
                  (l.gridWidth = l.svgWidth - this.lgRect.width - s),
                    (l.gridHeight =
                      r.chart.height !== "auto" ? l.svgHeight : l.gridWidth),
                    (l.translateY = o),
                    (l.translateX = h + this.lgRect.width + s);
                  break;
                case "right":
                  (l.gridWidth = l.svgWidth - this.lgRect.width - s - 5),
                    (l.gridHeight =
                      r.chart.height !== "auto" ? l.svgHeight : l.gridWidth),
                    (l.translateY = o),
                    (l.translateX = h + 10);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
            },
          },
          {
            key: "conditionalChecksForAxisCoords",
            value: function (t, l, r) {
              var s = this.w,
                a = s.globals.hasXaxisGroups ? 2 : 1,
                o = r.height + t.height + l.height,
                h = s.globals.isMultiLineX ? 1.2 : s.globals.LINE_HEIGHT_RATIO,
                d = s.globals.rotateXLabels ? 22 : 10,
                p =
                  s.globals.rotateXLabels &&
                  s.config.legend.position === "bottom"
                    ? 10
                    : 0;
              (this.xAxisHeight = o * h + a * d + p),
                (this.xAxisWidth = t.width),
                this.xAxisHeight - l.height > s.config.xaxis.labels.maxHeight &&
                  (this.xAxisHeight = s.config.xaxis.labels.maxHeight),
                s.config.xaxis.labels.minHeight &&
                  this.xAxisHeight < s.config.xaxis.labels.minHeight &&
                  (this.xAxisHeight = s.config.xaxis.labels.minHeight),
                s.config.xaxis.floating && (this.xAxisHeight = 0);
              var m = 0,
                x = 0;
              s.config.yaxis.forEach(function (v) {
                (m += v.labels.minWidth), (x += v.labels.maxWidth);
              }),
                this.yAxisWidth < m && (this.yAxisWidth = m),
                this.yAxisWidth > x && (this.yAxisWidth = x);
            },
          },
        ]),
        T
      );
    })(),
    vi = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.lgCtx = t);
      }
      return (
        k(T, [
          {
            key: "getLegendStyles",
            value: function () {
              var t = document.createElement("style");
              t.setAttribute("type", "text/css");
              var l = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
              return t.appendChild(l), t;
            },
          },
          {
            key: "getLegendBBox",
            value: function () {
              var t = this.w.globals.dom.baseEl
                  .querySelector(".apexcharts-legend")
                  .getBoundingClientRect(),
                l = t.width;
              return { clwh: t.height, clww: l };
            },
          },
          {
            key: "appendToForeignObject",
            value: function () {
              this.w.globals.dom.elLegendForeign.appendChild(
                this.getLegendStyles(),
              );
            },
          },
          {
            key: "toggleDataSeries",
            value: function (t, l) {
              var r = this,
                s = this.w;
              if (s.globals.axisCharts || s.config.chart.type === "radialBar") {
                s.globals.resized = !0;
                var a = null,
                  o = null;
                (s.globals.risingSeries = []),
                  s.globals.axisCharts
                    ? ((a = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(t, "']"),
                      )),
                      (o = parseInt(a.getAttribute("data:realIndex"), 10)))
                    : ((a = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(t + 1, "']"),
                      )),
                      (o = parseInt(a.getAttribute("rel"), 10) - 1)),
                  l
                    ? [
                        {
                          cs: s.globals.collapsedSeries,
                          csi: s.globals.collapsedSeriesIndices,
                        },
                        {
                          cs: s.globals.ancillaryCollapsedSeries,
                          csi: s.globals.ancillaryCollapsedSeriesIndices,
                        },
                      ].forEach(function (m) {
                        r.riseCollapsedSeries(m.cs, m.csi, o);
                      })
                    : this.hideSeries({ seriesEl: a, realIndex: o });
              } else {
                var h = s.globals.dom.Paper.select(
                    " .apexcharts-series[rel='".concat(t + 1, "'] path"),
                  ),
                  d = s.config.chart.type;
                if (d === "pie" || d === "polarArea" || d === "donut") {
                  var p = s.config.plotOptions.pie.donut.labels;
                  new Z(this.lgCtx.ctx).pathMouseDown(h.members[0], null),
                    this.lgCtx.ctx.pie.printDataLabelsInner(
                      h.members[0].node,
                      p,
                    );
                }
                h.fire("click");
              }
            },
          },
          {
            key: "hideSeries",
            value: function (t) {
              var l = t.seriesEl,
                r = t.realIndex,
                s = this.w,
                a = L.clone(s.config.series);
              if (s.globals.axisCharts) {
                var o = !1;
                if (
                  (s.config.yaxis[r] &&
                    s.config.yaxis[r].show &&
                    s.config.yaxis[r].showAlways &&
                    ((o = !0),
                    s.globals.ancillaryCollapsedSeriesIndices.indexOf(r) < 0 &&
                      (s.globals.ancillaryCollapsedSeries.push({
                        index: r,
                        data: a[r].data.slice(),
                        type: l.parentNode.className.baseVal.split("-")[1],
                      }),
                      s.globals.ancillaryCollapsedSeriesIndices.push(r))),
                  !o)
                ) {
                  s.globals.collapsedSeries.push({
                    index: r,
                    data: a[r].data.slice(),
                    type: l.parentNode.className.baseVal.split("-")[1],
                  }),
                    s.globals.collapsedSeriesIndices.push(r);
                  var h = s.globals.risingSeries.indexOf(r);
                  s.globals.risingSeries.splice(h, 1);
                }
              } else
                s.globals.collapsedSeries.push({ index: r, data: a[r] }),
                  s.globals.collapsedSeriesIndices.push(r);
              for (var d = l.childNodes, p = 0; p < d.length; p++)
                d[p].classList.contains("apexcharts-series-markers-wrap") &&
                  (d[p].classList.contains("apexcharts-hide")
                    ? d[p].classList.remove("apexcharts-hide")
                    : d[p].classList.add("apexcharts-hide"));
              (s.globals.allSeriesCollapsed =
                s.globals.collapsedSeries.length === s.config.series.length),
                (a = this._getSeriesBasedOnCollapsedState(a)),
                this.lgCtx.ctx.updateHelpers._updateSeries(
                  a,
                  s.config.chart.animations.dynamicAnimation.enabled,
                );
            },
          },
          {
            key: "riseCollapsedSeries",
            value: function (t, l, r) {
              var s = this.w,
                a = L.clone(s.config.series);
              if (t.length > 0) {
                for (var o = 0; o < t.length; o++)
                  t[o].index === r &&
                    (s.globals.axisCharts
                      ? ((a[r].data = t[o].data.slice()),
                        t.splice(o, 1),
                        l.splice(o, 1),
                        s.globals.risingSeries.push(r))
                      : ((a[r] = t[o].data),
                        t.splice(o, 1),
                        l.splice(o, 1),
                        s.globals.risingSeries.push(r)));
                (a = this._getSeriesBasedOnCollapsedState(a)),
                  this.lgCtx.ctx.updateHelpers._updateSeries(
                    a,
                    s.config.chart.animations.dynamicAnimation.enabled,
                  );
              }
            },
          },
          {
            key: "_getSeriesBasedOnCollapsedState",
            value: function (t) {
              var l = this.w;
              return (
                l.globals.axisCharts
                  ? t.forEach(function (r, s) {
                      l.globals.collapsedSeriesIndices.indexOf(s) > -1 &&
                        (t[s].data = []);
                    })
                  : t.forEach(function (r, s) {
                      l.globals.collapsedSeriesIndices.indexOf(s) > -1 &&
                        (t[s] = 0);
                    }),
                t
              );
            },
          },
        ]),
        T
      );
    })(),
    ih = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.onLegendClick = this.onLegendClick.bind(this)),
          (this.onLegendHovered = this.onLegendHovered.bind(this)),
          (this.isBarsDistributed =
            this.w.config.chart.type === "bar" &&
            this.w.config.plotOptions.bar.distributed &&
            this.w.config.series.length === 1),
          (this.legendHelpers = new vi(this));
      }
      return (
        k(T, [
          {
            key: "init",
            value: function () {
              var t = this.w,
                l = t.globals,
                r = t.config;
              if (
                ((r.legend.showForSingleSeries && l.series.length === 1) ||
                  this.isBarsDistributed ||
                  l.series.length > 1 ||
                  !l.axisCharts) &&
                r.legend.show
              ) {
                for (; l.dom.elLegendWrap.firstChild; )
                  l.dom.elLegendWrap.removeChild(l.dom.elLegendWrap.firstChild);
                this.drawLegends(),
                  L.isIE11()
                    ? document
                        .getElementsByTagName("head")[0]
                        .appendChild(this.legendHelpers.getLegendStyles())
                    : this.legendHelpers.appendToForeignObject(),
                  r.legend.position === "bottom" || r.legend.position === "top"
                    ? this.legendAlignHorizontal()
                    : (r.legend.position !== "right" &&
                        r.legend.position !== "left") ||
                      this.legendAlignVertical();
              }
            },
          },
          {
            key: "drawLegends",
            value: function () {
              var t = this,
                l = this.w,
                r = l.config.legend.fontFamily,
                s = l.globals.seriesNames,
                a = l.globals.colors.slice();
              if (l.config.chart.type === "heatmap") {
                var o = l.config.plotOptions.heatmap.colorScale.ranges;
                (s = o.map(function (ne) {
                  return ne.name ? ne.name : ne.from + " - " + ne.to;
                })),
                  (a = o.map(function (ne) {
                    return ne.color;
                  }));
              } else this.isBarsDistributed && (s = l.globals.labels.slice());
              l.config.legend.customLegendItems.length &&
                (s = l.config.legend.customLegendItems);
              for (
                var h = l.globals.legendFormatter,
                  d = l.config.legend.inverseOrder,
                  p = d ? s.length - 1 : 0;
                d ? p >= 0 : p <= s.length - 1;
                d ? p-- : p++
              ) {
                var m = h(s[p], { seriesIndex: p, w: l }),
                  x = !1,
                  v = !1;
                if (l.globals.collapsedSeries.length > 0)
                  for (var w = 0; w < l.globals.collapsedSeries.length; w++)
                    l.globals.collapsedSeries[w].index === p && (x = !0);
                if (l.globals.ancillaryCollapsedSeriesIndices.length > 0)
                  for (
                    var S = 0;
                    S < l.globals.ancillaryCollapsedSeriesIndices.length;
                    S++
                  )
                    l.globals.ancillaryCollapsedSeriesIndices[S] === p &&
                      (v = !0);
                var A = document.createElement("span");
                A.classList.add("apexcharts-legend-marker");
                var P = l.config.legend.markers.offsetX,
                  R = l.config.legend.markers.offsetY,
                  O = l.config.legend.markers.height,
                  f = l.config.legend.markers.width,
                  y = l.config.legend.markers.strokeWidth,
                  C = l.config.legend.markers.strokeColor,
                  M = l.config.legend.markers.radius,
                  z = A.style;
                (z.background = a[p]),
                  (z.color = a[p]),
                  z.setProperty("background", a[p], "important"),
                  l.config.legend.markers.fillColors &&
                    l.config.legend.markers.fillColors[p] &&
                    (z.background = l.config.legend.markers.fillColors[p]),
                  l.globals.seriesColors[p] !== void 0 &&
                    ((z.background = l.globals.seriesColors[p]),
                    (z.color = l.globals.seriesColors[p])),
                  (z.height = Array.isArray(O)
                    ? parseFloat(O[p]) + "px"
                    : parseFloat(O) + "px"),
                  (z.width = Array.isArray(f)
                    ? parseFloat(f[p]) + "px"
                    : parseFloat(f) + "px"),
                  (z.left =
                    (Array.isArray(P) ? parseFloat(P[p]) : parseFloat(P)) +
                    "px"),
                  (z.top =
                    (Array.isArray(R) ? parseFloat(R[p]) : parseFloat(R)) +
                    "px"),
                  (z.borderWidth = Array.isArray(y) ? y[p] : y),
                  (z.borderColor = Array.isArray(C) ? C[p] : C),
                  (z.borderRadius = Array.isArray(M)
                    ? parseFloat(M[p]) + "px"
                    : parseFloat(M) + "px"),
                  l.config.legend.markers.customHTML &&
                    (Array.isArray(l.config.legend.markers.customHTML)
                      ? l.config.legend.markers.customHTML[p] &&
                        (A.innerHTML = l.config.legend.markers.customHTML[p]())
                      : (A.innerHTML = l.config.legend.markers.customHTML())),
                  Z.setAttrs(A, { rel: p + 1, "data:collapsed": x || v }),
                  (x || v) && A.classList.add("apexcharts-inactive-legend");
                var D = document.createElement("div"),
                  U = document.createElement("span");
                U.classList.add("apexcharts-legend-text"),
                  (U.innerHTML = Array.isArray(m) ? m.join(" ") : m);
                var $ = l.config.legend.labels.useSeriesColors
                  ? l.globals.colors[p]
                  : l.config.legend.labels.colors;
                $ || ($ = l.config.chart.foreColor),
                  (U.style.color = $),
                  (U.style.fontSize =
                    parseFloat(l.config.legend.fontSize) + "px"),
                  (U.style.fontWeight = l.config.legend.fontWeight),
                  (U.style.fontFamily = r || l.config.chart.fontFamily),
                  Z.setAttrs(U, {
                    rel: p + 1,
                    i: p,
                    "data:default-text": encodeURIComponent(m),
                    "data:collapsed": x || v,
                  }),
                  D.appendChild(A),
                  D.appendChild(U);
                var le = new oe(this.ctx);
                l.config.legend.showForZeroSeries ||
                  (le.getSeriesTotalByIndex(p) === 0 &&
                    le.seriesHaveSameValues(p) &&
                    !le.isSeriesNull(p) &&
                    l.globals.collapsedSeriesIndices.indexOf(p) === -1 &&
                    l.globals.ancillaryCollapsedSeriesIndices.indexOf(p) ===
                      -1 &&
                    D.classList.add("apexcharts-hidden-zero-series")),
                  l.config.legend.showForNullSeries ||
                    (le.isSeriesNull(p) &&
                      l.globals.collapsedSeriesIndices.indexOf(p) === -1 &&
                      l.globals.ancillaryCollapsedSeriesIndices.indexOf(p) ===
                        -1 &&
                      D.classList.add("apexcharts-hidden-null-series")),
                  l.globals.dom.elLegendWrap.appendChild(D),
                  l.globals.dom.elLegendWrap.classList.add(
                    "apexcharts-align-".concat(l.config.legend.horizontalAlign),
                  ),
                  l.globals.dom.elLegendWrap.classList.add(
                    "apx-legend-position-" + l.config.legend.position,
                  ),
                  D.classList.add("apexcharts-legend-series"),
                  (D.style.margin = ""
                    .concat(l.config.legend.itemMargin.vertical, "px ")
                    .concat(l.config.legend.itemMargin.horizontal, "px")),
                  (l.globals.dom.elLegendWrap.style.width = l.config.legend
                    .width
                    ? l.config.legend.width + "px"
                    : ""),
                  (l.globals.dom.elLegendWrap.style.height = l.config.legend
                    .height
                    ? l.config.legend.height + "px"
                    : ""),
                  Z.setAttrs(D, {
                    rel: p + 1,
                    seriesName: L.escapeString(s[p]),
                    "data:collapsed": x || v,
                  }),
                  (x || v) && D.classList.add("apexcharts-inactive-legend"),
                  l.config.legend.onItemClick.toggleDataSeries ||
                    D.classList.add("apexcharts-no-click");
              }
              l.globals.dom.elWrap.addEventListener(
                "click",
                t.onLegendClick,
                !0,
              ),
                l.config.legend.onItemHover.highlightDataSeries &&
                  l.config.legend.customLegendItems.length === 0 &&
                  (l.globals.dom.elWrap.addEventListener(
                    "mousemove",
                    t.onLegendHovered,
                    !0,
                  ),
                  l.globals.dom.elWrap.addEventListener(
                    "mouseout",
                    t.onLegendHovered,
                    !0,
                  ));
            },
          },
          {
            key: "setLegendWrapXY",
            value: function (t, l) {
              var r = this.w,
                s = r.globals.dom.elLegendWrap,
                a = s.getBoundingClientRect(),
                o = 0,
                h = 0;
              if (r.config.legend.position === "bottom")
                h += r.globals.svgHeight - a.height / 2;
              else if (r.config.legend.position === "top") {
                var d = new gl(this.ctx),
                  p = d.dimHelpers.getTitleSubtitleCoords("title").height,
                  m = d.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                h = h + (p > 0 ? p - 10 : 0) + (m > 0 ? m - 10 : 0);
              }
              (s.style.position = "absolute"),
                (o = o + t + r.config.legend.offsetX),
                (h = h + l + r.config.legend.offsetY),
                (s.style.left = o + "px"),
                (s.style.top = h + "px"),
                r.config.legend.position === "bottom"
                  ? ((s.style.top = "auto"),
                    (s.style.bottom = 5 - r.config.legend.offsetY + "px"))
                  : r.config.legend.position === "right" &&
                    ((s.style.left = "auto"),
                    (s.style.right = 25 + r.config.legend.offsetX + "px")),
                ["width", "height"].forEach(function (x) {
                  s.style[x] &&
                    (s.style[x] = parseInt(r.config.legend[x], 10) + "px");
                });
            },
          },
          {
            key: "legendAlignHorizontal",
            value: function () {
              var t = this.w;
              t.globals.dom.elLegendWrap.style.right = 0;
              var l = this.legendHelpers.getLegendBBox(),
                r = new gl(this.ctx),
                s = r.dimHelpers.getTitleSubtitleCoords("title"),
                a = r.dimHelpers.getTitleSubtitleCoords("subtitle"),
                o = 0;
              t.config.legend.position === "bottom"
                ? (o = -l.clwh / 1.8)
                : t.config.legend.position === "top" &&
                  (o =
                    s.height +
                    a.height +
                    t.config.title.margin +
                    t.config.subtitle.margin -
                    10),
                this.setLegendWrapXY(20, o);
            },
          },
          {
            key: "legendAlignVertical",
            value: function () {
              var t = this.w,
                l = this.legendHelpers.getLegendBBox(),
                r = 0;
              t.config.legend.position === "left" && (r = 20),
                t.config.legend.position === "right" &&
                  (r = t.globals.svgWidth - l.clww - 10),
                this.setLegendWrapXY(r, 20);
            },
          },
          {
            key: "onLegendHovered",
            value: function (t) {
              var l = this.w,
                r =
                  t.target.classList.contains("apexcharts-legend-text") ||
                  t.target.classList.contains("apexcharts-legend-marker");
              if (l.config.chart.type === "heatmap" || this.isBarsDistributed) {
                if (r) {
                  var s = parseInt(t.target.getAttribute("rel"), 10) - 1;
                  this.ctx.events.fireEvent("legendHover", [
                    this.ctx,
                    s,
                    this.w,
                  ]),
                    new $e(this.ctx).highlightRangeInSeries(t, t.target);
                }
              } else
                !t.target.classList.contains("apexcharts-inactive-legend") &&
                  r &&
                  new $e(this.ctx).toggleSeriesOnHover(t, t.target);
            },
          },
          {
            key: "onLegendClick",
            value: function (t) {
              var l = this.w;
              if (
                !l.config.legend.customLegendItems.length &&
                (t.target.classList.contains("apexcharts-legend-text") ||
                  t.target.classList.contains("apexcharts-legend-marker"))
              ) {
                var r = parseInt(t.target.getAttribute("rel"), 10) - 1,
                  s = t.target.getAttribute("data:collapsed") === "true",
                  a = this.w.config.chart.events.legendClick;
                typeof a == "function" && a(this.ctx, r, this.w),
                  this.ctx.events.fireEvent("legendClick", [
                    this.ctx,
                    r,
                    this.w,
                  ]);
                var o = this.w.config.legend.markers.onClick;
                typeof o == "function" &&
                  t.target.classList.contains("apexcharts-legend-marker") &&
                  (o(this.ctx, r, this.w),
                  this.ctx.events.fireEvent("legendMarkerClick", [
                    this.ctx,
                    r,
                    this.w,
                  ])),
                  l.config.chart.type !== "treemap" &&
                    l.config.chart.type !== "heatmap" &&
                    !this.isBarsDistributed &&
                    l.config.legend.onItemClick.toggleDataSeries &&
                    this.legendHelpers.toggleDataSeries(r, s);
              }
            },
          },
        ]),
        T
      );
    })(),
    rh = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
        var l = this.w;
        (this.ev = this.w.config.chart.events),
          (this.selectedClass = "apexcharts-selected"),
          (this.localeValues = this.w.globals.locale.toolbar),
          (this.minX = l.globals.minX),
          (this.maxX = l.globals.maxX);
      }
      return (
        k(T, [
          {
            key: "createToolbar",
            value: function () {
              var t = this,
                l = this.w,
                r = function () {
                  return document.createElement("div");
                },
                s = r();
              if (
                (s.setAttribute("class", "apexcharts-toolbar"),
                (s.style.top = l.config.chart.toolbar.offsetY + "px"),
                (s.style.right = 3 - l.config.chart.toolbar.offsetX + "px"),
                l.globals.dom.elWrap.appendChild(s),
                (this.elZoom = r()),
                (this.elZoomIn = r()),
                (this.elZoomOut = r()),
                (this.elPan = r()),
                (this.elSelection = r()),
                (this.elZoomReset = r()),
                (this.elMenuIcon = r()),
                (this.elMenu = r()),
                (this.elCustomIcons = []),
                (this.t = l.config.chart.toolbar.tools),
                Array.isArray(this.t.customIcons))
              )
                for (var a = 0; a < this.t.customIcons.length; a++)
                  this.elCustomIcons.push(r());
              var o = [],
                h = function (x, v, w) {
                  var S = x.toLowerCase();
                  t.t[S] &&
                    l.config.chart.zoom.enabled &&
                    o.push({
                      el: v,
                      icon: typeof t.t[S] == "string" ? t.t[S] : w,
                      title: t.localeValues[x],
                      class: "apexcharts-".concat(S, "-icon"),
                    });
                };
              h(
                "zoomIn",
                this.elZoomIn,
                `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`,
              ),
                h(
                  "zoomOut",
                  this.elZoomOut,
                  `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`,
                );
              var d = function (x) {
                t.t[x] &&
                  l.config.chart[x].enabled &&
                  o.push({
                    el: x === "zoom" ? t.elZoom : t.elSelection,
                    icon:
                      typeof t.t[x] == "string"
                        ? t.t[x]
                        : x === "zoom"
                          ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                          : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                    title:
                      t.localeValues[
                        x === "zoom" ? "selectionZoom" : "selection"
                      ],
                    class: l.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-".concat(x, "-icon"),
                  });
              };
              d("zoom"),
                d("selection"),
                this.t.pan &&
                  l.config.chart.zoom.enabled &&
                  o.push({
                    el: this.elPan,
                    icon:
                      typeof this.t.pan == "string"
                        ? this.t.pan
                        : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                    title: this.localeValues.pan,
                    class: l.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-pan-icon",
                  }),
                h(
                  "reset",
                  this.elZoomReset,
                  `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`,
                ),
                this.t.download &&
                  o.push({
                    el: this.elMenuIcon,
                    icon:
                      typeof this.t.download == "string"
                        ? this.t.download
                        : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                    title: this.localeValues.menu,
                    class: "apexcharts-menu-icon",
                  });
              for (var p = 0; p < this.elCustomIcons.length; p++)
                o.push({
                  el: this.elCustomIcons[p],
                  icon: this.t.customIcons[p].icon,
                  title: this.t.customIcons[p].title,
                  index: this.t.customIcons[p].index,
                  class:
                    "apexcharts-toolbar-custom-icon " +
                    this.t.customIcons[p].class,
                });
              o.forEach(function (x, v) {
                x.index && L.moveIndexInArray(o, v, x.index);
              });
              for (var m = 0; m < o.length; m++)
                Z.setAttrs(o[m].el, { class: o[m].class, title: o[m].title }),
                  (o[m].el.innerHTML = o[m].icon),
                  s.appendChild(o[m].el);
              this._createHamburgerMenu(s),
                l.globals.zoomEnabled
                  ? this.elZoom.classList.add(this.selectedClass)
                  : l.globals.panEnabled
                    ? this.elPan.classList.add(this.selectedClass)
                    : l.globals.selectionEnabled &&
                      this.elSelection.classList.add(this.selectedClass),
                this.addToolbarEventListeners();
            },
          },
          {
            key: "_createHamburgerMenu",
            value: function (t) {
              (this.elMenuItems = []),
                t.appendChild(this.elMenu),
                Z.setAttrs(this.elMenu, { class: "apexcharts-menu" });
              var l = [
                { name: "exportSVG", title: this.localeValues.exportToSVG },
                { name: "exportPNG", title: this.localeValues.exportToPNG },
                { name: "exportCSV", title: this.localeValues.exportToCSV },
              ];
              this.w.globals.allSeriesHasEqualX || l.splice(2, 1);
              for (var r = 0; r < l.length; r++)
                this.elMenuItems.push(document.createElement("div")),
                  (this.elMenuItems[r].innerHTML = l[r].title),
                  Z.setAttrs(this.elMenuItems[r], {
                    class: "apexcharts-menu-item ".concat(l[r].name),
                    title: l[r].title,
                  }),
                  this.elMenu.appendChild(this.elMenuItems[r]);
            },
          },
          {
            key: "addToolbarEventListeners",
            value: function () {
              var t = this;
              this.elZoomReset.addEventListener(
                "click",
                this.handleZoomReset.bind(this),
              ),
                this.elSelection.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "selection"),
                ),
                this.elZoom.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "zoom"),
                ),
                this.elZoomIn.addEventListener(
                  "click",
                  this.handleZoomIn.bind(this),
                ),
                this.elZoomOut.addEventListener(
                  "click",
                  this.handleZoomOut.bind(this),
                ),
                this.elPan.addEventListener(
                  "click",
                  this.togglePanning.bind(this),
                ),
                this.elMenuIcon.addEventListener(
                  "click",
                  this.toggleMenu.bind(this),
                ),
                this.elMenuItems.forEach(function (r) {
                  r.classList.contains("exportSVG")
                    ? r.addEventListener(
                        "click",
                        t.handleDownload.bind(t, "svg"),
                      )
                    : r.classList.contains("exportPNG")
                      ? r.addEventListener(
                          "click",
                          t.handleDownload.bind(t, "png"),
                        )
                      : r.classList.contains("exportCSV") &&
                        r.addEventListener(
                          "click",
                          t.handleDownload.bind(t, "csv"),
                        );
                });
              for (var l = 0; l < this.t.customIcons.length; l++)
                this.elCustomIcons[l].addEventListener(
                  "click",
                  this.t.customIcons[l].click.bind(this, this.ctx, this.ctx.w),
                );
            },
          },
          {
            key: "toggleZoomSelection",
            value: function (t) {
              this.ctx.getSyncedCharts().forEach(function (l) {
                l.ctx.toolbar.toggleOtherControls();
                var r =
                    t === "selection"
                      ? l.ctx.toolbar.elSelection
                      : l.ctx.toolbar.elZoom,
                  s = t === "selection" ? "selectionEnabled" : "zoomEnabled";
                (l.w.globals[s] = !l.w.globals[s]),
                  r.classList.contains(l.ctx.toolbar.selectedClass)
                    ? r.classList.remove(l.ctx.toolbar.selectedClass)
                    : r.classList.add(l.ctx.toolbar.selectedClass);
              });
            },
          },
          {
            key: "getToolbarIconsReference",
            value: function () {
              var t = this.w;
              this.elZoom ||
                (this.elZoom = t.globals.dom.baseEl.querySelector(
                  ".apexcharts-zoom-icon",
                )),
                this.elPan ||
                  (this.elPan = t.globals.dom.baseEl.querySelector(
                    ".apexcharts-pan-icon",
                  )),
                this.elSelection ||
                  (this.elSelection = t.globals.dom.baseEl.querySelector(
                    ".apexcharts-selection-icon",
                  ));
            },
          },
          {
            key: "enableZoomPanFromToolbar",
            value: function (t) {
              this.toggleOtherControls(),
                t === "pan"
                  ? (this.w.globals.panEnabled = !0)
                  : (this.w.globals.zoomEnabled = !0);
              var l = t === "pan" ? this.elPan : this.elZoom,
                r = t === "pan" ? this.elZoom : this.elPan;
              l && l.classList.add(this.selectedClass),
                r && r.classList.remove(this.selectedClass);
            },
          },
          {
            key: "togglePanning",
            value: function () {
              this.ctx.getSyncedCharts().forEach(function (t) {
                t.ctx.toolbar.toggleOtherControls(),
                  (t.w.globals.panEnabled = !t.w.globals.panEnabled),
                  t.ctx.toolbar.elPan.classList.contains(
                    t.ctx.toolbar.selectedClass,
                  )
                    ? t.ctx.toolbar.elPan.classList.remove(
                        t.ctx.toolbar.selectedClass,
                      )
                    : t.ctx.toolbar.elPan.classList.add(
                        t.ctx.toolbar.selectedClass,
                      );
              });
            },
          },
          {
            key: "toggleOtherControls",
            value: function () {
              var t = this,
                l = this.w;
              (l.globals.panEnabled = !1),
                (l.globals.zoomEnabled = !1),
                (l.globals.selectionEnabled = !1),
                this.getToolbarIconsReference(),
                [this.elPan, this.elSelection, this.elZoom].forEach(
                  function (r) {
                    r && r.classList.remove(t.selectedClass);
                  },
                );
            },
          },
          {
            key: "handleZoomIn",
            value: function () {
              var t = this.w;
              t.globals.isRangeBar &&
                ((this.minX = t.globals.minY), (this.maxX = t.globals.maxY));
              var l = (this.minX + this.maxX) / 2,
                r = (this.minX + l) / 2,
                s = (this.maxX + l) / 2,
                a = this._getNewMinXMaxX(r, s);
              t.globals.disableZoomIn || this.zoomUpdateOptions(a.minX, a.maxX);
            },
          },
          {
            key: "handleZoomOut",
            value: function () {
              var t = this.w;
              if (
                (t.globals.isRangeBar &&
                  ((this.minX = t.globals.minY), (this.maxX = t.globals.maxY)),
                !(
                  t.config.xaxis.type === "datetime" &&
                  new Date(this.minX).getUTCFullYear() < 1e3
                ))
              ) {
                var l = (this.minX + this.maxX) / 2,
                  r = this.minX - (l - this.minX),
                  s = this.maxX - (l - this.maxX),
                  a = this._getNewMinXMaxX(r, s);
                t.globals.disableZoomOut ||
                  this.zoomUpdateOptions(a.minX, a.maxX);
              }
            },
          },
          {
            key: "_getNewMinXMaxX",
            value: function (t, l) {
              var r = this.w.config.xaxis.convertedCatToNumeric;
              return {
                minX: r ? Math.floor(t) : t,
                maxX: r ? Math.floor(l) : l,
              };
            },
          },
          {
            key: "zoomUpdateOptions",
            value: function (t, l) {
              var r = this.w;
              if (t !== void 0 || l !== void 0) {
                if (
                  !(
                    r.config.xaxis.convertedCatToNumeric &&
                    (t < 1 && ((t = 1), (l = r.globals.dataPoints)), l - t < 2)
                  )
                ) {
                  var s = { min: t, max: l },
                    a = this.getBeforeZoomRange(s);
                  a && (s = a.xaxis);
                  var o = { xaxis: s },
                    h = L.clone(r.globals.initialConfig.yaxis);
                  r.config.chart.zoom.autoScaleYaxis &&
                    (h = new N(this.ctx).autoScaleY(this.ctx, h, { xaxis: s })),
                    r.config.chart.group || (o.yaxis = h),
                    (this.w.globals.zoomed = !0),
                    this.ctx.updateHelpers._updateOptions(
                      o,
                      !1,
                      this.w.config.chart.animations.dynamicAnimation.enabled,
                    ),
                    this.zoomCallback(s, h);
                }
              } else this.handleZoomReset();
            },
          },
          {
            key: "zoomCallback",
            value: function (t, l) {
              typeof this.ev.zoomed == "function" &&
                this.ev.zoomed(this.ctx, { xaxis: t, yaxis: l });
            },
          },
          {
            key: "getBeforeZoomRange",
            value: function (t, l) {
              var r = null;
              return (
                typeof this.ev.beforeZoom == "function" &&
                  (r = this.ev.beforeZoom(this, { xaxis: t, yaxis: l })),
                r
              );
            },
          },
          {
            key: "toggleMenu",
            value: function () {
              var t = this;
              window.setTimeout(function () {
                t.elMenu.classList.contains("apexcharts-menu-open")
                  ? t.elMenu.classList.remove("apexcharts-menu-open")
                  : t.elMenu.classList.add("apexcharts-menu-open");
              }, 0);
            },
          },
          {
            key: "handleDownload",
            value: function (t) {
              var l = this.w,
                r = new Gi(this.ctx);
              switch (t) {
                case "svg":
                  r.exportToSVG(this.ctx);
                  break;
                case "png":
                  r.exportToPng(this.ctx);
                  break;
                case "csv":
                  r.exportToCSV({
                    series: l.config.series,
                    columnDelimiter:
                      l.config.chart.toolbar.export.csv.columnDelimiter,
                  });
              }
            },
          },
          {
            key: "handleZoomReset",
            value: function (t) {
              this.ctx.getSyncedCharts().forEach(function (l) {
                var r = l.w;
                if (
                  ((r.globals.lastXAxis.min = void 0),
                  (r.globals.lastXAxis.max = void 0),
                  l.updateHelpers.revertDefaultAxisMinMax(),
                  typeof r.config.chart.events.beforeResetZoom == "function")
                ) {
                  var s = r.config.chart.events.beforeResetZoom(l, r);
                  s && l.updateHelpers.revertDefaultAxisMinMax(s);
                }
                typeof r.config.chart.events.zoomed == "function" &&
                  l.ctx.toolbar.zoomCallback({
                    min: r.config.xaxis.min,
                    max: r.config.xaxis.max,
                  }),
                  (r.globals.zoomed = !1);
                var a = l.ctx.series.emptyCollapsedSeries(
                  L.clone(r.globals.initialSeries),
                );
                l.updateHelpers._updateSeries(
                  a,
                  r.config.chart.animations.dynamicAnimation.enabled,
                );
              });
            },
          },
          {
            key: "destroy",
            value: function () {
              (this.elZoom = null),
                (this.elZoomIn = null),
                (this.elZoomOut = null),
                (this.elPan = null),
                (this.elSelection = null),
                (this.elZoomReset = null),
                (this.elMenuIcon = null);
            },
          },
        ]),
        T
      );
    })(),
    Tp = (function (T) {
      I(l, rh);
      var t = K(l);
      function l(r) {
        var s;
        return (
          g(this, l),
          ((s = t.call(this, r)).ctx = r),
          (s.w = r.w),
          (s.dragged = !1),
          (s.graphics = new Z(s.ctx)),
          (s.eventList = [
            "mousedown",
            "mouseleave",
            "mousemove",
            "touchstart",
            "touchmove",
            "mouseup",
            "touchend",
          ]),
          (s.clientX = 0),
          (s.clientY = 0),
          (s.startX = 0),
          (s.endX = 0),
          (s.dragX = 0),
          (s.startY = 0),
          (s.endY = 0),
          (s.dragY = 0),
          (s.moveDirection = "none"),
          s
        );
      }
      return (
        k(l, [
          {
            key: "init",
            value: function (r) {
              var s = this,
                a = r.xyRatios,
                o = this.w,
                h = this;
              (this.xyRatios = a),
                (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.gridRect =
                  o.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                this.selectionRect.node.classList.add(
                  "apexcharts-selection-rect",
                ),
                o.globals.dom.elGraphical.add(this.zoomRect),
                o.globals.dom.elGraphical.add(this.selectionRect),
                o.config.chart.selection.type === "x"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({
                        minX: 0,
                        minY: 0,
                        maxX: o.globals.gridWidth,
                        maxY: o.globals.gridHeight,
                      })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging"),
                      ))
                  : o.config.chart.selection.type === "y"
                    ? (this.slDraggableRect = this.selectionRect
                        .draggable({ minX: 0, maxX: o.globals.gridWidth })
                        .on(
                          "dragmove",
                          this.selectionDragging.bind(this, "dragging"),
                        ))
                    : (this.slDraggableRect = this.selectionRect
                        .draggable()
                        .on(
                          "dragmove",
                          this.selectionDragging.bind(this, "dragging"),
                        )),
                this.preselectedSelection(),
                (this.hoverArea = o.globals.dom.baseEl.querySelector(
                  "".concat(o.globals.chartClass, " .apexcharts-svg"),
                )),
                this.hoverArea.classList.add("apexcharts-zoomable"),
                this.eventList.forEach(function (d) {
                  s.hoverArea.addEventListener(d, h.svgMouseEvents.bind(h, a), {
                    capture: !1,
                    passive: !0,
                  });
                });
            },
          },
          {
            key: "destroy",
            value: function () {
              this.slDraggableRect &&
                (this.slDraggableRect.draggable(!1),
                this.slDraggableRect.off(),
                this.selectionRect.off()),
                (this.selectionRect = null),
                (this.zoomRect = null),
                (this.gridRect = null);
            },
          },
          {
            key: "svgMouseEvents",
            value: function (r, s) {
              var a = this.w,
                o = this,
                h = this.ctx.toolbar,
                d = a.globals.zoomEnabled
                  ? a.config.chart.zoom.type
                  : a.config.chart.selection.type,
                p = a.config.chart.toolbar.autoSelected;
              if (
                (s.shiftKey
                  ? ((this.shiftWasPressed = !0),
                    h.enableZoomPanFromToolbar(p === "pan" ? "zoom" : "pan"))
                  : this.shiftWasPressed &&
                    (h.enableZoomPanFromToolbar(p),
                    (this.shiftWasPressed = !1)),
                s.target)
              ) {
                var m,
                  x = s.target.classList;
                if (
                  (s.target.parentNode &&
                    s.target.parentNode !== null &&
                    (m = s.target.parentNode.classList),
                  !(
                    x.contains("apexcharts-selection-rect") ||
                    x.contains("apexcharts-legend-marker") ||
                    x.contains("apexcharts-legend-text") ||
                    (m && m.contains("apexcharts-toolbar"))
                  ))
                ) {
                  if (
                    ((o.clientX =
                      s.type === "touchmove" || s.type === "touchstart"
                        ? s.touches[0].clientX
                        : s.type === "touchend"
                          ? s.changedTouches[0].clientX
                          : s.clientX),
                    (o.clientY =
                      s.type === "touchmove" || s.type === "touchstart"
                        ? s.touches[0].clientY
                        : s.type === "touchend"
                          ? s.changedTouches[0].clientY
                          : s.clientY),
                    s.type === "mousedown" && s.which === 1)
                  ) {
                    var v = o.gridRect.getBoundingClientRect();
                    (o.startX = o.clientX - v.left),
                      (o.startY = o.clientY - v.top),
                      (o.dragged = !1),
                      (o.w.globals.mousedown = !0);
                  }
                  if (
                    (((s.type === "mousemove" && s.which === 1) ||
                      s.type === "touchmove") &&
                      ((o.dragged = !0),
                      a.globals.panEnabled
                        ? ((a.globals.selection = null),
                          o.w.globals.mousedown &&
                            o.panDragging({
                              context: o,
                              zoomtype: d,
                              xyRatios: r,
                            }))
                        : ((o.w.globals.mousedown && a.globals.zoomEnabled) ||
                            (o.w.globals.mousedown &&
                              a.globals.selectionEnabled)) &&
                          (o.selection = o.selectionDrawing({
                            context: o,
                            zoomtype: d,
                          }))),
                    s.type === "mouseup" ||
                      s.type === "touchend" ||
                      s.type === "mouseleave")
                  ) {
                    var w = o.gridRect.getBoundingClientRect();
                    o.w.globals.mousedown &&
                      ((o.endX = o.clientX - w.left),
                      (o.endY = o.clientY - w.top),
                      (o.dragX = Math.abs(o.endX - o.startX)),
                      (o.dragY = Math.abs(o.endY - o.startY)),
                      (a.globals.zoomEnabled || a.globals.selectionEnabled) &&
                        o.selectionDrawn({ context: o, zoomtype: d }),
                      a.globals.panEnabled &&
                        a.config.xaxis.convertedCatToNumeric &&
                        o.delayedPanScrolled()),
                      a.globals.zoomEnabled &&
                        o.hideSelectionRect(this.selectionRect),
                      (o.dragged = !1),
                      (o.w.globals.mousedown = !1);
                  }
                  this.makeSelectionRectDraggable();
                }
              }
            },
          },
          {
            key: "makeSelectionRectDraggable",
            value: function () {
              var r = this.w;
              if (this.selectionRect) {
                var s = this.selectionRect.node.getBoundingClientRect();
                s.width > 0 &&
                  s.height > 0 &&
                  this.slDraggableRect
                    .selectize({
                      points: "l, r",
                      pointSize: 8,
                      pointType: "rect",
                    })
                    .resize({
                      constraint: {
                        minX: 0,
                        minY: 0,
                        maxX: r.globals.gridWidth,
                        maxY: r.globals.gridHeight,
                      },
                    })
                    .on(
                      "resizing",
                      this.selectionDragging.bind(this, "resizing"),
                    );
              }
            },
          },
          {
            key: "preselectedSelection",
            value: function () {
              var r = this.w,
                s = this.xyRatios;
              if (!r.globals.zoomEnabled) {
                if (
                  r.globals.selection !== void 0 &&
                  r.globals.selection !== null
                )
                  this.drawSelectionRect(r.globals.selection);
                else if (
                  r.config.chart.selection.xaxis.min !== void 0 &&
                  r.config.chart.selection.xaxis.max !== void 0
                ) {
                  var a =
                      (r.config.chart.selection.xaxis.min - r.globals.minX) /
                      s.xRatio,
                    o = {
                      x: a,
                      y: 0,
                      width:
                        r.globals.gridWidth -
                        (r.globals.maxX - r.config.chart.selection.xaxis.max) /
                          s.xRatio -
                        a,
                      height: r.globals.gridHeight,
                      translateX: 0,
                      translateY: 0,
                      selectionEnabled: !0,
                    };
                  this.drawSelectionRect(o),
                    this.makeSelectionRectDraggable(),
                    typeof r.config.chart.events.selection == "function" &&
                      r.config.chart.events.selection(this.ctx, {
                        xaxis: {
                          min: r.config.chart.selection.xaxis.min,
                          max: r.config.chart.selection.xaxis.max,
                        },
                        yaxis: {},
                      });
                }
              }
            },
          },
          {
            key: "drawSelectionRect",
            value: function (r) {
              var s = r.x,
                a = r.y,
                o = r.width,
                h = r.height,
                d = r.translateX,
                p = d === void 0 ? 0 : d,
                m = r.translateY,
                x = m === void 0 ? 0 : m,
                v = this.w,
                w = this.zoomRect,
                S = this.selectionRect;
              if (this.dragged || v.globals.selection !== null) {
                var A = { transform: "translate(" + p + ", " + x + ")" };
                v.globals.zoomEnabled &&
                  this.dragged &&
                  (o < 0 && (o = 1),
                  w.attr({
                    x: s,
                    y: a,
                    width: o,
                    height: h,
                    fill: v.config.chart.zoom.zoomedArea.fill.color,
                    "fill-opacity": v.config.chart.zoom.zoomedArea.fill.opacity,
                    stroke: v.config.chart.zoom.zoomedArea.stroke.color,
                    "stroke-width": v.config.chart.zoom.zoomedArea.stroke.width,
                    "stroke-opacity":
                      v.config.chart.zoom.zoomedArea.stroke.opacity,
                  }),
                  Z.setAttrs(w.node, A)),
                  v.globals.selectionEnabled &&
                    (S.attr({
                      x: s,
                      y: a,
                      width: o > 0 ? o : 0,
                      height: h > 0 ? h : 0,
                      fill: v.config.chart.selection.fill.color,
                      "fill-opacity": v.config.chart.selection.fill.opacity,
                      stroke: v.config.chart.selection.stroke.color,
                      "stroke-width": v.config.chart.selection.stroke.width,
                      "stroke-dasharray":
                        v.config.chart.selection.stroke.dashArray,
                      "stroke-opacity": v.config.chart.selection.stroke.opacity,
                    }),
                    Z.setAttrs(S.node, A));
              }
            },
          },
          {
            key: "hideSelectionRect",
            value: function (r) {
              r && r.attr({ x: 0, y: 0, width: 0, height: 0 });
            },
          },
          {
            key: "selectionDrawing",
            value: function (r) {
              var s = r.context,
                a = r.zoomtype,
                o = this.w,
                h = s,
                d = this.gridRect.getBoundingClientRect(),
                p = h.startX - 1,
                m = h.startY,
                x = !1,
                v = !1,
                w = h.clientX - d.left - p,
                S = h.clientY - d.top - m,
                A = {};
              return (
                Math.abs(w + p) > o.globals.gridWidth
                  ? (w = o.globals.gridWidth - p)
                  : h.clientX - d.left < 0 && (w = p),
                p > h.clientX - d.left && ((x = !0), (w = Math.abs(w))),
                m > h.clientY - d.top && ((v = !0), (S = Math.abs(S))),
                (A =
                  a === "x"
                    ? {
                        x: x ? p - w : p,
                        y: 0,
                        width: w,
                        height: o.globals.gridHeight,
                      }
                    : a === "y"
                      ? {
                          x: 0,
                          y: v ? m - S : m,
                          width: o.globals.gridWidth,
                          height: S,
                        }
                      : {
                          x: x ? p - w : p,
                          y: v ? m - S : m,
                          width: w,
                          height: S,
                        }),
                h.drawSelectionRect(A),
                h.selectionDragging("resizing"),
                A
              );
            },
          },
          {
            key: "selectionDragging",
            value: function (r, s) {
              var a = this,
                o = this.w,
                h = this.xyRatios,
                d = this.selectionRect,
                p = 0;
              r === "resizing" && (p = 30);
              var m = function (v) {
                  return parseFloat(d.node.getAttribute(v));
                },
                x = {
                  x: m("x"),
                  y: m("y"),
                  width: m("width"),
                  height: m("height"),
                };
              (o.globals.selection = x),
                typeof o.config.chart.events.selection == "function" &&
                  o.globals.selectionEnabled &&
                  (clearTimeout(this.w.globals.selectionResizeTimer),
                  (this.w.globals.selectionResizeTimer = window.setTimeout(
                    function () {
                      var v = a.gridRect.getBoundingClientRect(),
                        w = d.node.getBoundingClientRect(),
                        S = {
                          xaxis: {
                            min:
                              o.globals.xAxisScale.niceMin +
                              (w.left - v.left) * h.xRatio,
                            max:
                              o.globals.xAxisScale.niceMin +
                              (w.right - v.left) * h.xRatio,
                          },
                          yaxis: {
                            min:
                              o.globals.yAxisScale[0].niceMin +
                              (v.bottom - w.bottom) * h.yRatio[0],
                            max:
                              o.globals.yAxisScale[0].niceMax -
                              (w.top - v.top) * h.yRatio[0],
                          },
                        };
                      o.config.chart.events.selection(a.ctx, S),
                        o.config.chart.brush.enabled &&
                          o.config.chart.events.brushScrolled !== void 0 &&
                          o.config.chart.events.brushScrolled(a.ctx, S);
                    },
                    p,
                  )));
            },
          },
          {
            key: "selectionDrawn",
            value: function (r) {
              var s = r.context,
                a = r.zoomtype,
                o = this.w,
                h = s,
                d = this.xyRatios,
                p = this.ctx.toolbar;
              if (h.startX > h.endX) {
                var m = h.startX;
                (h.startX = h.endX), (h.endX = m);
              }
              if (h.startY > h.endY) {
                var x = h.startY;
                (h.startY = h.endY), (h.endY = x);
              }
              var v = void 0,
                w = void 0;
              o.globals.isRangeBar
                ? ((v =
                    o.globals.yAxisScale[0].niceMin +
                    h.startX * d.invertedYRatio),
                  (w =
                    o.globals.yAxisScale[0].niceMin +
                    h.endX * d.invertedYRatio))
                : ((v = o.globals.xAxisScale.niceMin + h.startX * d.xRatio),
                  (w = o.globals.xAxisScale.niceMin + h.endX * d.xRatio));
              var S = [],
                A = [];
              if (
                (o.config.yaxis.forEach(function (z, D) {
                  S.push(
                    o.globals.yAxisScale[D].niceMax - d.yRatio[D] * h.startY,
                  ),
                    A.push(
                      o.globals.yAxisScale[D].niceMax - d.yRatio[D] * h.endY,
                    );
                }),
                h.dragged && (h.dragX > 10 || h.dragY > 10) && v !== w)
              ) {
                if (o.globals.zoomEnabled) {
                  var P = L.clone(o.globals.initialConfig.yaxis),
                    R = L.clone(o.globals.initialConfig.xaxis);
                  if (
                    ((o.globals.zoomed = !0),
                    o.config.xaxis.convertedCatToNumeric &&
                      ((v = Math.floor(v)),
                      (w = Math.floor(w)),
                      v < 1 && ((v = 1), (w = o.globals.dataPoints)),
                      w - v < 2 && (w = v + 1)),
                    (a !== "xy" && a !== "x") || (R = { min: v, max: w }),
                    (a !== "xy" && a !== "y") ||
                      P.forEach(function (z, D) {
                        (P[D].min = A[D]), (P[D].max = S[D]);
                      }),
                    o.config.chart.zoom.autoScaleYaxis)
                  ) {
                    var O = new N(h.ctx);
                    P = O.autoScaleY(h.ctx, P, { xaxis: R });
                  }
                  if (p) {
                    var f = p.getBeforeZoomRange(R, P);
                    f &&
                      ((R = f.xaxis ? f.xaxis : R),
                      (P = f.yaxis ? f.yaxis : P));
                  }
                  var y = { xaxis: R };
                  o.config.chart.group || (y.yaxis = P),
                    h.ctx.updateHelpers._updateOptions(
                      y,
                      !1,
                      h.w.config.chart.animations.dynamicAnimation.enabled,
                    ),
                    typeof o.config.chart.events.zoomed == "function" &&
                      p.zoomCallback(R, P);
                } else if (o.globals.selectionEnabled) {
                  var C,
                    M = null;
                  (C = { min: v, max: w }),
                    (a !== "xy" && a !== "y") ||
                      (M = L.clone(o.config.yaxis)).forEach(function (z, D) {
                        (M[D].min = A[D]), (M[D].max = S[D]);
                      }),
                    (o.globals.selection = h.selection),
                    typeof o.config.chart.events.selection == "function" &&
                      o.config.chart.events.selection(h.ctx, {
                        xaxis: C,
                        yaxis: M,
                      });
                }
              }
            },
          },
          {
            key: "panDragging",
            value: function (r) {
              var s = r.context,
                a = this.w,
                o = s;
              if (a.globals.lastClientPosition.x !== void 0) {
                var h = a.globals.lastClientPosition.x - o.clientX,
                  d = a.globals.lastClientPosition.y - o.clientY;
                Math.abs(h) > Math.abs(d) && h > 0
                  ? (this.moveDirection = "left")
                  : Math.abs(h) > Math.abs(d) && h < 0
                    ? (this.moveDirection = "right")
                    : Math.abs(d) > Math.abs(h) && d > 0
                      ? (this.moveDirection = "up")
                      : Math.abs(d) > Math.abs(h) &&
                        d < 0 &&
                        (this.moveDirection = "down");
              }
              a.globals.lastClientPosition = { x: o.clientX, y: o.clientY };
              var p = a.globals.isRangeBar ? a.globals.minY : a.globals.minX,
                m = a.globals.isRangeBar ? a.globals.maxY : a.globals.maxX;
              a.config.xaxis.convertedCatToNumeric || o.panScrolled(p, m);
            },
          },
          {
            key: "delayedPanScrolled",
            value: function () {
              var r = this.w,
                s = r.globals.minX,
                a = r.globals.maxX,
                o = (r.globals.maxX - r.globals.minX) / 2;
              this.moveDirection === "left"
                ? ((s = r.globals.minX + o), (a = r.globals.maxX + o))
                : this.moveDirection === "right" &&
                  ((s = r.globals.minX - o), (a = r.globals.maxX - o)),
                (s = Math.floor(s)),
                (a = Math.floor(a)),
                this.updateScrolledChart({ xaxis: { min: s, max: a } }, s, a);
            },
          },
          {
            key: "panScrolled",
            value: function (r, s) {
              var a = this.w,
                o = this.xyRatios,
                h = L.clone(a.globals.initialConfig.yaxis),
                d = o.xRatio,
                p = a.globals.minX,
                m = a.globals.maxX;
              a.globals.isRangeBar &&
                ((d = o.invertedYRatio),
                (p = a.globals.minY),
                (m = a.globals.maxY)),
                this.moveDirection === "left"
                  ? ((r = p + (a.globals.gridWidth / 15) * d),
                    (s = m + (a.globals.gridWidth / 15) * d))
                  : this.moveDirection === "right" &&
                    ((r = p - (a.globals.gridWidth / 15) * d),
                    (s = m - (a.globals.gridWidth / 15) * d)),
                a.globals.isRangeBar ||
                  ((r < a.globals.initialMinX || s > a.globals.initialMaxX) &&
                    ((r = p), (s = m)));
              var x = { min: r, max: s };
              a.config.chart.zoom.autoScaleYaxis &&
                (h = new N(this.ctx).autoScaleY(this.ctx, h, { xaxis: x }));
              var v = { xaxis: { min: r, max: s } };
              a.config.chart.group || (v.yaxis = h),
                this.updateScrolledChart(v, r, s);
            },
          },
          {
            key: "updateScrolledChart",
            value: function (r, s, a) {
              var o = this.w;
              this.ctx.updateHelpers._updateOptions(r, !1, !1),
                typeof o.config.chart.events.scrolled == "function" &&
                  o.config.chart.events.scrolled(this.ctx, {
                    xaxis: { min: s, max: a },
                  });
            },
          },
        ]),
        l
      );
    })(),
    nh = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.ttCtx = t), (this.ctx = t.ctx);
      }
      return (
        k(T, [
          {
            key: "getNearestValues",
            value: function (t) {
              var l = t.hoverArea,
                r = t.elGrid,
                s = t.clientX,
                a = t.clientY,
                o = this.w,
                h = r.getBoundingClientRect(),
                d = h.width,
                p = h.height,
                m = d / (o.globals.dataPoints - 1),
                x = p / o.globals.dataPoints,
                v = this.hasBars();
              (!o.globals.comboCharts && !v) ||
                o.config.xaxis.convertedCatToNumeric ||
                (m = d / o.globals.dataPoints);
              var w = s - h.left - o.globals.barPadForNumericAxis,
                S = a - h.top;
              w < 0 || S < 0 || w > d || S > p
                ? (l.classList.remove("hovering-zoom"),
                  l.classList.remove("hovering-pan"))
                : o.globals.zoomEnabled
                  ? (l.classList.remove("hovering-pan"),
                    l.classList.add("hovering-zoom"))
                  : o.globals.panEnabled &&
                    (l.classList.remove("hovering-zoom"),
                    l.classList.add("hovering-pan"));
              var A = Math.round(w / m),
                P = Math.floor(S / x);
              v &&
                !o.config.xaxis.convertedCatToNumeric &&
                ((A = Math.ceil(w / m)), (A -= 1));
              var R = null,
                O = null,
                f = [],
                y = [];
              if (
                (o.globals.seriesXvalues.forEach(function (D) {
                  f.push([D[0] + 1e-6].concat(D));
                }),
                o.globals.seriesYvalues.forEach(function (D) {
                  y.push([D[0] + 1e-6].concat(D));
                }),
                (f = f.map(function (D) {
                  return D.filter(function (U) {
                    return L.isNumber(U);
                  });
                })),
                (y = y.map(function (D) {
                  return D.filter(function (U) {
                    return L.isNumber(U);
                  });
                })),
                o.globals.isXNumeric)
              ) {
                var C = this.ttCtx.getElGrid().getBoundingClientRect(),
                  M = w * (C.width / d),
                  z = S * (C.height / p);
                (R = (O = this.closestInMultiArray(M, z, f, y)).index),
                  (A = O.j),
                  R !== null &&
                    ((f = o.globals.seriesXvalues[R]),
                    (A = (O = this.closestInArray(M, f)).index));
              }
              return (
                (o.globals.capturedSeriesIndex = R === null ? -1 : R),
                (!A || A < 1) && (A = 0),
                o.globals.isBarHorizontal
                  ? (o.globals.capturedDataPointIndex = P)
                  : (o.globals.capturedDataPointIndex = A),
                {
                  capturedSeries: R,
                  j: o.globals.isBarHorizontal ? P : A,
                  hoverX: w,
                  hoverY: S,
                }
              );
            },
          },
          {
            key: "closestInMultiArray",
            value: function (t, l, r, s) {
              var a = this.w,
                o = 0,
                h = null,
                d = -1;
              a.globals.series.length > 1
                ? (o = this.getFirstActiveXArray(r))
                : (h = 0);
              var p = r[o][0],
                m = Math.abs(t - p);
              if (
                (r.forEach(function (w) {
                  w.forEach(function (S, A) {
                    var P = Math.abs(t - S);
                    P < m && ((m = P), (d = A));
                  });
                }),
                d !== -1)
              ) {
                var x = s[o][d],
                  v = Math.abs(l - x);
                (h = o),
                  s.forEach(function (w, S) {
                    var A = Math.abs(l - w[d]);
                    A < v && ((v = A), (h = S));
                  });
              }
              return { index: h, j: d };
            },
          },
          {
            key: "getFirstActiveXArray",
            value: function (t) {
              for (
                var l = this.w,
                  r = 0,
                  s = t.map(function (o, h) {
                    return o.length > 0 ? h : -1;
                  }),
                  a = 0;
                a < s.length;
                a++
              )
                if (
                  s[a] !== -1 &&
                  l.globals.collapsedSeriesIndices.indexOf(a) === -1 &&
                  l.globals.ancillaryCollapsedSeriesIndices.indexOf(a) === -1
                ) {
                  r = s[a];
                  break;
                }
              return r;
            },
          },
          {
            key: "closestInArray",
            value: function (t, l) {
              for (
                var r = l[0], s = null, a = Math.abs(t - r), o = 0;
                o < l.length;
                o++
              ) {
                var h = Math.abs(t - l[o]);
                h < a && ((a = h), (s = o));
              }
              return { index: s };
            },
          },
          {
            key: "isXoverlap",
            value: function (t) {
              var l = [],
                r = this.w.globals.seriesX.filter(function (a) {
                  return a[0] !== void 0;
                });
              if (r.length > 0)
                for (var s = 0; s < r.length - 1; s++)
                  r[s][t] !== void 0 &&
                    r[s + 1][t] !== void 0 &&
                    r[s][t] !== r[s + 1][t] &&
                    l.push("unEqual");
              return l.length === 0;
            },
          },
          {
            key: "isInitialSeriesSameLen",
            value: function () {
              for (
                var t = !0, l = this.w.globals.initialSeries, r = 0;
                r < l.length - 1;
                r++
              )
                if (l[r].data.length !== l[r + 1].data.length) {
                  t = !1;
                  break;
                }
              return t;
            },
          },
          {
            key: "getBarsHeight",
            value: function (t) {
              return Q(t).reduce(function (l, r) {
                return l + r.getBBox().height;
              }, 0);
            },
          },
          {
            key: "getElMarkers",
            value: function (t) {
              return typeof t == "number"
                ? this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series[data\\:realIndex='".concat(
                      t,
                      "'] .apexcharts-series-markers-wrap > *",
                    ),
                  )
                : this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series-markers-wrap > *",
                  );
            },
          },
          {
            key: "getAllMarkers",
            value: function () {
              var t = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers-wrap",
              );
              (t = Q(t)).sort(function (r, s) {
                var a = Number(r.getAttribute("data:realIndex")),
                  o = Number(s.getAttribute("data:realIndex"));
                return o < a ? 1 : o > a ? -1 : 0;
              });
              var l = [];
              return (
                t.forEach(function (r) {
                  l.push(r.querySelector(".apexcharts-marker"));
                }),
                l
              );
            },
          },
          {
            key: "hasMarkers",
            value: function (t) {
              return this.getElMarkers(t).length > 0;
            },
          },
          {
            key: "getElBars",
            value: function () {
              return this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series",
              );
            },
          },
          {
            key: "hasBars",
            value: function () {
              return this.getElBars().length > 0;
            },
          },
          {
            key: "getHoverMarkerSize",
            value: function (t) {
              var l = this.w,
                r = l.config.markers.hover.size;
              return (
                r === void 0 &&
                  (r =
                    l.globals.markers.size[t] +
                    l.config.markers.hover.sizeOffset),
                r
              );
            },
          },
          {
            key: "toggleAllTooltipSeriesGroups",
            value: function (t) {
              var l = this.w,
                r = this.ttCtx;
              r.allTooltipSeriesGroups.length === 0 &&
                (r.allTooltipSeriesGroups =
                  l.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-tooltip-series-group",
                  ));
              for (var s = r.allTooltipSeriesGroups, a = 0; a < s.length; a++)
                t === "enable"
                  ? (s[a].classList.add("apexcharts-active"),
                    (s[a].style.display = l.config.tooltip.items.display))
                  : (s[a].classList.remove("apexcharts-active"),
                    (s[a].style.display = "none"));
            },
          },
        ]),
        T
      );
    })(),
    Mp = (function () {
      function T(t) {
        g(this, T),
          (this.w = t.w),
          (this.ctx = t.ctx),
          (this.ttCtx = t),
          (this.tooltipUtil = new nh(t));
      }
      return (
        k(T, [
          {
            key: "drawSeriesTexts",
            value: function (t) {
              var l = t.shared,
                r = l === void 0 || l,
                s = t.ttItems,
                a = t.i,
                o = a === void 0 ? 0 : a,
                h = t.j,
                d = h === void 0 ? null : h,
                p = t.y1,
                m = t.y2,
                x = t.e,
                v = this.w;
              v.config.tooltip.custom !== void 0
                ? this.handleCustomTooltip({ i: o, j: d, y1: p, y2: m, w: v })
                : this.toggleActiveInactiveSeries(r);
              var w = this.getValuesToPrint({ i: o, j: d });
              this.printLabels({
                i: o,
                j: d,
                values: w,
                ttItems: s,
                shared: r,
                e: x,
              });
              var S = this.ttCtx.getElTooltip();
              (this.ttCtx.tooltipRect.ttWidth =
                S.getBoundingClientRect().width),
                (this.ttCtx.tooltipRect.ttHeight =
                  S.getBoundingClientRect().height);
            },
          },
          {
            key: "printLabels",
            value: function (t) {
              var l,
                r = this,
                s = t.i,
                a = t.j,
                o = t.values,
                h = t.ttItems,
                d = t.shared,
                p = t.e,
                m = this.w,
                x = [],
                v = function (C) {
                  return (
                    m.globals.seriesGoals[C] &&
                    m.globals.seriesGoals[C][a] &&
                    Array.isArray(m.globals.seriesGoals[C][a])
                  );
                },
                w = o.xVal,
                S = o.zVal,
                A = o.xAxisTTVal,
                P = "",
                R = m.globals.colors[s];
              a !== null &&
                m.config.plotOptions.bar.distributed &&
                (R = m.globals.colors[a]);
              for (
                var O = function (C, M) {
                    var z = r.getFormatters(s);
                    (P = r.getSeriesName({
                      fn: z.yLbTitleFormatter,
                      index: s,
                      seriesIndex: s,
                      j: a,
                    })),
                      m.config.chart.type === "treemap" &&
                        (P = z.yLbTitleFormatter(
                          String(m.config.series[s].data[a].x),
                          {
                            series: m.globals.series,
                            seriesIndex: s,
                            dataPointIndex: a,
                            w: m,
                          },
                        ));
                    var D = m.config.tooltip.inverseOrder ? M : C;
                    if (m.globals.axisCharts) {
                      var U = function (ne) {
                        var se, he, ye, Pe;
                        return m.globals.isRangeData
                          ? z.yLbFormatter(
                              (se = m.globals.seriesRangeStart) === null ||
                                se === void 0 ||
                                (he = se[ne]) === null ||
                                he === void 0
                                ? void 0
                                : he[a],
                              {
                                series: m.globals.seriesRangeStart,
                                seriesIndex: ne,
                                dataPointIndex: a,
                                w: m,
                              },
                            ) +
                              " - " +
                              z.yLbFormatter(
                                (ye = m.globals.seriesRangeEnd) === null ||
                                  ye === void 0 ||
                                  (Pe = ye[ne]) === null ||
                                  Pe === void 0
                                  ? void 0
                                  : Pe[a],
                                {
                                  series: m.globals.seriesRangeEnd,
                                  seriesIndex: ne,
                                  dataPointIndex: a,
                                  w: m,
                                },
                              )
                          : z.yLbFormatter(m.globals.series[ne][a], {
                              series: m.globals.series,
                              seriesIndex: ne,
                              dataPointIndex: a,
                              w: m,
                            });
                      };
                      if (d)
                        (z = r.getFormatters(D)),
                          (P = r.getSeriesName({
                            fn: z.yLbTitleFormatter,
                            index: D,
                            seriesIndex: s,
                            j: a,
                          })),
                          (R = m.globals.colors[D]),
                          (l = U(D)),
                          v(D) &&
                            (x = m.globals.seriesGoals[D][a].map(function (ne) {
                              return {
                                attrs: ne,
                                val: z.yLbFormatter(ne.value, {
                                  seriesIndex: D,
                                  dataPointIndex: a,
                                  w: m,
                                }),
                              };
                            }));
                      else {
                        var $,
                          le =
                            p == null || ($ = p.target) === null || $ === void 0
                              ? void 0
                              : $.getAttribute("fill");
                        le &&
                          (R =
                            le.indexOf("url") !== -1
                              ? document
                                  .querySelector(le.substr(4).slice(0, -1))
                                  .childNodes[0].getAttribute("stroke")
                              : le),
                          (l = U(s)),
                          v(s) &&
                            Array.isArray(m.globals.seriesGoals[s][a]) &&
                            (x = m.globals.seriesGoals[s][a].map(function (ne) {
                              return {
                                attrs: ne,
                                val: z.yLbFormatter(ne.value, {
                                  seriesIndex: s,
                                  dataPointIndex: a,
                                  w: m,
                                }),
                              };
                            }));
                      }
                    }
                    a === null &&
                      (l = z.yLbFormatter(
                        m.globals.series[s],
                        c(c({}, m), {}, { seriesIndex: s, dataPointIndex: s }),
                      )),
                      r.DOMHandling({
                        i: s,
                        t: D,
                        j: a,
                        ttItems: h,
                        values: {
                          val: l,
                          goalVals: x,
                          xVal: w,
                          xAxisTTVal: A,
                          zVal: S,
                        },
                        seriesName: P,
                        shared: d,
                        pColor: R,
                      });
                  },
                  f = 0,
                  y = m.globals.series.length - 1;
                f < m.globals.series.length;
                f++, y--
              )
                O(f, y);
            },
          },
          {
            key: "getFormatters",
            value: function (t) {
              var l,
                r = this.w,
                s = r.globals.yLabelFormatters[t];
              return (
                r.globals.ttVal !== void 0
                  ? Array.isArray(r.globals.ttVal)
                    ? ((s = r.globals.ttVal[t] && r.globals.ttVal[t].formatter),
                      (l =
                        r.globals.ttVal[t] &&
                        r.globals.ttVal[t].title &&
                        r.globals.ttVal[t].title.formatter))
                    : ((s = r.globals.ttVal.formatter),
                      typeof r.globals.ttVal.title.formatter == "function" &&
                        (l = r.globals.ttVal.title.formatter))
                  : (l = r.config.tooltip.y.title.formatter),
                typeof s != "function" &&
                  (s = r.globals.yLabelFormatters[0]
                    ? r.globals.yLabelFormatters[0]
                    : function (a) {
                        return a;
                      }),
                typeof l != "function" &&
                  (l = function (a) {
                    return a;
                  }),
                { yLbFormatter: s, yLbTitleFormatter: l }
              );
            },
          },
          {
            key: "getSeriesName",
            value: function (t) {
              var l = t.fn,
                r = t.index,
                s = t.seriesIndex,
                a = t.j,
                o = this.w;
              return l(String(o.globals.seriesNames[r]), {
                series: o.globals.series,
                seriesIndex: s,
                dataPointIndex: a,
                w: o,
              });
            },
          },
          {
            key: "DOMHandling",
            value: function (t) {
              t.i;
              var l = t.t,
                r = t.j,
                s = t.ttItems,
                a = t.values,
                o = t.seriesName,
                h = t.shared,
                d = t.pColor,
                p = this.w,
                m = this.ttCtx,
                x = a.val,
                v = a.goalVals,
                w = a.xVal,
                S = a.xAxisTTVal,
                A = a.zVal,
                P = null;
              (P = s[l].children),
                p.config.tooltip.fillSeriesColor &&
                  ((s[l].style.backgroundColor = d),
                  (P[0].style.display = "none")),
                m.showTooltipTitle &&
                  (m.tooltipTitle === null &&
                    (m.tooltipTitle = p.globals.dom.baseEl.querySelector(
                      ".apexcharts-tooltip-title",
                    )),
                  (m.tooltipTitle.innerHTML = w)),
                m.isXAxisTooltipEnabled &&
                  (m.xaxisTooltipText.innerHTML = S !== "" ? S : w);
              var R = s[l].querySelector(".apexcharts-tooltip-text-y-label");
              R && (R.innerHTML = o || "");
              var O = s[l].querySelector(".apexcharts-tooltip-text-y-value");
              O && (O.innerHTML = x !== void 0 ? x : ""),
                P[0] &&
                  P[0].classList.contains("apexcharts-tooltip-marker") &&
                  (p.config.tooltip.marker.fillColors &&
                    Array.isArray(p.config.tooltip.marker.fillColors) &&
                    (d = p.config.tooltip.marker.fillColors[l]),
                  (P[0].style.backgroundColor = d)),
                p.config.tooltip.marker.show || (P[0].style.display = "none");
              var f = s[l].querySelector(
                  ".apexcharts-tooltip-text-goals-label",
                ),
                y = s[l].querySelector(".apexcharts-tooltip-text-goals-value");
              if (v.length && p.globals.seriesGoals[l]) {
                var C = function () {
                  var M = "<div >",
                    z = "<div>";
                  v.forEach(function (D, U) {
                    (M +=
                      ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                        .concat(
                          D.attrs.strokeColor,
                          '; height: 3px; border-radius: 0; top: 5px;"></span> ',
                        )
                        .concat(D.attrs.name, "</div>")),
                      (z += "<div>".concat(D.val, "</div>"));
                  }),
                    (f.innerHTML = M + "</div>"),
                    (y.innerHTML = z + "</div>");
                };
                h
                  ? p.globals.seriesGoals[l][r] &&
                    Array.isArray(p.globals.seriesGoals[l][r])
                    ? C()
                    : ((f.innerHTML = ""), (y.innerHTML = ""))
                  : C();
              } else (f.innerHTML = ""), (y.innerHTML = "");
              A !== null &&
                ((s[l].querySelector(
                  ".apexcharts-tooltip-text-z-label",
                ).innerHTML = p.config.tooltip.z.title),
                (s[l].querySelector(
                  ".apexcharts-tooltip-text-z-value",
                ).innerHTML = A !== void 0 ? A : "")),
                h &&
                  P[0] &&
                  (x == null ||
                  p.globals.ancillaryCollapsedSeriesIndices.indexOf(l) > -1 ||
                  p.globals.collapsedSeriesIndices.indexOf(l) > -1
                    ? (P[0].parentNode.style.display = "none")
                    : (P[0].parentNode.style.display =
                        p.config.tooltip.items.display));
            },
          },
          {
            key: "toggleActiveInactiveSeries",
            value: function (t) {
              var l = this.w;
              if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
              else {
                this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                var r = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip-series-group",
                );
                r &&
                  (r.classList.add("apexcharts-active"),
                  (r.style.display = l.config.tooltip.items.display));
              }
            },
          },
          {
            key: "getValuesToPrint",
            value: function (t) {
              var l = t.i,
                r = t.j,
                s = this.w,
                a = this.ctx.series.filteredSeriesX(),
                o = "",
                h = "",
                d = null,
                p = null,
                m = {
                  series: s.globals.series,
                  seriesIndex: l,
                  dataPointIndex: r,
                  w: s,
                },
                x = s.globals.ttZFormatter;
              r === null
                ? (p = s.globals.series[l])
                : s.globals.isXNumeric && s.config.chart.type !== "treemap"
                  ? ((o = a[l][r]),
                    a[l].length === 0 &&
                      (o = a[this.tooltipUtil.getFirstActiveXArray(a)][r]))
                  : (o =
                      s.globals.labels[r] !== void 0
                        ? s.globals.labels[r]
                        : "");
              var v = o;
              return (
                s.globals.isXNumeric && s.config.xaxis.type === "datetime"
                  ? (o = new pl(this.ctx).xLabelFormat(
                      s.globals.ttKeyFormatter,
                      v,
                      v,
                      {
                        i: void 0,
                        dateFormatter: new Ze(this.ctx).formatDate,
                        w: this.w,
                      },
                    ))
                  : (o = s.globals.isBarHorizontal
                      ? s.globals.yLabelFormatters[0](v, m)
                      : s.globals.xLabelFormatter(v, m)),
                s.config.tooltip.x.formatter !== void 0 &&
                  (o = s.globals.ttKeyFormatter(v, m)),
                s.globals.seriesZ.length > 0 &&
                  s.globals.seriesZ[l].length > 0 &&
                  (d = x(s.globals.seriesZ[l][r], s)),
                (h =
                  typeof s.config.xaxis.tooltip.formatter == "function"
                    ? s.globals.xaxisTooltipFormatter(v, m)
                    : o),
                {
                  val: Array.isArray(p) ? p.join(" ") : p,
                  xVal: Array.isArray(o) ? o.join(" ") : o,
                  xAxisTTVal: Array.isArray(h) ? h.join(" ") : h,
                  zVal: d,
                }
              );
            },
          },
          {
            key: "handleCustomTooltip",
            value: function (t) {
              var l = t.i,
                r = t.j,
                s = t.y1,
                a = t.y2,
                o = t.w,
                h = this.ttCtx.getElTooltip(),
                d = o.config.tooltip.custom;
              Array.isArray(d) && d[l] && (d = d[l]),
                (h.innerHTML = d({
                  ctx: this.ctx,
                  series: o.globals.series,
                  seriesIndex: l,
                  dataPointIndex: r,
                  y1: s,
                  y2: a,
                  w: o,
                }));
            },
          },
        ]),
        T
      );
    })(),
    sh = (function () {
      function T(t) {
        g(this, T), (this.ttCtx = t), (this.ctx = t.ctx), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "moveXCrosshairs",
            value: function (t) {
              var l =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                r = this.ttCtx,
                s = this.w,
                a = r.getElXCrosshairs(),
                o = t - r.xcrosshairsWidth / 2,
                h = s.globals.labels.slice().length;
              if (
                (l !== null && (o = (s.globals.gridWidth / h) * l),
                a === null ||
                  s.globals.isBarHorizontal ||
                  (a.setAttribute("x", o),
                  a.setAttribute("x1", o),
                  a.setAttribute("x2", o),
                  a.setAttribute("y2", s.globals.gridHeight),
                  a.classList.add("apexcharts-active")),
                o < 0 && (o = 0),
                o > s.globals.gridWidth && (o = s.globals.gridWidth),
                r.isXAxisTooltipEnabled)
              ) {
                var d = o;
                (s.config.xaxis.crosshairs.width !== "tickWidth" &&
                  s.config.xaxis.crosshairs.width !== "barWidth") ||
                  (d = o + r.xcrosshairsWidth / 2),
                  this.moveXAxisTooltip(d);
              }
            },
          },
          {
            key: "moveYCrosshairs",
            value: function (t) {
              var l = this.ttCtx;
              l.ycrosshairs !== null &&
                Z.setAttrs(l.ycrosshairs, { y1: t, y2: t }),
                l.ycrosshairsHidden !== null &&
                  Z.setAttrs(l.ycrosshairsHidden, { y1: t, y2: t });
            },
          },
          {
            key: "moveXAxisTooltip",
            value: function (t) {
              var l = this.w,
                r = this.ttCtx;
              if (r.xaxisTooltip !== null && r.xcrosshairsWidth !== 0) {
                r.xaxisTooltip.classList.add("apexcharts-active");
                var s =
                  r.xaxisOffY +
                  l.config.xaxis.tooltip.offsetY +
                  l.globals.translateY +
                  1 +
                  l.config.xaxis.offsetY;
                if (
                  ((t -= r.xaxisTooltip.getBoundingClientRect().width / 2),
                  !isNaN(t))
                ) {
                  t += l.globals.translateX;
                  var a;
                  (a = new Z(this.ctx).getTextRects(
                    r.xaxisTooltipText.innerHTML,
                  )),
                    (r.xaxisTooltipText.style.minWidth = a.width + "px"),
                    (r.xaxisTooltip.style.left = t + "px"),
                    (r.xaxisTooltip.style.top = s + "px");
                }
              }
            },
          },
          {
            key: "moveYAxisTooltip",
            value: function (t) {
              var l = this.w,
                r = this.ttCtx;
              r.yaxisTTEls === null &&
                (r.yaxisTTEls = l.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxistooltip",
                ));
              var s = parseInt(r.ycrosshairsHidden.getAttribute("y1"), 10),
                a = l.globals.translateY + s,
                o = r.yaxisTTEls[t].getBoundingClientRect().height,
                h = l.globals.translateYAxisX[t] - 2;
              l.config.yaxis[t].opposite && (h -= 26),
                (a -= o / 2),
                l.globals.ignoreYAxisIndexes.indexOf(t) === -1
                  ? (r.yaxisTTEls[t].classList.add("apexcharts-active"),
                    (r.yaxisTTEls[t].style.top = a + "px"),
                    (r.yaxisTTEls[t].style.left =
                      h + l.config.yaxis[t].tooltip.offsetX + "px"))
                  : r.yaxisTTEls[t].classList.remove("apexcharts-active");
            },
          },
          {
            key: "moveTooltip",
            value: function (t, l) {
              var r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s = this.w,
                a = this.ttCtx,
                o = a.getElTooltip(),
                h = a.tooltipRect,
                d = r !== null ? parseFloat(r) : 1,
                p = parseFloat(t) + d + 5,
                m = parseFloat(l) + d / 2;
              if (
                (p > s.globals.gridWidth / 2 && (p = p - h.ttWidth - d - 10),
                p > s.globals.gridWidth - h.ttWidth - 10 &&
                  (p = s.globals.gridWidth - h.ttWidth),
                p < -20 && (p = -20),
                s.config.tooltip.followCursor)
              ) {
                var x = a.getElGrid().getBoundingClientRect();
                (p = a.e.clientX - x.left) > s.globals.gridWidth / 2 &&
                  (p -= a.tooltipRect.ttWidth),
                  (m = a.e.clientY + s.globals.translateY - x.top) >
                    s.globals.gridHeight / 2 && (m -= a.tooltipRect.ttHeight);
              } else
                s.globals.isBarHorizontal ||
                  (h.ttHeight / 2 + m > s.globals.gridHeight &&
                    (m =
                      s.globals.gridHeight -
                      h.ttHeight +
                      s.globals.translateY));
              isNaN(p) ||
                ((p += s.globals.translateX),
                (o.style.left = p + "px"),
                (o.style.top = m + "px"));
            },
          },
          {
            key: "moveMarkers",
            value: function (t, l) {
              var r = this.w,
                s = this.ttCtx;
              if (r.globals.markers.size[t] > 0)
                for (
                  var a = r.globals.dom.baseEl.querySelectorAll(
                      " .apexcharts-series[data\\:realIndex='".concat(
                        t,
                        "'] .apexcharts-marker",
                      ),
                    ),
                    o = 0;
                  o < a.length;
                  o++
                )
                  parseInt(a[o].getAttribute("rel"), 10) === l &&
                    (s.marker.resetPointsSize(),
                    s.marker.enlargeCurrentPoint(l, a[o]));
              else
                s.marker.resetPointsSize(), this.moveDynamicPointOnHover(l, t);
            },
          },
          {
            key: "moveDynamicPointOnHover",
            value: function (t, l) {
              var r,
                s,
                a = this.w,
                o = this.ttCtx,
                h = a.globals.pointsArray,
                d = o.tooltipUtil.getHoverMarkerSize(l),
                p = a.config.series[l].type;
              if (
                !p ||
                (p !== "column" && p !== "candlestick" && p !== "boxPlot")
              ) {
                (r = h[l][t][0]), (s = h[l][t][1] ? h[l][t][1] : 0);
                var m = a.globals.dom.baseEl.querySelector(
                  ".apexcharts-series[data\\:realIndex='".concat(
                    l,
                    "'] .apexcharts-series-markers circle",
                  ),
                );
                m &&
                  s < a.globals.gridHeight &&
                  s > 0 &&
                  (m.setAttribute("r", d),
                  m.setAttribute("cx", r),
                  m.setAttribute("cy", s)),
                  this.moveXCrosshairs(r),
                  o.fixedTooltip || this.moveTooltip(r, s, d);
              }
            },
          },
          {
            key: "moveDynamicPointsOnHover",
            value: function (t) {
              var l,
                r = this.ttCtx,
                s = r.w,
                a = 0,
                o = 0,
                h = s.globals.pointsArray;
              l = new $e(this.ctx).getActiveConfigSeriesIndex("asc", [
                "line",
                "area",
                "scatter",
                "bubble",
              ]);
              var d = r.tooltipUtil.getHoverMarkerSize(l);
              h[l] && ((a = h[l][t][0]), (o = h[l][t][1]));
              var p = r.tooltipUtil.getAllMarkers();
              if (p !== null)
                for (var m = 0; m < s.globals.series.length; m++) {
                  var x = h[m];
                  if (
                    (s.globals.comboCharts &&
                      x === void 0 &&
                      p.splice(m, 0, null),
                    x && x.length)
                  ) {
                    var v = h[m][t][1],
                      w = void 0;
                    if (
                      (p[m].setAttribute("cx", a),
                      s.config.chart.type === "rangeArea" &&
                        !s.globals.comboCharts)
                    ) {
                      var S = t + s.globals.series[m].length;
                      (w = h[m][S][1]), (v -= Math.abs(v - w) / 2);
                    }
                    v !== null &&
                    !isNaN(v) &&
                    v < s.globals.gridHeight + d &&
                    v + d > 0
                      ? (p[m] && p[m].setAttribute("r", d),
                        p[m] && p[m].setAttribute("cy", v))
                      : p[m] && p[m].setAttribute("r", 0);
                  }
                }
              this.moveXCrosshairs(a),
                r.fixedTooltip ||
                  this.moveTooltip(a, o || s.globals.gridHeight, d);
            },
          },
          {
            key: "moveStickyTooltipOverBars",
            value: function (t, l) {
              var r = this.w,
                s = this.ttCtx,
                a = r.globals.columnSeries
                  ? r.globals.columnSeries.length
                  : r.globals.series.length,
                o =
                  a >= 2 && a % 2 == 0
                    ? Math.floor(a / 2)
                    : Math.floor(a / 2) + 1;
              r.globals.isBarHorizontal &&
                (o = new $e(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
              var h = r.globals.dom.baseEl.querySelector(
                ".apexcharts-bar-series .apexcharts-series[rel='"
                  .concat(o, "'] path[j='")
                  .concat(
                    t,
                    "'], .apexcharts-candlestick-series .apexcharts-series[rel='",
                  )
                  .concat(o, "'] path[j='")
                  .concat(
                    t,
                    "'], .apexcharts-boxPlot-series .apexcharts-series[rel='",
                  )
                  .concat(o, "'] path[j='")
                  .concat(
                    t,
                    "'], .apexcharts-rangebar-series .apexcharts-series[rel='",
                  )
                  .concat(o, "'] path[j='")
                  .concat(t, "']"),
              );
              h ||
                typeof l != "number" ||
                (h = r.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                    .concat(l, "'] path[j='")
                    .concat(
                      t,
                      `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`,
                    )
                    .concat(l, "'] path[j='")
                    .concat(
                      t,
                      `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`,
                    )
                    .concat(l, "'] path[j='")
                    .concat(
                      t,
                      `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`,
                    )
                    .concat(l, "'] path[j='")
                    .concat(t, "']"),
                ));
              var d = h ? parseFloat(h.getAttribute("cx")) : 0,
                p = h ? parseFloat(h.getAttribute("cy")) : 0,
                m = h ? parseFloat(h.getAttribute("barWidth")) : 0,
                x = s.getElGrid().getBoundingClientRect(),
                v =
                  h &&
                  (h.classList.contains("apexcharts-candlestick-area") ||
                    h.classList.contains("apexcharts-boxPlot-area"));
              r.globals.isXNumeric
                ? (h && !v && (d -= a % 2 != 0 ? m / 2 : 0),
                  h && v && r.globals.comboCharts && (d -= m / 2))
                : r.globals.isBarHorizontal ||
                  ((d =
                    s.xAxisTicksPositions[t - 1] +
                    s.dataPointsDividedWidth / 2),
                  isNaN(d) &&
                    (d =
                      s.xAxisTicksPositions[t] - s.dataPointsDividedWidth / 2)),
                r.globals.isBarHorizontal
                  ? (p -= s.tooltipRect.ttHeight)
                  : r.config.tooltip.followCursor
                    ? (p = s.e.clientY - x.top - s.tooltipRect.ttHeight / 2)
                    : p + s.tooltipRect.ttHeight + 15 > r.globals.gridHeight &&
                      (p = r.globals.gridHeight),
                r.globals.isBarHorizontal || this.moveXCrosshairs(d),
                s.fixedTooltip ||
                  this.moveTooltip(d, p || r.globals.gridHeight);
            },
          },
        ]),
        T
      );
    })(),
    Rp = (function () {
      function T(t) {
        g(this, T),
          (this.w = t.w),
          (this.ttCtx = t),
          (this.ctx = t.ctx),
          (this.tooltipPosition = new sh(t));
      }
      return (
        k(T, [
          {
            key: "drawDynamicPoints",
            value: function () {
              var t = this.w,
                l = new Z(this.ctx),
                r = new Wt(this.ctx),
                s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
              (s = Q(s)),
                t.config.chart.stacked &&
                  s.sort(function (x, v) {
                    return (
                      parseFloat(x.getAttribute("data:realIndex")) -
                      parseFloat(v.getAttribute("data:realIndex"))
                    );
                  });
              for (var a = 0; a < s.length; a++) {
                var o = s[a].querySelector(".apexcharts-series-markers-wrap");
                if (o !== null) {
                  var h = void 0,
                    d = "apexcharts-marker w".concat(
                      (Math.random() + 1).toString(36).substring(4),
                    );
                  (t.config.chart.type !== "line" &&
                    t.config.chart.type !== "area") ||
                    t.globals.comboCharts ||
                    t.config.tooltip.intersect ||
                    (d += " no-pointer-events");
                  var p = r.getMarkerConfig({
                    cssClass: d,
                    seriesIndex: Number(o.getAttribute("data:realIndex")),
                  });
                  (h = l.drawMarker(0, 0, p)).node.setAttribute(
                    "default-marker-size",
                    0,
                  );
                  var m = document.createElementNS(t.globals.SVGNS, "g");
                  m.classList.add("apexcharts-series-markers"),
                    m.appendChild(h.node),
                    o.appendChild(m);
                }
              }
            },
          },
          {
            key: "enlargeCurrentPoint",
            value: function (t, l) {
              var r =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                a = this.w;
              a.config.chart.type !== "bubble" && this.newPointSize(t, l);
              var o = l.getAttribute("cx"),
                h = l.getAttribute("cy");
              if (
                (r !== null && s !== null && ((o = r), (h = s)),
                this.tooltipPosition.moveXCrosshairs(o),
                !this.fixedTooltip)
              ) {
                if (a.config.chart.type === "radar") {
                  var d = this.ttCtx.getElGrid().getBoundingClientRect();
                  o = this.ttCtx.e.clientX - d.left;
                }
                this.tooltipPosition.moveTooltip(
                  o,
                  h,
                  a.config.markers.hover.size,
                );
              }
            },
          },
          {
            key: "enlargePoints",
            value: function (t) {
              for (
                var l = this.w,
                  r = this,
                  s = this.ttCtx,
                  a = t,
                  o = l.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker",
                  ),
                  h = l.config.markers.hover.size,
                  d = 0;
                d < o.length;
                d++
              ) {
                var p = o[d].getAttribute("rel"),
                  m = o[d].getAttribute("index");
                if (
                  (h === void 0 &&
                    (h =
                      l.globals.markers.size[m] +
                      l.config.markers.hover.sizeOffset),
                  a === parseInt(p, 10))
                ) {
                  r.newPointSize(a, o[d]);
                  var x = o[d].getAttribute("cx"),
                    v = o[d].getAttribute("cy");
                  r.tooltipPosition.moveXCrosshairs(x),
                    s.fixedTooltip || r.tooltipPosition.moveTooltip(x, v, h);
                } else r.oldPointSize(o[d]);
              }
            },
          },
          {
            key: "newPointSize",
            value: function (t, l) {
              var r = this.w,
                s = r.config.markers.hover.size,
                a = t === 0 ? l.parentNode.firstChild : l.parentNode.lastChild;
              if (a.getAttribute("default-marker-size") !== "0") {
                var o = parseInt(a.getAttribute("index"), 10);
                s === void 0 &&
                  (s =
                    r.globals.markers.size[o] +
                    r.config.markers.hover.sizeOffset),
                  s < 0 && (s = 0),
                  a.setAttribute("r", s);
              }
            },
          },
          {
            key: "oldPointSize",
            value: function (t) {
              var l = parseFloat(t.getAttribute("default-marker-size"));
              t.setAttribute("r", l);
            },
          },
          {
            key: "resetPointsSize",
            value: function () {
              for (
                var t = this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker",
                  ),
                  l = 0;
                l < t.length;
                l++
              ) {
                var r = parseFloat(t[l].getAttribute("default-marker-size"));
                L.isNumber(r) && r >= 0
                  ? t[l].setAttribute("r", r)
                  : t[l].setAttribute("r", 0);
              }
            },
          },
        ]),
        T
      );
    })(),
    Np = (function () {
      function T(t) {
        g(this, T), (this.w = t.w);
        var l = this.w;
        (this.ttCtx = t),
          (this.isVerticalGroupedRangeBar =
            !l.globals.isBarHorizontal &&
            l.config.chart.type === "rangeBar" &&
            l.config.plotOptions.bar.rangeBarGroupRows);
      }
      return (
        k(T, [
          {
            key: "getAttr",
            value: function (t, l) {
              return parseFloat(t.target.getAttribute(l));
            },
          },
          {
            key: "handleHeatTreeTooltip",
            value: function (t) {
              var l = t.e,
                r = t.opt,
                s = t.x,
                a = t.y,
                o = t.type,
                h = this.ttCtx,
                d = this.w;
              if (
                l.target.classList.contains("apexcharts-".concat(o, "-rect"))
              ) {
                var p = this.getAttr(l, "i"),
                  m = this.getAttr(l, "j"),
                  x = this.getAttr(l, "cx"),
                  v = this.getAttr(l, "cy"),
                  w = this.getAttr(l, "width"),
                  S = this.getAttr(l, "height");
                if (
                  (h.tooltipLabels.drawSeriesTexts({
                    ttItems: r.ttItems,
                    i: p,
                    j: m,
                    shared: !1,
                    e: l,
                  }),
                  (d.globals.capturedSeriesIndex = p),
                  (d.globals.capturedDataPointIndex = m),
                  (s = x + h.tooltipRect.ttWidth / 2 + w),
                  (a = v + h.tooltipRect.ttHeight / 2 - S / 2),
                  h.tooltipPosition.moveXCrosshairs(x + w / 2),
                  s > d.globals.gridWidth / 2 &&
                    (s = x - h.tooltipRect.ttWidth / 2 + w),
                  h.w.config.tooltip.followCursor)
                ) {
                  var A = d.globals.dom.elWrap.getBoundingClientRect();
                  (s =
                    d.globals.clientX -
                    A.left -
                    (s > d.globals.gridWidth / 2 ? h.tooltipRect.ttWidth : 0)),
                    (a =
                      d.globals.clientY -
                      A.top -
                      (a > d.globals.gridHeight / 2
                        ? h.tooltipRect.ttHeight
                        : 0));
                }
              }
              return { x: s, y: a };
            },
          },
          {
            key: "handleMarkerTooltip",
            value: function (t) {
              var l,
                r,
                s = t.e,
                a = t.opt,
                o = t.x,
                h = t.y,
                d = this.w,
                p = this.ttCtx;
              if (s.target.classList.contains("apexcharts-marker")) {
                var m = parseInt(a.paths.getAttribute("cx"), 10),
                  x = parseInt(a.paths.getAttribute("cy"), 10),
                  v = parseFloat(a.paths.getAttribute("val"));
                if (
                  ((r = parseInt(a.paths.getAttribute("rel"), 10)),
                  (l =
                    parseInt(
                      a.paths.parentNode.parentNode.parentNode.getAttribute(
                        "rel",
                      ),
                      10,
                    ) - 1),
                  p.intersect)
                ) {
                  var w = L.findAncestor(a.paths, "apexcharts-series");
                  w && (l = parseInt(w.getAttribute("data:realIndex"), 10));
                }
                if (
                  (p.tooltipLabels.drawSeriesTexts({
                    ttItems: a.ttItems,
                    i: l,
                    j: r,
                    shared: !p.showOnIntersect && d.config.tooltip.shared,
                    e: s,
                  }),
                  s.type === "mouseup" && p.markerClick(s, l, r),
                  (d.globals.capturedSeriesIndex = l),
                  (d.globals.capturedDataPointIndex = r),
                  (o = m),
                  (h = x + d.globals.translateY - 1.4 * p.tooltipRect.ttHeight),
                  p.w.config.tooltip.followCursor)
                ) {
                  var S = p.getElGrid().getBoundingClientRect();
                  h = p.e.clientY + d.globals.translateY - S.top;
                }
                v < 0 && (h = x),
                  p.marker.enlargeCurrentPoint(r, a.paths, o, h);
              }
              return { x: o, y: h };
            },
          },
          {
            key: "handleBarTooltip",
            value: function (t) {
              var l,
                r,
                s = t.e,
                a = t.opt,
                o = this.w,
                h = this.ttCtx,
                d = h.getElTooltip(),
                p = 0,
                m = 0,
                x = 0,
                v = this.getBarTooltipXY({ e: s, opt: a });
              l = v.i;
              var w = v.barHeight,
                S = v.j;
              (o.globals.capturedSeriesIndex = l),
                (o.globals.capturedDataPointIndex = S),
                (o.globals.isBarHorizontal && h.tooltipUtil.hasBars()) ||
                !o.config.tooltip.shared
                  ? ((m = v.x),
                    (x = v.y),
                    (r = Array.isArray(o.config.stroke.width)
                      ? o.config.stroke.width[l]
                      : o.config.stroke.width),
                    (p = m))
                  : o.globals.comboCharts ||
                    o.config.tooltip.shared ||
                    (p /= 2),
                isNaN(x) && (x = o.globals.svgHeight - h.tooltipRect.ttHeight);
              var A = parseInt(
                  a.paths.parentNode.getAttribute("data:realIndex"),
                  10,
                ),
                P = o.globals.isMultipleYAxis
                  ? o.config.yaxis[A] && o.config.yaxis[A].reversed
                  : o.config.yaxis[0].reversed;
              if (
                (m + h.tooltipRect.ttWidth > o.globals.gridWidth && !P
                  ? (m -= h.tooltipRect.ttWidth)
                  : m < 0 && (m = 0),
                h.w.config.tooltip.followCursor)
              ) {
                var R = h.getElGrid().getBoundingClientRect();
                x = h.e.clientY - R.top;
              }
              h.tooltip === null &&
                (h.tooltip = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip",
                )),
                o.config.tooltip.shared ||
                  (o.globals.comboBarCount > 0
                    ? h.tooltipPosition.moveXCrosshairs(p + r / 2)
                    : h.tooltipPosition.moveXCrosshairs(p)),
                !h.fixedTooltip &&
                  (!o.config.tooltip.shared ||
                    (o.globals.isBarHorizontal && h.tooltipUtil.hasBars())) &&
                  (P && (m -= h.tooltipRect.ttWidth) < 0 && (m = 0),
                  !P ||
                    (o.globals.isBarHorizontal && h.tooltipUtil.hasBars()) ||
                    (x = x + w - 2 * (o.globals.series[l][S] < 0 ? w : 0)),
                  (x = x + o.globals.translateY - h.tooltipRect.ttHeight / 2),
                  (d.style.left = m + o.globals.translateX + "px"),
                  (d.style.top = x + "px"));
            },
          },
          {
            key: "getBarTooltipXY",
            value: function (t) {
              var l = this,
                r = t.e,
                s = t.opt,
                a = this.w,
                o = null,
                h = this.ttCtx,
                d = 0,
                p = 0,
                m = 0,
                x = 0,
                v = 0,
                w = r.target.classList;
              if (
                w.contains("apexcharts-bar-area") ||
                w.contains("apexcharts-candlestick-area") ||
                w.contains("apexcharts-boxPlot-area") ||
                w.contains("apexcharts-rangebar-area")
              ) {
                var S = r.target,
                  A = S.getBoundingClientRect(),
                  P = s.elGrid.getBoundingClientRect(),
                  R = A.height;
                v = A.height;
                var O = A.width,
                  f = parseInt(S.getAttribute("cx"), 10),
                  y = parseInt(S.getAttribute("cy"), 10);
                x = parseFloat(S.getAttribute("barWidth"));
                var C =
                  r.type === "touchmove" ? r.touches[0].clientX : r.clientX;
                (o = parseInt(S.getAttribute("j"), 10)),
                  (d = parseInt(S.parentNode.getAttribute("rel"), 10) - 1);
                var M = S.getAttribute("data-range-y1"),
                  z = S.getAttribute("data-range-y2");
                a.globals.comboCharts &&
                  (d = parseInt(
                    S.parentNode.getAttribute("data:realIndex"),
                    10,
                  ));
                var D = function ($) {
                    return a.globals.isXNumeric
                      ? f - O / 2
                      : l.isVerticalGroupedRangeBar
                        ? f + O / 2
                        : f - h.dataPointsDividedWidth + O / 2;
                  },
                  U = function () {
                    return (
                      y -
                      h.dataPointsDividedHeight +
                      R / 2 -
                      h.tooltipRect.ttHeight / 2
                    );
                  };
                h.tooltipLabels.drawSeriesTexts({
                  ttItems: s.ttItems,
                  i: d,
                  j: o,
                  y1: M ? parseInt(M, 10) : null,
                  y2: z ? parseInt(z, 10) : null,
                  shared: !h.showOnIntersect && a.config.tooltip.shared,
                  e: r,
                }),
                  a.config.tooltip.followCursor
                    ? a.globals.isBarHorizontal
                      ? ((p = C - P.left + 15), (m = U()))
                      : ((p = D()),
                        (m =
                          r.clientY - P.top - h.tooltipRect.ttHeight / 2 - 15))
                    : a.globals.isBarHorizontal
                      ? ((p = f) < h.xyRatios.baseLineInvertedY &&
                          (p = f - h.tooltipRect.ttWidth),
                        (m = U()))
                      : ((p = D()), (m = y));
              }
              return { x: p, y: m, barHeight: v, barWidth: x, i: d, j: o };
            },
          },
        ]),
        T
      );
    })(),
    Ip = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.ttCtx = t);
      }
      return (
        k(T, [
          {
            key: "drawXaxisTooltip",
            value: function () {
              var t = this.w,
                l = this.ttCtx,
                r = t.config.xaxis.position === "bottom";
              l.xaxisOffY = r
                ? t.globals.gridHeight + 1
                : -t.globals.xAxisHeight - t.config.xaxis.axisTicks.height + 3;
              var s = r
                  ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                  : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                a = t.globals.dom.elWrap;
              l.isXAxisTooltipEnabled &&
                t.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxistooltip",
                ) === null &&
                ((l.xaxisTooltip = document.createElement("div")),
                l.xaxisTooltip.setAttribute(
                  "class",
                  s + " apexcharts-theme-" + t.config.tooltip.theme,
                ),
                a.appendChild(l.xaxisTooltip),
                (l.xaxisTooltipText = document.createElement("div")),
                l.xaxisTooltipText.classList.add(
                  "apexcharts-xaxistooltip-text",
                ),
                (l.xaxisTooltipText.style.fontFamily =
                  t.config.xaxis.tooltip.style.fontFamily ||
                  t.config.chart.fontFamily),
                (l.xaxisTooltipText.style.fontSize =
                  t.config.xaxis.tooltip.style.fontSize),
                l.xaxisTooltip.appendChild(l.xaxisTooltipText));
            },
          },
          {
            key: "drawYaxisTooltip",
            value: function () {
              for (
                var t = this.w,
                  l = this.ttCtx,
                  r = function (a) {
                    var o =
                      t.config.yaxis[a].opposite ||
                      t.config.yaxis[a].crosshairs.opposite;
                    l.yaxisOffX = o ? t.globals.gridWidth + 1 : 1;
                    var h =
                      "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        a,
                        o
                          ? " apexcharts-yaxistooltip-right"
                          : " apexcharts-yaxistooltip-left",
                      );
                    t.globals.yAxisSameScaleIndices.map(function (p, m) {
                      p.map(function (x, v) {
                        v === a &&
                          (h += t.config.yaxis[v].show
                            ? " "
                            : " apexcharts-yaxistooltip-hidden");
                      });
                    });
                    var d = t.globals.dom.elWrap;
                    t.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        a,
                      ),
                    ) === null &&
                      ((l.yaxisTooltip = document.createElement("div")),
                      l.yaxisTooltip.setAttribute(
                        "class",
                        h + " apexcharts-theme-" + t.config.tooltip.theme,
                      ),
                      d.appendChild(l.yaxisTooltip),
                      a === 0 && (l.yaxisTooltipText = []),
                      (l.yaxisTooltipText[a] = document.createElement("div")),
                      l.yaxisTooltipText[a].classList.add(
                        "apexcharts-yaxistooltip-text",
                      ),
                      l.yaxisTooltip.appendChild(l.yaxisTooltipText[a]));
                  },
                  s = 0;
                s < t.config.yaxis.length;
                s++
              )
                r(s);
            },
          },
          {
            key: "setXCrosshairWidth",
            value: function () {
              var t = this.w,
                l = this.ttCtx,
                r = l.getElXCrosshairs();
              if (
                ((l.xcrosshairsWidth = parseInt(
                  t.config.xaxis.crosshairs.width,
                  10,
                )),
                t.globals.comboCharts)
              ) {
                var s = t.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area",
                );
                if (
                  s !== null &&
                  t.config.xaxis.crosshairs.width === "barWidth"
                ) {
                  var a = parseFloat(s.getAttribute("barWidth"));
                  l.xcrosshairsWidth = a;
                } else if (t.config.xaxis.crosshairs.width === "tickWidth") {
                  var o = t.globals.labels.length;
                  l.xcrosshairsWidth = t.globals.gridWidth / o;
                }
              } else if (t.config.xaxis.crosshairs.width === "tickWidth") {
                var h = t.globals.labels.length;
                l.xcrosshairsWidth = t.globals.gridWidth / h;
              } else if (t.config.xaxis.crosshairs.width === "barWidth") {
                var d = t.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area",
                );
                if (d !== null) {
                  var p = parseFloat(d.getAttribute("barWidth"));
                  l.xcrosshairsWidth = p;
                } else l.xcrosshairsWidth = 1;
              }
              t.globals.isBarHorizontal && (l.xcrosshairsWidth = 0),
                r !== null &&
                  l.xcrosshairsWidth > 0 &&
                  r.setAttribute("width", l.xcrosshairsWidth);
            },
          },
          {
            key: "handleYCrosshair",
            value: function () {
              var t = this.w,
                l = this.ttCtx;
              (l.ycrosshairs = t.globals.dom.baseEl.querySelector(
                ".apexcharts-ycrosshairs",
              )),
                (l.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(
                  ".apexcharts-ycrosshairs-hidden",
                ));
            },
          },
          {
            key: "drawYaxisTooltipText",
            value: function (t, l, r) {
              var s = this.ttCtx,
                a = this.w,
                o = a.globals.yLabelFormatters[t];
              if (s.yaxisTooltips[t]) {
                var h = s.getElGrid().getBoundingClientRect(),
                  d = (l - h.top) * r.yRatio[t],
                  p = a.globals.maxYArr[t] - a.globals.minYArr[t],
                  m = a.globals.minYArr[t] + (p - d);
                s.tooltipPosition.moveYCrosshairs(l - h.top),
                  (s.yaxisTooltipText[t].innerHTML = o(m)),
                  s.tooltipPosition.moveYAxisTooltip(t);
              }
            },
          },
        ]),
        T
      );
    })(),
    ah = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
        var l = this.w;
        (this.tConfig = l.config.tooltip),
          (this.tooltipUtil = new nh(this)),
          (this.tooltipLabels = new Mp(this)),
          (this.tooltipPosition = new sh(this)),
          (this.marker = new Rp(this)),
          (this.intersect = new Np(this)),
          (this.axesTooltip = new Ip(this)),
          (this.showOnIntersect = this.tConfig.intersect),
          (this.showTooltipTitle = this.tConfig.x.show),
          (this.fixedTooltip = this.tConfig.fixed.enabled),
          (this.xaxisTooltip = null),
          (this.yaxisTTEls = null),
          (this.isBarShared =
            !l.globals.isBarHorizontal && this.tConfig.shared),
          (this.lastHoverTime = Date.now());
      }
      return (
        k(T, [
          {
            key: "getElTooltip",
            value: function (t) {
              return (
                t || (t = this),
                t.w.globals.dom.baseEl
                  ? t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip")
                  : null
              );
            },
          },
          {
            key: "getElXCrosshairs",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-xcrosshairs",
              );
            },
          },
          {
            key: "getElGrid",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-grid",
              );
            },
          },
          {
            key: "drawTooltip",
            value: function (t) {
              var l = this.w;
              (this.xyRatios = t),
                (this.isXAxisTooltipEnabled =
                  l.config.xaxis.tooltip.enabled && l.globals.axisCharts),
                (this.yaxisTooltips = l.config.yaxis.map(function (o, h) {
                  return !!(
                    o.show &&
                    o.tooltip.enabled &&
                    l.globals.axisCharts
                  );
                })),
                (this.allTooltipSeriesGroups = []),
                l.globals.axisCharts || (this.showTooltipTitle = !1);
              var r = document.createElement("div");
              if (
                (r.classList.add("apexcharts-tooltip"),
                l.config.tooltip.cssClass &&
                  r.classList.add(l.config.tooltip.cssClass),
                r.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),
                l.globals.dom.elWrap.appendChild(r),
                l.globals.axisCharts)
              ) {
                this.axesTooltip.drawXaxisTooltip(),
                  this.axesTooltip.drawYaxisTooltip(),
                  this.axesTooltip.setXCrosshairWidth(),
                  this.axesTooltip.handleYCrosshair();
                var s = new X(this.ctx);
                this.xAxisTicksPositions = s.getXAxisTicksPositions();
              }
              if (
                ((!l.globals.comboCharts &&
                  !this.tConfig.intersect &&
                  l.config.chart.type !== "rangeBar") ||
                  this.tConfig.shared ||
                  (this.showOnIntersect = !0),
                (l.config.markers.size !== 0 &&
                  l.globals.markers.largestSize !== 0) ||
                  this.marker.drawDynamicPoints(this),
                l.globals.collapsedSeries.length !== l.globals.series.length)
              ) {
                (this.dataPointsDividedHeight =
                  l.globals.gridHeight / l.globals.dataPoints),
                  (this.dataPointsDividedWidth =
                    l.globals.gridWidth / l.globals.dataPoints),
                  this.showTooltipTitle &&
                    ((this.tooltipTitle = document.createElement("div")),
                    this.tooltipTitle.classList.add("apexcharts-tooltip-title"),
                    (this.tooltipTitle.style.fontFamily =
                      this.tConfig.style.fontFamily ||
                      l.config.chart.fontFamily),
                    (this.tooltipTitle.style.fontSize =
                      this.tConfig.style.fontSize),
                    r.appendChild(this.tooltipTitle));
                var a = l.globals.series.length;
                (l.globals.xyCharts || l.globals.comboCharts) &&
                  this.tConfig.shared &&
                  (a = this.showOnIntersect ? 1 : l.globals.series.length),
                  (this.legendLabels = l.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-legend-text",
                  )),
                  (this.ttItems = this.createTTElements(a)),
                  this.addSVGEvents();
              }
            },
          },
          {
            key: "createTTElements",
            value: function (t) {
              for (
                var l = this,
                  r = this.w,
                  s = [],
                  a = this.getElTooltip(),
                  o = function (d) {
                    var p = document.createElement("div");
                    p.classList.add("apexcharts-tooltip-series-group"),
                      (p.style.order = r.config.tooltip.inverseOrder
                        ? t - d
                        : d + 1),
                      l.tConfig.shared &&
                        l.tConfig.enabledOnSeries &&
                        Array.isArray(l.tConfig.enabledOnSeries) &&
                        l.tConfig.enabledOnSeries.indexOf(d) < 0 &&
                        p.classList.add(
                          "apexcharts-tooltip-series-group-hidden",
                        );
                    var m = document.createElement("span");
                    m.classList.add("apexcharts-tooltip-marker"),
                      (m.style.backgroundColor = r.globals.colors[d]),
                      p.appendChild(m);
                    var x = document.createElement("div");
                    x.classList.add("apexcharts-tooltip-text"),
                      (x.style.fontFamily =
                        l.tConfig.style.fontFamily ||
                        r.config.chart.fontFamily),
                      (x.style.fontSize = l.tConfig.style.fontSize),
                      ["y", "goals", "z"].forEach(function (v) {
                        var w = document.createElement("div");
                        w.classList.add(
                          "apexcharts-tooltip-".concat(v, "-group"),
                        );
                        var S = document.createElement("span");
                        S.classList.add(
                          "apexcharts-tooltip-text-".concat(v, "-label"),
                        ),
                          w.appendChild(S);
                        var A = document.createElement("span");
                        A.classList.add(
                          "apexcharts-tooltip-text-".concat(v, "-value"),
                        ),
                          w.appendChild(A),
                          x.appendChild(w);
                      }),
                      p.appendChild(x),
                      a.appendChild(p),
                      s.push(p);
                  },
                  h = 0;
                h < t;
                h++
              )
                o(h);
              return s;
            },
          },
          {
            key: "addSVGEvents",
            value: function () {
              var t = this.w,
                l = t.config.chart.type,
                r = this.getElTooltip(),
                s = !(
                  l !== "bar" &&
                  l !== "candlestick" &&
                  l !== "boxPlot" &&
                  l !== "rangeBar"
                ),
                a =
                  l === "area" ||
                  l === "line" ||
                  l === "scatter" ||
                  l === "bubble" ||
                  l === "radar",
                o = t.globals.dom.Paper.node,
                h = this.getElGrid();
              h && (this.seriesBound = h.getBoundingClientRect());
              var d,
                p = [],
                m = [],
                x = {
                  hoverArea: o,
                  elGrid: h,
                  tooltipEl: r,
                  tooltipY: p,
                  tooltipX: m,
                  ttItems: this.ttItems,
                };
              if (
                t.globals.axisCharts &&
                (a
                  ? (d = t.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker",
                    ))
                  : s
                    ? (d = t.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area",
                      ))
                    : (l !== "heatmap" && l !== "treemap") ||
                      (d = t.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap",
                      )),
                d && d.length)
              )
                for (var v = 0; v < d.length; v++)
                  p.push(d[v].getAttribute("cy")),
                    m.push(d[v].getAttribute("cx"));
              if (
                (t.globals.xyCharts && !this.showOnIntersect) ||
                (t.globals.comboCharts && !this.showOnIntersect) ||
                (s && this.tooltipUtil.hasBars() && this.tConfig.shared)
              )
                this.addPathsEventListeners([o], x);
              else if (
                (s && !t.globals.comboCharts) ||
                (a && this.showOnIntersect)
              )
                this.addDatapointEventsListeners(x);
              else if (
                !t.globals.axisCharts ||
                l === "heatmap" ||
                l === "treemap"
              ) {
                var w =
                  t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                this.addPathsEventListeners(w, x);
              }
              if (this.showOnIntersect) {
                var S = t.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker",
                );
                S.length > 0 && this.addPathsEventListeners(S, x),
                  this.tooltipUtil.hasBars() &&
                    !this.tConfig.shared &&
                    this.addDatapointEventsListeners(x);
              }
            },
          },
          {
            key: "drawFixedTooltipRect",
            value: function () {
              var t = this.w,
                l = this.getElTooltip(),
                r = l.getBoundingClientRect(),
                s = r.width + 10,
                a = r.height + 10,
                o = this.tConfig.fixed.offsetX,
                h = this.tConfig.fixed.offsetY,
                d = this.tConfig.fixed.position.toLowerCase();
              return (
                d.indexOf("right") > -1 &&
                  (o = o + t.globals.svgWidth - s + 10),
                d.indexOf("bottom") > -1 &&
                  (h = h + t.globals.svgHeight - a - 10),
                (l.style.left = o + "px"),
                (l.style.top = h + "px"),
                { x: o, y: h, ttWidth: s, ttHeight: a }
              );
            },
          },
          {
            key: "addDatapointEventsListeners",
            value: function (t) {
              var l = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area",
              );
              this.addPathsEventListeners(l, t);
            },
          },
          {
            key: "addPathsEventListeners",
            value: function (t, l) {
              for (
                var r = this,
                  s = function (o) {
                    var h = {
                      paths: t[o],
                      tooltipEl: l.tooltipEl,
                      tooltipY: l.tooltipY,
                      tooltipX: l.tooltipX,
                      elGrid: l.elGrid,
                      hoverArea: l.hoverArea,
                      ttItems: l.ttItems,
                    };
                    [
                      "mousemove",
                      "mouseup",
                      "touchmove",
                      "mouseout",
                      "touchend",
                    ].map(function (d) {
                      return t[o].addEventListener(
                        d,
                        r.onSeriesHover.bind(r, h),
                        { capture: !1, passive: !0 },
                      );
                    });
                  },
                  a = 0;
                a < t.length;
                a++
              )
                s(a);
            },
          },
          {
            key: "onSeriesHover",
            value: function (t, l) {
              var r = this,
                s = Date.now() - this.lastHoverTime;
              s >= 100
                ? this.seriesHover(t, l)
                : (clearTimeout(this.seriesHoverTimeout),
                  (this.seriesHoverTimeout = setTimeout(function () {
                    r.seriesHover(t, l);
                  }, 100 - s)));
            },
          },
          {
            key: "seriesHover",
            value: function (t, l) {
              var r = this;
              this.lastHoverTime = Date.now();
              var s = [],
                a = this.w;
              a.config.chart.group && (s = this.ctx.getGroupedCharts()),
                (a.globals.axisCharts &&
                  ((a.globals.minX === -1 / 0 && a.globals.maxX === 1 / 0) ||
                    a.globals.dataPoints === 0)) ||
                  (s.length
                    ? s.forEach(function (o) {
                        var h = r.getElTooltip(o),
                          d = {
                            paths: t.paths,
                            tooltipEl: h,
                            tooltipY: t.tooltipY,
                            tooltipX: t.tooltipX,
                            elGrid: t.elGrid,
                            hoverArea: t.hoverArea,
                            ttItems: o.w.globals.tooltip.ttItems,
                          };
                        o.w.globals.minX === r.w.globals.minX &&
                          o.w.globals.maxX === r.w.globals.maxX &&
                          o.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: o,
                            ttCtx: o.w.globals.tooltip,
                            opt: d,
                            e: l,
                          });
                      })
                    : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: t,
                        e: l,
                      }));
            },
          },
          {
            key: "seriesHoverByContext",
            value: function (t) {
              var l = t.chartCtx,
                r = t.ttCtx,
                s = t.opt,
                a = t.e,
                o = l.w,
                h = this.getElTooltip();
              h &&
                ((r.tooltipRect = {
                  x: 0,
                  y: 0,
                  ttWidth: h.getBoundingClientRect().width,
                  ttHeight: h.getBoundingClientRect().height,
                }),
                (r.e = a),
                r.tooltipUtil.hasBars() &&
                  !o.globals.comboCharts &&
                  !r.isBarShared &&
                  this.tConfig.onDatasetHover.highlightDataSeries &&
                  new $e(l).toggleSeriesOnHover(a, a.target.parentNode),
                r.fixedTooltip && r.drawFixedTooltipRect(),
                o.globals.axisCharts
                  ? r.axisChartsTooltips({
                      e: a,
                      opt: s,
                      tooltipRect: r.tooltipRect,
                    })
                  : r.nonAxisChartsTooltips({
                      e: a,
                      opt: s,
                      tooltipRect: r.tooltipRect,
                    }));
            },
          },
          {
            key: "axisChartsTooltips",
            value: function (t) {
              var l,
                r,
                s = t.e,
                a = t.opt,
                o = this.w,
                h = a.elGrid.getBoundingClientRect(),
                d = s.type === "touchmove" ? s.touches[0].clientX : s.clientX,
                p = s.type === "touchmove" ? s.touches[0].clientY : s.clientY;
              if (
                ((this.clientY = p),
                (this.clientX = d),
                (o.globals.capturedSeriesIndex = -1),
                (o.globals.capturedDataPointIndex = -1),
                p < h.top || p > h.top + h.height)
              )
                this.handleMouseOut(a);
              else {
                if (
                  Array.isArray(this.tConfig.enabledOnSeries) &&
                  !o.config.tooltip.shared
                ) {
                  var m = parseInt(a.paths.getAttribute("index"), 10);
                  if (this.tConfig.enabledOnSeries.indexOf(m) < 0)
                    return void this.handleMouseOut(a);
                }
                var x = this.getElTooltip(),
                  v = this.getElXCrosshairs(),
                  w =
                    o.globals.xyCharts ||
                    (o.config.chart.type === "bar" &&
                      !o.globals.isBarHorizontal &&
                      this.tooltipUtil.hasBars() &&
                      this.tConfig.shared) ||
                    (o.globals.comboCharts && this.tooltipUtil.hasBars());
                if (
                  s.type === "mousemove" ||
                  s.type === "touchmove" ||
                  s.type === "mouseup"
                ) {
                  if (
                    o.globals.collapsedSeries.length +
                      o.globals.ancillaryCollapsedSeries.length ===
                    o.globals.series.length
                  )
                    return;
                  v !== null && v.classList.add("apexcharts-active");
                  var S = this.yaxisTooltips.filter(function (R) {
                    return R === !0;
                  });
                  if (
                    (this.ycrosshairs !== null &&
                      S.length &&
                      this.ycrosshairs.classList.add("apexcharts-active"),
                    w && !this.showOnIntersect)
                  )
                    this.handleStickyTooltip(s, d, p, a);
                  else if (
                    o.config.chart.type === "heatmap" ||
                    o.config.chart.type === "treemap"
                  ) {
                    var A = this.intersect.handleHeatTreeTooltip({
                      e: s,
                      opt: a,
                      x: l,
                      y: r,
                      type: o.config.chart.type,
                    });
                    (l = A.x),
                      (r = A.y),
                      (x.style.left = l + "px"),
                      (x.style.top = r + "px");
                  } else
                    this.tooltipUtil.hasBars() &&
                      this.intersect.handleBarTooltip({ e: s, opt: a }),
                      this.tooltipUtil.hasMarkers() &&
                        this.intersect.handleMarkerTooltip({
                          e: s,
                          opt: a,
                          x: l,
                          y: r,
                        });
                  if (this.yaxisTooltips.length)
                    for (var P = 0; P < o.config.yaxis.length; P++)
                      this.axesTooltip.drawYaxisTooltipText(
                        P,
                        p,
                        this.xyRatios,
                      );
                  a.tooltipEl.classList.add("apexcharts-active");
                } else
                  (s.type !== "mouseout" && s.type !== "touchend") ||
                    this.handleMouseOut(a);
              }
            },
          },
          {
            key: "nonAxisChartsTooltips",
            value: function (t) {
              var l = t.e,
                r = t.opt,
                s = t.tooltipRect,
                a = this.w,
                o = r.paths.getAttribute("rel"),
                h = this.getElTooltip(),
                d = a.globals.dom.elWrap.getBoundingClientRect();
              if (l.type === "mousemove" || l.type === "touchmove") {
                h.classList.add("apexcharts-active"),
                  this.tooltipLabels.drawSeriesTexts({
                    ttItems: r.ttItems,
                    i: parseInt(o, 10) - 1,
                    shared: !1,
                  });
                var p = a.globals.clientX - d.left - s.ttWidth / 2,
                  m = a.globals.clientY - d.top - s.ttHeight - 10;
                if (
                  ((h.style.left = p + "px"),
                  (h.style.top = m + "px"),
                  a.config.legend.tooltipHoverFormatter)
                ) {
                  var x = o - 1,
                    v = (0, a.config.legend.tooltipHoverFormatter)(
                      this.legendLabels[x].getAttribute("data:default-text"),
                      { seriesIndex: x, dataPointIndex: x, w: a },
                    );
                  this.legendLabels[x].innerHTML = v;
                }
              } else
                (l.type !== "mouseout" && l.type !== "touchend") ||
                  (h.classList.remove("apexcharts-active"),
                  a.config.legend.tooltipHoverFormatter &&
                    this.legendLabels.forEach(function (w) {
                      var S = w.getAttribute("data:default-text");
                      w.innerHTML = decodeURIComponent(S);
                    }));
            },
          },
          {
            key: "handleStickyTooltip",
            value: function (t, l, r, s) {
              var a = this.w,
                o = this.tooltipUtil.getNearestValues({
                  context: this,
                  hoverArea: s.hoverArea,
                  elGrid: s.elGrid,
                  clientX: l,
                  clientY: r,
                }),
                h = o.j,
                d = o.capturedSeries;
              a.globals.collapsedSeriesIndices.includes(d) && (d = null);
              var p = s.elGrid.getBoundingClientRect();
              if (o.hoverX < 0 || o.hoverX > p.width) this.handleMouseOut(s);
              else if (d !== null) this.handleStickyCapturedSeries(t, d, s, h);
              else if (
                this.tooltipUtil.isXoverlap(h) ||
                a.globals.isBarHorizontal
              ) {
                var m = a.globals.series.findIndex(function (x, v) {
                  return !a.globals.collapsedSeriesIndices.includes(v);
                });
                this.create(t, this, m, h, s.ttItems);
              }
            },
          },
          {
            key: "handleStickyCapturedSeries",
            value: function (t, l, r, s) {
              var a = this.w;
              if (!this.tConfig.shared && a.globals.series[l][s] === null)
                return void this.handleMouseOut(r);
              if (a.globals.series[l][s] !== void 0)
                this.tConfig.shared &&
                this.tooltipUtil.isXoverlap(s) &&
                this.tooltipUtil.isInitialSeriesSameLen()
                  ? this.create(t, this, l, s, r.ttItems)
                  : this.create(t, this, l, s, r.ttItems, !1);
              else if (this.tooltipUtil.isXoverlap(s)) {
                var o = a.globals.series.findIndex(function (h, d) {
                  return !a.globals.collapsedSeriesIndices.includes(d);
                });
                this.create(t, this, o, s, r.ttItems);
              }
            },
          },
          {
            key: "deactivateHoverFilter",
            value: function () {
              for (
                var t = this.w,
                  l = new Z(this.ctx),
                  r = t.globals.dom.Paper.select(".apexcharts-bar-area"),
                  s = 0;
                s < r.length;
                s++
              )
                l.pathMouseLeave(r[s]);
            },
          },
          {
            key: "handleMouseOut",
            value: function (t) {
              var l = this.w,
                r = this.getElXCrosshairs();
              if (
                (t.tooltipEl.classList.remove("apexcharts-active"),
                this.deactivateHoverFilter(),
                l.config.chart.type !== "bubble" &&
                  this.marker.resetPointsSize(),
                r !== null && r.classList.remove("apexcharts-active"),
                this.ycrosshairs !== null &&
                  this.ycrosshairs.classList.remove("apexcharts-active"),
                this.isXAxisTooltipEnabled &&
                  this.xaxisTooltip.classList.remove("apexcharts-active"),
                this.yaxisTooltips.length)
              ) {
                this.yaxisTTEls === null &&
                  (this.yaxisTTEls = l.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxistooltip",
                  ));
                for (var s = 0; s < this.yaxisTTEls.length; s++)
                  this.yaxisTTEls[s].classList.remove("apexcharts-active");
              }
              l.config.legend.tooltipHoverFormatter &&
                this.legendLabels.forEach(function (a) {
                  var o = a.getAttribute("data:default-text");
                  a.innerHTML = decodeURIComponent(o);
                });
            },
          },
          {
            key: "markerClick",
            value: function (t, l, r) {
              var s = this.w;
              typeof s.config.chart.events.markerClick == "function" &&
                s.config.chart.events.markerClick(t, this.ctx, {
                  seriesIndex: l,
                  dataPointIndex: r,
                  w: s,
                }),
                this.ctx.events.fireEvent("markerClick", [
                  t,
                  this.ctx,
                  { seriesIndex: l, dataPointIndex: r, w: s },
                ]);
            },
          },
          {
            key: "create",
            value: function (t, l, r, s, a) {
              var o,
                h,
                d,
                p,
                m,
                x,
                v,
                w,
                S,
                A,
                P,
                R,
                O,
                f,
                y,
                C,
                M =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : null,
                z = this.w,
                D = l;
              t.type === "mouseup" && this.markerClick(t, r, s),
                M === null && (M = this.tConfig.shared);
              var U = this.tooltipUtil.hasMarkers(r),
                $ = this.tooltipUtil.getElBars();
              if (z.config.legend.tooltipHoverFormatter) {
                var le = z.config.legend.tooltipHoverFormatter,
                  ne = Array.from(this.legendLabels);
                ne.forEach(function (Xl) {
                  var bi = Xl.getAttribute("data:default-text");
                  Xl.innerHTML = decodeURIComponent(bi);
                });
                for (var se = 0; se < ne.length; se++) {
                  var he = ne[se],
                    ye = parseInt(he.getAttribute("i"), 10),
                    Pe = decodeURIComponent(
                      he.getAttribute("data:default-text"),
                    ),
                    Le = le(Pe, {
                      seriesIndex: M ? ye : r,
                      dataPointIndex: s,
                      w: z,
                    });
                  if (M)
                    he.innerHTML =
                      z.globals.collapsedSeriesIndices.indexOf(ye) < 0
                        ? Le
                        : Pe;
                  else if (((he.innerHTML = ye === r ? Le : Pe), r === ye))
                    break;
                }
              }
              var Ie = c(
                c(
                  { ttItems: a, i: r, j: s },
                  ((o = z.globals.seriesRange) === null ||
                  o === void 0 ||
                  (h = o[r]) === null ||
                  h === void 0 ||
                  (d = h[s]) === null ||
                  d === void 0 ||
                  (p = d.y[0]) === null ||
                  p === void 0
                    ? void 0
                    : p.y1) !== void 0 && {
                    y1:
                      (m = z.globals.seriesRange) === null ||
                      m === void 0 ||
                      (x = m[r]) === null ||
                      x === void 0 ||
                      (v = x[s]) === null ||
                      v === void 0 ||
                      (w = v.y[0]) === null ||
                      w === void 0
                        ? void 0
                        : w.y1,
                  },
                ),
                ((S = z.globals.seriesRange) === null ||
                S === void 0 ||
                (A = S[r]) === null ||
                A === void 0 ||
                (P = A[s]) === null ||
                P === void 0 ||
                (R = P.y[0]) === null ||
                R === void 0
                  ? void 0
                  : R.y2) !== void 0 && {
                  y2:
                    (O = z.globals.seriesRange) === null ||
                    O === void 0 ||
                    (f = O[r]) === null ||
                    f === void 0 ||
                    (y = f[s]) === null ||
                    y === void 0 ||
                    (C = y.y[0]) === null ||
                    C === void 0
                      ? void 0
                      : C.y2,
                },
              );
              if (M) {
                if (
                  (D.tooltipLabels.drawSeriesTexts(
                    c(
                      c({}, Ie),
                      {},
                      { shared: !this.showOnIntersect && this.tConfig.shared },
                    ),
                  ),
                  U)
                )
                  z.globals.markers.largestSize > 0
                    ? D.marker.enlargePoints(s)
                    : D.tooltipPosition.moveDynamicPointsOnHover(s);
                else if (
                  this.tooltipUtil.hasBars() &&
                  ((this.barSeriesHeight = this.tooltipUtil.getBarsHeight($)),
                  this.barSeriesHeight > 0)
                ) {
                  var Ke = new Z(this.ctx),
                    Be = z.globals.dom.Paper.select(
                      ".apexcharts-bar-area[j='".concat(s, "']"),
                    );
                  this.deactivateHoverFilter(),
                    this.tooltipPosition.moveStickyTooltipOverBars(s, r);
                  for (var st = 0; st < Be.length; st++)
                    Ke.pathMouseEnter(Be[st]);
                }
              } else
                D.tooltipLabels.drawSeriesTexts(c({ shared: !1 }, Ie)),
                  this.tooltipUtil.hasBars() &&
                    D.tooltipPosition.moveStickyTooltipOverBars(s, r),
                  U && D.tooltipPosition.moveMarkers(r, s);
            },
          },
        ]),
        T
      );
    })(),
    Op = (function () {
      function T(t) {
        g(this, T),
          (this.w = t.w),
          (this.barCtx = t),
          (this.totalFormatter =
            this.w.config.plotOptions.bar.dataLabels.total.formatter),
          this.totalFormatter ||
            (this.totalFormatter = this.w.config.dataLabels.formatter);
      }
      return (
        k(T, [
          {
            key: "handleBarDataLabels",
            value: function (t) {
              var l = t.x,
                r = t.y,
                s = t.y1,
                a = t.y2,
                o = t.i,
                h = t.j,
                d = t.realIndex,
                p = t.groupIndex,
                m = t.series,
                x = t.barHeight,
                v = t.barWidth,
                w = t.barXPosition,
                S = t.barYPosition,
                A = t.visibleSeries,
                P = t.renderedPath,
                R = this.w,
                O = new Z(this.barCtx.ctx),
                f = Array.isArray(this.barCtx.strokeWidth)
                  ? this.barCtx.strokeWidth[d]
                  : this.barCtx.strokeWidth,
                y = l + parseFloat(v * A),
                C = r + parseFloat(x * A);
              R.globals.isXNumeric &&
                !R.globals.isBarHorizontal &&
                ((y = l + parseFloat(v * (A + 1))),
                (C = r + parseFloat(x * (A + 1)) - f));
              var M,
                z = null,
                D = l,
                U = r,
                $ = {},
                le = R.config.dataLabels,
                ne = this.barCtx.barOptions.dataLabels,
                se = this.barCtx.barOptions.dataLabels.total;
              S !== void 0 && this.barCtx.isRangeBar && ((C = S), (U = S)),
                w !== void 0 &&
                  this.barCtx.isVerticalGroupedRangeBar &&
                  ((y = w), (D = w));
              var he = le.offsetX,
                ye = le.offsetY,
                Pe = { width: 0, height: 0 };
              if (R.config.dataLabels.enabled) {
                var Le = this.barCtx.series[o][h];
                Pe = O.getTextRects(
                  R.globals.yLabelFormatters[0](Le),
                  parseFloat(le.style.fontSize),
                );
              }
              var Ie = {
                x: l,
                y: r,
                i: o,
                j: h,
                realIndex: d,
                groupIndex: p || -1,
                renderedPath: P,
                bcx: y,
                bcy: C,
                barHeight: x,
                barWidth: v,
                textRects: Pe,
                strokeWidth: f,
                dataLabelsX: D,
                dataLabelsY: U,
                dataLabelsConfig: le,
                barDataLabelsConfig: ne,
                barTotalDataLabelsConfig: se,
                offX: he,
                offY: ye,
              };
              return (
                ($ = this.barCtx.isHorizontal
                  ? this.calculateBarsDataLabelsPosition(Ie)
                  : this.calculateColumnsDataLabelsPosition(Ie)),
                P.attr({
                  cy: $.bcy,
                  cx: $.bcx,
                  j: h,
                  val: m[o][h],
                  barHeight: x,
                  barWidth: v,
                }),
                (M = this.drawCalculatedDataLabels({
                  x: $.dataLabelsX,
                  y: $.dataLabelsY,
                  val: this.barCtx.isRangeBar ? [s, a] : m[o][h],
                  i: d,
                  j: h,
                  barWidth: v,
                  barHeight: x,
                  textRects: Pe,
                  dataLabelsConfig: le,
                })),
                R.config.chart.stacked &&
                  se.enabled &&
                  (z = this.drawTotalDataLabels({
                    x: $.totalDataLabelsX,
                    y: $.totalDataLabelsY,
                    realIndex: d,
                    textAnchor: $.totalDataLabelsAnchor,
                    val: this.getStackedTotalDataLabel({ realIndex: d, j: h }),
                    dataLabelsConfig: le,
                    barTotalDataLabelsConfig: se,
                  })),
                { dataLabels: M, totalDataLabels: z }
              );
            },
          },
          {
            key: "getStackedTotalDataLabel",
            value: function (t) {
              var l = t.realIndex,
                r = t.j,
                s = this.w,
                a = this.barCtx.stackedSeriesTotals[r];
              return (
                this.totalFormatter &&
                  (a = this.totalFormatter(
                    a,
                    c(
                      c({}, s),
                      {},
                      { seriesIndex: l, dataPointIndex: r, w: s },
                    ),
                  )),
                a
              );
            },
          },
          {
            key: "calculateColumnsDataLabelsPosition",
            value: function (t) {
              var l,
                r,
                s = this.w,
                a = t.i,
                o = t.j,
                h = t.realIndex,
                d = t.groupIndex,
                p = t.y,
                m = t.bcx,
                x = t.barWidth,
                v = t.barHeight,
                w = t.textRects,
                S = t.dataLabelsX,
                A = t.dataLabelsY,
                P = t.dataLabelsConfig,
                R = t.barDataLabelsConfig,
                O = t.barTotalDataLabelsConfig,
                f = t.strokeWidth,
                y = t.offX,
                C = t.offY;
              v = Math.abs(v);
              var M =
                s.config.plotOptions.bar.dataLabels.orientation === "vertical";
              m = m - f / 2 + (d !== -1 ? d * x : 0);
              var z = s.globals.gridWidth / s.globals.dataPoints;
              this.barCtx.isVerticalGroupedRangeBar
                ? (S += x / 2)
                : (S = s.globals.isXNumeric
                    ? m - x / 2 + y
                    : m - z + x / 2 + y),
                M && (S = S + w.height / 2 - f / 2 - 2);
              var D = this.barCtx.series[a][o] < 0,
                U = p;
              switch (
                (this.barCtx.isReversed &&
                  ((U = p - v + (D ? 2 * v : 0)), (p -= v)),
                R.position)
              ) {
                case "center":
                  A = M
                    ? D
                      ? U + v / 2 + C
                      : U + v / 2 - C
                    : D
                      ? U - v / 2 + w.height / 2 + C
                      : U + v / 2 + w.height / 2 - C;
                  break;
                case "bottom":
                  A = M
                    ? D
                      ? U + v + C
                      : U + v - C
                    : D
                      ? U - v + w.height + f + C
                      : U + v - w.height / 2 + f - C;
                  break;
                case "top":
                  A = M
                    ? D
                      ? U + C
                      : U - C
                    : D
                      ? U - w.height / 2 - C
                      : U + w.height + C;
              }
              if (this.barCtx.lastActiveBarSerieIndex === h && O.enabled) {
                var $ = new Z(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: h, j: o }),
                  P.fontSize,
                );
                (l = D
                  ? U - $.height / 2 - C - O.offsetY + 18
                  : U + $.height + C + O.offsetY - 18),
                  (r = S + O.offsetX);
              }
              return (
                s.config.chart.stacked ||
                  (A < 0
                    ? (A = 0 + f)
                    : A + w.height / 3 > s.globals.gridHeight &&
                      (A = s.globals.gridHeight - f)),
                {
                  bcx: m,
                  bcy: p,
                  dataLabelsX: S,
                  dataLabelsY: A,
                  totalDataLabelsX: r,
                  totalDataLabelsY: l,
                  totalDataLabelsAnchor: "middle",
                }
              );
            },
          },
          {
            key: "calculateBarsDataLabelsPosition",
            value: function (t) {
              var l = this.w,
                r = t.x,
                s = t.i,
                a = t.j,
                o = t.realIndex,
                h = t.groupIndex,
                d = t.bcy,
                p = t.barHeight,
                m = t.barWidth,
                x = t.textRects,
                v = t.dataLabelsX,
                w = t.strokeWidth,
                S = t.dataLabelsConfig,
                A = t.barDataLabelsConfig,
                P = t.barTotalDataLabelsConfig,
                R = t.offX,
                O = t.offY,
                f = l.globals.gridHeight / l.globals.dataPoints;
              m = Math.abs(m);
              var y,
                C,
                M =
                  (d += h !== -1 ? h * p : 0) -
                  (this.barCtx.isRangeBar ? 0 : f) +
                  p / 2 +
                  x.height / 2 +
                  O -
                  3,
                z = "start",
                D = this.barCtx.series[s][a] < 0,
                U = r;
              switch (
                (this.barCtx.isReversed &&
                  ((U = r + m - (D ? 2 * m : 0)),
                  (r = l.globals.gridWidth - m)),
                A.position)
              ) {
                case "center":
                  v = D ? U + m / 2 - R : Math.max(x.width / 2, U - m / 2) + R;
                  break;
                case "bottom":
                  v = D
                    ? U + m - w - Math.round(x.width / 2) - R
                    : U - m + w + Math.round(x.width / 2) + R;
                  break;
                case "top":
                  v = D
                    ? U - w + Math.round(x.width / 2) - R
                    : U - w - Math.round(x.width / 2) + R;
              }
              if (this.barCtx.lastActiveBarSerieIndex === o && P.enabled) {
                var $ = new Z(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: o, j: a }),
                  S.fontSize,
                );
                D
                  ? ((y = U - w + Math.round($.width / 2) - R - P.offsetX - 15),
                    (z = "end"))
                  : (y = U - w - Math.round($.width / 2) + R + P.offsetX + 15),
                  (C = M + P.offsetY);
              }
              return (
                l.config.chart.stacked ||
                  (v < 0
                    ? (v = v + x.width + w)
                    : v + x.width / 2 > l.globals.gridWidth &&
                      (v = l.globals.gridWidth - x.width - w)),
                {
                  bcx: r,
                  bcy: d,
                  dataLabelsX: v,
                  dataLabelsY: M,
                  totalDataLabelsX: y,
                  totalDataLabelsY: C,
                  totalDataLabelsAnchor: z,
                }
              );
            },
          },
          {
            key: "drawCalculatedDataLabels",
            value: function (t) {
              var l = t.x,
                r = t.y,
                s = t.val,
                a = t.i,
                o = t.j,
                h = t.textRects,
                d = t.barHeight,
                p = t.barWidth,
                m = t.dataLabelsConfig,
                x = this.w,
                v = "rotate(0)";
              x.config.plotOptions.bar.dataLabels.orientation === "vertical" &&
                (v = "rotate(-90, ".concat(l, ", ").concat(r, ")"));
              var w = new Gt(this.barCtx.ctx),
                S = new Z(this.barCtx.ctx),
                A = m.formatter,
                P = null,
                R = x.globals.collapsedSeriesIndices.indexOf(a) > -1;
              if (m.enabled && !R) {
                P = S.group({ class: "apexcharts-data-labels", transform: v });
                var O = "";
                s !== void 0 &&
                  (O = A(
                    s,
                    c(
                      c({}, x),
                      {},
                      { seriesIndex: a, dataPointIndex: o, w: x },
                    ),
                  )),
                  !s &&
                    x.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (O = "");
                var f = x.globals.series[a][o] < 0,
                  y = x.config.plotOptions.bar.dataLabels.position;
                x.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical" &&
                  (y === "top" && (m.textAnchor = f ? "end" : "start"),
                  y === "center" && (m.textAnchor = "middle"),
                  y === "bottom" && (m.textAnchor = f ? "end" : "start")),
                  this.barCtx.isRangeBar &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    p < S.getTextRects(O, parseFloat(m.style.fontSize)).width &&
                    (O = ""),
                  x.config.chart.stacked &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    (this.barCtx.isHorizontal
                      ? h.width / 1.6 > Math.abs(p) && (O = "")
                      : h.height / 1.6 > Math.abs(d) && (O = ""));
                var C = c({}, m);
                this.barCtx.isHorizontal &&
                  s < 0 &&
                  (m.textAnchor === "start"
                    ? (C.textAnchor = "end")
                    : m.textAnchor === "end" && (C.textAnchor = "start")),
                  w.plotDataLabelsText({
                    x: l,
                    y: r,
                    text: O,
                    i: a,
                    j: o,
                    parent: P,
                    dataLabelsConfig: C,
                    alwaysDrawDataLabel: !0,
                    offsetCorrection: !0,
                  });
              }
              return P;
            },
          },
          {
            key: "drawTotalDataLabels",
            value: function (t) {
              var l,
                r = t.x,
                s = t.y,
                a = t.val,
                o = t.realIndex,
                h = t.textAnchor,
                d = t.barTotalDataLabelsConfig,
                p = new Z(this.barCtx.ctx);
              return (
                d.enabled &&
                  r !== void 0 &&
                  s !== void 0 &&
                  this.barCtx.lastActiveBarSerieIndex === o &&
                  (l = p.drawText({
                    x: r,
                    y: s,
                    foreColor: d.style.color,
                    text: a,
                    textAnchor: h,
                    fontFamily: d.style.fontFamily,
                    fontSize: d.style.fontSize,
                    fontWeight: d.style.fontWeight,
                  })),
                l
              );
            },
          },
        ]),
        T
      );
    })(),
    zp = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.barCtx = t);
      }
      return (
        k(T, [
          {
            key: "initVariables",
            value: function (t) {
              var l = this.w;
              (this.barCtx.series = t),
                (this.barCtx.totalItems = 0),
                (this.barCtx.seriesLen = 0),
                (this.barCtx.visibleI = -1),
                (this.barCtx.visibleItems = 1);
              for (var r = 0; r < t.length; r++)
                if (
                  (t[r].length > 0 &&
                    ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                    (this.barCtx.totalItems += t[r].length)),
                  l.globals.isXNumeric)
                )
                  for (var s = 0; s < t[r].length; s++)
                    l.globals.seriesX[r][s] > l.globals.minX &&
                      l.globals.seriesX[r][s] < l.globals.maxX &&
                      this.barCtx.visibleItems++;
                else this.barCtx.visibleItems = l.globals.dataPoints;
              this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                (this.barCtx.zeroSerieses = []),
                l.globals.comboCharts || this.checkZeroSeries({ series: t });
            },
          },
          {
            key: "initialPositions",
            value: function () {
              var t,
                l,
                r,
                s,
                a,
                o,
                h,
                d,
                p = this.w,
                m = p.globals.dataPoints;
              this.barCtx.isRangeBar && (m = p.globals.labels.length);
              var x = this.barCtx.seriesLen;
              if (
                (p.config.plotOptions.bar.rangeBarGroupRows && (x = 1),
                this.barCtx.isHorizontal)
              )
                (a = (r = p.globals.gridHeight / m) / x),
                  p.globals.isXNumeric &&
                    (a =
                      (r = p.globals.gridHeight / this.barCtx.totalItems) /
                      this.barCtx.seriesLen),
                  (a =
                    (a * parseInt(this.barCtx.barOptions.barHeight, 10)) / 100),
                  String(this.barCtx.barOptions.barHeight).indexOf("%") ===
                    -1 && (a = parseInt(this.barCtx.barOptions.barHeight, 10)),
                  (d =
                    this.barCtx.baseLineInvertedY +
                    p.globals.padHorizontal +
                    (this.barCtx.isReversed ? p.globals.gridWidth : 0) -
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineInvertedY
                      : 0)),
                  this.barCtx.isFunnel && (d = p.globals.gridWidth / 2),
                  (l = (r - a * this.barCtx.seriesLen) / 2);
              else {
                if (
                  ((s = p.globals.gridWidth / this.barCtx.visibleItems),
                  p.config.xaxis.convertedCatToNumeric &&
                    (s = p.globals.gridWidth / p.globals.dataPoints),
                  (o =
                    ((s / x) *
                      parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                    100),
                  p.globals.isXNumeric)
                ) {
                  var v = this.barCtx.xRatio;
                  p.config.xaxis.convertedCatToNumeric &&
                    (v = this.barCtx.initialXRatio),
                    p.globals.minXDiff &&
                      p.globals.minXDiff !== 0.5 &&
                      p.globals.minXDiff / v > 0 &&
                      (s = p.globals.minXDiff / v),
                    (o =
                      ((s / x) *
                        parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                      100) < 1 && (o = 1);
                }
                String(this.barCtx.barOptions.columnWidth).indexOf("%") ===
                  -1 && (o = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                  (h =
                    p.globals.gridHeight -
                    this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                    (this.barCtx.isReversed ? p.globals.gridHeight : 0) +
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                      : 0)),
                  (t =
                    p.globals.padHorizontal +
                    (s - o * this.barCtx.seriesLen) / 2);
              }
              return {
                x: t,
                y: l,
                yDivision: r,
                xDivision: s,
                barHeight: a,
                barWidth: o,
                zeroH: h,
                zeroW: d,
              };
            },
          },
          {
            key: "initializeStackedPrevVars",
            value: function (t) {
              var l = t.w;
              l.globals.hasSeriesGroups
                ? l.globals.seriesGroups.forEach(function (r) {
                    t[r] || (t[r] = {}),
                      (t[r].prevY = []),
                      (t[r].prevX = []),
                      (t[r].prevYF = []),
                      (t[r].prevXF = []),
                      (t[r].prevYVal = []),
                      (t[r].prevXVal = []);
                  })
                : ((t.prevY = []),
                  (t.prevX = []),
                  (t.prevYF = []),
                  (t.prevXF = []),
                  (t.prevYVal = []),
                  (t.prevXVal = []));
            },
          },
          {
            key: "initializeStackedXYVars",
            value: function (t) {
              var l = t.w;
              l.globals.hasSeriesGroups
                ? l.globals.seriesGroups.forEach(function (r) {
                    t[r] || (t[r] = {}),
                      (t[r].xArrj = []),
                      (t[r].xArrjF = []),
                      (t[r].xArrjVal = []),
                      (t[r].yArrj = []),
                      (t[r].yArrjF = []),
                      (t[r].yArrjVal = []);
                  })
                : ((t.xArrj = []),
                  (t.xArrjF = []),
                  (t.xArrjVal = []),
                  (t.yArrj = []),
                  (t.yArrjF = []),
                  (t.yArrjVal = []));
            },
          },
          {
            key: "getPathFillColor",
            value: function (t, l, r, s) {
              var a,
                o,
                h,
                d,
                p = this.w,
                m = new Te(this.barCtx.ctx),
                x = null,
                v = this.barCtx.barOptions.distributed ? r : l;
              return (
                this.barCtx.barOptions.colors.ranges.length > 0 &&
                  this.barCtx.barOptions.colors.ranges.map(function (w) {
                    t[l][r] >= w.from && t[l][r] <= w.to && (x = w.color);
                  }),
                p.config.series[l].data[r] &&
                  p.config.series[l].data[r].fillColor &&
                  (x = p.config.series[l].data[r].fillColor),
                m.fillPath({
                  seriesNumber: this.barCtx.barOptions.distributed ? v : s,
                  dataPointIndex: r,
                  color: x,
                  value: t[l][r],
                  fillConfig:
                    (a = p.config.series[l].data[r]) === null || a === void 0
                      ? void 0
                      : a.fill,
                  fillType:
                    (o = p.config.series[l].data[r]) !== null &&
                    o !== void 0 &&
                    (h = o.fill) !== null &&
                    h !== void 0 &&
                    h.type
                      ? (d = p.config.series[l].data[r]) === null ||
                        d === void 0
                        ? void 0
                        : d.fill.type
                      : p.config.fill.type,
                })
              );
            },
          },
          {
            key: "getStrokeWidth",
            value: function (t, l, r) {
              var s = 0,
                a = this.w;
              return (
                this.barCtx.series[t][l]
                  ? (this.barCtx.isNullValue = !1)
                  : (this.barCtx.isNullValue = !0),
                a.config.stroke.show &&
                  (this.barCtx.isNullValue ||
                    (s = Array.isArray(this.barCtx.strokeWidth)
                      ? this.barCtx.strokeWidth[r]
                      : this.barCtx.strokeWidth)),
                s
              );
            },
          },
          {
            key: "shouldApplyRadius",
            value: function (t) {
              var l = this.w,
                r = !1;
              return (
                l.config.plotOptions.bar.borderRadius > 0 &&
                  (l.config.chart.stacked &&
                  l.config.plotOptions.bar.borderRadiusWhenStacked === "last"
                    ? this.barCtx.lastActiveBarSerieIndex === t && (r = !0)
                    : (r = !0)),
                r
              );
            },
          },
          {
            key: "barBackground",
            value: function (t) {
              var l = t.j,
                r = t.i,
                s = t.x1,
                a = t.x2,
                o = t.y1,
                h = t.y2,
                d = t.elSeries,
                p = this.w,
                m = new Z(this.barCtx.ctx),
                x = new $e(this.barCtx.ctx).getActiveConfigSeriesIndex();
              if (
                this.barCtx.barOptions.colors.backgroundBarColors.length > 0 &&
                x === r
              ) {
                l >= this.barCtx.barOptions.colors.backgroundBarColors.length &&
                  (l %=
                    this.barCtx.barOptions.colors.backgroundBarColors.length);
                var v = this.barCtx.barOptions.colors.backgroundBarColors[l],
                  w = m.drawRect(
                    s !== void 0 ? s : 0,
                    o !== void 0 ? o : 0,
                    a !== void 0 ? a : p.globals.gridWidth,
                    h !== void 0 ? h : p.globals.gridHeight,
                    this.barCtx.barOptions.colors.backgroundBarRadius,
                    v,
                    this.barCtx.barOptions.colors.backgroundBarOpacity,
                  );
                d.add(w), w.node.classList.add("apexcharts-backgroundBar");
              }
            },
          },
          {
            key: "getColumnPaths",
            value: function (t) {
              var l,
                r = t.barWidth,
                s = t.barXPosition,
                a = t.y1,
                o = t.y2,
                h = t.strokeWidth,
                d = t.seriesGroup,
                p = t.realIndex,
                m = t.i,
                x = t.j,
                v = t.w,
                w = new Z(this.barCtx.ctx);
              (h = Array.isArray(h) ? h[p] : h) || (h = 0);
              var S = r,
                A = s;
              (l = v.config.series[p].data[x]) !== null &&
                l !== void 0 &&
                l.columnWidthOffset &&
                ((A = s - v.config.series[p].data[x].columnWidthOffset / 2),
                (S = r + v.config.series[p].data[x].columnWidthOffset));
              var P = A,
                R = A + S;
              (a += 0.001), (o += 0.001);
              var O = w.move(P, a),
                f = w.move(P, a),
                y = w.line(R - h, a);
              if (
                (v.globals.previousPaths.length > 0 &&
                  (f = this.barCtx.getPreviousPath(p, x, !1)),
                (O =
                  O +
                  w.line(P, o) +
                  w.line(R - h, o) +
                  w.line(R - h, a) +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (f =
                  f +
                  w.line(P, a) +
                  y +
                  y +
                  y +
                  y +
                  y +
                  w.line(P, a) +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(p) &&
                  (O = w.roundPathCorners(
                    O,
                    v.config.plotOptions.bar.borderRadius,
                  )),
                v.config.chart.stacked)
              ) {
                var C = this.barCtx;
                v.globals.hasSeriesGroups && d && (C = this.barCtx[d]),
                  C.yArrj.push(o),
                  C.yArrjF.push(Math.abs(a - o)),
                  C.yArrjVal.push(this.barCtx.series[m][x]);
              }
              return { pathTo: O, pathFrom: f };
            },
          },
          {
            key: "getBarpaths",
            value: function (t) {
              var l,
                r = t.barYPosition,
                s = t.barHeight,
                a = t.x1,
                o = t.x2,
                h = t.strokeWidth,
                d = t.seriesGroup,
                p = t.realIndex,
                m = t.i,
                x = t.j,
                v = t.w,
                w = new Z(this.barCtx.ctx);
              (h = Array.isArray(h) ? h[p] : h) || (h = 0);
              var S = r,
                A = s;
              (l = v.config.series[p].data[x]) !== null &&
                l !== void 0 &&
                l.barHeightOffset &&
                ((S = r - v.config.series[p].data[x].barHeightOffset / 2),
                (A = s + v.config.series[p].data[x].barHeightOffset));
              var P = S,
                R = S + A;
              (a += 0.001), (o += 0.001);
              var O = w.move(a, P),
                f = w.move(a, P);
              v.globals.previousPaths.length > 0 &&
                (f = this.barCtx.getPreviousPath(p, x, !1));
              var y = w.line(a, R - h);
              if (
                ((O =
                  O +
                  w.line(o, P) +
                  w.line(o, R - h) +
                  y +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (f =
                  f +
                  w.line(a, P) +
                  y +
                  y +
                  y +
                  y +
                  y +
                  w.line(a, P) +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(p) &&
                  (O = w.roundPathCorners(
                    O,
                    v.config.plotOptions.bar.borderRadius,
                  )),
                v.config.chart.stacked)
              ) {
                var C = this.barCtx;
                v.globals.hasSeriesGroups && d && (C = this.barCtx[d]),
                  C.xArrj.push(o),
                  C.xArrjF.push(Math.abs(a - o)),
                  C.xArrjVal.push(this.barCtx.series[m][x]);
              }
              return { pathTo: O, pathFrom: f };
            },
          },
          {
            key: "checkZeroSeries",
            value: function (t) {
              for (var l = t.series, r = this.w, s = 0; s < l.length; s++) {
                for (
                  var a = 0, o = 0;
                  o < l[r.globals.maxValsInArrayIndex].length;
                  o++
                )
                  a += l[s][o];
                a === 0 && this.barCtx.zeroSerieses.push(s);
              }
            },
          },
          {
            key: "getXForValue",
            value: function (t, l) {
              var r =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? l
                  : null;
              return (
                t != null &&
                  (r =
                    l +
                    t / this.barCtx.invertedYRatio -
                    2 *
                      (this.barCtx.isReversed
                        ? t / this.barCtx.invertedYRatio
                        : 0)),
                r
              );
            },
          },
          {
            key: "getYForValue",
            value: function (t, l) {
              var r =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? l
                  : null;
              return (
                t != null &&
                  (r =
                    l -
                    t / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                    2 *
                      (this.barCtx.isReversed
                        ? t / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                        : 0)),
                r
              );
            },
          },
          {
            key: "getGoalValues",
            value: function (t, l, r, s, a) {
              var o = this,
                h = this.w,
                d = [],
                p = function (v, w) {
                  var S;
                  d.push(
                    (E(
                      (S = {}),
                      t,
                      t === "x"
                        ? o.getXForValue(v, l, !1)
                        : o.getYForValue(v, r, !1),
                    ),
                    E(S, "attrs", w),
                    S),
                  );
                };
              if (
                (h.globals.seriesGoals[s] &&
                  h.globals.seriesGoals[s][a] &&
                  Array.isArray(h.globals.seriesGoals[s][a]) &&
                  h.globals.seriesGoals[s][a].forEach(function (v) {
                    p(v.value, v);
                  }),
                this.barCtx.barOptions.isDumbbell &&
                  h.globals.seriesRange.length)
              ) {
                var m = this.barCtx.barOptions.dumbbellColors
                    ? this.barCtx.barOptions.dumbbellColors
                    : h.globals.colors,
                  x = {
                    strokeHeight: t === "x" ? 0 : h.globals.markers.size[s],
                    strokeWidth: t === "x" ? h.globals.markers.size[s] : 0,
                    strokeDashArray: 0,
                    strokeLineCap: "round",
                    strokeColor: Array.isArray(m[s]) ? m[s][0] : m[s],
                  };
                p(h.globals.seriesRangeStart[s][a], x),
                  p(
                    h.globals.seriesRangeEnd[s][a],
                    c(
                      c({}, x),
                      {},
                      { strokeColor: Array.isArray(m[s]) ? m[s][1] : m[s] },
                    ),
                  );
              }
              return d;
            },
          },
          {
            key: "drawGoalLine",
            value: function (t) {
              var l = t.barXPosition,
                r = t.barYPosition,
                s = t.goalX,
                a = t.goalY,
                o = t.barWidth,
                h = t.barHeight,
                d = new Z(this.barCtx.ctx),
                p = d.group({ className: "apexcharts-bar-goals-groups" });
              p.node.classList.add("apexcharts-element-hidden"),
                this.barCtx.w.globals.delayedElements.push({ el: p.node }),
                p.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(
                    this.barCtx.w.globals.cuid,
                    ")",
                  ),
                );
              var m = null;
              return (
                this.barCtx.isHorizontal
                  ? Array.isArray(s) &&
                    s.forEach(function (x) {
                      var v =
                          x.attrs.strokeHeight !== void 0
                            ? x.attrs.strokeHeight
                            : h / 2,
                        w = r + v + h / 2;
                      (m = d.drawLine(
                        x.x,
                        w - 2 * v,
                        x.x,
                        w,
                        x.attrs.strokeColor ? x.attrs.strokeColor : void 0,
                        x.attrs.strokeDashArray,
                        x.attrs.strokeWidth ? x.attrs.strokeWidth : 2,
                        x.attrs.strokeLineCap,
                      )),
                        p.add(m);
                    })
                  : Array.isArray(a) &&
                    a.forEach(function (x) {
                      var v =
                          x.attrs.strokeWidth !== void 0
                            ? x.attrs.strokeWidth
                            : o / 2,
                        w = l + v + o / 2;
                      (m = d.drawLine(
                        w - 2 * v,
                        x.y,
                        w,
                        x.y,
                        x.attrs.strokeColor ? x.attrs.strokeColor : void 0,
                        x.attrs.strokeDashArray,
                        x.attrs.strokeHeight ? x.attrs.strokeHeight : 2,
                        x.attrs.strokeLineCap,
                      )),
                        p.add(m);
                    }),
                p
              );
            },
          },
          {
            key: "drawBarShadow",
            value: function (t) {
              var l = t.prevPaths,
                r = t.currPaths,
                s = t.color,
                a = this.w,
                o = l.x,
                h = l.x1,
                d = l.barYPosition,
                p = r.x,
                m = r.x1,
                x = r.barYPosition,
                v = d + r.barHeight,
                w = new Z(this.barCtx.ctx),
                S = new L(),
                A =
                  w.move(h, v) +
                  w.line(o, v) +
                  w.line(p, x) +
                  w.line(m, x) +
                  w.line(h, v) +
                  (a.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z");
              return w.drawPath({
                d: A,
                fill: S.shadeColor(0.5, L.rgb2hex(s)),
                stroke: "none",
                strokeWidth: 0,
                fillOpacity: 1,
                classes: "apexcharts-bar-shadows",
              });
            },
          },
        ]),
        T
      );
    })(),
    Ui = (function () {
      function T(t, l) {
        g(this, T), (this.ctx = t), (this.w = t.w);
        var r = this.w;
        (this.barOptions = r.config.plotOptions.bar),
          (this.isHorizontal = this.barOptions.horizontal),
          (this.strokeWidth = r.config.stroke.width),
          (this.isNullValue = !1),
          (this.isRangeBar = r.globals.seriesRange.length && this.isHorizontal),
          (this.isVerticalGroupedRangeBar =
            !r.globals.isBarHorizontal &&
            r.globals.seriesRange.length &&
            r.config.plotOptions.bar.rangeBarGroupRows),
          (this.isFunnel = this.barOptions.isFunnel),
          (this.xyRatios = l),
          this.xyRatios !== null &&
            ((this.xRatio = l.xRatio),
            (this.initialXRatio = l.initialXRatio),
            (this.yRatio = l.yRatio),
            (this.invertedXRatio = l.invertedXRatio),
            (this.invertedYRatio = l.invertedYRatio),
            (this.baseLineY = l.baseLineY),
            (this.baseLineInvertedY = l.baseLineInvertedY)),
          (this.yaxisIndex = 0),
          (this.seriesLen = 0),
          (this.pathArr = []);
        var s = new $e(this.ctx);
        this.lastActiveBarSerieIndex = s.getActiveConfigSeriesIndex("desc", [
          "bar",
          "column",
        ]);
        var a = s.getBarSeriesIndices(),
          o = new oe(this.ctx);
        (this.stackedSeriesTotals = o.getStackedSeriesTotals(
          this.w.config.series
            .map(function (h, d) {
              return a.indexOf(d) === -1 ? d : -1;
            })
            .filter(function (h) {
              return h !== -1;
            }),
        )),
          (this.barHelpers = new zp(this));
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t, l) {
              var r = this.w,
                s = new Z(this.ctx),
                a = new oe(this.ctx, r);
              (t = a.getLogSeries(t)),
                (this.series = t),
                (this.yRatio = a.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(t);
              var o = s.group({
                class: "apexcharts-bar-series apexcharts-plot-series",
              });
              r.config.dataLabels.enabled &&
                this.totalItems > this.barOptions.dataLabels.maxItems &&
                console.warn(
                  "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.",
                );
              for (var h = 0, d = 0; h < t.length; h++, d++) {
                var p,
                  m,
                  x,
                  v,
                  w = void 0,
                  S = void 0,
                  A = [],
                  P = [],
                  R = r.globals.comboCharts ? l[h] : h,
                  O = s.group({
                    class: "apexcharts-series",
                    rel: h + 1,
                    seriesName: L.escapeString(r.globals.seriesNames[R]),
                    "data:realIndex": R,
                  });
                this.ctx.series.addCollapsedClassToSeries(O, R),
                  t[h].length > 0 && (this.visibleI = this.visibleI + 1);
                var f = 0,
                  y = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = R),
                  (this.isReversed =
                    r.config.yaxis[this.yaxisIndex] &&
                    r.config.yaxis[this.yaxisIndex].reversed);
                var C = this.barHelpers.initialPositions();
                (S = C.y),
                  (f = C.barHeight),
                  (m = C.yDivision),
                  (v = C.zeroW),
                  (w = C.x),
                  (y = C.barWidth),
                  (p = C.xDivision),
                  (x = C.zeroH),
                  this.horizontal || P.push(w + y / 2);
                var M = s.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": R,
                });
                r.globals.delayedElements.push({ el: M.node }),
                  M.node.classList.add("apexcharts-element-hidden");
                var z = s.group({
                    class: "apexcharts-bar-goals-markers",
                    style: "pointer-events: none",
                  }),
                  D = s.group({
                    class: "apexcharts-bar-shadows",
                    style: "pointer-events: none",
                  });
                r.globals.delayedElements.push({ el: D.node }),
                  D.node.classList.add("apexcharts-element-hidden");
                for (var U = 0; U < r.globals.dataPoints; U++) {
                  var $ = this.barHelpers.getStrokeWidth(h, U, R),
                    le = null,
                    ne = {
                      indexes: { i: h, j: U, realIndex: R, bc: d },
                      x: w,
                      y: S,
                      strokeWidth: $,
                      elSeries: O,
                    };
                  this.isHorizontal
                    ? ((le = this.drawBarPaths(
                        c(
                          c({}, ne),
                          {},
                          { barHeight: f, zeroW: v, yDivision: m },
                        ),
                      )),
                      (y = this.series[h][U] / this.invertedYRatio))
                    : ((le = this.drawColumnPaths(
                        c(
                          c({}, ne),
                          {},
                          { xDivision: p, barWidth: y, zeroH: x },
                        ),
                      )),
                      (f = this.series[h][U] / this.yRatio[this.yaxisIndex]));
                  var se = this.barHelpers.getPathFillColor(t, h, U, R);
                  if (
                    this.isFunnel &&
                    this.barOptions.isFunnel3d &&
                    this.pathArr.length &&
                    U > 0
                  ) {
                    var he = this.barHelpers.drawBarShadow({
                      color:
                        typeof se == "string" &&
                        (se == null ? void 0 : se.indexOf("url")) === -1
                          ? se
                          : L.hexToRgba(r.globals.colors[h]),
                      prevPaths: this.pathArr[this.pathArr.length - 1],
                      currPaths: le,
                    });
                    he && D.add(he);
                  }
                  this.pathArr.push(le);
                  var ye = this.barHelpers.drawGoalLine({
                    barXPosition: le.barXPosition,
                    barYPosition: le.barYPosition,
                    goalX: le.goalX,
                    goalY: le.goalY,
                    barHeight: f,
                    barWidth: y,
                  });
                  ye && z.add(ye),
                    (S = le.y),
                    (w = le.x),
                    U > 0 && P.push(w + y / 2),
                    A.push(S),
                    this.renderSeries({
                      realIndex: R,
                      pathFill: se,
                      j: U,
                      i: h,
                      pathFrom: le.pathFrom,
                      pathTo: le.pathTo,
                      strokeWidth: $,
                      elSeries: O,
                      x: w,
                      y: S,
                      series: t,
                      barHeight: le.barHeight ? le.barHeight : f,
                      barWidth: le.barWidth ? le.barWidth : y,
                      elDataLabelsWrap: M,
                      elGoalsMarkers: z,
                      elBarShadows: D,
                      visibleSeries: this.visibleI,
                      type: "bar",
                    });
                }
                (r.globals.seriesXvalues[R] = P),
                  (r.globals.seriesYvalues[R] = A),
                  o.add(O);
              }
              return o;
            },
          },
          {
            key: "renderSeries",
            value: function (t) {
              var l = t.realIndex,
                r = t.pathFill,
                s = t.lineFill,
                a = t.j,
                o = t.i,
                h = t.groupIndex,
                d = t.pathFrom,
                p = t.pathTo,
                m = t.strokeWidth,
                x = t.elSeries,
                v = t.x,
                w = t.y,
                S = t.y1,
                A = t.y2,
                P = t.series,
                R = t.barHeight,
                O = t.barWidth,
                f = t.barXPosition,
                y = t.barYPosition,
                C = t.elDataLabelsWrap,
                M = t.elGoalsMarkers,
                z = t.elBarShadows,
                D = t.visibleSeries,
                U = t.type,
                $ = this.w,
                le = new Z(this.ctx);
              s ||
                (s = this.barOptions.distributed
                  ? $.globals.stroke.colors[a]
                  : $.globals.stroke.colors[l]),
                $.config.series[o].data[a] &&
                  $.config.series[o].data[a].strokeColor &&
                  (s = $.config.series[o].data[a].strokeColor),
                this.isNullValue && (r = "none");
              var ne =
                  ((a / $.config.chart.animations.animateGradually.delay) *
                    ($.config.chart.animations.speed / $.globals.dataPoints)) /
                  2.4,
                se = le.renderPaths({
                  i: o,
                  j: a,
                  realIndex: l,
                  pathFrom: d,
                  pathTo: p,
                  stroke: s,
                  strokeWidth: m,
                  strokeLineCap: $.config.stroke.lineCap,
                  fill: r,
                  animationDelay: ne,
                  initialSpeed: $.config.chart.animations.speed,
                  dataChangeSpeed:
                    $.config.chart.animations.dynamicAnimation.speed,
                  className: "apexcharts-".concat(U, "-area"),
                });
              se.attr(
                "clip-path",
                "url(#gridRectMask".concat($.globals.cuid, ")"),
              );
              var he = $.config.forecastDataPoints;
              he.count > 0 &&
                a >= $.globals.dataPoints - he.count &&
                (se.node.setAttribute("stroke-dasharray", he.dashArray),
                se.node.setAttribute("stroke-width", he.strokeWidth),
                se.node.setAttribute("fill-opacity", he.fillOpacity)),
                S !== void 0 &&
                  A !== void 0 &&
                  (se.attr("data-range-y1", S), se.attr("data-range-y2", A)),
                new te(this.ctx).setSelectionFilter(se, l, a),
                x.add(se);
              var ye = new Op(this).handleBarDataLabels({
                x: v,
                y: w,
                y1: S,
                y2: A,
                i: o,
                j: a,
                series: P,
                realIndex: l,
                groupIndex: h,
                barHeight: R,
                barWidth: O,
                barXPosition: f,
                barYPosition: y,
                renderedPath: se,
                visibleSeries: D,
              });
              return (
                ye.dataLabels !== null && C.add(ye.dataLabels),
                ye.totalDataLabels && C.add(ye.totalDataLabels),
                x.add(C),
                M && x.add(M),
                z && x.add(z),
                x
              );
            },
          },
          {
            key: "drawBarPaths",
            value: function (t) {
              var l,
                r = t.indexes,
                s = t.barHeight,
                a = t.strokeWidth,
                o = t.zeroW,
                h = t.x,
                d = t.y,
                p = t.yDivision,
                m = t.elSeries,
                x = this.w,
                v = r.i,
                w = r.j;
              if (x.globals.isXNumeric)
                l =
                  (d =
                    (x.globals.seriesX[v][w] - x.globals.minX) /
                      this.invertedXRatio -
                    s) +
                  s * this.visibleI;
              else if (x.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var S = 0,
                  A = 0;
                x.globals.seriesPercent.forEach(function (R, O) {
                  R[w] && S++, O < v && R[w] === 0 && A++;
                }),
                  S > 0 && (s = (this.seriesLen * s) / S),
                  (l = d + s * this.visibleI),
                  (l -= s * A);
              } else l = d + s * this.visibleI;
              this.isFunnel &&
                (o -=
                  (this.barHelpers.getXForValue(this.series[v][w], o) - o) / 2),
                (h = this.barHelpers.getXForValue(this.series[v][w], o));
              var P = this.barHelpers.getBarpaths({
                barYPosition: l,
                barHeight: s,
                x1: o,
                x2: h,
                strokeWidth: a,
                series: this.series,
                realIndex: r.realIndex,
                i: v,
                j: w,
                w: x,
              });
              return (
                x.globals.isXNumeric || (d += p),
                this.barHelpers.barBackground({
                  j: w,
                  i: v,
                  y1: l - s * this.visibleI,
                  y2: s * this.seriesLen,
                  elSeries: m,
                }),
                {
                  pathTo: P.pathTo,
                  pathFrom: P.pathFrom,
                  x1: o,
                  x: h,
                  y: d,
                  goalX: this.barHelpers.getGoalValues("x", o, null, v, w),
                  barYPosition: l,
                  barHeight: s,
                }
              );
            },
          },
          {
            key: "drawColumnPaths",
            value: function (t) {
              var l,
                r = t.indexes,
                s = t.x,
                a = t.y,
                o = t.xDivision,
                h = t.barWidth,
                d = t.zeroH,
                p = t.strokeWidth,
                m = t.elSeries,
                x = this.w,
                v = r.realIndex,
                w = r.i,
                S = r.j,
                A = r.bc;
              if (x.globals.isXNumeric) {
                var P = v;
                x.globals.seriesX[v].length ||
                  (P = x.globals.maxValsInArrayIndex),
                  x.globals.seriesX[P][S] &&
                    (s =
                      (x.globals.seriesX[P][S] - x.globals.minX) / this.xRatio -
                      (h * this.seriesLen) / 2),
                  (l = s + h * this.visibleI);
              } else if (x.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var R = 0,
                  O = 0;
                x.globals.seriesPercent.forEach(function (y, C) {
                  y[S] && R++, C < w && y[S] === 0 && O++;
                }),
                  R > 0 && (h = (this.seriesLen * h) / R),
                  (l = s + h * this.visibleI),
                  (l -= h * O);
              } else l = s + h * this.visibleI;
              a = this.barHelpers.getYForValue(this.series[w][S], d);
              var f = this.barHelpers.getColumnPaths({
                barXPosition: l,
                barWidth: h,
                y1: d,
                y2: a,
                strokeWidth: p,
                series: this.series,
                realIndex: r.realIndex,
                i: w,
                j: S,
                w: x,
              });
              return (
                x.globals.isXNumeric || (s += o),
                this.barHelpers.barBackground({
                  bc: A,
                  j: S,
                  i: w,
                  x1: l - p / 2 - h * this.visibleI,
                  x2: h * this.seriesLen + p / 2,
                  elSeries: m,
                }),
                {
                  pathTo: f.pathTo,
                  pathFrom: f.pathFrom,
                  x: s,
                  y: a,
                  goalY: this.barHelpers.getGoalValues("y", null, d, w, S),
                  barXPosition: l,
                  barWidth: h,
                }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (t, l) {
              for (
                var r, s = this.w, a = 0;
                a < s.globals.previousPaths.length;
                a++
              ) {
                var o = s.globals.previousPaths[a];
                o.paths &&
                  o.paths.length > 0 &&
                  parseInt(o.realIndex, 10) === parseInt(t, 10) &&
                  s.globals.previousPaths[a].paths[l] !== void 0 &&
                  (r = s.globals.previousPaths[a].paths[l].d);
              }
              return r;
            },
          },
        ]),
        T
      );
    })(),
    oh = (function (T) {
      I(l, Ui);
      var t = K(l);
      function l() {
        return g(this, l), t.apply(this, arguments);
      }
      return (
        k(l, [
          {
            key: "draw",
            value: function (r, s) {
              var a = this,
                o = this.w;
              (this.graphics = new Z(this.ctx)),
                (this.bar = new Ui(this.ctx, this.xyRatios));
              var h = new oe(this.ctx, o);
              (r = h.getLogSeries(r)),
                (this.yRatio = h.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(r),
                o.config.chart.stackType === "100%" &&
                  (r = o.globals.seriesPercent.slice()),
                (this.series = r),
                this.barHelpers.initializeStackedPrevVars(this);
              for (
                var d = this.graphics.group({
                    class: "apexcharts-bar-series apexcharts-plot-series",
                  }),
                  p = 0,
                  m = 0,
                  x = function (S, A) {
                    var P = void 0,
                      R = void 0,
                      O = void 0,
                      f = void 0,
                      y = -1;
                    (a.groupCtx = a),
                      o.globals.seriesGroups.forEach(function (Be, st) {
                        Be.indexOf(o.config.series[S].name) > -1 && (y = st);
                      }),
                      y !== -1 && (a.groupCtx = a[o.globals.seriesGroups[y]]);
                    var C = [],
                      M = [],
                      z = o.globals.comboCharts ? s[S] : S;
                    a.yRatio.length > 1 && (a.yaxisIndex = z),
                      (a.isReversed =
                        o.config.yaxis[a.yaxisIndex] &&
                        o.config.yaxis[a.yaxisIndex].reversed);
                    var D = a.graphics.group({
                      class: "apexcharts-series",
                      seriesName: L.escapeString(o.globals.seriesNames[z]),
                      rel: S + 1,
                      "data:realIndex": z,
                    });
                    a.ctx.series.addCollapsedClassToSeries(D, z);
                    var U = a.graphics.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": z,
                      }),
                      $ = a.graphics.group({
                        class: "apexcharts-bar-goals-markers",
                        style: "pointer-events: none",
                      }),
                      le = 0,
                      ne = 0,
                      se = a.initialPositions(p, m, P, R, O, f);
                    (m = se.y),
                      (le = se.barHeight),
                      (R = se.yDivision),
                      (f = se.zeroW),
                      (p = se.x),
                      (ne = se.barWidth),
                      (P = se.xDivision),
                      (O = se.zeroH),
                      a.barHelpers.initializeStackedXYVars(a),
                      a.groupCtx.prevY.length === 1 &&
                        a.groupCtx.prevY[0].every(function (Be) {
                          return isNaN(Be);
                        }) &&
                        ((a.groupCtx.prevY[0] = a.groupCtx.prevY[0].map(
                          function (Be) {
                            return O;
                          },
                        )),
                        (a.groupCtx.prevYF[0] = a.groupCtx.prevYF[0].map(
                          function (Be) {
                            return 0;
                          },
                        )));
                    for (var he = 0; he < o.globals.dataPoints; he++) {
                      var ye = a.barHelpers.getStrokeWidth(S, he, z),
                        Pe = {
                          indexes: { i: S, j: he, realIndex: z, bc: A },
                          strokeWidth: ye,
                          x: p,
                          y: m,
                          elSeries: D,
                          groupIndex: y,
                          seriesGroup: o.globals.seriesGroups[y],
                        },
                        Le = null;
                      a.isHorizontal
                        ? ((Le = a.drawStackedBarPaths(
                            c(
                              c({}, Pe),
                              {},
                              { zeroW: f, barHeight: le, yDivision: R },
                            ),
                          )),
                          (ne = a.series[S][he] / a.invertedYRatio))
                        : ((Le = a.drawStackedColumnPaths(
                            c(
                              c({}, Pe),
                              {},
                              { xDivision: P, barWidth: ne, zeroH: O },
                            ),
                          )),
                          (le = a.series[S][he] / a.yRatio[a.yaxisIndex]));
                      var Ie = a.barHelpers.drawGoalLine({
                        barXPosition: Le.barXPosition,
                        barYPosition: Le.barYPosition,
                        goalX: Le.goalX,
                        goalY: Le.goalY,
                        barHeight: le,
                        barWidth: ne,
                      });
                      Ie && $.add(Ie),
                        (m = Le.y),
                        (p = Le.x),
                        C.push(p),
                        M.push(m);
                      var Ke = a.barHelpers.getPathFillColor(r, S, he, z);
                      D = a.renderSeries({
                        realIndex: z,
                        pathFill: Ke,
                        j: he,
                        i: S,
                        groupIndex: y,
                        pathFrom: Le.pathFrom,
                        pathTo: Le.pathTo,
                        strokeWidth: ye,
                        elSeries: D,
                        x: p,
                        y: m,
                        series: r,
                        barHeight: le,
                        barWidth: ne,
                        elDataLabelsWrap: U,
                        elGoalsMarkers: $,
                        type: "bar",
                        visibleSeries: 0,
                      });
                    }
                    (o.globals.seriesXvalues[z] = C),
                      (o.globals.seriesYvalues[z] = M),
                      a.groupCtx.prevY.push(a.groupCtx.yArrj),
                      a.groupCtx.prevYF.push(a.groupCtx.yArrjF),
                      a.groupCtx.prevYVal.push(a.groupCtx.yArrjVal),
                      a.groupCtx.prevX.push(a.groupCtx.xArrj),
                      a.groupCtx.prevXF.push(a.groupCtx.xArrjF),
                      a.groupCtx.prevXVal.push(a.groupCtx.xArrjVal),
                      d.add(D);
                  },
                  v = 0,
                  w = 0;
                v < r.length;
                v++, w++
              )
                x(v, w);
              return d;
            },
          },
          {
            key: "initialPositions",
            value: function (r, s, a, o, h, d) {
              var p,
                m,
                x,
                v,
                w = this.w;
              return (
                this.isHorizontal
                  ? ((x =
                      ((x = o = w.globals.gridHeight / w.globals.dataPoints) *
                        parseInt(w.config.plotOptions.bar.barHeight, 10)) /
                      100),
                    String(w.config.plotOptions.bar.barHeight).indexOf("%") ===
                      -1 &&
                      (x = parseInt(w.config.plotOptions.bar.barHeight, 10)),
                    (d =
                      this.baseLineInvertedY +
                      w.globals.padHorizontal +
                      (this.isReversed ? w.globals.gridWidth : 0) -
                      (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                    (s = (o - x) / 2))
                  : ((v = a = w.globals.gridWidth / w.globals.dataPoints),
                    (v =
                      w.globals.isXNumeric && w.globals.dataPoints > 1
                        ? ((a = w.globals.minXDiff / this.xRatio) *
                            parseInt(this.barOptions.columnWidth, 10)) /
                          100
                        : (v *
                            parseInt(
                              w.config.plotOptions.bar.columnWidth,
                              10,
                            )) /
                          100),
                    String(w.config.plotOptions.bar.columnWidth).indexOf(
                      "%",
                    ) === -1 &&
                      (v = parseInt(w.config.plotOptions.bar.columnWidth, 10)),
                    (h =
                      w.globals.gridHeight -
                      this.baseLineY[this.yaxisIndex] -
                      (this.isReversed ? w.globals.gridHeight : 0) +
                      (this.isReversed
                        ? 2 * this.baseLineY[this.yaxisIndex]
                        : 0)),
                    (r = w.globals.padHorizontal + (a - v) / 2)),
                {
                  x: r,
                  y: s,
                  yDivision: o,
                  xDivision: a,
                  barHeight:
                    (p = w.globals.seriesGroups) !== null &&
                    p !== void 0 &&
                    p.length
                      ? x / w.globals.seriesGroups.length
                      : x,
                  barWidth:
                    (m = w.globals.seriesGroups) !== null &&
                    m !== void 0 &&
                    m.length
                      ? v / w.globals.seriesGroups.length
                      : v,
                  zeroH: h,
                  zeroW: d,
                }
              );
            },
          },
          {
            key: "drawStackedBarPaths",
            value: function (r) {
              for (
                var s,
                  a = r.indexes,
                  o = r.barHeight,
                  h = r.strokeWidth,
                  d = r.zeroW,
                  p = r.x,
                  m = r.y,
                  x = r.groupIndex,
                  v = r.seriesGroup,
                  w = r.yDivision,
                  S = r.elSeries,
                  A = this.w,
                  P = m + (x !== -1 ? x * o : 0),
                  R = a.i,
                  O = a.j,
                  f = 0,
                  y = 0;
                y < this.groupCtx.prevXF.length;
                y++
              )
                f += this.groupCtx.prevXF[y][O];
              var C = R;
              if ((v && (C = v.indexOf(A.config.series[R].name)), C > 0)) {
                var M = d;
                this.groupCtx.prevXVal[C - 1][O] < 0
                  ? (M =
                      this.series[R][O] >= 0
                        ? this.groupCtx.prevX[C - 1][O] +
                          f -
                          2 * (this.isReversed ? f : 0)
                        : this.groupCtx.prevX[C - 1][O])
                  : this.groupCtx.prevXVal[C - 1][O] >= 0 &&
                    (M =
                      this.series[R][O] >= 0
                        ? this.groupCtx.prevX[C - 1][O]
                        : this.groupCtx.prevX[C - 1][O] -
                          f +
                          2 * (this.isReversed ? f : 0)),
                  (s = M);
              } else s = d;
              p =
                this.series[R][O] === null
                  ? s
                  : s +
                    this.series[R][O] / this.invertedYRatio -
                    2 *
                      (this.isReversed
                        ? this.series[R][O] / this.invertedYRatio
                        : 0);
              var z = this.barHelpers.getBarpaths({
                barYPosition: P,
                barHeight: o,
                x1: s,
                x2: p,
                strokeWidth: h,
                series: this.series,
                realIndex: a.realIndex,
                seriesGroup: v,
                i: R,
                j: O,
                w: A,
              });
              return (
                this.barHelpers.barBackground({
                  j: O,
                  i: R,
                  y1: P,
                  y2: o,
                  elSeries: S,
                }),
                (m += w),
                {
                  pathTo: z.pathTo,
                  pathFrom: z.pathFrom,
                  goalX: this.barHelpers.getGoalValues("x", d, null, R, O),
                  barYPosition: P,
                  x: p,
                  y: m,
                }
              );
            },
          },
          {
            key: "drawStackedColumnPaths",
            value: function (r) {
              var s = r.indexes,
                a = r.x,
                o = r.y,
                h = r.xDivision,
                d = r.barWidth,
                p = r.zeroH,
                m = r.groupIndex,
                x = r.seriesGroup,
                v = r.elSeries,
                w = this.w,
                S = s.i,
                A = s.j,
                P = s.bc;
              if (w.globals.isXNumeric) {
                var R = w.globals.seriesX[S][A];
                R || (R = 0),
                  (a = (R - w.globals.minX) / this.xRatio - d / 2),
                  w.globals.seriesGroups.length &&
                    (a =
                      (R - w.globals.minX) / this.xRatio -
                      (d / 2) * w.globals.seriesGroups.length);
              }
              for (
                var O, f = a + (m !== -1 ? m * d : 0), y = 0, C = 0;
                C < this.groupCtx.prevYF.length;
                C++
              )
                y += isNaN(this.groupCtx.prevYF[C][A])
                  ? 0
                  : this.groupCtx.prevYF[C][A];
              var M = S;
              if (
                (x && (M = x.indexOf(w.config.series[S].name)),
                (M > 0 && !w.globals.isXNumeric) ||
                  (M > 0 &&
                    w.globals.isXNumeric &&
                    w.globals.seriesX[S - 1][A] === w.globals.seriesX[S][A]))
              ) {
                var z,
                  D,
                  U,
                  $ = Math.min(this.yRatio.length + 1, S + 1);
                if (
                  this.groupCtx.prevY[M - 1] !== void 0 &&
                  this.groupCtx.prevY[M - 1].length
                )
                  for (var le = 1; le < $; le++) {
                    var ne;
                    if (
                      !isNaN(
                        (ne = this.groupCtx.prevY[M - le]) === null ||
                          ne === void 0
                          ? void 0
                          : ne[A],
                      )
                    ) {
                      U = this.groupCtx.prevY[M - le][A];
                      break;
                    }
                  }
                for (var se = 1; se < $; se++) {
                  var he, ye;
                  if (
                    ((he = this.groupCtx.prevYVal[M - se]) === null ||
                    he === void 0
                      ? void 0
                      : he[A]) < 0
                  ) {
                    D =
                      this.series[S][A] >= 0
                        ? U - y + 2 * (this.isReversed ? y : 0)
                        : U;
                    break;
                  }
                  if (
                    ((ye = this.groupCtx.prevYVal[M - se]) === null ||
                    ye === void 0
                      ? void 0
                      : ye[A]) >= 0
                  ) {
                    D =
                      this.series[S][A] >= 0
                        ? U
                        : U + y - 2 * (this.isReversed ? y : 0);
                    break;
                  }
                }
                D === void 0 && (D = w.globals.gridHeight),
                  (O =
                    (z = this.groupCtx.prevYF[0]) !== null &&
                    z !== void 0 &&
                    z.every(function (Le) {
                      return Le === 0;
                    }) &&
                    this.groupCtx.prevYF.slice(1, M).every(function (Le) {
                      return Le.every(function (Ie) {
                        return isNaN(Ie);
                      });
                    })
                      ? p
                      : D);
              } else O = p;
              o = this.series[S][A]
                ? O -
                  this.series[S][A] / this.yRatio[this.yaxisIndex] +
                  2 *
                    (this.isReversed
                      ? this.series[S][A] / this.yRatio[this.yaxisIndex]
                      : 0)
                : O;
              var Pe = this.barHelpers.getColumnPaths({
                barXPosition: f,
                barWidth: d,
                y1: O,
                y2: o,
                yRatio: this.yRatio[this.yaxisIndex],
                strokeWidth: this.strokeWidth,
                series: this.series,
                seriesGroup: x,
                realIndex: s.realIndex,
                i: S,
                j: A,
                w,
              });
              return (
                this.barHelpers.barBackground({
                  bc: P,
                  j: A,
                  i: S,
                  x1: f,
                  x2: d,
                  elSeries: v,
                }),
                (a += h),
                {
                  pathTo: Pe.pathTo,
                  pathFrom: Pe.pathFrom,
                  goalY: this.barHelpers.getGoalValues("y", null, p, S, A),
                  barXPosition: f,
                  x: w.globals.isXNumeric ? a - h : a,
                  y: o,
                }
              );
            },
          },
        ]),
        l
      );
    })(),
    ja = (function (T) {
      I(l, Ui);
      var t = K(l);
      function l() {
        return g(this, l), t.apply(this, arguments);
      }
      return (
        k(l, [
          {
            key: "draw",
            value: function (r, s, a) {
              var o = this,
                h = this.w,
                d = new Z(this.ctx),
                p = h.globals.comboCharts ? s : h.config.chart.type,
                m = new Te(this.ctx);
              (this.candlestickOptions = this.w.config.plotOptions.candlestick),
                (this.boxOptions = this.w.config.plotOptions.boxPlot),
                (this.isHorizontal = h.config.plotOptions.bar.horizontal);
              var x = new oe(this.ctx, h);
              (r = x.getLogSeries(r)),
                (this.series = r),
                (this.yRatio = x.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(r);
              for (
                var v = d.group({
                    class: "apexcharts-".concat(
                      p,
                      "-series apexcharts-plot-series",
                    ),
                  }),
                  w = function (A) {
                    o.isBoxPlot =
                      h.config.chart.type === "boxPlot" ||
                      h.config.series[A].type === "boxPlot";
                    var P,
                      R,
                      O,
                      f,
                      y = void 0,
                      C = void 0,
                      M = [],
                      z = [],
                      D = h.globals.comboCharts ? a[A] : A,
                      U = d.group({
                        class: "apexcharts-series",
                        seriesName: L.escapeString(h.globals.seriesNames[D]),
                        rel: A + 1,
                        "data:realIndex": D,
                      });
                    o.ctx.series.addCollapsedClassToSeries(U, D),
                      r[A].length > 0 && (o.visibleI = o.visibleI + 1);
                    var $, le;
                    o.yRatio.length > 1 && (o.yaxisIndex = D);
                    var ne = o.barHelpers.initialPositions();
                    (C = ne.y),
                      ($ = ne.barHeight),
                      (R = ne.yDivision),
                      (f = ne.zeroW),
                      (y = ne.x),
                      (le = ne.barWidth),
                      (P = ne.xDivision),
                      (O = ne.zeroH),
                      z.push(y + le / 2);
                    for (
                      var se = d.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": D,
                        }),
                        he = function (Pe) {
                          var Le = o.barHelpers.getStrokeWidth(A, Pe, D),
                            Ie = null,
                            Ke = {
                              indexes: { i: A, j: Pe, realIndex: D },
                              x: y,
                              y: C,
                              strokeWidth: Le,
                              elSeries: U,
                            };
                          (Ie = o.isHorizontal
                            ? o.drawHorizontalBoxPaths(
                                c(
                                  c({}, Ke),
                                  {},
                                  { yDivision: R, barHeight: $, zeroW: f },
                                ),
                              )
                            : o.drawVerticalBoxPaths(
                                c(
                                  c({}, Ke),
                                  {},
                                  { xDivision: P, barWidth: le, zeroH: O },
                                ),
                              )),
                            (C = Ie.y),
                            (y = Ie.x),
                            Pe > 0 && z.push(y + le / 2),
                            M.push(C),
                            Ie.pathTo.forEach(function (Be, st) {
                              var Xl =
                                  !o.isBoxPlot &&
                                  o.candlestickOptions.wick.useFillColor
                                    ? Ie.color[st]
                                    : h.globals.stroke.colors[A],
                                bi = m.fillPath({
                                  seriesNumber: D,
                                  dataPointIndex: Pe,
                                  color: Ie.color[st],
                                  value: r[A][Pe],
                                });
                              o.renderSeries({
                                realIndex: D,
                                pathFill: bi,
                                lineFill: Xl,
                                j: Pe,
                                i: A,
                                pathFrom: Ie.pathFrom,
                                pathTo: Be,
                                strokeWidth: Le,
                                elSeries: U,
                                x: y,
                                y: C,
                                series: r,
                                barHeight: $,
                                barWidth: le,
                                elDataLabelsWrap: se,
                                visibleSeries: o.visibleI,
                                type: h.config.chart.type,
                              });
                            });
                        },
                        ye = 0;
                      ye < h.globals.dataPoints;
                      ye++
                    )
                      he(ye);
                    (h.globals.seriesXvalues[D] = z),
                      (h.globals.seriesYvalues[D] = M),
                      v.add(U);
                  },
                  S = 0;
                S < r.length;
                S++
              )
                w(S);
              return v;
            },
          },
          {
            key: "drawVerticalBoxPaths",
            value: function (r) {
              var s = r.indexes,
                a = r.x;
              r.y;
              var o = r.xDivision,
                h = r.barWidth,
                d = r.zeroH,
                p = r.strokeWidth,
                m = this.w,
                x = new Z(this.ctx),
                v = s.i,
                w = s.j,
                S = !0,
                A = m.config.plotOptions.candlestick.colors.upward,
                P = m.config.plotOptions.candlestick.colors.downward,
                R = "";
              this.isBoxPlot &&
                (R = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var O = this.yRatio[this.yaxisIndex],
                f = s.realIndex,
                y = this.getOHLCValue(f, w),
                C = d,
                M = d;
              y.o > y.c && (S = !1);
              var z = Math.min(y.o, y.c),
                D = Math.max(y.o, y.c),
                U = y.m;
              m.globals.isXNumeric &&
                (a =
                  (m.globals.seriesX[f][w] - m.globals.minX) / this.xRatio -
                  h / 2);
              var $ = a + h * this.visibleI;
              this.series[v][w] === void 0 || this.series[v][w] === null
                ? ((z = d), (D = d))
                : ((z = d - z / O),
                  (D = d - D / O),
                  (C = d - y.h / O),
                  (M = d - y.l / O),
                  (U = d - y.m / O));
              var le = x.move($, d),
                ne = x.move($ + h / 2, z);
              return (
                m.globals.previousPaths.length > 0 &&
                  (ne = this.getPreviousPath(f, w, !0)),
                (le = this.isBoxPlot
                  ? [
                      x.move($, z) +
                        x.line($ + h / 2, z) +
                        x.line($ + h / 2, C) +
                        x.line($ + h / 4, C) +
                        x.line($ + h - h / 4, C) +
                        x.line($ + h / 2, C) +
                        x.line($ + h / 2, z) +
                        x.line($ + h, z) +
                        x.line($ + h, U) +
                        x.line($, U) +
                        x.line($, z + p / 2),
                      x.move($, U) +
                        x.line($ + h, U) +
                        x.line($ + h, D) +
                        x.line($ + h / 2, D) +
                        x.line($ + h / 2, M) +
                        x.line($ + h - h / 4, M) +
                        x.line($ + h / 4, M) +
                        x.line($ + h / 2, M) +
                        x.line($ + h / 2, D) +
                        x.line($, D) +
                        x.line($, U) +
                        "z",
                    ]
                  : [
                      x.move($, D) +
                        x.line($ + h / 2, D) +
                        x.line($ + h / 2, C) +
                        x.line($ + h / 2, D) +
                        x.line($ + h, D) +
                        x.line($ + h, z) +
                        x.line($ + h / 2, z) +
                        x.line($ + h / 2, M) +
                        x.line($ + h / 2, z) +
                        x.line($, z) +
                        x.line($, D - p / 2),
                    ]),
                (ne += x.move($, z)),
                m.globals.isXNumeric || (a += o),
                {
                  pathTo: le,
                  pathFrom: ne,
                  x: a,
                  y: D,
                  barXPosition: $,
                  color: this.isBoxPlot ? R : S ? [A] : [P],
                }
              );
            },
          },
          {
            key: "drawHorizontalBoxPaths",
            value: function (r) {
              var s = r.indexes;
              r.x;
              var a = r.y,
                o = r.yDivision,
                h = r.barHeight,
                d = r.zeroW,
                p = r.strokeWidth,
                m = this.w,
                x = new Z(this.ctx),
                v = s.i,
                w = s.j,
                S = this.boxOptions.colors.lower;
              this.isBoxPlot &&
                (S = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var A = this.invertedYRatio,
                P = s.realIndex,
                R = this.getOHLCValue(P, w),
                O = d,
                f = d,
                y = Math.min(R.o, R.c),
                C = Math.max(R.o, R.c),
                M = R.m;
              m.globals.isXNumeric &&
                (a =
                  (m.globals.seriesX[P][w] - m.globals.minX) /
                    this.invertedXRatio -
                  h / 2);
              var z = a + h * this.visibleI;
              this.series[v][w] === void 0 || this.series[v][w] === null
                ? ((y = d), (C = d))
                : ((y = d + y / A),
                  (C = d + C / A),
                  (O = d + R.h / A),
                  (f = d + R.l / A),
                  (M = d + R.m / A));
              var D = x.move(d, z),
                U = x.move(y, z + h / 2);
              return (
                m.globals.previousPaths.length > 0 &&
                  (U = this.getPreviousPath(P, w, !0)),
                (D = [
                  x.move(y, z) +
                    x.line(y, z + h / 2) +
                    x.line(O, z + h / 2) +
                    x.line(O, z + h / 2 - h / 4) +
                    x.line(O, z + h / 2 + h / 4) +
                    x.line(O, z + h / 2) +
                    x.line(y, z + h / 2) +
                    x.line(y, z + h) +
                    x.line(M, z + h) +
                    x.line(M, z) +
                    x.line(y + p / 2, z),
                  x.move(M, z) +
                    x.line(M, z + h) +
                    x.line(C, z + h) +
                    x.line(C, z + h / 2) +
                    x.line(f, z + h / 2) +
                    x.line(f, z + h - h / 4) +
                    x.line(f, z + h / 4) +
                    x.line(f, z + h / 2) +
                    x.line(C, z + h / 2) +
                    x.line(C, z) +
                    x.line(M, z) +
                    "z",
                ]),
                (U += x.move(y, z)),
                m.globals.isXNumeric || (a += o),
                {
                  pathTo: D,
                  pathFrom: U,
                  x: C,
                  y: a,
                  barYPosition: z,
                  color: S,
                }
              );
            },
          },
          {
            key: "getOHLCValue",
            value: function (r, s) {
              var a = this.w;
              return {
                o: this.isBoxPlot
                  ? a.globals.seriesCandleH[r][s]
                  : a.globals.seriesCandleO[r][s],
                h: this.isBoxPlot
                  ? a.globals.seriesCandleO[r][s]
                  : a.globals.seriesCandleH[r][s],
                m: a.globals.seriesCandleM[r][s],
                l: this.isBoxPlot
                  ? a.globals.seriesCandleC[r][s]
                  : a.globals.seriesCandleL[r][s],
                c: this.isBoxPlot
                  ? a.globals.seriesCandleL[r][s]
                  : a.globals.seriesCandleC[r][s],
              };
            },
          },
        ]),
        l
      );
    })(),
    ch = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "checkColorRange",
            value: function () {
              var t = this.w,
                l = !1,
                r = t.config.plotOptions[t.config.chart.type];
              return (
                r.colorScale.ranges.length > 0 &&
                  r.colorScale.ranges.map(function (s, a) {
                    s.from <= 0 && (l = !0);
                  }),
                l
              );
            },
          },
          {
            key: "getShadeColor",
            value: function (t, l, r, s) {
              var a = this.w,
                o = 1,
                h = a.config.plotOptions[t].shadeIntensity,
                d = this.determineColor(t, l, r);
              a.globals.hasNegs || s
                ? (o = a.config.plotOptions[t].reverseNegativeShade
                    ? d.percent < 0
                      ? (d.percent / 100) * (1.25 * h)
                      : (1 - d.percent / 100) * (1.25 * h)
                    : d.percent <= 0
                      ? 1 - (1 + d.percent / 100) * h
                      : (1 - d.percent / 100) * h)
                : ((o = 1 - d.percent / 100),
                  t === "treemap" && (o = (1 - d.percent / 100) * (1.25 * h)));
              var p = d.color,
                m = new L();
              return (
                a.config.plotOptions[t].enableShades &&
                  (p =
                    this.w.config.theme.mode === "dark"
                      ? L.hexToRgba(
                          m.shadeColor(-1 * o, d.color),
                          a.config.fill.opacity,
                        )
                      : L.hexToRgba(
                          m.shadeColor(o, d.color),
                          a.config.fill.opacity,
                        )),
                { color: p, colorProps: d }
              );
            },
          },
          {
            key: "determineColor",
            value: function (t, l, r) {
              var s = this.w,
                a = s.globals.series[l][r],
                o = s.config.plotOptions[t],
                h = o.colorScale.inverse ? r : l;
              o.distributed && s.config.chart.type === "treemap" && (h = r);
              var d = s.globals.colors[h],
                p = null,
                m = Math.min.apply(Math, Q(s.globals.series[l])),
                x = Math.max.apply(Math, Q(s.globals.series[l]));
              o.distributed ||
                t !== "heatmap" ||
                ((m = s.globals.minY), (x = s.globals.maxY)),
                o.colorScale.min !== void 0 &&
                  ((m =
                    o.colorScale.min < s.globals.minY
                      ? o.colorScale.min
                      : s.globals.minY),
                  (x =
                    o.colorScale.max > s.globals.maxY
                      ? o.colorScale.max
                      : s.globals.maxY));
              var v = Math.abs(x) + Math.abs(m),
                w = (100 * a) / (v === 0 ? v - 1e-6 : v);
              return (
                o.colorScale.ranges.length > 0 &&
                  o.colorScale.ranges.map(function (S, A) {
                    if (a >= S.from && a <= S.to) {
                      (d = S.color),
                        (p = S.foreColor ? S.foreColor : null),
                        (m = S.from),
                        (x = S.to);
                      var P = Math.abs(x) + Math.abs(m);
                      w = (100 * a) / (P === 0 ? P - 1e-6 : P);
                    }
                  }),
                { color: d, foreColor: p, percent: w }
              );
            },
          },
          {
            key: "calculateDataLabels",
            value: function (t) {
              var l = t.text,
                r = t.x,
                s = t.y,
                a = t.i,
                o = t.j,
                h = t.colorProps,
                d = t.fontSize,
                p = this.w.config.dataLabels,
                m = new Z(this.ctx),
                x = new Gt(this.ctx),
                v = null;
              if (p.enabled) {
                v = m.group({ class: "apexcharts-data-labels" });
                var w = p.offsetX,
                  S = p.offsetY,
                  A = r + w,
                  P = s + parseFloat(p.style.fontSize) / 3 + S;
                x.plotDataLabelsText({
                  x: A,
                  y: P,
                  text: l,
                  i: a,
                  j: o,
                  color: h.foreColor,
                  parent: v,
                  fontSize: d,
                  dataLabelsConfig: p,
                });
              }
              return v;
            },
          },
          {
            key: "addListeners",
            value: function (t) {
              var l = new Z(this.ctx);
              t.node.addEventListener(
                "mouseenter",
                l.pathMouseEnter.bind(this, t),
              ),
                t.node.addEventListener(
                  "mouseleave",
                  l.pathMouseLeave.bind(this, t),
                ),
                t.node.addEventListener(
                  "mousedown",
                  l.pathMouseDown.bind(this, t),
                );
            },
          },
        ]),
        T
      );
    })(),
    Fp = (function () {
      function T(t, l) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.xRatio = l.xRatio),
          (this.yRatio = l.yRatio),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.helpers = new ch(t)),
          (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
          (this.strokeWidth = this.w.config.stroke.show
            ? this.w.config.stroke.width
            : 0);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t) {
              var l = this.w,
                r = new Z(this.ctx),
                s = r.group({ class: "apexcharts-heatmap" });
              s.attr(
                "clip-path",
                "url(#gridRectMask".concat(l.globals.cuid, ")"),
              );
              var a = l.globals.gridWidth / l.globals.dataPoints,
                o = l.globals.gridHeight / l.globals.series.length,
                h = 0,
                d = !1;
              this.negRange = this.helpers.checkColorRange();
              var p = t.slice();
              l.config.yaxis[0].reversed && ((d = !0), p.reverse());
              for (
                var m = d ? 0 : p.length - 1;
                d ? m < p.length : m >= 0;
                d ? m++ : m--
              ) {
                var x = r.group({
                  class: "apexcharts-series apexcharts-heatmap-series",
                  seriesName: L.escapeString(l.globals.seriesNames[m]),
                  rel: m + 1,
                  "data:realIndex": m,
                });
                if (
                  (this.ctx.series.addCollapsedClassToSeries(x, m),
                  l.config.chart.dropShadow.enabled)
                ) {
                  var v = l.config.chart.dropShadow;
                  new te(this.ctx).dropShadow(x, v, m);
                }
                for (
                  var w = 0,
                    S = l.config.plotOptions.heatmap.shadeIntensity,
                    A = 0;
                  A < p[m].length;
                  A++
                ) {
                  var P = this.helpers.getShadeColor(
                      l.config.chart.type,
                      m,
                      A,
                      this.negRange,
                    ),
                    R = P.color,
                    O = P.colorProps;
                  l.config.fill.type === "image" &&
                    (R = new Te(this.ctx).fillPath({
                      seriesNumber: m,
                      dataPointIndex: A,
                      opacity: l.globals.hasNegs
                        ? O.percent < 0
                          ? 1 - (1 + O.percent / 100)
                          : S + O.percent / 100
                        : O.percent / 100,
                      patternID: L.randomId(),
                      width: l.config.fill.image.width
                        ? l.config.fill.image.width
                        : a,
                      height: l.config.fill.image.height
                        ? l.config.fill.image.height
                        : o,
                    }));
                  var f = this.rectRadius,
                    y = r.drawRect(w, h, a, o, f);
                  if (
                    (y.attr({ cx: w, cy: h }),
                    y.node.classList.add("apexcharts-heatmap-rect"),
                    x.add(y),
                    y.attr({
                      fill: R,
                      i: m,
                      index: m,
                      j: A,
                      val: p[m][A],
                      "stroke-width": this.strokeWidth,
                      stroke: l.config.plotOptions.heatmap.useFillColorAsStroke
                        ? R
                        : l.globals.stroke.colors[0],
                      color: R,
                    }),
                    this.helpers.addListeners(y),
                    l.config.chart.animations.enabled && !l.globals.dataChanged)
                  ) {
                    var C = 1;
                    l.globals.resized || (C = l.config.chart.animations.speed),
                      this.animateHeatMap(y, w, h, a, o, C);
                  }
                  if (l.globals.dataChanged) {
                    var M = 1;
                    if (this.dynamicAnim.enabled && l.globals.shouldAnimate) {
                      M = this.dynamicAnim.speed;
                      var z =
                        l.globals.previousPaths[m] &&
                        l.globals.previousPaths[m][A] &&
                        l.globals.previousPaths[m][A].color;
                      z || (z = "rgba(255, 255, 255, 0)"),
                        this.animateHeatColor(
                          y,
                          L.isColorHex(z) ? z : L.rgb2hex(z),
                          L.isColorHex(R) ? R : L.rgb2hex(R),
                          M,
                        );
                    }
                  }
                  var D = (0, l.config.dataLabels.formatter)(
                      l.globals.series[m][A],
                      {
                        value: l.globals.series[m][A],
                        seriesIndex: m,
                        dataPointIndex: A,
                        w: l,
                      },
                    ),
                    U = this.helpers.calculateDataLabels({
                      text: D,
                      x: w + a / 2,
                      y: h + o / 2,
                      i: m,
                      j: A,
                      colorProps: O,
                      series: p,
                    });
                  U !== null && x.add(U), (w += a);
                }
                (h += o), s.add(x);
              }
              var $ = l.globals.yAxisScale[0].result.slice();
              l.config.yaxis[0].reversed ? $.unshift("") : $.push(""),
                (l.globals.yAxisScale[0].result = $);
              var le = l.globals.gridHeight / l.globals.series.length;
              return (l.config.yaxis[0].labels.offsetY = -le / 2), s;
            },
          },
          {
            key: "animateHeatMap",
            value: function (t, l, r, s, a, o) {
              var h = new W(this.ctx);
              h.animateRect(
                t,
                { x: l + s / 2, y: r + a / 2, width: 0, height: 0 },
                { x: l, y: r, width: s, height: a },
                o,
                function () {
                  h.animationCompleted(t);
                },
              );
            },
          },
          {
            key: "animateHeatColor",
            value: function (t, l, r, s) {
              t.attr({ fill: l }).animate(s).attr({ fill: r });
            },
          },
        ]),
        T
      );
    })(),
    hh = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "drawYAxisTexts",
            value: function (t, l, r, s) {
              var a = this.w,
                o = a.config.yaxis[0],
                h = a.globals.yLabelFormatters[0];
              return new Z(this.ctx).drawText({
                x: t + o.labels.offsetX,
                y: l + o.labels.offsetY,
                text: h(s, r),
                textAnchor: "middle",
                fontSize: o.labels.style.fontSize,
                fontFamily: o.labels.style.fontFamily,
                foreColor: Array.isArray(o.labels.style.colors)
                  ? o.labels.style.colors[r]
                  : o.labels.style.colors,
              });
            },
          },
        ]),
        T
      );
    })(),
    uh = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
        var l = this.w;
        (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animBeginArr = [0]),
          (this.animDur = 0),
          (this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels),
          (this.lineColorArr =
            l.globals.stroke.colors !== void 0
              ? l.globals.stroke.colors
              : l.globals.colors),
          (this.defaultSize = Math.min(
            l.globals.gridWidth,
            l.globals.gridHeight,
          )),
          (this.centerY = this.defaultSize / 2),
          (this.centerX = l.globals.gridWidth / 2),
          l.config.chart.type === "radialBar"
            ? (this.fullAngle = 360)
            : (this.fullAngle = Math.abs(
                l.config.plotOptions.pie.endAngle -
                  l.config.plotOptions.pie.startAngle,
              )),
          (this.initialAngle =
            l.config.plotOptions.pie.startAngle % this.fullAngle),
          (l.globals.radialSize =
            this.defaultSize / 2.05 -
            l.config.stroke.width -
            (l.config.chart.sparkline.enabled
              ? 0
              : l.config.chart.dropShadow.blur)),
          (this.donutSize =
            (l.globals.radialSize *
              parseInt(l.config.plotOptions.pie.donut.size, 10)) /
            100),
          (this.maxY = 0),
          (this.sliceLabels = []),
          (this.sliceSizes = []),
          (this.prevSectorAngleArr = []);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t) {
              var l = this,
                r = this.w,
                s = new Z(this.ctx);
              if (
                ((this.ret = s.group({ class: "apexcharts-pie" })),
                r.globals.noData)
              )
                return this.ret;
              for (var a = 0, o = 0; o < t.length; o++) a += L.negToZero(t[o]);
              var h = [],
                d = s.group();
              a === 0 && (a = 1e-5),
                t.forEach(function (z) {
                  l.maxY = Math.max(l.maxY, z);
                }),
                r.config.yaxis[0].max && (this.maxY = r.config.yaxis[0].max),
                r.config.grid.position === "back" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret);
              for (var p = 0; p < t.length; p++) {
                var m = (this.fullAngle * L.negToZero(t[p])) / a;
                h.push(m),
                  this.chartType === "polarArea"
                    ? ((h[p] = this.fullAngle / t.length),
                      this.sliceSizes.push(
                        (r.globals.radialSize * t[p]) / this.maxY,
                      ))
                    : this.sliceSizes.push(r.globals.radialSize);
              }
              if (r.globals.dataChanged) {
                for (
                  var x, v = 0, w = 0;
                  w < r.globals.previousPaths.length;
                  w++
                )
                  v += L.negToZero(r.globals.previousPaths[w]);
                for (var S = 0; S < r.globals.previousPaths.length; S++)
                  (x =
                    (this.fullAngle * L.negToZero(r.globals.previousPaths[S])) /
                    v),
                    this.prevSectorAngleArr.push(x);
              }
              this.donutSize < 0 && (this.donutSize = 0);
              var A = r.config.plotOptions.pie.customScale,
                P = r.globals.gridWidth / 2,
                R = r.globals.gridHeight / 2,
                O = P - (r.globals.gridWidth / 2) * A,
                f = R - (r.globals.gridHeight / 2) * A;
              if (this.chartType === "donut") {
                var y = s.drawCircle(this.donutSize);
                y.attr({
                  cx: this.centerX,
                  cy: this.centerY,
                  fill: r.config.plotOptions.pie.donut.background
                    ? r.config.plotOptions.pie.donut.background
                    : "transparent",
                }),
                  d.add(y);
              }
              var C = this.drawArcs(h, t);
              if (
                (this.sliceLabels.forEach(function (z) {
                  C.add(z);
                }),
                d.attr({
                  transform: "translate("
                    .concat(O, ", ")
                    .concat(f, ") scale(")
                    .concat(A, ")"),
                }),
                d.add(C),
                this.ret.add(d),
                this.donutDataLabels.show)
              ) {
                var M = this.renderInnerDataLabels(this.donutDataLabels, {
                  hollowSize: this.donutSize,
                  centerX: this.centerX,
                  centerY: this.centerY,
                  opacity: this.donutDataLabels.show,
                  translateX: O,
                  translateY: f,
                });
                this.ret.add(M);
              }
              return (
                r.config.grid.position === "front" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret),
                this.ret
              );
            },
          },
          {
            key: "drawArcs",
            value: function (t, l) {
              var r = this.w,
                s = new te(this.ctx),
                a = new Z(this.ctx),
                o = new Te(this.ctx),
                h = a.group({ class: "apexcharts-slices" }),
                d = this.initialAngle,
                p = this.initialAngle,
                m = this.initialAngle,
                x = this.initialAngle;
              this.strokeWidth = r.config.stroke.show
                ? r.config.stroke.width
                : 0;
              for (var v = 0; v < t.length; v++) {
                var w = a.group({
                  class: "apexcharts-series apexcharts-pie-series",
                  seriesName: L.escapeString(r.globals.seriesNames[v]),
                  rel: v + 1,
                  "data:realIndex": v,
                });
                h.add(w),
                  (p = x),
                  (m = (d = m) + t[v]),
                  (x = p + this.prevSectorAngleArr[v]);
                var S = m < d ? this.fullAngle + m - d : m - d,
                  A = o.fillPath({
                    seriesNumber: v,
                    size: this.sliceSizes[v],
                    value: l[v],
                  }),
                  P = this.getChangedPath(p, x),
                  R = a.drawPath({
                    d: P,
                    stroke: Array.isArray(this.lineColorArr)
                      ? this.lineColorArr[v]
                      : this.lineColorArr,
                    strokeWidth: 0,
                    fill: A,
                    fillOpacity: r.config.fill.opacity,
                    classes: "apexcharts-pie-area apexcharts-"
                      .concat(this.chartType.toLowerCase(), "-slice-")
                      .concat(v),
                  });
                if (
                  (R.attr({ index: 0, j: v }),
                  s.setSelectionFilter(R, 0, v),
                  r.config.chart.dropShadow.enabled)
                ) {
                  var O = r.config.chart.dropShadow;
                  s.dropShadow(R, O, v);
                }
                this.addListeners(R, this.donutDataLabels),
                  Z.setAttrs(R.node, {
                    "data:angle": S,
                    "data:startAngle": d,
                    "data:strokeWidth": this.strokeWidth,
                    "data:value": l[v],
                  });
                var f = { x: 0, y: 0 };
                this.chartType === "pie" || this.chartType === "polarArea"
                  ? (f = L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      r.globals.radialSize / 1.25 +
                        r.config.plotOptions.pie.dataLabels.offset,
                      (d + S / 2) % this.fullAngle,
                    ))
                  : this.chartType === "donut" &&
                    (f = L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      (r.globals.radialSize + this.donutSize) / 2 +
                        r.config.plotOptions.pie.dataLabels.offset,
                      (d + S / 2) % this.fullAngle,
                    )),
                  w.add(R);
                var y = 0;
                if (
                  (!this.initialAnim ||
                  r.globals.resized ||
                  r.globals.dataChanged
                    ? this.animBeginArr.push(0)
                    : ((y =
                        (S / this.fullAngle) *
                        r.config.chart.animations.speed) === 0 && (y = 1),
                      (this.animDur = y + this.animDur),
                      this.animBeginArr.push(this.animDur)),
                  this.dynamicAnim && r.globals.dataChanged
                    ? this.animatePaths(R, {
                        size: this.sliceSizes[v],
                        endAngle: m,
                        startAngle: d,
                        prevStartAngle: p,
                        prevEndAngle: x,
                        animateStartingPos: !0,
                        i: v,
                        animBeginArr: this.animBeginArr,
                        shouldSetPrevPaths: !0,
                        dur: r.config.chart.animations.dynamicAnimation.speed,
                      })
                    : this.animatePaths(R, {
                        size: this.sliceSizes[v],
                        endAngle: m,
                        startAngle: d,
                        i: v,
                        totalItems: t.length - 1,
                        animBeginArr: this.animBeginArr,
                        dur: y,
                      }),
                  r.config.plotOptions.pie.expandOnClick &&
                    this.chartType !== "polarArea" &&
                    R.click(this.pieClicked.bind(this, v)),
                  r.globals.selectedDataPoints[0] !== void 0 &&
                    r.globals.selectedDataPoints[0].indexOf(v) > -1 &&
                    this.pieClicked(v),
                  r.config.dataLabels.enabled)
                ) {
                  var C = f.x,
                    M = f.y,
                    z = (100 * S) / this.fullAngle + "%";
                  if (
                    S !== 0 &&
                    r.config.plotOptions.pie.dataLabels.minAngleToShowLabel <
                      t[v]
                  ) {
                    var D = r.config.dataLabels.formatter;
                    D !== void 0 &&
                      (z = D(r.globals.seriesPercent[v][0], {
                        seriesIndex: v,
                        w: r,
                      }));
                    var U = r.globals.dataLabels.style.colors[v],
                      $ = a.group({ class: "apexcharts-datalabels" }),
                      le = a.drawText({
                        x: C,
                        y: M,
                        text: z,
                        textAnchor: "middle",
                        fontSize: r.config.dataLabels.style.fontSize,
                        fontFamily: r.config.dataLabels.style.fontFamily,
                        fontWeight: r.config.dataLabels.style.fontWeight,
                        foreColor: U,
                      });
                    if (($.add(le), r.config.dataLabels.dropShadow.enabled)) {
                      var ne = r.config.dataLabels.dropShadow;
                      s.dropShadow(le, ne);
                    }
                    le.node.classList.add("apexcharts-pie-label"),
                      r.config.chart.animations.animate &&
                        r.globals.resized === !1 &&
                        (le.node.classList.add("apexcharts-pie-label-delay"),
                        (le.node.style.animationDelay =
                          r.config.chart.animations.speed / 940 + "s")),
                      this.sliceLabels.push($);
                  }
                }
              }
              return h;
            },
          },
          {
            key: "addListeners",
            value: function (t, l) {
              var r = new Z(this.ctx);
              t.node.addEventListener(
                "mouseenter",
                r.pathMouseEnter.bind(this, t),
              ),
                t.node.addEventListener(
                  "mouseleave",
                  r.pathMouseLeave.bind(this, t),
                ),
                t.node.addEventListener(
                  "mouseleave",
                  this.revertDataLabelsInner.bind(this, t.node, l),
                ),
                t.node.addEventListener(
                  "mousedown",
                  r.pathMouseDown.bind(this, t),
                ),
                this.donutDataLabels.total.showAlways ||
                  (t.node.addEventListener(
                    "mouseenter",
                    this.printDataLabelsInner.bind(this, t.node, l),
                  ),
                  t.node.addEventListener(
                    "mousedown",
                    this.printDataLabelsInner.bind(this, t.node, l),
                  ));
            },
          },
          {
            key: "animatePaths",
            value: function (t, l) {
              var r = this.w,
                s =
                  l.endAngle < l.startAngle
                    ? this.fullAngle + l.endAngle - l.startAngle
                    : l.endAngle - l.startAngle,
                a = s,
                o = l.startAngle,
                h = l.startAngle;
              l.prevStartAngle !== void 0 &&
                l.prevEndAngle !== void 0 &&
                ((o = l.prevEndAngle),
                (a =
                  l.prevEndAngle < l.prevStartAngle
                    ? this.fullAngle + l.prevEndAngle - l.prevStartAngle
                    : l.prevEndAngle - l.prevStartAngle)),
                l.i === r.config.series.length - 1 &&
                  (s + h > this.fullAngle
                    ? (l.endAngle = l.endAngle - (s + h))
                    : s + h < this.fullAngle &&
                      (l.endAngle = l.endAngle + (this.fullAngle - (s + h)))),
                s === this.fullAngle && (s = this.fullAngle - 0.01),
                this.animateArc(t, o, h, s, a, l);
            },
          },
          {
            key: "animateArc",
            value: function (t, l, r, s, a, o) {
              var h,
                d = this,
                p = this.w,
                m = new W(this.ctx),
                x = o.size;
              (isNaN(l) || isNaN(a)) && ((l = r), (a = s), (o.dur = 0));
              var v = s,
                w = r,
                S = l < r ? this.fullAngle + l - r : l - r;
              p.globals.dataChanged &&
                o.shouldSetPrevPaths &&
                o.prevEndAngle &&
                ((h = d.getPiePath({
                  me: d,
                  startAngle: o.prevStartAngle,
                  angle:
                    o.prevEndAngle < o.prevStartAngle
                      ? this.fullAngle + o.prevEndAngle - o.prevStartAngle
                      : o.prevEndAngle - o.prevStartAngle,
                  size: x,
                })),
                t.attr({ d: h })),
                o.dur !== 0
                  ? t
                      .animate(o.dur, p.globals.easing, o.animBeginArr[o.i])
                      .afterAll(function () {
                        (d.chartType !== "pie" &&
                          d.chartType !== "donut" &&
                          d.chartType !== "polarArea") ||
                          this.animate(
                            p.config.chart.animations.dynamicAnimation.speed,
                          ).attr({ "stroke-width": d.strokeWidth }),
                          o.i === p.config.series.length - 1 &&
                            m.animationCompleted(t);
                      })
                      .during(function (A) {
                        (v = S + (s - S) * A),
                          o.animateStartingPos &&
                            ((v = a + (s - a) * A),
                            (w = l - a + (r - (l - a)) * A)),
                          (h = d.getPiePath({
                            me: d,
                            startAngle: w,
                            angle: v,
                            size: x,
                          })),
                          t.node.setAttribute("data:pathOrig", h),
                          t.attr({ d: h });
                      })
                  : ((h = d.getPiePath({
                      me: d,
                      startAngle: w,
                      angle: s,
                      size: x,
                    })),
                    o.isTrack || (p.globals.animationEnded = !0),
                    t.node.setAttribute("data:pathOrig", h),
                    t.attr({ d: h, "stroke-width": d.strokeWidth }));
            },
          },
          {
            key: "pieClicked",
            value: function (t) {
              var l,
                r = this.w,
                s = this,
                a =
                  s.sliceSizes[t] +
                  (r.config.plotOptions.pie.expandOnClick ? 4 : 0),
                o = r.globals.dom.Paper.select(
                  ".apexcharts-"
                    .concat(s.chartType.toLowerCase(), "-slice-")
                    .concat(t),
                ).members[0];
              if (o.attr("data:pieClicked") !== "true") {
                var h = r.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area",
                );
                Array.prototype.forEach.call(h, function (x) {
                  x.setAttribute("data:pieClicked", "false");
                  var v = x.getAttribute("data:pathOrig");
                  v && x.setAttribute("d", v);
                }),
                  o.attr("data:pieClicked", "true");
                var d = parseInt(o.attr("data:startAngle"), 10),
                  p = parseInt(o.attr("data:angle"), 10);
                (l = s.getPiePath({ me: s, startAngle: d, angle: p, size: a })),
                  p !== 360 && o.plot(l);
              } else {
                o.attr({ "data:pieClicked": "false" }),
                  this.revertDataLabelsInner(o.node, this.donutDataLabels);
                var m = o.attr("data:pathOrig");
                o.attr({ d: m });
              }
            },
          },
          {
            key: "getChangedPath",
            value: function (t, l) {
              var r = "";
              return (
                this.dynamicAnim &&
                  this.w.globals.dataChanged &&
                  (r = this.getPiePath({
                    me: this,
                    startAngle: t,
                    angle: l - t,
                    size: this.size,
                  })),
                r
              );
            },
          },
          {
            key: "getPiePath",
            value: function (t) {
              var l = t.me,
                r = t.startAngle,
                s = t.angle,
                a = t.size,
                o = r,
                h = (Math.PI * (o - 90)) / 180,
                d = s + r;
              Math.ceil(d) >=
                this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) &&
                (d =
                  this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) -
                  0.01),
                Math.ceil(d) > this.fullAngle && (d -= this.fullAngle);
              var p = (Math.PI * (d - 90)) / 180,
                m = l.centerX + a * Math.cos(h),
                x = l.centerY + a * Math.sin(h),
                v = l.centerX + a * Math.cos(p),
                w = l.centerY + a * Math.sin(p),
                S = L.polarToCartesian(l.centerX, l.centerY, l.donutSize, d),
                A = L.polarToCartesian(l.centerX, l.centerY, l.donutSize, o),
                P = s > 180 ? 1 : 0,
                R = ["M", m, x, "A", a, a, 0, P, 1, v, w];
              return l.chartType === "donut"
                ? []
                    .concat(R, [
                      "L",
                      S.x,
                      S.y,
                      "A",
                      l.donutSize,
                      l.donutSize,
                      0,
                      P,
                      0,
                      A.x,
                      A.y,
                      "L",
                      m,
                      x,
                      "z",
                    ])
                    .join(" ")
                : l.chartType === "pie" || l.chartType === "polarArea"
                  ? []
                      .concat(R, ["L", l.centerX, l.centerY, "L", m, x])
                      .join(" ")
                  : [].concat(R).join(" ");
            },
          },
          {
            key: "drawPolarElements",
            value: function (t) {
              var l = this.w,
                r = new N(this.ctx),
                s = new Z(this.ctx),
                a = new hh(this.ctx),
                o = s.group(),
                h = s.group(),
                d = r.niceScale(
                  0,
                  Math.ceil(this.maxY),
                  l.config.yaxis[0].tickAmount,
                  0,
                  !0,
                ),
                p = d.result.reverse(),
                m = d.result.length;
              this.maxY = d.niceMax;
              for (
                var x = l.globals.radialSize, v = x / (m - 1), w = 0;
                w < m - 1;
                w++
              ) {
                var S = s.drawCircle(x);
                if (
                  (S.attr({
                    cx: this.centerX,
                    cy: this.centerY,
                    fill: "none",
                    "stroke-width":
                      l.config.plotOptions.polarArea.rings.strokeWidth,
                    stroke: l.config.plotOptions.polarArea.rings.strokeColor,
                  }),
                  l.config.yaxis[0].show)
                ) {
                  var A = a.drawYAxisTexts(
                    this.centerX,
                    this.centerY -
                      x +
                      parseInt(l.config.yaxis[0].labels.style.fontSize, 10) / 2,
                    w,
                    p[w],
                  );
                  h.add(A);
                }
                o.add(S), (x -= v);
              }
              this.drawSpokes(t), t.add(o), t.add(h);
            },
          },
          {
            key: "renderInnerDataLabels",
            value: function (t, l) {
              var r = this.w,
                s = new Z(this.ctx),
                a = s.group({
                  class: "apexcharts-datalabels-group",
                  transform: "translate("
                    .concat(l.translateX ? l.translateX : 0, ", ")
                    .concat(l.translateY ? l.translateY : 0, ") scale(")
                    .concat(r.config.plotOptions.pie.customScale, ")"),
                }),
                o = t.total.show;
              a.node.style.opacity = l.opacity;
              var h,
                d,
                p = l.centerX,
                m = l.centerY;
              h = t.name.color === void 0 ? r.globals.colors[0] : t.name.color;
              var x = t.name.fontSize,
                v = t.name.fontFamily,
                w = t.name.fontWeight;
              d =
                t.value.color === void 0
                  ? r.config.chart.foreColor
                  : t.value.color;
              var S = t.value.formatter,
                A = "",
                P = "";
              if (
                (o
                  ? ((h = t.total.color),
                    (x = t.total.fontSize),
                    (v = t.total.fontFamily),
                    (w = t.total.fontWeight),
                    (P = t.total.label),
                    (A = t.total.formatter(r)))
                  : r.globals.series.length === 1 &&
                    ((A = S(r.globals.series[0], r)),
                    (P = r.globals.seriesNames[0])),
                P && (P = t.name.formatter(P, t.total.show, r)),
                t.name.show)
              ) {
                var R = s.drawText({
                  x: p,
                  y: m + parseFloat(t.name.offsetY),
                  text: P,
                  textAnchor: "middle",
                  foreColor: h,
                  fontSize: x,
                  fontWeight: w,
                  fontFamily: v,
                });
                R.node.classList.add("apexcharts-datalabel-label"), a.add(R);
              }
              if (t.value.show) {
                var O = t.name.show
                    ? parseFloat(t.value.offsetY) + 16
                    : t.value.offsetY,
                  f = s.drawText({
                    x: p,
                    y: m + O,
                    text: A,
                    textAnchor: "middle",
                    foreColor: d,
                    fontWeight: t.value.fontWeight,
                    fontSize: t.value.fontSize,
                    fontFamily: t.value.fontFamily,
                  });
                f.node.classList.add("apexcharts-datalabel-value"), a.add(f);
              }
              return a;
            },
          },
          {
            key: "printInnerLabels",
            value: function (t, l, r, s) {
              var a,
                o = this.w;
              s
                ? (a =
                    t.name.color === void 0
                      ? o.globals.colors[
                          parseInt(s.parentNode.getAttribute("rel"), 10) - 1
                        ]
                      : t.name.color)
                : o.globals.series.length > 1 &&
                  t.total.show &&
                  (a = t.total.color);
              var h = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-label",
                ),
                d = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-value",
                );
              (r = (0, t.value.formatter)(r, o)),
                s ||
                  typeof t.total.formatter != "function" ||
                  (r = t.total.formatter(o));
              var p = l === t.total.label;
              (l = t.name.formatter(l, p, o)),
                h !== null && (h.textContent = l),
                d !== null && (d.textContent = r),
                h !== null && (h.style.fill = a);
            },
          },
          {
            key: "printDataLabelsInner",
            value: function (t, l) {
              var r = this.w,
                s = t.getAttribute("data:value"),
                a =
                  r.globals.seriesNames[
                    parseInt(t.parentNode.getAttribute("rel"), 10) - 1
                  ];
              r.globals.series.length > 1 && this.printInnerLabels(l, a, s, t);
              var o = r.globals.dom.baseEl.querySelector(
                ".apexcharts-datalabels-group",
              );
              o !== null && (o.style.opacity = 1);
            },
          },
          {
            key: "drawSpokes",
            value: function (t) {
              var l = this,
                r = this.w,
                s = new Z(this.ctx),
                a = r.config.plotOptions.polarArea.spokes;
              if (a.strokeWidth !== 0) {
                for (
                  var o = [], h = 360 / r.globals.series.length, d = 0;
                  d < r.globals.series.length;
                  d++
                )
                  o.push(
                    L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      r.globals.radialSize,
                      r.config.plotOptions.pie.startAngle + h * d,
                    ),
                  );
                o.forEach(function (p, m) {
                  var x = s.drawLine(
                    p.x,
                    p.y,
                    l.centerX,
                    l.centerY,
                    Array.isArray(a.connectorColors)
                      ? a.connectorColors[m]
                      : a.connectorColors,
                  );
                  t.add(x);
                });
              }
            },
          },
          {
            key: "revertDataLabelsInner",
            value: function (t, l, r) {
              var s = this,
                a = this.w,
                o = a.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabels-group",
                ),
                h = !1,
                d = a.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area",
                ),
                p = function (v) {
                  var w = v.makeSliceOut,
                    S = v.printLabel;
                  Array.prototype.forEach.call(d, function (A) {
                    A.getAttribute("data:pieClicked") === "true" &&
                      (w && (h = !0), S && s.printDataLabelsInner(A, l));
                  });
                };
              if (
                (p({ makeSliceOut: !0, printLabel: !1 }),
                l.total.show && a.globals.series.length > 1)
              )
                h && !l.total.showAlways
                  ? p({ makeSliceOut: !1, printLabel: !0 })
                  : this.printInnerLabels(
                      l,
                      l.total.label,
                      l.total.formatter(a),
                    );
              else if ((p({ makeSliceOut: !1, printLabel: !0 }), !h))
                if (
                  a.globals.selectedDataPoints.length &&
                  a.globals.series.length > 1
                )
                  if (a.globals.selectedDataPoints[0].length > 0) {
                    var m = a.globals.selectedDataPoints[0],
                      x = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-"
                          .concat(this.chartType.toLowerCase(), "-slice-")
                          .concat(m),
                      );
                    this.printDataLabelsInner(x, l);
                  } else
                    o &&
                      a.globals.selectedDataPoints.length &&
                      a.globals.selectedDataPoints[0].length === 0 &&
                      (o.style.opacity = 0);
                else o && a.globals.series.length > 1 && (o.style.opacity = 0);
            },
          },
        ]),
        T
      );
    })(),
    Dp = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animDur = 0);
        var l = this.w;
        (this.graphics = new Z(this.ctx)),
          (this.lineColorArr =
            l.globals.stroke.colors !== void 0
              ? l.globals.stroke.colors
              : l.globals.colors),
          (this.defaultSize =
            l.globals.svgHeight < l.globals.svgWidth
              ? l.globals.gridHeight + 1.5 * l.globals.goldenPadding
              : l.globals.gridWidth),
          (this.isLog = l.config.yaxis[0].logarithmic),
          (this.coreUtils = new oe(this.ctx)),
          (this.maxValue = this.isLog
            ? this.coreUtils.getLogVal(l.globals.maxY, 0)
            : l.globals.maxY),
          (this.minValue = this.isLog
            ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
            : l.globals.minY),
          (this.polygons = l.config.plotOptions.radar.polygons),
          (this.strokeWidth = l.config.stroke.show ? l.config.stroke.width : 0),
          (this.size =
            this.defaultSize / 2.1 -
            this.strokeWidth -
            l.config.chart.dropShadow.blur),
          l.config.xaxis.labels.show &&
            (this.size = this.size - l.globals.xAxisLabelsWidth / 1.75),
          l.config.plotOptions.radar.size !== void 0 &&
            (this.size = l.config.plotOptions.radar.size),
          (this.dataRadiusOfPercent = []),
          (this.dataRadius = []),
          (this.angleArr = []),
          (this.yaxisLabelsTextsPos = []);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t) {
              var l = this,
                r = this.w,
                s = new Te(this.ctx),
                a = [],
                o = new Gt(this.ctx);
              t.length &&
                (this.dataPointsLen = t[r.globals.maxValsInArrayIndex].length),
                (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
              var h = r.globals.gridWidth / 2,
                d = r.globals.gridHeight / 2,
                p = h + r.config.plotOptions.radar.offsetX,
                m = d + r.config.plotOptions.radar.offsetY,
                x = this.graphics.group({
                  class: "apexcharts-radar-series apexcharts-plot-series",
                  transform: "translate("
                    .concat(p || 0, ", ")
                    .concat(m || 0, ")"),
                }),
                v = [],
                w = null,
                S = null;
              if (
                ((this.yaxisLabels = this.graphics.group({
                  class: "apexcharts-yaxis",
                })),
                t.forEach(function (P, R) {
                  var O = P.length === r.globals.dataPoints,
                    f = l.graphics
                      .group()
                      .attr({
                        class: "apexcharts-series",
                        "data:longestSeries": O,
                        seriesName: L.escapeString(r.globals.seriesNames[R]),
                        rel: R + 1,
                        "data:realIndex": R,
                      });
                  (l.dataRadiusOfPercent[R] = []),
                    (l.dataRadius[R] = []),
                    (l.angleArr[R] = []),
                    P.forEach(function (se, he) {
                      var ye = Math.abs(l.maxValue - l.minValue);
                      (se += Math.abs(l.minValue)),
                        l.isLog && (se = l.coreUtils.getLogVal(se, 0)),
                        (l.dataRadiusOfPercent[R][he] = se / ye),
                        (l.dataRadius[R][he] =
                          l.dataRadiusOfPercent[R][he] * l.size),
                        (l.angleArr[R][he] = he * l.disAngle);
                    }),
                    (v = l.getDataPointsPos(l.dataRadius[R], l.angleArr[R]));
                  var y = l.createPaths(v, { x: 0, y: 0 });
                  (w = l.graphics.group({
                    class:
                      "apexcharts-series-markers-wrap apexcharts-element-hidden",
                  })),
                    (S = l.graphics.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": R,
                    })),
                    r.globals.delayedElements.push({ el: w.node, index: R });
                  var C = {
                      i: R,
                      realIndex: R,
                      animationDelay: R,
                      initialSpeed: r.config.chart.animations.speed,
                      dataChangeSpeed:
                        r.config.chart.animations.dynamicAnimation.speed,
                      className: "apexcharts-radar",
                      shouldClipToGrid: !1,
                      bindEventsOnPaths: !1,
                      stroke: r.globals.stroke.colors[R],
                      strokeLineCap: r.config.stroke.lineCap,
                    },
                    M = null;
                  r.globals.previousPaths.length > 0 &&
                    (M = l.getPreviousPath(R));
                  for (var z = 0; z < y.linePathsTo.length; z++) {
                    var D = l.graphics.renderPaths(
                      c(
                        c({}, C),
                        {},
                        {
                          pathFrom: M === null ? y.linePathsFrom[z] : M,
                          pathTo: y.linePathsTo[z],
                          strokeWidth: Array.isArray(l.strokeWidth)
                            ? l.strokeWidth[R]
                            : l.strokeWidth,
                          fill: "none",
                          drawShadow: !1,
                        },
                      ),
                    );
                    f.add(D);
                    var U = s.fillPath({ seriesNumber: R }),
                      $ = l.graphics.renderPaths(
                        c(
                          c({}, C),
                          {},
                          {
                            pathFrom: M === null ? y.areaPathsFrom[z] : M,
                            pathTo: y.areaPathsTo[z],
                            strokeWidth: 0,
                            fill: U,
                            drawShadow: !1,
                          },
                        ),
                      );
                    if (r.config.chart.dropShadow.enabled) {
                      var le = new te(l.ctx),
                        ne = r.config.chart.dropShadow;
                      le.dropShadow(
                        $,
                        Object.assign({}, ne, { noUserSpaceOnUse: !0 }),
                        R,
                      );
                    }
                    f.add($);
                  }
                  P.forEach(function (se, he) {
                    var ye = new Wt(l.ctx).getMarkerConfig({
                        cssClass: "apexcharts-marker",
                        seriesIndex: R,
                        dataPointIndex: he,
                      }),
                      Pe = l.graphics.drawMarker(v[he].x, v[he].y, ye);
                    Pe.attr("rel", he),
                      Pe.attr("j", he),
                      Pe.attr("index", R),
                      Pe.node.setAttribute("default-marker-size", ye.pSize);
                    var Le = l.graphics.group({
                      class: "apexcharts-series-markers",
                    });
                    Le && Le.add(Pe), w.add(Le), f.add(w);
                    var Ie = r.config.dataLabels;
                    if (Ie.enabled) {
                      var Ke = Ie.formatter(r.globals.series[R][he], {
                        seriesIndex: R,
                        dataPointIndex: he,
                        w: r,
                      });
                      o.plotDataLabelsText({
                        x: v[he].x,
                        y: v[he].y,
                        text: Ke,
                        textAnchor: "middle",
                        i: R,
                        j: R,
                        parent: S,
                        offsetCorrection: !1,
                        dataLabelsConfig: c({}, Ie),
                      });
                    }
                    f.add(S);
                  }),
                    a.push(f);
                }),
                this.drawPolygons({ parent: x }),
                r.config.xaxis.labels.show)
              ) {
                var A = this.drawXAxisTexts();
                x.add(A);
              }
              return (
                a.forEach(function (P) {
                  x.add(P);
                }),
                x.add(this.yaxisLabels),
                x
              );
            },
          },
          {
            key: "drawPolygons",
            value: function (t) {
              for (
                var l = this,
                  r = this.w,
                  s = t.parent,
                  a = new hh(this.ctx),
                  o = r.globals.yAxisScale[0].result.reverse(),
                  h = o.length,
                  d = [],
                  p = this.size / (h - 1),
                  m = 0;
                m < h;
                m++
              )
                d[m] = p * m;
              d.reverse();
              var x = [],
                v = [];
              d.forEach(function (w, S) {
                var A = L.getPolygonPos(w, l.dataPointsLen),
                  P = "";
                A.forEach(function (R, O) {
                  if (S === 0) {
                    var f = l.graphics.drawLine(
                      R.x,
                      R.y,
                      0,
                      0,
                      Array.isArray(l.polygons.connectorColors)
                        ? l.polygons.connectorColors[O]
                        : l.polygons.connectorColors,
                    );
                    v.push(f);
                  }
                  O === 0 && l.yaxisLabelsTextsPos.push({ x: R.x, y: R.y }),
                    (P += R.x + "," + R.y + " ");
                }),
                  x.push(P);
              }),
                x.forEach(function (w, S) {
                  var A = l.polygons.strokeColors,
                    P = l.polygons.strokeWidth,
                    R = l.graphics.drawPolygon(
                      w,
                      Array.isArray(A) ? A[S] : A,
                      Array.isArray(P) ? P[S] : P,
                      r.globals.radarPolygons.fill.colors[S],
                    );
                  s.add(R);
                }),
                v.forEach(function (w) {
                  s.add(w);
                }),
                r.config.yaxis[0].show &&
                  this.yaxisLabelsTextsPos.forEach(function (w, S) {
                    var A = a.drawYAxisTexts(w.x, w.y, S, o[S]);
                    l.yaxisLabels.add(A);
                  });
            },
          },
          {
            key: "drawXAxisTexts",
            value: function () {
              var t = this,
                l = this.w,
                r = l.config.xaxis.labels,
                s = this.graphics.group({ class: "apexcharts-xaxis" }),
                a = L.getPolygonPos(this.size, this.dataPointsLen);
              return (
                l.globals.labels.forEach(function (o, h) {
                  var d = l.config.xaxis.labels.formatter,
                    p = new Gt(t.ctx);
                  if (a[h]) {
                    var m = t.getTextPos(a[h], t.size),
                      x = d(o, { seriesIndex: -1, dataPointIndex: h, w: l });
                    p.plotDataLabelsText({
                      x: m.newX,
                      y: m.newY,
                      text: x,
                      textAnchor: m.textAnchor,
                      i: h,
                      j: h,
                      parent: s,
                      color:
                        Array.isArray(r.style.colors) && r.style.colors[h]
                          ? r.style.colors[h]
                          : "#a8a8a8",
                      dataLabelsConfig: c(
                        {
                          textAnchor: m.textAnchor,
                          dropShadow: { enabled: !1 },
                        },
                        r,
                      ),
                      offsetCorrection: !1,
                    });
                  }
                }),
                s
              );
            },
          },
          {
            key: "createPaths",
            value: function (t, l) {
              var r = this,
                s = [],
                a = [],
                o = [],
                h = [];
              if (t.length) {
                (a = [this.graphics.move(l.x, l.y)]),
                  (h = [this.graphics.move(l.x, l.y)]);
                var d = this.graphics.move(t[0].x, t[0].y),
                  p = this.graphics.move(t[0].x, t[0].y);
                t.forEach(function (m, x) {
                  (d += r.graphics.line(m.x, m.y)),
                    (p += r.graphics.line(m.x, m.y)),
                    x === t.length - 1 && ((d += "Z"), (p += "Z"));
                }),
                  s.push(d),
                  o.push(p);
              }
              return {
                linePathsFrom: a,
                linePathsTo: s,
                areaPathsFrom: h,
                areaPathsTo: o,
              };
            },
          },
          {
            key: "getTextPos",
            value: function (t, l) {
              var r = "middle",
                s = t.x,
                a = t.y;
              return (
                Math.abs(t.x) >= 10
                  ? t.x > 0
                    ? ((r = "start"), (s += 10))
                    : t.x < 0 && ((r = "end"), (s -= 10))
                  : (r = "middle"),
                Math.abs(t.y) >= l - 10 &&
                  (t.y < 0 ? (a -= 10) : t.y > 0 && (a += 10)),
                { textAnchor: r, newX: s, newY: a }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (t) {
              for (
                var l = this.w, r = null, s = 0;
                s < l.globals.previousPaths.length;
                s++
              ) {
                var a = l.globals.previousPaths[s];
                a.paths.length > 0 &&
                  parseInt(a.realIndex, 10) === parseInt(t, 10) &&
                  l.globals.previousPaths[s].paths[0] !== void 0 &&
                  (r = l.globals.previousPaths[s].paths[0].d);
              }
              return r;
            },
          },
          {
            key: "getDataPointsPos",
            value: function (t, l) {
              var r =
                arguments.length > 2 && arguments[2] !== void 0
                  ? arguments[2]
                  : this.dataPointsLen;
              (t = t || []), (l = l || []);
              for (var s = [], a = 0; a < r; a++) {
                var o = {};
                (o.x = t[a] * Math.sin(l[a])),
                  (o.y = -t[a] * Math.cos(l[a])),
                  s.push(o);
              }
              return s;
            },
          },
        ]),
        T
      );
    })(),
    _p = (function (T) {
      I(l, uh);
      var t = K(l);
      function l(r) {
        var s;
        g(this, l),
          ((s = t.call(this, r)).ctx = r),
          (s.w = r.w),
          (s.animBeginArr = [0]),
          (s.animDur = 0);
        var a = s.w;
        return (
          (s.startAngle = a.config.plotOptions.radialBar.startAngle),
          (s.endAngle = a.config.plotOptions.radialBar.endAngle),
          (s.totalAngle = Math.abs(
            a.config.plotOptions.radialBar.endAngle -
              a.config.plotOptions.radialBar.startAngle,
          )),
          (s.trackStartAngle = a.config.plotOptions.radialBar.track.startAngle),
          (s.trackEndAngle = a.config.plotOptions.radialBar.track.endAngle),
          (s.donutDataLabels = s.w.config.plotOptions.radialBar.dataLabels),
          (s.radialDataLabels = s.donutDataLabels),
          s.trackStartAngle || (s.trackStartAngle = s.startAngle),
          s.trackEndAngle || (s.trackEndAngle = s.endAngle),
          s.endAngle === 360 && (s.endAngle = 359.99),
          (s.margin = parseInt(
            a.config.plotOptions.radialBar.track.margin,
            10,
          )),
          s
        );
      }
      return (
        k(l, [
          {
            key: "draw",
            value: function (r) {
              var s = this.w,
                a = new Z(this.ctx),
                o = a.group({ class: "apexcharts-radialbar" });
              if (s.globals.noData) return o;
              var h = a.group(),
                d = this.defaultSize / 2,
                p = s.globals.gridWidth / 2,
                m = this.defaultSize / 2.05;
              s.config.chart.sparkline.enabled ||
                (m =
                  m - s.config.stroke.width - s.config.chart.dropShadow.blur);
              var x = s.globals.fill.colors;
              if (s.config.plotOptions.radialBar.track.show) {
                var v = this.drawTracks({
                  size: m,
                  centerX: p,
                  centerY: d,
                  colorArr: x,
                  series: r,
                });
                h.add(v);
              }
              var w = this.drawArcs({
                  size: m,
                  centerX: p,
                  centerY: d,
                  colorArr: x,
                  series: r,
                }),
                S = 360;
              s.config.plotOptions.radialBar.startAngle < 0 &&
                (S = this.totalAngle);
              var A = (360 - S) / 360;
              if (
                ((s.globals.radialSize = m - m * A),
                this.radialDataLabels.value.show)
              ) {
                var P = Math.max(
                  this.radialDataLabels.value.offsetY,
                  this.radialDataLabels.name.offsetY,
                );
                s.globals.radialSize += P * A;
              }
              return (
                h.add(w.g),
                s.config.plotOptions.radialBar.hollow.position === "front" &&
                  (w.g.add(w.elHollow), w.dataLabels && w.g.add(w.dataLabels)),
                o.add(h),
                o
              );
            },
          },
          {
            key: "drawTracks",
            value: function (r) {
              var s = this.w,
                a = new Z(this.ctx),
                o = a.group({ class: "apexcharts-tracks" }),
                h = new te(this.ctx),
                d = new Te(this.ctx),
                p = this.getStrokeWidth(r);
              r.size = r.size - p / 2;
              for (var m = 0; m < r.series.length; m++) {
                var x = a.group({
                  class: "apexcharts-radialbar-track apexcharts-track",
                });
                o.add(x),
                  x.attr({ rel: m + 1 }),
                  (r.size = r.size - p - this.margin);
                var v = s.config.plotOptions.radialBar.track,
                  w = d.fillPath({
                    seriesNumber: 0,
                    size: r.size,
                    fillColors: Array.isArray(v.background)
                      ? v.background[m]
                      : v.background,
                    solid: !0,
                  }),
                  S = this.trackStartAngle,
                  A = this.trackEndAngle;
                Math.abs(A) + Math.abs(S) >= 360 &&
                  (A = 360 - Math.abs(this.startAngle) - 0.1);
                var P = a.drawPath({
                  d: "",
                  stroke: w,
                  strokeWidth: (p * parseInt(v.strokeWidth, 10)) / 100,
                  fill: "none",
                  strokeOpacity: v.opacity,
                  classes: "apexcharts-radialbar-area",
                });
                if (v.dropShadow.enabled) {
                  var R = v.dropShadow;
                  h.dropShadow(P, R);
                }
                x.add(P),
                  P.attr("id", "apexcharts-radialbarTrack-" + m),
                  this.animatePaths(P, {
                    centerX: r.centerX,
                    centerY: r.centerY,
                    endAngle: A,
                    startAngle: S,
                    size: r.size,
                    i: m,
                    totalItems: 2,
                    animBeginArr: 0,
                    dur: 0,
                    isTrack: !0,
                    easing: s.globals.easing,
                  });
              }
              return o;
            },
          },
          {
            key: "drawArcs",
            value: function (r) {
              var s = this.w,
                a = new Z(this.ctx),
                o = new Te(this.ctx),
                h = new te(this.ctx),
                d = a.group(),
                p = this.getStrokeWidth(r);
              r.size = r.size - p / 2;
              var m = s.config.plotOptions.radialBar.hollow.background,
                x =
                  r.size -
                  p * r.series.length -
                  this.margin * r.series.length -
                  (p *
                    parseInt(
                      s.config.plotOptions.radialBar.track.strokeWidth,
                      10,
                    )) /
                    100 /
                    2,
                v = x - s.config.plotOptions.radialBar.hollow.margin;
              s.config.plotOptions.radialBar.hollow.image !== void 0 &&
                (m = this.drawHollowImage(r, d, x, m));
              var w = this.drawHollow({
                size: v,
                centerX: r.centerX,
                centerY: r.centerY,
                fill: m || "transparent",
              });
              if (s.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                var S = s.config.plotOptions.radialBar.hollow.dropShadow;
                h.dropShadow(w, S);
              }
              var A = 1;
              !this.radialDataLabels.total.show &&
                s.globals.series.length > 1 &&
                (A = 0);
              var P = null;
              this.radialDataLabels.show &&
                (P = this.renderInnerDataLabels(this.radialDataLabels, {
                  hollowSize: x,
                  centerX: r.centerX,
                  centerY: r.centerY,
                  opacity: A,
                })),
                s.config.plotOptions.radialBar.hollow.position === "back" &&
                  (d.add(w), P && d.add(P));
              var R = !1;
              s.config.plotOptions.radialBar.inverseOrder && (R = !0);
              for (
                var O = R ? r.series.length - 1 : 0;
                R ? O >= 0 : O < r.series.length;
                R ? O-- : O++
              ) {
                var f = a.group({
                  class: "apexcharts-series apexcharts-radial-series",
                  seriesName: L.escapeString(s.globals.seriesNames[O]),
                });
                d.add(f),
                  f.attr({ rel: O + 1, "data:realIndex": O }),
                  this.ctx.series.addCollapsedClassToSeries(f, O),
                  (r.size = r.size - p - this.margin);
                var y = o.fillPath({
                    seriesNumber: O,
                    size: r.size,
                    value: r.series[O],
                  }),
                  C = this.startAngle,
                  M = void 0,
                  z = L.negToZero(r.series[O] > 100 ? 100 : r.series[O]) / 100,
                  D = Math.round(this.totalAngle * z) + this.startAngle,
                  U = void 0;
                s.globals.dataChanged &&
                  ((M = this.startAngle),
                  (U =
                    Math.round(
                      (this.totalAngle *
                        L.negToZero(s.globals.previousPaths[O])) /
                        100,
                    ) + M)),
                  Math.abs(D) + Math.abs(C) >= 360 && (D -= 0.01),
                  Math.abs(U) + Math.abs(M) >= 360 && (U -= 0.01);
                var $ = D - C,
                  le = Array.isArray(s.config.stroke.dashArray)
                    ? s.config.stroke.dashArray[O]
                    : s.config.stroke.dashArray,
                  ne = a.drawPath({
                    d: "",
                    stroke: y,
                    strokeWidth: p,
                    fill: "none",
                    fillOpacity: s.config.fill.opacity,
                    classes:
                      "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                      O,
                    strokeDashArray: le,
                  });
                if (
                  (Z.setAttrs(ne.node, {
                    "data:angle": $,
                    "data:value": r.series[O],
                  }),
                  s.config.chart.dropShadow.enabled)
                ) {
                  var se = s.config.chart.dropShadow;
                  h.dropShadow(ne, se, O);
                }
                h.setSelectionFilter(ne, 0, O),
                  this.addListeners(ne, this.radialDataLabels),
                  f.add(ne),
                  ne.attr({ index: 0, j: O });
                var he = 0;
                !this.initialAnim ||
                  s.globals.resized ||
                  s.globals.dataChanged ||
                  (he = s.config.chart.animations.speed),
                  s.globals.dataChanged &&
                    (he = s.config.chart.animations.dynamicAnimation.speed),
                  (this.animDur = he / (1.2 * r.series.length) + this.animDur),
                  this.animBeginArr.push(this.animDur),
                  this.animatePaths(ne, {
                    centerX: r.centerX,
                    centerY: r.centerY,
                    endAngle: D,
                    startAngle: C,
                    prevEndAngle: U,
                    prevStartAngle: M,
                    size: r.size,
                    i: O,
                    totalItems: 2,
                    animBeginArr: this.animBeginArr,
                    dur: he,
                    shouldSetPrevPaths: !0,
                    easing: s.globals.easing,
                  });
              }
              return { g: d, elHollow: w, dataLabels: P };
            },
          },
          {
            key: "drawHollow",
            value: function (r) {
              var s = new Z(this.ctx).drawCircle(2 * r.size);
              return (
                s.attr({
                  class: "apexcharts-radialbar-hollow",
                  cx: r.centerX,
                  cy: r.centerY,
                  r: r.size,
                  fill: r.fill,
                }),
                s
              );
            },
          },
          {
            key: "drawHollowImage",
            value: function (r, s, a, o) {
              var h = this.w,
                d = new Te(this.ctx),
                p = L.randomId(),
                m = h.config.plotOptions.radialBar.hollow.image;
              if (h.config.plotOptions.radialBar.hollow.imageClipped)
                d.clippedImgArea({
                  width: a,
                  height: a,
                  image: m,
                  patternID: "pattern".concat(h.globals.cuid).concat(p),
                }),
                  (o = "url(#pattern".concat(h.globals.cuid).concat(p, ")"));
              else {
                var x = h.config.plotOptions.radialBar.hollow.imageWidth,
                  v = h.config.plotOptions.radialBar.hollow.imageHeight;
                if (x === void 0 && v === void 0) {
                  var w = h.globals.dom.Paper.image(m).loaded(function (A) {
                    this.move(
                      r.centerX -
                        A.width / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetX,
                      r.centerY -
                        A.height / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetY,
                    );
                  });
                  s.add(w);
                } else {
                  var S = h.globals.dom.Paper.image(m).loaded(function (A) {
                    this.move(
                      r.centerX -
                        x / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetX,
                      r.centerY -
                        v / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetY,
                    ),
                      this.size(x, v);
                  });
                  s.add(S);
                }
              }
              return o;
            },
          },
          {
            key: "getStrokeWidth",
            value: function (r) {
              var s = this.w;
              return (
                (r.size *
                  (100 -
                    parseInt(s.config.plotOptions.radialBar.hollow.size, 10))) /
                  100 /
                  (r.series.length + 1) -
                this.margin
              );
            },
          },
        ]),
        l
      );
    })(),
    jp = (function (T) {
      I(l, Ui);
      var t = K(l);
      function l() {
        return g(this, l), t.apply(this, arguments);
      }
      return (
        k(l, [
          {
            key: "draw",
            value: function (r, s) {
              var a = this.w,
                o = new Z(this.ctx);
              (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                (this.series = r),
                (this.seriesRangeStart = a.globals.seriesRangeStart),
                (this.seriesRangeEnd = a.globals.seriesRangeEnd),
                this.barHelpers.initVariables(r);
              for (
                var h = o.group({
                    class: "apexcharts-rangebar-series apexcharts-plot-series",
                  }),
                  d = 0;
                d < r.length;
                d++
              ) {
                var p,
                  m,
                  x,
                  v,
                  w = void 0,
                  S = void 0,
                  A = a.globals.comboCharts ? s[d] : d,
                  P = o.group({
                    class: "apexcharts-series",
                    seriesName: L.escapeString(a.globals.seriesNames[A]),
                    rel: d + 1,
                    "data:realIndex": A,
                  });
                this.ctx.series.addCollapsedClassToSeries(P, A),
                  r[d].length > 0 && (this.visibleI = this.visibleI + 1);
                var R = 0,
                  O = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = A);
                var f = this.barHelpers.initialPositions();
                (S = f.y),
                  (v = f.zeroW),
                  (w = f.x),
                  (O = f.barWidth),
                  (R = f.barHeight),
                  (p = f.xDivision),
                  (m = f.yDivision),
                  (x = f.zeroH);
                for (
                  var y = o.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": A,
                    }),
                    C = o.group({
                      class: "apexcharts-rangebar-goals-markers",
                      style: "pointer-events: none",
                    }),
                    M = 0;
                  M < a.globals.dataPoints;
                  M++
                ) {
                  var z,
                    D = this.barHelpers.getStrokeWidth(d, M, A),
                    U = this.seriesRangeStart[d][M],
                    $ = this.seriesRangeEnd[d][M],
                    le = null,
                    ne = null,
                    se = null,
                    he = { x: w, y: S, strokeWidth: D, elSeries: P },
                    ye = this.seriesLen;
                  if (
                    (a.config.plotOptions.bar.rangeBarGroupRows && (ye = 1),
                    a.config.series[d].data[M] === void 0)
                  )
                    break;
                  if (this.isHorizontal) {
                    se = S + R * this.visibleI;
                    var Pe = (m - R * ye) / 2;
                    if (a.config.series[d].data[M].x) {
                      var Le = this.detectOverlappingBars({
                        i: d,
                        j: M,
                        barYPosition: se,
                        srty: Pe,
                        barHeight: R,
                        yDivision: m,
                        initPositions: f,
                      });
                      (R = Le.barHeight), (se = Le.barYPosition);
                    }
                    O = (le = this.drawRangeBarPaths(
                      c(
                        {
                          indexes: { i: d, j: M, realIndex: A },
                          barHeight: R,
                          barYPosition: se,
                          zeroW: v,
                          yDivision: m,
                          y1: U,
                          y2: $,
                        },
                        he,
                      ),
                    )).barWidth;
                  } else {
                    a.globals.isXNumeric &&
                      (w =
                        (a.globals.seriesX[d][M] - a.globals.minX) /
                          this.xRatio -
                        O / 2),
                      (ne = w + O * this.visibleI);
                    var Ie = (p - O * ye) / 2;
                    if (a.config.series[d].data[M].x) {
                      var Ke = this.detectOverlappingBars({
                        i: d,
                        j: M,
                        barXPosition: ne,
                        srtx: Ie,
                        barWidth: O,
                        xDivision: p,
                        initPositions: f,
                      });
                      (O = Ke.barWidth), (ne = Ke.barXPosition);
                    }
                    R = (le = this.drawRangeColumnPaths(
                      c(
                        {
                          indexes: { i: d, j: M, realIndex: A },
                          barWidth: O,
                          barXPosition: ne,
                          zeroH: x,
                          xDivision: p,
                        },
                        he,
                      ),
                    )).barHeight;
                  }
                  var Be = this.barHelpers.drawGoalLine({
                    barXPosition: le.barXPosition,
                    barYPosition: se,
                    goalX: le.goalX,
                    goalY: le.goalY,
                    barHeight: R,
                    barWidth: O,
                  });
                  Be && C.add(Be), (S = le.y), (w = le.x);
                  var st = this.barHelpers.getPathFillColor(r, d, M, A),
                    Xl = a.globals.stroke.colors[A];
                  this.renderSeries(
                    (E(
                      (z = {
                        realIndex: A,
                        pathFill: st,
                        lineFill: Xl,
                        j: M,
                        i: d,
                        x: w,
                        y: S,
                        y1: U,
                        y2: $,
                        pathFrom: le.pathFrom,
                        pathTo: le.pathTo,
                        strokeWidth: D,
                        elSeries: P,
                        series: r,
                        barHeight: R,
                        barWidth: O,
                        barXPosition: ne,
                        barYPosition: se,
                      }),
                      "barWidth",
                      O,
                    ),
                    E(z, "elDataLabelsWrap", y),
                    E(z, "elGoalsMarkers", C),
                    E(z, "visibleSeries", this.visibleI),
                    E(z, "type", "rangebar"),
                    z),
                  );
                }
                h.add(P);
              }
              return h;
            },
          },
          {
            key: "detectOverlappingBars",
            value: function (r) {
              var s = r.i,
                a = r.j,
                o = r.barYPosition,
                h = r.barXPosition,
                d = r.srty,
                p = r.srtx,
                m = r.barHeight,
                x = r.barWidth,
                v = r.yDivision,
                w = r.xDivision,
                S = r.initPositions,
                A = this.w,
                P = [],
                R = A.config.series[s].data[a].rangeName,
                O = A.config.series[s].data[a].x,
                f = Array.isArray(O) ? O.join(" ") : O,
                y = A.globals.labels
                  .map(function (M) {
                    return Array.isArray(M) ? M.join(" ") : M;
                  })
                  .indexOf(f),
                C = A.globals.seriesRange[s].findIndex(function (M) {
                  return M.x === f && M.overlaps.length > 0;
                });
              return (
                this.isHorizontal
                  ? ((o = A.config.plotOptions.bar.rangeBarGroupRows
                      ? d + v * y
                      : d + m * this.visibleI + v * y),
                    C > -1 &&
                      !A.config.plotOptions.bar.rangeBarOverlap &&
                      (P = A.globals.seriesRange[s][C].overlaps).indexOf(R) >
                        -1 &&
                      (o =
                        (m = S.barHeight / P.length) * this.visibleI +
                        (v * (100 - parseInt(this.barOptions.barHeight, 10))) /
                          100 /
                          2 +
                        m * (this.visibleI + P.indexOf(R)) +
                        v * y))
                  : (y > -1 &&
                      (h = A.config.plotOptions.bar.rangeBarGroupRows
                        ? p + w * y
                        : p + x * this.visibleI + w * y),
                    C > -1 &&
                      !A.config.plotOptions.bar.rangeBarOverlap &&
                      (P = A.globals.seriesRange[s][C].overlaps).indexOf(R) >
                        -1 &&
                      (h =
                        (x = S.barWidth / P.length) * this.visibleI +
                        (w * (100 - parseInt(this.barOptions.barWidth, 10))) /
                          100 /
                          2 +
                        x * (this.visibleI + P.indexOf(R)) +
                        w * y)),
                { barYPosition: o, barXPosition: h, barHeight: m, barWidth: x }
              );
            },
          },
          {
            key: "drawRangeColumnPaths",
            value: function (r) {
              var s = r.indexes,
                a = r.x,
                o = r.xDivision,
                h = r.barWidth,
                d = r.barXPosition,
                p = r.zeroH,
                m = this.w,
                x = s.i,
                v = s.j,
                w = this.yRatio[this.yaxisIndex],
                S = s.realIndex,
                A = this.getRangeValue(S, v),
                P = Math.min(A.start, A.end),
                R = Math.max(A.start, A.end);
              this.series[x][v] === void 0 || this.series[x][v] === null
                ? (P = p)
                : ((P = p - P / w), (R = p - R / w));
              var O = Math.abs(R - P),
                f = this.barHelpers.getColumnPaths({
                  barXPosition: d,
                  barWidth: h,
                  y1: P,
                  y2: R,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  realIndex: s.realIndex,
                  i: S,
                  j: v,
                  w: m,
                });
              return (
                m.globals.isXNumeric || (a += o),
                {
                  pathTo: f.pathTo,
                  pathFrom: f.pathFrom,
                  barHeight: O,
                  x: a,
                  y: R,
                  goalY: this.barHelpers.getGoalValues("y", null, p, x, v),
                  barXPosition: d,
                }
              );
            },
          },
          {
            key: "drawRangeBarPaths",
            value: function (r) {
              var s = r.indexes,
                a = r.y,
                o = r.y1,
                h = r.y2,
                d = r.yDivision,
                p = r.barHeight,
                m = r.barYPosition,
                x = r.zeroW,
                v = this.w,
                w = x + o / this.invertedYRatio,
                S = x + h / this.invertedYRatio,
                A = Math.abs(S - w),
                P = this.barHelpers.getBarpaths({
                  barYPosition: m,
                  barHeight: p,
                  x1: w,
                  x2: S,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  i: s.realIndex,
                  realIndex: s.realIndex,
                  j: s.j,
                  w: v,
                });
              return (
                v.globals.isXNumeric || (a += d),
                {
                  pathTo: P.pathTo,
                  pathFrom: P.pathFrom,
                  barWidth: A,
                  x: S,
                  goalX: this.barHelpers.getGoalValues(
                    "x",
                    x,
                    null,
                    s.realIndex,
                    s.j,
                  ),
                  y: a,
                }
              );
            },
          },
          {
            key: "getRangeValue",
            value: function (r, s) {
              var a = this.w;
              return {
                start: a.globals.seriesRangeStart[r][s],
                end: a.globals.seriesRangeEnd[r][s],
              };
            },
          },
        ]),
        l
      );
    })(),
    Xp = (function () {
      function T(t) {
        g(this, T), (this.w = t.w), (this.lineCtx = t);
      }
      return (
        k(T, [
          {
            key: "sameValueSeriesFix",
            value: function (t, l) {
              var r = this.w;
              if (
                (r.config.fill.type === "gradient" ||
                  r.config.fill.type[t] === "gradient") &&
                new oe(this.lineCtx.ctx, r).seriesHaveSameValues(t)
              ) {
                var s = l[t].slice();
                (s[s.length - 1] = s[s.length - 1] + 1e-6), (l[t] = s);
              }
              return l;
            },
          },
          {
            key: "calculatePoints",
            value: function (t) {
              var l = t.series,
                r = t.realIndex,
                s = t.x,
                a = t.y,
                o = t.i,
                h = t.j,
                d = t.prevY,
                p = this.w,
                m = [],
                x = [];
              if (h === 0) {
                var v =
                  this.lineCtx.categoryAxisCorrection +
                  p.config.markers.offsetX;
                p.globals.isXNumeric &&
                  (v =
                    (p.globals.seriesX[r][0] - p.globals.minX) /
                      this.lineCtx.xRatio +
                    p.config.markers.offsetX),
                  m.push(v),
                  x.push(
                    L.isNumber(l[o][0]) ? d + p.config.markers.offsetY : null,
                  ),
                  m.push(s + p.config.markers.offsetX),
                  x.push(
                    L.isNumber(l[o][h + 1])
                      ? a + p.config.markers.offsetY
                      : null,
                  );
              } else
                m.push(s + p.config.markers.offsetX),
                  x.push(
                    L.isNumber(l[o][h + 1])
                      ? a + p.config.markers.offsetY
                      : null,
                  );
              return { x: m, y: x };
            },
          },
          {
            key: "checkPreviousPaths",
            value: function (t) {
              for (
                var l = t.pathFromLine,
                  r = t.pathFromArea,
                  s = t.realIndex,
                  a = this.w,
                  o = 0;
                o < a.globals.previousPaths.length;
                o++
              ) {
                var h = a.globals.previousPaths[o];
                (h.type === "line" || h.type === "area") &&
                  h.paths.length > 0 &&
                  parseInt(h.realIndex, 10) === parseInt(s, 10) &&
                  (h.type === "line"
                    ? ((this.lineCtx.appendPathFrom = !1),
                      (l = a.globals.previousPaths[o].paths[0].d))
                    : h.type === "area" &&
                      ((this.lineCtx.appendPathFrom = !1),
                      (r = a.globals.previousPaths[o].paths[0].d),
                      a.config.stroke.show &&
                        a.globals.previousPaths[o].paths[1] &&
                        (l = a.globals.previousPaths[o].paths[1].d)));
              }
              return { pathFromLine: l, pathFromArea: r };
            },
          },
          {
            key: "determineFirstPrevY",
            value: function (t) {
              var l,
                r = t.i,
                s = t.series,
                a = t.prevY,
                o = t.lineYPosition,
                h = this.w;
              if (
                ((l = s[r]) === null || l === void 0 ? void 0 : l[0]) !== void 0
              )
                a =
                  (o =
                    h.config.chart.stacked && r > 0
                      ? this.lineCtx.prevSeriesY[r - 1][0]
                      : this.lineCtx.zeroY) -
                  s[r][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                  2 *
                    (this.lineCtx.isReversed
                      ? s[r][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                      : 0);
              else if (h.config.chart.stacked && r > 0 && s[r][0] === void 0) {
                for (var d = r - 1; d >= 0; d--)
                  if (s[d][0] !== null && s[d][0] !== void 0) {
                    a = o = this.lineCtx.prevSeriesY[d][0];
                    break;
                  }
              }
              return { prevY: a, lineYPosition: o };
            },
          },
        ]),
        T
      );
    })(),
    Xa = (function () {
      function T(t, l, r) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.xyRatios = l),
          (this.pointsChart =
            !(
              this.w.config.chart.type !== "bubble" &&
              this.w.config.chart.type !== "scatter"
            ) || r),
          (this.scatter = new Vt(this.ctx)),
          (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
          (this.lineHelpers = new Xp(this)),
          (this.markers = new Wt(this.ctx)),
          (this.prevSeriesY = []),
          (this.categoryAxisCorrection = 0),
          (this.yaxisIndex = 0);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t, l, r, s) {
              var a = this.w,
                o = new Z(this.ctx),
                h = a.globals.comboCharts ? l : a.config.chart.type,
                d = o.group({
                  class: "apexcharts-".concat(
                    h,
                    "-series apexcharts-plot-series",
                  ),
                }),
                p = new oe(this.ctx, a);
              (this.yRatio = this.xyRatios.yRatio),
                (this.zRatio = this.xyRatios.zRatio),
                (this.xRatio = this.xyRatios.xRatio),
                (this.baseLineY = this.xyRatios.baseLineY),
                (t = p.getLogSeries(t)),
                (this.yRatio = p.getLogYRatios(this.yRatio));
              for (var m = [], x = 0; x < t.length; x++) {
                t = this.lineHelpers.sameValueSeriesFix(x, t);
                var v = a.globals.comboCharts ? r[x] : x;
                this._initSerieVariables(t, x, v);
                var w = [],
                  S = [],
                  A = a.globals.padHorizontal + this.categoryAxisCorrection;
                this.ctx.series.addCollapsedClassToSeries(this.elSeries, v),
                  a.globals.isXNumeric &&
                    a.globals.seriesX.length > 0 &&
                    (A =
                      (a.globals.seriesX[v][0] - a.globals.minX) / this.xRatio),
                  S.push(A);
                var P,
                  R = A,
                  O = void 0,
                  f = R,
                  y = this.zeroY,
                  C = this.zeroY;
                (y = this.lineHelpers.determineFirstPrevY({
                  i: x,
                  series: t,
                  prevY: y,
                  lineYPosition: 0,
                }).prevY),
                  w.push(y),
                  (P = y),
                  h === "rangeArea" &&
                    (O = C =
                      this.lineHelpers.determineFirstPrevY({
                        i: x,
                        series: s,
                        prevY: C,
                        lineYPosition: 0,
                      }).prevY);
                var M = {
                    type: h,
                    series: t,
                    realIndex: v,
                    i: x,
                    x: A,
                    y: 1,
                    pX: R,
                    pY: P,
                    pathsFrom: this._calculatePathsFrom({
                      type: h,
                      series: t,
                      i: x,
                      realIndex: v,
                      prevX: f,
                      prevY: y,
                      prevY2: C,
                    }),
                    linePaths: [],
                    areaPaths: [],
                    seriesIndex: r,
                    lineYPosition: 0,
                    xArrj: S,
                    yArrj: w,
                    seriesRangeEnd: s,
                  },
                  z = this._iterateOverDataPoints(
                    c(
                      c({}, M),
                      {},
                      {
                        iterations:
                          h === "rangeArea" ? t[x].length - 1 : void 0,
                        isRangeStart: !0,
                      },
                    ),
                  );
                if (h === "rangeArea") {
                  var D = this._calculatePathsFrom({
                      series: s,
                      i: x,
                      realIndex: v,
                      prevX: f,
                      prevY: C,
                    }),
                    U = this._iterateOverDataPoints(
                      c(
                        c({}, M),
                        {},
                        {
                          series: s,
                          pY: O,
                          pathsFrom: D,
                          iterations: s[x].length - 1,
                          isRangeStart: !1,
                        },
                      ),
                    );
                  (z.linePaths[0] = U.linePath + z.linePath),
                    (z.pathFromLine = U.pathFromLine + z.pathFromLine);
                }
                this._handlePaths({ type: h, realIndex: v, i: x, paths: z }),
                  this.elSeries.add(this.elPointsMain),
                  this.elSeries.add(this.elDataLabelsWrap),
                  m.push(this.elSeries);
              }
              if (a.config.chart.stacked)
                for (var $ = m.length; $ > 0; $--) d.add(m[$ - 1]);
              else for (var le = 0; le < m.length; le++) d.add(m[le]);
              return d;
            },
          },
          {
            key: "_initSerieVariables",
            value: function (t, l, r) {
              var s = this.w,
                a = new Z(this.ctx);
              (this.xDivision =
                s.globals.gridWidth /
                (s.globals.dataPoints -
                  (s.config.xaxis.tickPlacement === "on" ? 1 : 0))),
                (this.strokeWidth = Array.isArray(s.config.stroke.width)
                  ? s.config.stroke.width[r]
                  : s.config.stroke.width),
                this.yRatio.length > 1 && (this.yaxisIndex = r),
                (this.isReversed =
                  s.config.yaxis[this.yaxisIndex] &&
                  s.config.yaxis[this.yaxisIndex].reversed),
                (this.zeroY =
                  s.globals.gridHeight -
                  this.baseLineY[this.yaxisIndex] -
                  (this.isReversed ? s.globals.gridHeight : 0) +
                  (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0)),
                (this.areaBottomY = this.zeroY),
                (this.zeroY > s.globals.gridHeight ||
                  s.config.plotOptions.area.fillTo === "end") &&
                  (this.areaBottomY = s.globals.gridHeight),
                (this.categoryAxisCorrection = this.xDivision / 2),
                (this.elSeries = a.group({
                  class: "apexcharts-series",
                  seriesName: L.escapeString(s.globals.seriesNames[r]),
                })),
                (this.elPointsMain = a.group({
                  class: "apexcharts-series-markers-wrap",
                  "data:realIndex": r,
                })),
                (this.elDataLabelsWrap = a.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": r,
                }));
              var o = t[l].length === s.globals.dataPoints;
              this.elSeries.attr({
                "data:longestSeries": o,
                rel: l + 1,
                "data:realIndex": r,
              }),
                (this.appendPathFrom = !0);
            },
          },
          {
            key: "_calculatePathsFrom",
            value: function (t) {
              var l,
                r,
                s,
                a,
                o = t.type,
                h = t.series,
                d = t.i,
                p = t.realIndex,
                m = t.prevX,
                x = t.prevY,
                v = t.prevY2,
                w = this.w,
                S = new Z(this.ctx);
              if (h[d][0] === null) {
                for (var A = 0; A < h[d].length; A++)
                  if (h[d][A] !== null) {
                    (m = this.xDivision * A),
                      (x = this.zeroY - h[d][A] / this.yRatio[this.yaxisIndex]),
                      (l = S.move(m, x)),
                      (r = S.move(m, this.areaBottomY));
                    break;
                  }
              } else
                (l = S.move(m, x)),
                  o === "rangeArea" && (l = S.move(m, v) + S.line(m, x)),
                  (r = S.move(m, this.areaBottomY) + S.line(m, x));
              if (
                ((s = S.move(-1, this.zeroY) + S.line(-1, this.zeroY)),
                (a = S.move(-1, this.zeroY) + S.line(-1, this.zeroY)),
                w.globals.previousPaths.length > 0)
              ) {
                var P = this.lineHelpers.checkPreviousPaths({
                  pathFromLine: s,
                  pathFromArea: a,
                  realIndex: p,
                });
                (s = P.pathFromLine), (a = P.pathFromArea);
              }
              return {
                prevX: m,
                prevY: x,
                linePath: l,
                areaPath: r,
                pathFromLine: s,
                pathFromArea: a,
              };
            },
          },
          {
            key: "_handlePaths",
            value: function (t) {
              var l = t.type,
                r = t.realIndex,
                s = t.i,
                a = t.paths,
                o = this.w,
                h = new Z(this.ctx),
                d = new Te(this.ctx);
              this.prevSeriesY.push(a.yArrj),
                (o.globals.seriesXvalues[r] = a.xArrj),
                (o.globals.seriesYvalues[r] = a.yArrj);
              var p = o.config.forecastDataPoints;
              if (p.count > 0 && l !== "rangeArea") {
                var m =
                    o.globals.seriesXvalues[r][
                      o.globals.seriesXvalues[r].length - p.count - 1
                    ],
                  x = h.drawRect(
                    m,
                    0,
                    o.globals.gridWidth,
                    o.globals.gridHeight,
                    0,
                  );
                o.globals.dom.elForecastMask.appendChild(x.node);
                var v = h.drawRect(0, 0, m, o.globals.gridHeight, 0);
                o.globals.dom.elNonForecastMask.appendChild(v.node);
              }
              this.pointsChart ||
                o.globals.delayedElements.push({
                  el: this.elPointsMain.node,
                  index: r,
                });
              var w = {
                i: s,
                realIndex: r,
                animationDelay: s,
                initialSpeed: o.config.chart.animations.speed,
                dataChangeSpeed:
                  o.config.chart.animations.dynamicAnimation.speed,
                className: "apexcharts-".concat(l),
              };
              if (l === "area")
                for (
                  var S = d.fillPath({ seriesNumber: r }), A = 0;
                  A < a.areaPaths.length;
                  A++
                ) {
                  var P = h.renderPaths(
                    c(
                      c({}, w),
                      {},
                      {
                        pathFrom: a.pathFromArea,
                        pathTo: a.areaPaths[A],
                        stroke: "none",
                        strokeWidth: 0,
                        strokeLineCap: null,
                        fill: S,
                      },
                    ),
                  );
                  this.elSeries.add(P);
                }
              if (o.config.stroke.show && !this.pointsChart) {
                var R = null;
                if (l === "line") R = d.fillPath({ seriesNumber: r, i: s });
                else if (o.config.stroke.fill.type === "solid")
                  R = o.globals.stroke.colors[r];
                else {
                  var O = o.config.fill;
                  (o.config.fill = o.config.stroke.fill),
                    (R = d.fillPath({ seriesNumber: r, i: s })),
                    (o.config.fill = O);
                }
                for (var f = 0; f < a.linePaths.length; f++) {
                  var y = R;
                  l === "rangeArea" && (y = d.fillPath({ seriesNumber: r }));
                  var C = c(
                      c({}, w),
                      {},
                      {
                        pathFrom: a.pathFromLine,
                        pathTo: a.linePaths[f],
                        stroke: R,
                        strokeWidth: this.strokeWidth,
                        strokeLineCap: o.config.stroke.lineCap,
                        fill: l === "rangeArea" ? y : "none",
                      },
                    ),
                    M = h.renderPaths(C);
                  if (
                    (this.elSeries.add(M),
                    M.attr("fill-rule", "evenodd"),
                    p.count > 0 && l !== "rangeArea")
                  ) {
                    var z = h.renderPaths(C);
                    z.node.setAttribute("stroke-dasharray", p.dashArray),
                      p.strokeWidth &&
                        z.node.setAttribute("stroke-width", p.strokeWidth),
                      this.elSeries.add(z),
                      z.attr(
                        "clip-path",
                        "url(#forecastMask".concat(o.globals.cuid, ")"),
                      ),
                      M.attr(
                        "clip-path",
                        "url(#nonForecastMask".concat(o.globals.cuid, ")"),
                      );
                  }
                }
              }
            },
          },
          {
            key: "_iterateOverDataPoints",
            value: function (t) {
              var l = t.type,
                r = t.series,
                s = t.iterations,
                a = t.realIndex,
                o = t.i,
                h = t.x,
                d = t.y,
                p = t.pX,
                m = t.pY,
                x = t.pathsFrom,
                v = t.linePaths,
                w = t.areaPaths,
                S = t.seriesIndex,
                A = t.lineYPosition,
                P = t.xArrj,
                R = t.yArrj,
                O = t.isRangeStart,
                f = t.seriesRangeEnd,
                y = this.w,
                C = new Z(this.ctx),
                M = this.yRatio,
                z = x.prevY,
                D = x.linePath,
                U = x.areaPath,
                $ = x.pathFromLine,
                le = x.pathFromArea,
                ne = L.isNumber(y.globals.minYArr[a])
                  ? y.globals.minYArr[a]
                  : y.globals.minY;
              s ||
                (s =
                  y.globals.dataPoints > 1
                    ? y.globals.dataPoints - 1
                    : y.globals.dataPoints);
              for (var se = d, he = 0; he < s; he++) {
                var ye = r[o][he + 1] === void 0 || r[o][he + 1] === null;
                if (y.globals.isXNumeric) {
                  var Pe = y.globals.seriesX[a][he + 1];
                  y.globals.seriesX[a][he + 1] === void 0 &&
                    (Pe = y.globals.seriesX[a][s - 1]),
                    (h = (Pe - y.globals.minX) / this.xRatio);
                } else h += this.xDivision;
                y.config.chart.stacked
                  ? o > 0 &&
                    y.globals.collapsedSeries.length <
                      y.config.series.length - 1
                    ? (A =
                        this.prevSeriesY[
                          (function (Ke) {
                            for (
                              var Be = Ke, st = 0;
                              st < y.globals.series.length;
                              st++
                            )
                              if (
                                y.globals.collapsedSeriesIndices.indexOf(Ke) >
                                -1
                              ) {
                                Be--;
                                break;
                              }
                            return Be >= 0 ? Be : 0;
                          })(o - 1)
                        ][he + 1])
                    : (A = this.zeroY)
                  : (A = this.zeroY),
                  ye
                    ? (d =
                        A -
                        ne / M[this.yaxisIndex] +
                        2 * (this.isReversed ? ne / M[this.yaxisIndex] : 0))
                    : ((d =
                        A -
                        r[o][he + 1] / M[this.yaxisIndex] +
                        2 *
                          (this.isReversed
                            ? r[o][he + 1] / M[this.yaxisIndex]
                            : 0)),
                      l === "rangeArea" &&
                        (se =
                          A -
                          f[o][he + 1] / M[this.yaxisIndex] +
                          2 *
                            (this.isReversed
                              ? f[o][he + 1] / M[this.yaxisIndex]
                              : 0))),
                  P.push(h),
                  R.push(d);
                var Le = this.lineHelpers.calculatePoints({
                    series: r,
                    x: h,
                    y: d,
                    realIndex: a,
                    i: o,
                    j: he,
                    prevY: z,
                  }),
                  Ie = this._createPaths({
                    type: l,
                    series: r,
                    i: o,
                    realIndex: a,
                    j: he,
                    x: h,
                    y: d,
                    y2: se,
                    pX: p,
                    pY: m,
                    linePath: D,
                    areaPath: U,
                    linePaths: v,
                    areaPaths: w,
                    seriesIndex: S,
                    isRangeStart: O,
                  });
                (w = Ie.areaPaths),
                  (v = Ie.linePaths),
                  (p = Ie.pX),
                  (m = Ie.pY),
                  (U = Ie.areaPath),
                  (D = Ie.linePath),
                  this.appendPathFrom &&
                    (($ += C.line(h, this.zeroY)),
                    (le += C.line(h, this.zeroY))),
                  this.handleNullDataPoints(r, Le, o, he, a),
                  this._handleMarkersAndLabels({
                    type: l,
                    pointsPos: Le,
                    i: o,
                    j: he,
                    realIndex: a,
                    isRangeStart: O,
                  });
              }
              return {
                yArrj: R,
                xArrj: P,
                pathFromArea: le,
                areaPaths: w,
                pathFromLine: $,
                linePaths: v,
                linePath: D,
                areaPath: U,
              };
            },
          },
          {
            key: "_handleMarkersAndLabels",
            value: function (t) {
              var l = t.type,
                r = t.pointsPos,
                s = t.isRangeStart,
                a = t.i,
                o = t.j,
                h = t.realIndex,
                d = this.w,
                p = new Gt(this.ctx);
              if (this.pointsChart)
                this.scatter.draw(this.elSeries, o, {
                  realIndex: h,
                  pointsPos: r,
                  zRatio: this.zRatio,
                  elParent: this.elPointsMain,
                });
              else {
                d.globals.series[a].length > 1 &&
                  this.elPointsMain.node.classList.add(
                    "apexcharts-element-hidden",
                  );
                var m = this.markers.plotChartMarkers(r, h, o + 1);
                m !== null && this.elPointsMain.add(m);
              }
              var x = p.drawDataLabel({
                type: l,
                isRangeStart: s,
                pos: r,
                i: h,
                j: o + 1,
              });
              x !== null && this.elDataLabelsWrap.add(x);
            },
          },
          {
            key: "_createPaths",
            value: function (t) {
              var l = t.type,
                r = t.series,
                s = t.i,
                a = t.realIndex,
                o = t.j,
                h = t.x,
                d = t.y,
                p = t.y2,
                m = t.pX,
                x = t.pY,
                v = t.linePath,
                w = t.areaPath,
                S = t.linePaths,
                A = t.areaPaths,
                P = t.seriesIndex,
                R = t.isRangeStart,
                O = this.w,
                f = new Z(this.ctx),
                y = O.config.stroke.curve,
                C = this.areaBottomY;
              if (
                (Array.isArray(O.config.stroke.curve) &&
                  (y = Array.isArray(P)
                    ? O.config.stroke.curve[P[s]]
                    : O.config.stroke.curve[s]),
                y === "smooth")
              ) {
                var M = 0.35 * (h - m);
                O.globals.hasNullValues
                  ? (r[s][o] !== null &&
                      (r[s][o + 1] !== null
                        ? ((v =
                            f.move(m, x) +
                            f.curve(m + M, x, h - M, d, h + 1, d)),
                          (w =
                            f.move(m + 1, x) +
                            f.curve(m + M, x, h - M, d, h + 1, d) +
                            f.line(h, C) +
                            f.line(m, C) +
                            "z"))
                        : ((v = f.move(m, x)), (w = f.move(m, x) + "z"))),
                    S.push(v),
                    A.push(w))
                  : ((v += f.curve(m + M, x, h - M, d, h, d)),
                    (w += f.curve(m + M, x, h - M, d, h, d))),
                  (m = h),
                  (x = d),
                  o === r[s].length - 2 &&
                    ((w = w + f.curve(m, x, h, d, h, C) + f.move(h, d) + "z"),
                    l === "rangeArea" && R
                      ? (v = v + f.curve(m, x, h, d, h, p) + f.move(h, p) + "z")
                      : O.globals.hasNullValues || (S.push(v), A.push(w)));
              } else {
                if (r[s][o + 1] === null) {
                  v += f.move(h, d);
                  var z = O.globals.isXNumeric
                    ? (O.globals.seriesX[a][o] - O.globals.minX) / this.xRatio
                    : h - this.xDivision;
                  w = w + f.line(z, C) + f.move(h, d) + "z";
                }
                r[s][o] === null && ((v += f.move(h, d)), (w += f.move(h, C))),
                  y === "stepline"
                    ? ((v = v + f.line(h, null, "H") + f.line(null, d, "V")),
                      (w = w + f.line(h, null, "H") + f.line(null, d, "V")))
                    : y === "straight" &&
                      ((v += f.line(h, d)), (w += f.line(h, d))),
                  o === r[s].length - 2 &&
                    ((w = w + f.line(h, C) + f.move(h, d) + "z"),
                    l === "rangeArea" && R
                      ? (v = v + f.line(h, p) + f.move(h, p) + "z")
                      : (S.push(v), A.push(w)));
              }
              return {
                linePaths: S,
                areaPaths: A,
                pX: m,
                pY: x,
                linePath: v,
                areaPath: w,
              };
            },
          },
          {
            key: "handleNullDataPoints",
            value: function (t, l, r, s, a) {
              var o = this.w;
              if (
                (t[r][s] === null && o.config.markers.showNullDataPoints) ||
                t[r].length === 1
              ) {
                var h = this.markers.plotChartMarkers(
                  l,
                  a,
                  s + 1,
                  this.strokeWidth - o.config.markers.strokeWidth / 2,
                  !0,
                );
                h !== null && this.elPointsMain.add(h);
              }
            },
          },
        ]),
        T
      );
    })();
  (window.TreemapSquared = {}),
    (window.TreemapSquared.generate = (function () {
      function T(h, d, p, m) {
        (this.xoffset = h),
          (this.yoffset = d),
          (this.height = m),
          (this.width = p),
          (this.shortestEdge = function () {
            return Math.min(this.height, this.width);
          }),
          (this.getCoordinates = function (x) {
            var v,
              w = [],
              S = this.xoffset,
              A = this.yoffset,
              P = a(x) / this.height,
              R = a(x) / this.width;
            if (this.width >= this.height)
              for (v = 0; v < x.length; v++)
                w.push([S, A, S + P, A + x[v] / P]), (A += x[v] / P);
            else
              for (v = 0; v < x.length; v++)
                w.push([S, A, S + x[v] / R, A + R]), (S += x[v] / R);
            return w;
          }),
          (this.cutArea = function (x) {
            var v;
            if (this.width >= this.height) {
              var w = x / this.height,
                S = this.width - w;
              v = new T(this.xoffset + w, this.yoffset, S, this.height);
            } else {
              var A = x / this.width,
                P = this.height - A;
              v = new T(this.xoffset, this.yoffset + A, this.width, P);
            }
            return v;
          });
      }
      function t(h, d, p, m, x) {
        (m = m === void 0 ? 0 : m), (x = x === void 0 ? 0 : x);
        var v = l(
          (function (w, S) {
            var A,
              P = [],
              R = S / a(w);
            for (A = 0; A < w.length; A++) P[A] = w[A] * R;
            return P;
          })(h, d * p),
          [],
          new T(m, x, d, p),
          [],
        );
        return (function (w) {
          var S,
            A,
            P = [];
          for (S = 0; S < w.length; S++)
            for (A = 0; A < w[S].length; A++) P.push(w[S][A]);
          return P;
        })(v);
      }
      function l(h, d, p, m) {
        var x, v, w;
        if (h.length !== 0)
          return (
            (x = p.shortestEdge()),
            (function (S, A, P) {
              var R;
              if (S.length === 0) return !0;
              (R = S.slice()).push(A);
              var O = r(S, P),
                f = r(R, P);
              return O >= f;
            })(d, (v = h[0]), x)
              ? (d.push(v), l(h.slice(1), d, p, m))
              : ((w = p.cutArea(a(d), m)),
                m.push(p.getCoordinates(d)),
                l(h, [], w, m)),
            m
          );
        m.push(p.getCoordinates(d));
      }
      function r(h, d) {
        var p = Math.min.apply(Math, h),
          m = Math.max.apply(Math, h),
          x = a(h);
        return Math.max(
          (Math.pow(d, 2) * m) / Math.pow(x, 2),
          Math.pow(x, 2) / (Math.pow(d, 2) * p),
        );
      }
      function s(h) {
        return h && h.constructor === Array;
      }
      function a(h) {
        var d,
          p = 0;
        for (d = 0; d < h.length; d++) p += h[d];
        return p;
      }
      function o(h) {
        var d,
          p = 0;
        if (s(h[0])) for (d = 0; d < h.length; d++) p += o(h[d]);
        else p = a(h);
        return p;
      }
      return function h(d, p, m, x, v) {
        (x = x === void 0 ? 0 : x), (v = v === void 0 ? 0 : v);
        var w,
          S,
          A = [],
          P = [];
        if (s(d[0])) {
          for (S = 0; S < d.length; S++) A[S] = o(d[S]);
          for (w = t(A, p, m, x, v), S = 0; S < d.length; S++)
            P.push(
              h(d[S], w[S][2] - w[S][0], w[S][3] - w[S][1], w[S][0], w[S][1]),
            );
        } else P = t(d, p, m, x, v);
        return P;
      };
    })());
  var yi,
    ts,
    Hp = (function () {
      function T(t, l) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.strokeWidth = this.w.config.stroke.width),
          (this.helpers = new ch(t)),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.labels = []);
      }
      return (
        k(T, [
          {
            key: "draw",
            value: function (t) {
              var l = this,
                r = this.w,
                s = new Z(this.ctx),
                a = new Te(this.ctx),
                o = s.group({ class: "apexcharts-treemap" });
              if (r.globals.noData) return o;
              var h = [];
              return (
                t.forEach(function (d) {
                  var p = d.map(function (m) {
                    return Math.abs(m);
                  });
                  h.push(p);
                }),
                (this.negRange = this.helpers.checkColorRange()),
                r.config.series.forEach(function (d, p) {
                  d.data.forEach(function (m) {
                    Array.isArray(l.labels[p]) || (l.labels[p] = []),
                      l.labels[p].push(m.x);
                  });
                }),
                window.TreemapSquared.generate(
                  h,
                  r.globals.gridWidth,
                  r.globals.gridHeight,
                ).forEach(function (d, p) {
                  var m = s.group({
                    class: "apexcharts-series apexcharts-treemap-series",
                    seriesName: L.escapeString(r.globals.seriesNames[p]),
                    rel: p + 1,
                    "data:realIndex": p,
                  });
                  if (r.config.chart.dropShadow.enabled) {
                    var x = r.config.chart.dropShadow;
                    new te(l.ctx).dropShadow(o, x, p);
                  }
                  var v = s.group({ class: "apexcharts-data-labels" });
                  d.forEach(function (w, S) {
                    var A = w[0],
                      P = w[1],
                      R = w[2],
                      O = w[3],
                      f = s.drawRect(
                        A,
                        P,
                        R - A,
                        O - P,
                        0,
                        "#fff",
                        1,
                        l.strokeWidth,
                        r.config.plotOptions.treemap.useFillColorAsStroke
                          ? C
                          : r.globals.stroke.colors[p],
                      );
                    f.attr({
                      cx: A,
                      cy: P,
                      index: p,
                      i: p,
                      j: S,
                      width: R - A,
                      height: O - P,
                    });
                    var y = l.helpers.getShadeColor(
                        r.config.chart.type,
                        p,
                        S,
                        l.negRange,
                      ),
                      C = y.color;
                    r.config.series[p].data[S] !== void 0 &&
                      r.config.series[p].data[S].fillColor &&
                      (C = r.config.series[p].data[S].fillColor);
                    var M = a.fillPath({
                      color: C,
                      seriesNumber: p,
                      dataPointIndex: S,
                    });
                    f.node.classList.add("apexcharts-treemap-rect"),
                      f.attr({ fill: M }),
                      l.helpers.addListeners(f);
                    var z = {
                        x: A + (R - A) / 2,
                        y: P + (O - P) / 2,
                        width: 0,
                        height: 0,
                      },
                      D = { x: A, y: P, width: R - A, height: O - P };
                    if (
                      r.config.chart.animations.enabled &&
                      !r.globals.dataChanged
                    ) {
                      var U = 1;
                      r.globals.resized ||
                        (U = r.config.chart.animations.speed),
                        l.animateTreemap(f, z, D, U);
                    }
                    if (r.globals.dataChanged) {
                      var $ = 1;
                      l.dynamicAnim.enabled &&
                        r.globals.shouldAnimate &&
                        (($ = l.dynamicAnim.speed),
                        r.globals.previousPaths[p] &&
                          r.globals.previousPaths[p][S] &&
                          r.globals.previousPaths[p][S].rect &&
                          (z = r.globals.previousPaths[p][S].rect),
                        l.animateTreemap(f, z, D, $));
                    }
                    var le = l.getFontSize(w),
                      ne = r.config.dataLabels.formatter(l.labels[p][S], {
                        value: r.globals.series[p][S],
                        seriesIndex: p,
                        dataPointIndex: S,
                        w: r,
                      }),
                      se = l.helpers.calculateDataLabels({
                        text: ne,
                        x: (A + R) / 2,
                        y: (P + O) / 2 + l.strokeWidth / 2 + le / 3,
                        i: p,
                        j: S,
                        colorProps: y,
                        fontSize: le,
                        series: t,
                      });
                    r.config.dataLabels.enabled &&
                      se &&
                      l.rotateToFitLabel(se, le, ne, A, P, R, O),
                      m.add(f),
                      se !== null && m.add(se);
                  }),
                    m.add(v),
                    o.add(m);
                }),
                o
              );
            },
          },
          {
            key: "getFontSize",
            value: function (t) {
              var l = this.w,
                r,
                s,
                a,
                o,
                h =
                  (function d(p) {
                    var m,
                      x = 0;
                    if (Array.isArray(p[0]))
                      for (m = 0; m < p.length; m++) x += d(p[m]);
                    else for (m = 0; m < p.length; m++) x += p[m].length;
                    return x;
                  })(this.labels) /
                  (function d(p) {
                    var m,
                      x = 0;
                    if (Array.isArray(p[0]))
                      for (m = 0; m < p.length; m++) x += d(p[m]);
                    else for (m = 0; m < p.length; m++) x += 1;
                    return x;
                  })(this.labels);
              return (
                (r = t[2] - t[0]),
                (s = t[3] - t[1]),
                (a = r * s),
                (o = Math.pow(a, 0.5)),
                Math.min(
                  o / h,
                  parseInt(l.config.dataLabels.style.fontSize, 10),
                )
              );
            },
          },
          {
            key: "rotateToFitLabel",
            value: function (t, l, r, s, a, o, h) {
              var d = new Z(this.ctx),
                p = d.getTextRects(r, l);
              if (
                p.width + this.w.config.stroke.width + 5 > o - s &&
                p.width <= h - a
              ) {
                var m = d.rotateAroundCenter(t.node);
                t.node.setAttribute(
                  "transform",
                  "rotate(-90 ".concat(m.x, " ").concat(m.y, ")"),
                );
              }
            },
          },
          {
            key: "animateTreemap",
            value: function (t, l, r, s) {
              var a = new W(this.ctx);
              a.animateRect(
                t,
                { x: l.x, y: l.y, width: l.width, height: l.height },
                { x: r.x, y: r.y, width: r.width, height: r.height },
                s,
                function () {
                  a.animationCompleted(t);
                },
              );
            },
          },
        ]),
        T
      );
    })(),
    Yp = 86400,
    Bp = (function () {
      function T(t) {
        g(this, T),
          (this.ctx = t),
          (this.w = t.w),
          (this.timeScaleArray = []),
          (this.utc = this.w.config.xaxis.labels.datetimeUTC);
      }
      return (
        k(T, [
          {
            key: "calculateTimeScaleTicks",
            value: function (t, l) {
              var r = this,
                s = this.w;
              if (s.globals.allSeriesCollapsed)
                return (
                  (s.globals.labels = []), (s.globals.timescaleLabels = []), []
                );
              var a = new Ze(this.ctx),
                o = (l - t) / 864e5;
              this.determineInterval(o),
                (s.globals.disableZoomIn = !1),
                (s.globals.disableZoomOut = !1),
                o < 0.00011574074074074075
                  ? (s.globals.disableZoomIn = !0)
                  : o > 5e4 && (s.globals.disableZoomOut = !0);
              var h = a.getTimeUnitsfromTimestamp(t, l, this.utc),
                d = s.globals.gridWidth / o,
                p = d / 24,
                m = p / 60,
                x = m / 60,
                v = Math.floor(24 * o),
                w = Math.floor(1440 * o),
                S = Math.floor(o * Yp),
                A = Math.floor(o),
                P = Math.floor(o / 30),
                R = Math.floor(o / 365),
                O = {
                  minMillisecond: h.minMillisecond,
                  minSecond: h.minSecond,
                  minMinute: h.minMinute,
                  minHour: h.minHour,
                  minDate: h.minDate,
                  minMonth: h.minMonth,
                  minYear: h.minYear,
                },
                f = {
                  firstVal: O,
                  currentMillisecond: O.minMillisecond,
                  currentSecond: O.minSecond,
                  currentMinute: O.minMinute,
                  currentHour: O.minHour,
                  currentMonthDate: O.minDate,
                  currentDate: O.minDate,
                  currentMonth: O.minMonth,
                  currentYear: O.minYear,
                  daysWidthOnXAxis: d,
                  hoursWidthOnXAxis: p,
                  minutesWidthOnXAxis: m,
                  secondsWidthOnXAxis: x,
                  numberOfSeconds: S,
                  numberOfMinutes: w,
                  numberOfHours: v,
                  numberOfDays: A,
                  numberOfMonths: P,
                  numberOfYears: R,
                };
              switch (this.tickInterval) {
                case "years":
                  this.generateYearScale(f);
                  break;
                case "months":
                case "half_year":
                  this.generateMonthScale(f);
                  break;
                case "months_days":
                case "months_fortnight":
                case "days":
                case "week_days":
                  this.generateDayScale(f);
                  break;
                case "hours":
                  this.generateHourScale(f);
                  break;
                case "minutes_fives":
                case "minutes":
                  this.generateMinuteScale(f);
                  break;
                case "seconds_tens":
                case "seconds_fives":
                case "seconds":
                  this.generateSecondScale(f);
              }
              var y = this.timeScaleArray.map(function (C) {
                var M = {
                  position: C.position,
                  unit: C.unit,
                  year: C.year,
                  day: C.day ? C.day : 1,
                  hour: C.hour ? C.hour : 0,
                  month: C.month + 1,
                };
                return C.unit === "month"
                  ? c(c({}, M), {}, { day: 1, value: C.value + 1 })
                  : C.unit === "day" || C.unit === "hour"
                    ? c(c({}, M), {}, { value: C.value })
                    : C.unit === "minute"
                      ? c(c({}, M), {}, { value: C.value, minute: C.value })
                      : C.unit === "second"
                        ? c(
                            c({}, M),
                            {},
                            {
                              value: C.value,
                              minute: C.minute,
                              second: C.second,
                            },
                          )
                        : C;
              });
              return y.filter(function (C) {
                var M = 1,
                  z = Math.ceil(s.globals.gridWidth / 120),
                  D = C.value;
                s.config.xaxis.tickAmount !== void 0 &&
                  (z = s.config.xaxis.tickAmount),
                  y.length > z && (M = Math.floor(y.length / z));
                var U = !1,
                  $ = !1;
                switch (r.tickInterval) {
                  case "years":
                    C.unit === "year" && (U = !0);
                    break;
                  case "half_year":
                    (M = 7), C.unit === "year" && (U = !0);
                    break;
                  case "months":
                    (M = 1), C.unit === "year" && (U = !0);
                    break;
                  case "months_fortnight":
                    (M = 15),
                      (C.unit !== "year" && C.unit !== "month") || (U = !0),
                      D === 30 && ($ = !0);
                    break;
                  case "months_days":
                    (M = 10),
                      C.unit === "month" && (U = !0),
                      D === 30 && ($ = !0);
                    break;
                  case "week_days":
                    (M = 8), C.unit === "month" && (U = !0);
                    break;
                  case "days":
                    (M = 1), C.unit === "month" && (U = !0);
                    break;
                  case "hours":
                    C.unit === "day" && (U = !0);
                    break;
                  case "minutes_fives":
                  case "seconds_fives":
                    D % 5 != 0 && ($ = !0);
                    break;
                  case "seconds_tens":
                    D % 10 != 0 && ($ = !0);
                }
                if (
                  r.tickInterval === "hours" ||
                  r.tickInterval === "minutes_fives" ||
                  r.tickInterval === "seconds_tens" ||
                  r.tickInterval === "seconds_fives"
                ) {
                  if (!$) return !0;
                } else if ((D % M == 0 || U) && !$) return !0;
              });
            },
          },
          {
            key: "recalcDimensionsBasedOnFormat",
            value: function (t, l) {
              var r = this.w,
                s = this.formatDates(t),
                a = this.removeOverlappingTS(s);
              (r.globals.timescaleLabels = a.slice()),
                new gl(this.ctx).plotCoords();
            },
          },
          {
            key: "determineInterval",
            value: function (t) {
              var l = 24 * t,
                r = 60 * l;
              switch (!0) {
                case t / 365 > 5:
                  this.tickInterval = "years";
                  break;
                case t > 800:
                  this.tickInterval = "half_year";
                  break;
                case t > 180:
                  this.tickInterval = "months";
                  break;
                case t > 90:
                  this.tickInterval = "months_fortnight";
                  break;
                case t > 60:
                  this.tickInterval = "months_days";
                  break;
                case t > 30:
                  this.tickInterval = "week_days";
                  break;
                case t > 2:
                  this.tickInterval = "days";
                  break;
                case l > 2.4:
                  this.tickInterval = "hours";
                  break;
                case r > 15:
                  this.tickInterval = "minutes_fives";
                  break;
                case r > 5:
                  this.tickInterval = "minutes";
                  break;
                case r > 1:
                  this.tickInterval = "seconds_tens";
                  break;
                case 60 * r > 20:
                  this.tickInterval = "seconds_fives";
                  break;
                default:
                  this.tickInterval = "seconds";
              }
            },
          },
          {
            key: "generateYearScale",
            value: function (t) {
              var l = t.firstVal,
                r = t.currentMonth,
                s = t.currentYear,
                a = t.daysWidthOnXAxis,
                o = t.numberOfYears,
                h = l.minYear,
                d = 0,
                p = new Ze(this.ctx),
                m = "year";
              if (l.minDate > 1 || l.minMonth > 0) {
                var x = p.determineRemainingDaysOfYear(
                  l.minYear,
                  l.minMonth,
                  l.minDate,
                );
                (d = (p.determineDaysOfYear(l.minYear) - x + 1) * a),
                  (h = l.minYear + 1),
                  this.timeScaleArray.push({
                    position: d,
                    value: h,
                    unit: m,
                    year: h,
                    month: L.monthMod(r + 1),
                  });
              } else
                l.minDate === 1 &&
                  l.minMonth === 0 &&
                  this.timeScaleArray.push({
                    position: d,
                    value: h,
                    unit: m,
                    year: s,
                    month: L.monthMod(r + 1),
                  });
              for (var v = h, w = d, S = 0; S < o; S++)
                v++,
                  (w = p.determineDaysOfYear(v - 1) * a + w),
                  this.timeScaleArray.push({
                    position: w,
                    value: v,
                    unit: m,
                    year: v,
                    month: 1,
                  });
            },
          },
          {
            key: "generateMonthScale",
            value: function (t) {
              var l = t.firstVal,
                r = t.currentMonthDate,
                s = t.currentMonth,
                a = t.currentYear,
                o = t.daysWidthOnXAxis,
                h = t.numberOfMonths,
                d = s,
                p = 0,
                m = new Ze(this.ctx),
                x = "month",
                v = 0;
              if (l.minDate > 1) {
                (p = (m.determineDaysOfMonths(s + 1, l.minYear) - r + 1) * o),
                  (d = L.monthMod(s + 1));
                var w = a + v,
                  S = L.monthMod(d),
                  A = d;
                d === 0 && ((x = "year"), (A = w), (S = 1), (w += v += 1)),
                  this.timeScaleArray.push({
                    position: p,
                    value: A,
                    unit: x,
                    year: w,
                    month: S,
                  });
              } else
                this.timeScaleArray.push({
                  position: p,
                  value: d,
                  unit: x,
                  year: a,
                  month: L.monthMod(s),
                });
              for (var P = d + 1, R = p, O = 0, f = 1; O < h; O++, f++) {
                (P = L.monthMod(P)) === 0
                  ? ((x = "year"), (v += 1))
                  : (x = "month");
                var y = this._getYear(a, P, v);
                R = m.determineDaysOfMonths(P, y) * o + R;
                var C = P === 0 ? y : P;
                this.timeScaleArray.push({
                  position: R,
                  value: C,
                  unit: x,
                  year: y,
                  month: P === 0 ? 1 : P,
                }),
                  P++;
              }
            },
          },
          {
            key: "generateDayScale",
            value: function (t) {
              var l = t.firstVal,
                r = t.currentMonth,
                s = t.currentYear,
                a = t.hoursWidthOnXAxis,
                o = t.numberOfDays,
                h = new Ze(this.ctx),
                d = "day",
                p = l.minDate + 1,
                m = p,
                x = function (f, y, C) {
                  return (
                    f > h.determineDaysOfMonths(y + 1, C) &&
                      ((m = 1), (d = "month"), (w = y += 1)),
                    y
                  );
                },
                v = (24 - l.minHour) * a,
                w = p,
                S = x(m, r, s);
              l.minHour === 0 && l.minDate === 1
                ? ((v = 0),
                  (w = L.monthMod(l.minMonth)),
                  (d = "month"),
                  (m = l.minDate),
                  o++)
                : l.minDate !== 1 &&
                  l.minHour === 0 &&
                  l.minMinute === 0 &&
                  ((v = 0), (p = l.minDate), (w = p), (S = x((m = p), r, s))),
                this.timeScaleArray.push({
                  position: v,
                  value: w,
                  unit: d,
                  year: this._getYear(s, S, 0),
                  month: L.monthMod(S),
                  day: m,
                });
              for (var A = v, P = 0; P < o; P++) {
                (d = "day"), (S = x((m += 1), S, this._getYear(s, S, 0)));
                var R = this._getYear(s, S, 0);
                A = 24 * a + A;
                var O = m === 1 ? L.monthMod(S) : m;
                this.timeScaleArray.push({
                  position: A,
                  value: O,
                  unit: d,
                  year: R,
                  month: L.monthMod(S),
                  day: O,
                });
              }
            },
          },
          {
            key: "generateHourScale",
            value: function (t) {
              var l = t.firstVal,
                r = t.currentDate,
                s = t.currentMonth,
                a = t.currentYear,
                o = t.minutesWidthOnXAxis,
                h = t.numberOfHours,
                d = new Ze(this.ctx),
                p = "hour",
                m = function (M, z) {
                  return (
                    M > d.determineDaysOfMonths(z + 1, a) &&
                      ((P = 1), (z += 1)),
                    { month: z, date: P }
                  );
                },
                x = function (M, z) {
                  return M > d.determineDaysOfMonths(z + 1, a) ? (z += 1) : z;
                },
                v = 60 - (l.minMinute + l.minSecond / 60),
                w = v * o,
                S = l.minHour + 1,
                A = S + 1;
              v === 60 && ((w = 0), (A = (S = l.minHour) + 1));
              var P = r,
                R = x(P, s);
              this.timeScaleArray.push({
                position: w,
                value: S,
                unit: p,
                day: P,
                hour: A,
                year: a,
                month: L.monthMod(R),
              });
              for (var O = w, f = 0; f < h; f++) {
                (p = "hour"),
                  A >= 24 &&
                    ((A = 0),
                    (p = "day"),
                    (R = m((P += 1), R).month),
                    (R = x(P, R)));
                var y = this._getYear(a, R, 0);
                O = 60 * o + O;
                var C = A === 0 ? P : A;
                this.timeScaleArray.push({
                  position: O,
                  value: C,
                  unit: p,
                  hour: A,
                  day: P,
                  year: y,
                  month: L.monthMod(R),
                }),
                  A++;
              }
            },
          },
          {
            key: "generateMinuteScale",
            value: function (t) {
              for (
                var l = t.currentMillisecond,
                  r = t.currentSecond,
                  s = t.currentMinute,
                  a = t.currentHour,
                  o = t.currentDate,
                  h = t.currentMonth,
                  d = t.currentYear,
                  p = t.minutesWidthOnXAxis,
                  m = t.secondsWidthOnXAxis,
                  x = t.numberOfMinutes,
                  v = s + 1,
                  w = o,
                  S = h,
                  A = d,
                  P = a,
                  R = (60 - r - l / 1e3) * m,
                  O = 0;
                O < x;
                O++
              )
                v >= 60 && ((v = 0), (P += 1) === 24 && (P = 0)),
                  this.timeScaleArray.push({
                    position: R,
                    value: v,
                    unit: "minute",
                    hour: P,
                    minute: v,
                    day: w,
                    year: this._getYear(A, S, 0),
                    month: L.monthMod(S),
                  }),
                  (R += p),
                  v++;
            },
          },
          {
            key: "generateSecondScale",
            value: function (t) {
              for (
                var l = t.currentMillisecond,
                  r = t.currentSecond,
                  s = t.currentMinute,
                  a = t.currentHour,
                  o = t.currentDate,
                  h = t.currentMonth,
                  d = t.currentYear,
                  p = t.secondsWidthOnXAxis,
                  m = t.numberOfSeconds,
                  x = r + 1,
                  v = s,
                  w = o,
                  S = h,
                  A = d,
                  P = a,
                  R = ((1e3 - l) / 1e3) * p,
                  O = 0;
                O < m;
                O++
              )
                x >= 60 &&
                  ((x = 0), ++v >= 60 && ((v = 0), ++P === 24 && (P = 0))),
                  this.timeScaleArray.push({
                    position: R,
                    value: x,
                    unit: "second",
                    hour: P,
                    minute: v,
                    second: x,
                    day: w,
                    year: this._getYear(A, S, 0),
                    month: L.monthMod(S),
                  }),
                  (R += p),
                  x++;
            },
          },
          {
            key: "createRawDateString",
            value: function (t, l) {
              var r = t.year;
              return (
                t.month === 0 && (t.month = 1),
                (r += "-" + ("0" + t.month.toString()).slice(-2)),
                t.unit === "day"
                  ? (r += t.unit === "day" ? "-" + ("0" + l).slice(-2) : "-01")
                  : (r += "-" + ("0" + (t.day ? t.day : "1")).slice(-2)),
                t.unit === "hour"
                  ? (r += t.unit === "hour" ? "T" + ("0" + l).slice(-2) : "T00")
                  : (r += "T" + ("0" + (t.hour ? t.hour : "0")).slice(-2)),
                t.unit === "minute"
                  ? (r += ":" + ("0" + l).slice(-2))
                  : (r += ":" + (t.minute ? ("0" + t.minute).slice(-2) : "00")),
                t.unit === "second"
                  ? (r += ":" + ("0" + l).slice(-2))
                  : (r += ":00"),
                this.utc && (r += ".000Z"),
                r
              );
            },
          },
          {
            key: "formatDates",
            value: function (t) {
              var l = this,
                r = this.w;
              return t.map(function (s) {
                var a = s.value.toString(),
                  o = new Ze(l.ctx),
                  h = l.createRawDateString(s, a),
                  d = o.getDate(o.parseDate(h));
                if (
                  (l.utc || (d = o.getDate(o.parseDateWithTimezone(h))),
                  r.config.xaxis.labels.format === void 0)
                ) {
                  var p = "dd MMM",
                    m = r.config.xaxis.labels.datetimeFormatter;
                  s.unit === "year" && (p = m.year),
                    s.unit === "month" && (p = m.month),
                    s.unit === "day" && (p = m.day),
                    s.unit === "hour" && (p = m.hour),
                    s.unit === "minute" && (p = m.minute),
                    s.unit === "second" && (p = m.second),
                    (a = o.formatDate(d, p));
                } else a = o.formatDate(d, r.config.xaxis.labels.format);
                return {
                  dateString: h,
                  position: s.position,
                  value: a,
                  unit: s.unit,
                  year: s.year,
                  month: s.month,
                };
              });
            },
          },
          {
            key: "removeOverlappingTS",
            value: function (t) {
              var l,
                r = this,
                s = new Z(this.ctx),
                a = !1;
              t.length > 0 &&
                t[0].value &&
                t.every(function (d) {
                  return d.value.length === t[0].value.length;
                }) &&
                ((a = !0), (l = s.getTextRects(t[0].value).width));
              var o = 0,
                h = t.map(function (d, p) {
                  if (p > 0 && r.w.config.xaxis.labels.hideOverlappingLabels) {
                    var m = a ? l : s.getTextRects(t[o].value).width,
                      x = t[o].position;
                    return d.position > x + m + 10 ? ((o = p), d) : null;
                  }
                  return d;
                });
              return (h = h.filter(function (d) {
                return d !== null;
              }));
            },
          },
          {
            key: "_getYear",
            value: function (t, l, r) {
              return t + Math.floor(l / 12) + r;
            },
          },
        ]),
        T
      );
    })(),
    Wp = (function () {
      function T(t, l) {
        g(this, T), (this.ctx = l), (this.w = l.w), (this.el = t);
      }
      return (
        k(T, [
          {
            key: "setupElements",
            value: function () {
              var t = this.w.globals,
                l = this.w.config,
                r = l.chart.type;
              (t.axisCharts =
                [
                  "line",
                  "area",
                  "bar",
                  "rangeBar",
                  "rangeArea",
                  "candlestick",
                  "boxPlot",
                  "scatter",
                  "bubble",
                  "radar",
                  "heatmap",
                  "treemap",
                ].indexOf(r) > -1),
                (t.xyCharts =
                  [
                    "line",
                    "area",
                    "bar",
                    "rangeBar",
                    "rangeArea",
                    "candlestick",
                    "boxPlot",
                    "scatter",
                    "bubble",
                  ].indexOf(r) > -1),
                (t.isBarHorizontal =
                  (l.chart.type === "bar" ||
                    l.chart.type === "rangeBar" ||
                    l.chart.type === "boxPlot") &&
                  l.plotOptions.bar.horizontal),
                (t.chartClass = ".apexcharts" + t.chartID),
                (t.dom.baseEl = this.el),
                (t.dom.elWrap = document.createElement("div")),
                Z.setAttrs(t.dom.elWrap, {
                  id: t.chartClass.substring(1),
                  class: "apexcharts-canvas " + t.chartClass.substring(1),
                }),
                this.el.appendChild(t.dom.elWrap),
                (t.dom.Paper = new window.SVG.Doc(t.dom.elWrap)),
                t.dom.Paper.attr({
                  class: "apexcharts-svg",
                  "xmlns:data": "ApexChartsNS",
                  transform: "translate("
                    .concat(l.chart.offsetX, ", ")
                    .concat(l.chart.offsetY, ")"),
                }),
                (t.dom.Paper.node.style.background = l.chart.background),
                this.setSVGDimensions(),
                (t.dom.elLegendForeign = document.createElementNS(
                  t.SVGNS,
                  "foreignObject",
                )),
                Z.setAttrs(t.dom.elLegendForeign, {
                  x: 0,
                  y: 0,
                  width: t.svgWidth,
                  height: t.svgHeight,
                }),
                (t.dom.elLegendWrap = document.createElement("div")),
                t.dom.elLegendWrap.classList.add("apexcharts-legend"),
                t.dom.elLegendWrap.setAttribute(
                  "xmlns",
                  "http://www.w3.org/1999/xhtml",
                ),
                t.dom.elLegendForeign.appendChild(t.dom.elLegendWrap),
                t.dom.Paper.node.appendChild(t.dom.elLegendForeign),
                (t.dom.elGraphical = t.dom.Paper.group().attr({
                  class: "apexcharts-inner apexcharts-graphical",
                })),
                (t.dom.elDefs = t.dom.Paper.defs()),
                t.dom.Paper.add(t.dom.elGraphical),
                t.dom.elGraphical.add(t.dom.elDefs);
            },
          },
          {
            key: "plotChartType",
            value: function (t, l) {
              var r = this.w,
                s = r.config,
                a = r.globals,
                o = { series: [], i: [] },
                h = { series: [], i: [] },
                d = { series: [], i: [] },
                p = { series: [], i: [] },
                m = { series: [], i: [] },
                x = { series: [], i: [] },
                v = { series: [], i: [] },
                w = { series: [], i: [] },
                S = { series: [], seriesRangeEnd: [], i: [] };
              a.series.map(function (z, D) {
                var U = 0;
                t[D].type !== void 0
                  ? (t[D].type === "column" || t[D].type === "bar"
                      ? (a.series.length > 1 &&
                          s.plotOptions.bar.horizontal &&
                          console.warn(
                            "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`",
                          ),
                        m.series.push(z),
                        m.i.push(D),
                        U++,
                        (r.globals.columnSeries = m.series))
                      : t[D].type === "area"
                        ? (h.series.push(z), h.i.push(D), U++)
                        : t[D].type === "line"
                          ? (o.series.push(z), o.i.push(D), U++)
                          : t[D].type === "scatter"
                            ? (d.series.push(z), d.i.push(D))
                            : t[D].type === "bubble"
                              ? (p.series.push(z), p.i.push(D), U++)
                              : t[D].type === "candlestick"
                                ? (x.series.push(z), x.i.push(D), U++)
                                : t[D].type === "boxPlot"
                                  ? (v.series.push(z), v.i.push(D), U++)
                                  : t[D].type === "rangeBar"
                                    ? (w.series.push(z), w.i.push(D), U++)
                                    : t[D].type === "rangeArea"
                                      ? (S.series.push(a.seriesRangeStart[D]),
                                        S.seriesRangeEnd.push(
                                          a.seriesRangeEnd[D],
                                        ),
                                        S.i.push(D),
                                        U++)
                                      : console.warn(
                                          "You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea",
                                        ),
                    U > 1 && (a.comboCharts = !0))
                  : (o.series.push(z), o.i.push(D));
              });
              var A = new Xa(this.ctx, l),
                P = new ja(this.ctx, l);
              this.ctx.pie = new uh(this.ctx);
              var R = new _p(this.ctx);
              this.ctx.rangeBar = new jp(this.ctx, l);
              var O = new Dp(this.ctx),
                f = [];
              if (a.comboCharts) {
                if (
                  (h.series.length > 0 && f.push(A.draw(h.series, "area", h.i)),
                  m.series.length > 0)
                )
                  if (r.config.chart.stacked) {
                    var y = new oh(this.ctx, l);
                    f.push(y.draw(m.series, m.i));
                  } else
                    (this.ctx.bar = new Ui(this.ctx, l)),
                      f.push(this.ctx.bar.draw(m.series, m.i));
                if (
                  (S.series.length > 0 &&
                    f.push(
                      A.draw(S.series, "rangeArea", S.i, S.seriesRangeEnd),
                    ),
                  o.series.length > 0 && f.push(A.draw(o.series, "line", o.i)),
                  x.series.length > 0 &&
                    f.push(P.draw(x.series, "candlestick", x.i)),
                  v.series.length > 0 &&
                    f.push(P.draw(v.series, "boxPlot", v.i)),
                  w.series.length > 0 &&
                    f.push(this.ctx.rangeBar.draw(w.series, w.i)),
                  d.series.length > 0)
                ) {
                  var C = new Xa(this.ctx, l, !0);
                  f.push(C.draw(d.series, "scatter", d.i));
                }
                if (p.series.length > 0) {
                  var M = new Xa(this.ctx, l, !0);
                  f.push(M.draw(p.series, "bubble", p.i));
                }
              } else
                switch (s.chart.type) {
                  case "line":
                    f = A.draw(a.series, "line");
                    break;
                  case "area":
                    f = A.draw(a.series, "area");
                    break;
                  case "bar":
                    s.chart.stacked
                      ? (f = new oh(this.ctx, l).draw(a.series))
                      : ((this.ctx.bar = new Ui(this.ctx, l)),
                        (f = this.ctx.bar.draw(a.series)));
                    break;
                  case "candlestick":
                    f = new ja(this.ctx, l).draw(a.series, "candlestick");
                    break;
                  case "boxPlot":
                    f = new ja(this.ctx, l).draw(a.series, s.chart.type);
                    break;
                  case "rangeBar":
                    f = this.ctx.rangeBar.draw(a.series);
                    break;
                  case "rangeArea":
                    f = A.draw(
                      a.seriesRangeStart,
                      "rangeArea",
                      void 0,
                      a.seriesRangeEnd,
                    );
                    break;
                  case "heatmap":
                    f = new Fp(this.ctx, l).draw(a.series);
                    break;
                  case "treemap":
                    f = new Hp(this.ctx, l).draw(a.series);
                    break;
                  case "pie":
                  case "donut":
                  case "polarArea":
                    f = this.ctx.pie.draw(a.series);
                    break;
                  case "radialBar":
                    f = R.draw(a.series);
                    break;
                  case "radar":
                    f = O.draw(a.series);
                    break;
                  default:
                    f = A.draw(a.series);
                }
              return f;
            },
          },
          {
            key: "setSVGDimensions",
            value: function () {
              var t = this.w.globals,
                l = this.w.config;
              (t.svgWidth = l.chart.width), (t.svgHeight = l.chart.height);
              var r = L.getDimensions(this.el),
                s = l.chart.width
                  .toString()
                  .split(/[0-9]+/g)
                  .pop();
              s === "%"
                ? L.isNumber(r[0]) &&
                  (r[0].width === 0 &&
                    (r = L.getDimensions(this.el.parentNode)),
                  (t.svgWidth = (r[0] * parseInt(l.chart.width, 10)) / 100))
                : (s !== "px" && s !== "") ||
                  (t.svgWidth = parseInt(l.chart.width, 10));
              var a = l.chart.height
                .toString()
                .split(/[0-9]+/g)
                .pop();
              if (t.svgHeight !== "auto" && t.svgHeight !== "")
                if (a === "%") {
                  var o = L.getDimensions(this.el.parentNode);
                  t.svgHeight = (o[1] * parseInt(l.chart.height, 10)) / 100;
                } else t.svgHeight = parseInt(l.chart.height, 10);
              else
                t.axisCharts
                  ? (t.svgHeight = t.svgWidth / 1.61)
                  : (t.svgHeight = t.svgWidth / 1.2);
              if (
                (t.svgWidth < 0 && (t.svgWidth = 0),
                t.svgHeight < 0 && (t.svgHeight = 0),
                Z.setAttrs(t.dom.Paper.node, {
                  width: t.svgWidth,
                  height: t.svgHeight,
                }),
                a !== "%")
              ) {
                var h = l.chart.sparkline.enabled
                  ? 0
                  : t.axisCharts
                    ? l.chart.parentHeightOffset
                    : 0;
                t.dom.Paper.node.parentNode.parentNode.style.minHeight =
                  t.svgHeight + h + "px";
              }
              (t.dom.elWrap.style.width = t.svgWidth + "px"),
                (t.dom.elWrap.style.height = t.svgHeight + "px");
            },
          },
          {
            key: "shiftGraphPosition",
            value: function () {
              var t = this.w.globals,
                l = t.translateY,
                r = { transform: "translate(" + t.translateX + ", " + l + ")" };
              Z.setAttrs(t.dom.elGraphical.node, r);
            },
          },
          {
            key: "resizeNonAxisCharts",
            value: function () {
              var t = this.w,
                l = t.globals,
                r = 0,
                s = t.config.chart.sparkline.enabled ? 1 : 15;
              (s += t.config.grid.padding.bottom),
                (t.config.legend.position !== "top" &&
                  t.config.legend.position !== "bottom") ||
                  !t.config.legend.show ||
                  t.config.legend.floating ||
                  (r =
                    new ih(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
              var a = t.globals.dom.baseEl.querySelector(
                  ".apexcharts-radialbar, .apexcharts-pie",
                ),
                o = 2.05 * t.globals.radialSize;
              if (
                a &&
                !t.config.chart.sparkline.enabled &&
                t.config.plotOptions.radialBar.startAngle !== 0
              ) {
                var h = L.getBoundingClientRect(a);
                o = h.bottom;
                var d = h.bottom - h.top;
                o = Math.max(2.05 * t.globals.radialSize, d);
              }
              var p = o + l.translateY + r + s;
              l.dom.elLegendForeign &&
                l.dom.elLegendForeign.setAttribute("height", p),
                (t.config.chart.height &&
                  String(t.config.chart.height).indexOf("%") > 0) ||
                  ((l.dom.elWrap.style.height = p + "px"),
                  Z.setAttrs(l.dom.Paper.node, { height: p }),
                  (l.dom.Paper.node.parentNode.parentNode.style.minHeight =
                    p + "px"));
            },
          },
          {
            key: "coreCalculations",
            value: function () {
              new j(this.ctx).init();
            },
          },
          {
            key: "resetGlobals",
            value: function () {
              var t = this,
                l = function () {
                  return t.w.config.series.map(function (a) {
                    return [];
                  });
                },
                r = new Ce(),
                s = this.w.globals;
              r.initGlobalVars(s),
                (s.seriesXvalues = l()),
                (s.seriesYvalues = l());
            },
          },
          {
            key: "isMultipleY",
            value: function () {
              if (
                this.w.config.yaxis.constructor === Array &&
                this.w.config.yaxis.length > 1
              )
                return (this.w.globals.isMultipleYAxis = !0), !0;
            },
          },
          {
            key: "xySettings",
            value: function () {
              var t = null,
                l = this.w;
              if (l.globals.axisCharts) {
                if (
                  (l.config.xaxis.crosshairs.position === "back" &&
                    new xe(this.ctx).drawXCrosshairs(),
                  l.config.yaxis[0].crosshairs.position === "back" &&
                    new xe(this.ctx).drawYCrosshairs(),
                  l.config.xaxis.type === "datetime" &&
                    l.config.xaxis.labels.formatter === void 0)
                ) {
                  this.ctx.timeScale = new Bp(this.ctx);
                  var r = [];
                  isFinite(l.globals.minX) &&
                  isFinite(l.globals.maxX) &&
                  !l.globals.isBarHorizontal
                    ? (r = this.ctx.timeScale.calculateTimeScaleTicks(
                        l.globals.minX,
                        l.globals.maxX,
                      ))
                    : l.globals.isBarHorizontal &&
                      (r = this.ctx.timeScale.calculateTimeScaleTicks(
                        l.globals.minY,
                        l.globals.maxY,
                      )),
                    this.ctx.timeScale.recalcDimensionsBasedOnFormat(r);
                }
                t = new oe(this.ctx).getCalculatedRatios();
              }
              return t;
            },
          },
          {
            key: "updateSourceChart",
            value: function (t) {
              (this.ctx.w.globals.selection = void 0),
                this.ctx.updateHelpers._updateOptions(
                  {
                    chart: {
                      selection: {
                        xaxis: { min: t.w.globals.minX, max: t.w.globals.maxX },
                      },
                    },
                  },
                  !1,
                  !1,
                );
            },
          },
          {
            key: "setupBrushHandler",
            value: function () {
              var t = this,
                l = this.w;
              if (
                l.config.chart.brush.enabled &&
                typeof l.config.chart.events.selection != "function"
              ) {
                var r = l.config.chart.brush.targets || [
                  l.config.chart.brush.target,
                ];
                r.forEach(function (s) {
                  var a = ApexCharts.getChartByID(s);
                  (a.w.globals.brushSource = t.ctx),
                    typeof a.w.config.chart.events.zoomed != "function" &&
                      (a.w.config.chart.events.zoomed = function () {
                        t.updateSourceChart(a);
                      }),
                    typeof a.w.config.chart.events.scrolled != "function" &&
                      (a.w.config.chart.events.scrolled = function () {
                        t.updateSourceChart(a);
                      });
                }),
                  (l.config.chart.events.selection = function (s, a) {
                    r.forEach(function (o) {
                      var h = ApexCharts.getChartByID(o),
                        d = L.clone(l.config.yaxis);
                      if (
                        l.config.chart.brush.autoScaleYaxis &&
                        h.w.globals.series.length === 1
                      ) {
                        var p = new N(h);
                        d = p.autoScaleY(h, d, a);
                      }
                      var m = h.w.config.yaxis.reduce(function (x, v, w) {
                        return [].concat(Q(x), [
                          c(
                            c({}, h.w.config.yaxis[w]),
                            {},
                            { min: d[0].min, max: d[0].max },
                          ),
                        ]);
                      }, []);
                      h.ctx.updateHelpers._updateOptions(
                        {
                          xaxis: { min: a.xaxis.min, max: a.xaxis.max },
                          yaxis: m,
                        },
                        !1,
                        !1,
                        !1,
                        !1,
                      );
                    });
                  });
              }
            },
          },
        ]),
        T
      );
    })(),
    Vp = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "_updateOptions",
            value: function (t) {
              var l = this,
                r =
                  arguments.length > 1 &&
                  arguments[1] !== void 0 &&
                  arguments[1],
                s =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                a =
                  !(arguments.length > 3 && arguments[3] !== void 0) ||
                  arguments[3],
                o =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4];
              return new Promise(function (h) {
                var d = [l.ctx];
                a && (d = l.ctx.getSyncedCharts()),
                  l.ctx.w.globals.isExecCalled &&
                    ((d = [l.ctx]), (l.ctx.w.globals.isExecCalled = !1)),
                  d.forEach(function (p, m) {
                    var x = p.w;
                    if (
                      ((x.globals.shouldAnimate = s),
                      r ||
                        ((x.globals.resized = !0),
                        (x.globals.dataChanged = !0),
                        s && p.series.getPreviousPaths()),
                      t &&
                        u(t) === "object" &&
                        ((p.config = new we(t)),
                        (t = oe.extendArrayProps(p.config, t, x)),
                        p.w.globals.chartID !== l.ctx.w.globals.chartID &&
                          delete t.series,
                        (x.config = L.extend(x.config, t)),
                        o &&
                          ((x.globals.lastXAxis = t.xaxis
                            ? L.clone(t.xaxis)
                            : []),
                          (x.globals.lastYAxis = t.yaxis
                            ? L.clone(t.yaxis)
                            : []),
                          (x.globals.initialConfig = L.extend({}, x.config)),
                          (x.globals.initialSeries = L.clone(x.config.series)),
                          t.series)))
                    ) {
                      for (
                        var v = 0;
                        v < x.globals.collapsedSeriesIndices.length;
                        v++
                      ) {
                        var w =
                          x.config.series[x.globals.collapsedSeriesIndices[v]];
                        x.globals.collapsedSeries[v].data = x.globals.axisCharts
                          ? w.data.slice()
                          : w;
                      }
                      for (
                        var S = 0;
                        S < x.globals.ancillaryCollapsedSeriesIndices.length;
                        S++
                      ) {
                        var A =
                          x.config.series[
                            x.globals.ancillaryCollapsedSeriesIndices[S]
                          ];
                        x.globals.ancillaryCollapsedSeries[S].data = x.globals
                          .axisCharts
                          ? A.data.slice()
                          : A;
                      }
                      p.series.emptyCollapsedSeries(x.config.series);
                    }
                    return p.update(t).then(function () {
                      m === d.length - 1 && h(p);
                    });
                  });
              });
            },
          },
          {
            key: "_updateSeries",
            value: function (t, l) {
              var r = this,
                s =
                  arguments.length > 2 &&
                  arguments[2] !== void 0 &&
                  arguments[2];
              return new Promise(function (a) {
                var o,
                  h = r.w;
                return (
                  (h.globals.shouldAnimate = l),
                  (h.globals.dataChanged = !0),
                  l && r.ctx.series.getPreviousPaths(),
                  h.globals.axisCharts
                    ? ((o = t.map(function (d, p) {
                        return r._extendSeries(d, p);
                      })).length === 0 && (o = [{ data: [] }]),
                      (h.config.series = o))
                    : (h.config.series = t.slice()),
                  s &&
                    ((h.globals.initialConfig.series = L.clone(
                      h.config.series,
                    )),
                    (h.globals.initialSeries = L.clone(h.config.series))),
                  r.ctx.update().then(function () {
                    a(r.ctx);
                  })
                );
              });
            },
          },
          {
            key: "_extendSeries",
            value: function (t, l) {
              var r = this.w,
                s = r.config.series[l];
              return c(
                c({}, r.config.series[l]),
                {},
                {
                  name: t.name ? t.name : s && s.name,
                  color: t.color ? t.color : s && s.color,
                  type: t.type ? t.type : s && s.type,
                  data: t.data ? t.data : s && s.data,
                },
              );
            },
          },
          {
            key: "toggleDataPointSelection",
            value: function (t, l) {
              var r = this.w,
                s = null,
                a = ".apexcharts-series[data\\:realIndex='".concat(t, "']");
              return (
                r.globals.axisCharts
                  ? (s = r.globals.dom.Paper.select(
                      ""
                        .concat(a, " path[j='")
                        .concat(l, "'], ")
                        .concat(a, " circle[j='")
                        .concat(l, "'], ")
                        .concat(a, " rect[j='")
                        .concat(l, "']"),
                    ).members[0])
                  : l === void 0 &&
                    ((s = r.globals.dom.Paper.select(
                      "".concat(a, " path[j='").concat(t, "']"),
                    ).members[0]),
                    (r.config.chart.type !== "pie" &&
                      r.config.chart.type !== "polarArea" &&
                      r.config.chart.type !== "donut") ||
                      this.ctx.pie.pieClicked(t)),
                s
                  ? (new Z(this.ctx).pathMouseDown(s, null),
                    s.node ? s.node : null)
                  : (console.warn(
                      "toggleDataPointSelection: Element not found",
                    ),
                    null)
              );
            },
          },
          {
            key: "forceXAxisUpdate",
            value: function (t) {
              var l = this.w;
              if (
                (["min", "max"].forEach(function (s) {
                  t.xaxis[s] !== void 0 &&
                    ((l.config.xaxis[s] = t.xaxis[s]),
                    (l.globals.lastXAxis[s] = t.xaxis[s]));
                }),
                t.xaxis.categories &&
                  t.xaxis.categories.length &&
                  (l.config.xaxis.categories = t.xaxis.categories),
                l.config.xaxis.convertedCatToNumeric)
              ) {
                var r = new ge(t);
                t = r.convertCatToNumericXaxis(t, this.ctx);
              }
              return t;
            },
          },
          {
            key: "forceYAxisUpdate",
            value: function (t) {
              return (
                t.chart &&
                  t.chart.stacked &&
                  t.chart.stackType === "100%" &&
                  (Array.isArray(t.yaxis)
                    ? t.yaxis.forEach(function (l, r) {
                        (t.yaxis[r].min = 0), (t.yaxis[r].max = 100);
                      })
                    : ((t.yaxis.min = 0), (t.yaxis.max = 100))),
                t
              );
            },
          },
          {
            key: "revertDefaultAxisMinMax",
            value: function (t) {
              var l = this,
                r = this.w,
                s = r.globals.lastXAxis,
                a = r.globals.lastYAxis;
              t && t.xaxis && (s = t.xaxis),
                t && t.yaxis && (a = t.yaxis),
                (r.config.xaxis.min = s.min),
                (r.config.xaxis.max = s.max);
              var o = function (h) {
                a[h] !== void 0 &&
                  ((r.config.yaxis[h].min = a[h].min),
                  (r.config.yaxis[h].max = a[h].max));
              };
              r.config.yaxis.map(function (h, d) {
                r.globals.zoomed || a[d] !== void 0
                  ? o(d)
                  : l.ctx.opts.yaxis[d] !== void 0 &&
                    ((h.min = l.ctx.opts.yaxis[d].min),
                    (h.max = l.ctx.opts.yaxis[d].max));
              });
            },
          },
        ]),
        T
      );
    })();
  (yi = typeof window < "u" ? window : void 0),
    (ts = function (T, t) {
      var l = ((this !== void 0 ? this : T).SVG = function (f) {
        if (l.supported)
          return (f = new l.Doc(f)), l.parser.draw || l.prepare(), f;
      });
      if (
        ((l.ns = "http://www.w3.org/2000/svg"),
        (l.xmlns = "http://www.w3.org/2000/xmlns/"),
        (l.xlink = "http://www.w3.org/1999/xlink"),
        (l.svgjs = "http://svgjs.dev"),
        (l.supported = !0),
        !l.supported)
      )
        return !1;
      (l.did = 1e3),
        (l.eid = function (f) {
          return "Svgjs" + m(f) + l.did++;
        }),
        (l.create = function (f) {
          var y = t.createElementNS(this.ns, f);
          return y.setAttribute("id", this.eid(f)), y;
        }),
        (l.extend = function () {
          var f, y;
          y = (f = [].slice.call(arguments)).pop();
          for (var C = f.length - 1; C >= 0; C--)
            if (f[C]) for (var M in y) f[C].prototype[M] = y[M];
          l.Set && l.Set.inherit && l.Set.inherit();
        }),
        (l.invent = function (f) {
          var y =
            typeof f.create == "function"
              ? f.create
              : function () {
                  this.constructor.call(this, l.create(f.create));
                };
          return (
            f.inherit && (y.prototype = new f.inherit()),
            f.extend && l.extend(y, f.extend),
            f.construct && l.extend(f.parent || l.Container, f.construct),
            y
          );
        }),
        (l.adopt = function (f) {
          return f
            ? f.instance
              ? f.instance
              : (((y =
                  f.nodeName == "svg"
                    ? f.parentNode instanceof T.SVGElement
                      ? new l.Nested()
                      : new l.Doc()
                    : f.nodeName == "linearGradient"
                      ? new l.Gradient("linear")
                      : f.nodeName == "radialGradient"
                        ? new l.Gradient("radial")
                        : l[m(f.nodeName)]
                          ? new l[m(f.nodeName)]()
                          : new l.Element(f)).type = f.nodeName),
                (y.node = f),
                (f.instance = y),
                y instanceof l.Doc && y.namespace().defs(),
                y.setData(JSON.parse(f.getAttribute("svgjs:data")) || {}),
                y)
            : null;
          var y;
        }),
        (l.prepare = function () {
          var f = t.getElementsByTagName("body")[0],
            y = (f ? new l.Doc(f) : l.adopt(t.documentElement).nested()).size(
              2,
              0,
            );
          l.parser = {
            body: f || t.documentElement,
            draw: y.style(
              "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden",
            ).node,
            poly: y.polyline().node,
            path: y.path().node,
            native: l.create("svg"),
          };
        }),
        (l.parser = { native: l.create("svg") }),
        t.addEventListener(
          "DOMContentLoaded",
          function () {
            l.parser.draw || l.prepare();
          },
          !1,
        ),
        (l.regex = {
          numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
          hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
          rgb: /rgb\((\d+),(\d+),(\d+)\)/,
          reference: /#([a-z0-9\-_]+)/i,
          transforms: /\)\s*,?\s*/,
          whitespace: /\s/g,
          isHex: /^#[a-f0-9]{3,6}$/i,
          isRgb: /^rgb\(/,
          isCss: /[^:]+:[^;]+;?/,
          isBlank: /^(\s+)?$/,
          isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          isPercent: /^-?[\d\.]+%$/,
          isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
          delimiter: /[\s,]+/,
          hyphen: /([^e])\-/gi,
          pathLetters: /[MLHVCSQTAZ]/gi,
          isPathLetter: /[MLHVCSQTAZ]/i,
          numbersWithDots:
            /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
          dots: /\./g,
        }),
        (l.utils = {
          map: function (f, y) {
            for (var C = f.length, M = [], z = 0; z < C; z++) M.push(y(f[z]));
            return M;
          },
          filter: function (f, y) {
            for (var C = f.length, M = [], z = 0; z < C; z++)
              y(f[z]) && M.push(f[z]);
            return M;
          },
          filterSVGElements: function (f) {
            return this.filter(f, function (y) {
              return y instanceof T.SVGElement;
            });
          },
        }),
        (l.defaults = {
          attrs: {
            "fill-opacity": 1,
            "stroke-opacity": 1,
            "stroke-width": 0,
            "stroke-linejoin": "miter",
            "stroke-linecap": "butt",
            fill: "#000000",
            stroke: "#000000",
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            "stop-opacity": 1,
            "stop-color": "#000000",
            "font-size": 16,
            "font-family": "Helvetica, Arial, sans-serif",
            "text-anchor": "start",
          },
        }),
        (l.Color = function (f) {
          var y, C;
          (this.r = 0),
            (this.g = 0),
            (this.b = 0),
            f &&
              (typeof f == "string"
                ? l.regex.isRgb.test(f)
                  ? ((y = l.regex.rgb.exec(f.replace(l.regex.whitespace, ""))),
                    (this.r = parseInt(y[1])),
                    (this.g = parseInt(y[2])),
                    (this.b = parseInt(y[3])))
                  : l.regex.isHex.test(f) &&
                    ((y = l.regex.hex.exec(
                      (C = f).length == 4
                        ? [
                            "#",
                            C.substring(1, 2),
                            C.substring(1, 2),
                            C.substring(2, 3),
                            C.substring(2, 3),
                            C.substring(3, 4),
                            C.substring(3, 4),
                          ].join("")
                        : C,
                    )),
                    (this.r = parseInt(y[1], 16)),
                    (this.g = parseInt(y[2], 16)),
                    (this.b = parseInt(y[3], 16)))
                : u(f) === "object" &&
                  ((this.r = f.r), (this.g = f.g), (this.b = f.b)));
        }),
        l.extend(l.Color, {
          toString: function () {
            return this.toHex();
          },
          toHex: function () {
            return "#" + x(this.r) + x(this.g) + x(this.b);
          },
          toRgb: function () {
            return "rgb(" + [this.r, this.g, this.b].join() + ")";
          },
          brightness: function () {
            return (
              (this.r / 255) * 0.3 +
              (this.g / 255) * 0.59 +
              (this.b / 255) * 0.11
            );
          },
          morph: function (f) {
            return (this.destination = new l.Color(f)), this;
          },
          at: function (f) {
            return this.destination
              ? ((f = f < 0 ? 0 : f > 1 ? 1 : f),
                new l.Color({
                  r: ~~(this.r + (this.destination.r - this.r) * f),
                  g: ~~(this.g + (this.destination.g - this.g) * f),
                  b: ~~(this.b + (this.destination.b - this.b) * f),
                }))
              : this;
          },
        }),
        (l.Color.test = function (f) {
          return (f += ""), l.regex.isHex.test(f) || l.regex.isRgb.test(f);
        }),
        (l.Color.isRgb = function (f) {
          return (
            f &&
            typeof f.r == "number" &&
            typeof f.g == "number" &&
            typeof f.b == "number"
          );
        }),
        (l.Color.isColor = function (f) {
          return l.Color.isRgb(f) || l.Color.test(f);
        }),
        (l.Array = function (f, y) {
          (f = (f || []).valueOf()).length == 0 && y && (f = y.valueOf()),
            (this.value = this.parse(f));
        }),
        l.extend(l.Array, {
          toString: function () {
            return this.value.join(" ");
          },
          valueOf: function () {
            return this.value;
          },
          parse: function (f) {
            return (f = f.valueOf()), Array.isArray(f) ? f : this.split(f);
          },
        }),
        (l.PointArray = function (f, y) {
          l.Array.call(this, f, y || [[0, 0]]);
        }),
        (l.PointArray.prototype = new l.Array()),
        (l.PointArray.prototype.constructor = l.PointArray);
      for (
        var r = {
            M: function (f, y, C) {
              return (y.x = C.x = f[0]), (y.y = C.y = f[1]), ["M", y.x, y.y];
            },
            L: function (f, y) {
              return (y.x = f[0]), (y.y = f[1]), ["L", f[0], f[1]];
            },
            H: function (f, y) {
              return (y.x = f[0]), ["H", f[0]];
            },
            V: function (f, y) {
              return (y.y = f[0]), ["V", f[0]];
            },
            C: function (f, y) {
              return (
                (y.x = f[4]),
                (y.y = f[5]),
                ["C", f[0], f[1], f[2], f[3], f[4], f[5]]
              );
            },
            Q: function (f, y) {
              return (y.x = f[2]), (y.y = f[3]), ["Q", f[0], f[1], f[2], f[3]];
            },
            Z: function (f, y, C) {
              return (y.x = C.x), (y.y = C.y), ["Z"];
            },
          },
          s = "mlhvqtcsaz".split(""),
          a = 0,
          o = s.length;
        a < o;
        ++a
      )
        r[s[a]] = (function (f) {
          return function (y, C, M) {
            if (f == "H") y[0] = y[0] + C.x;
            else if (f == "V") y[0] = y[0] + C.y;
            else if (f == "A") (y[5] = y[5] + C.x), (y[6] = y[6] + C.y);
            else
              for (var z = 0, D = y.length; z < D; ++z)
                y[z] = y[z] + (z % 2 ? C.y : C.x);
            if (r && typeof r[f] == "function") return r[f](y, C, M);
          };
        })(s[a].toUpperCase());
      (l.PathArray = function (f, y) {
        l.Array.call(this, f, y || [["M", 0, 0]]);
      }),
        (l.PathArray.prototype = new l.Array()),
        (l.PathArray.prototype.constructor = l.PathArray),
        l.extend(l.PathArray, {
          toString: function () {
            return (function (f) {
              for (var y = 0, C = f.length, M = ""; y < C; y++)
                (M += f[y][0]),
                  f[y][1] != null &&
                    ((M += f[y][1]),
                    f[y][2] != null &&
                      ((M += " "),
                      (M += f[y][2]),
                      f[y][3] != null &&
                        ((M += " "),
                        (M += f[y][3]),
                        (M += " "),
                        (M += f[y][4]),
                        f[y][5] != null &&
                          ((M += " "),
                          (M += f[y][5]),
                          (M += " "),
                          (M += f[y][6]),
                          f[y][7] != null && ((M += " "), (M += f[y][7]))))));
              return M + " ";
            })(this.value);
          },
          move: function (f, y) {
            var C = this.bbox();
            return C.x, C.y, this;
          },
          at: function (f) {
            if (!this.destination) return this;
            for (
              var y = this.value,
                C = this.destination.value,
                M = [],
                z = new l.PathArray(),
                D = 0,
                U = y.length;
              D < U;
              D++
            ) {
              M[D] = [y[D][0]];
              for (var $ = 1, le = y[D].length; $ < le; $++)
                M[D][$] = y[D][$] + (C[D][$] - y[D][$]) * f;
              M[D][0] === "A" &&
                ((M[D][4] = +(M[D][4] != 0)), (M[D][5] = +(M[D][5] != 0)));
            }
            return (z.value = M), z;
          },
          parse: function (f) {
            if (f instanceof l.PathArray) return f.valueOf();
            var y,
              C = {
                M: 2,
                L: 2,
                H: 1,
                V: 1,
                C: 6,
                S: 4,
                Q: 4,
                T: 2,
                A: 7,
                Z: 0,
              };
            f =
              typeof f == "string"
                ? f
                    .replace(l.regex.numbersWithDots, d)
                    .replace(l.regex.pathLetters, " $& ")
                    .replace(l.regex.hyphen, "$1 -")
                    .trim()
                    .split(l.regex.delimiter)
                : f.reduce(function (le, ne) {
                    return [].concat.call(le, ne);
                  }, []);
            var M = [],
              z = new l.Point(),
              D = new l.Point(),
              U = 0,
              $ = f.length;
            do
              l.regex.isPathLetter.test(f[U])
                ? ((y = f[U]), ++U)
                : y == "M"
                  ? (y = "L")
                  : y == "m" && (y = "l"),
                M.push(
                  r[y].call(
                    null,
                    f.slice(U, (U += C[y.toUpperCase()])).map(parseFloat),
                    z,
                    D,
                  ),
                );
            while ($ > U);
            return M;
          },
          bbox: function () {
            return (
              l.parser.draw || l.prepare(),
              l.parser.path.setAttribute("d", this.toString()),
              l.parser.path.getBBox()
            );
          },
        }),
        (l.Number = l.invent({
          create: function (f, y) {
            (this.value = 0),
              (this.unit = y || ""),
              typeof f == "number"
                ? (this.value = isNaN(f)
                    ? 0
                    : isFinite(f)
                      ? f
                      : f < 0
                        ? -34e37
                        : 34e37)
                : typeof f == "string"
                  ? (y = f.match(l.regex.numberAndUnit)) &&
                    ((this.value = parseFloat(y[1])),
                    y[5] == "%"
                      ? (this.value /= 100)
                      : y[5] == "s" && (this.value *= 1e3),
                    (this.unit = y[5]))
                  : f instanceof l.Number &&
                    ((this.value = f.valueOf()), (this.unit = f.unit));
          },
          extend: {
            toString: function () {
              return (
                (this.unit == "%"
                  ? ~~(1e8 * this.value) / 1e6
                  : this.unit == "s"
                    ? this.value / 1e3
                    : this.value) + this.unit
              );
            },
            toJSON: function () {
              return this.toString();
            },
            valueOf: function () {
              return this.value;
            },
            plus: function (f) {
              return (
                (f = new l.Number(f)),
                new l.Number(this + f, this.unit || f.unit)
              );
            },
            minus: function (f) {
              return (
                (f = new l.Number(f)),
                new l.Number(this - f, this.unit || f.unit)
              );
            },
            times: function (f) {
              return (
                (f = new l.Number(f)),
                new l.Number(this * f, this.unit || f.unit)
              );
            },
            divide: function (f) {
              return (
                (f = new l.Number(f)),
                new l.Number(this / f, this.unit || f.unit)
              );
            },
            to: function (f) {
              var y = new l.Number(this);
              return typeof f == "string" && (y.unit = f), y;
            },
            morph: function (f) {
              return (
                (this.destination = new l.Number(f)),
                f.relative && (this.destination.value += this.value),
                this
              );
            },
            at: function (f) {
              return this.destination
                ? new l.Number(this.destination).minus(this).times(f).plus(this)
                : this;
            },
          },
        })),
        (l.Element = l.invent({
          create: function (f) {
            (this._stroke = l.defaults.attrs.stroke),
              (this._event = null),
              (this.dom = {}),
              (this.node = f) &&
                ((this.type = f.nodeName),
                (this.node.instance = this),
                (this._stroke = f.getAttribute("stroke") || this._stroke));
          },
          extend: {
            x: function (f) {
              return this.attr("x", f);
            },
            y: function (f) {
              return this.attr("y", f);
            },
            cx: function (f) {
              return f == null
                ? this.x() + this.width() / 2
                : this.x(f - this.width() / 2);
            },
            cy: function (f) {
              return f == null
                ? this.y() + this.height() / 2
                : this.y(f - this.height() / 2);
            },
            move: function (f, y) {
              return this.x(f).y(y);
            },
            center: function (f, y) {
              return this.cx(f).cy(y);
            },
            width: function (f) {
              return this.attr("width", f);
            },
            height: function (f) {
              return this.attr("height", f);
            },
            size: function (f, y) {
              var C = v(this, f, y);
              return this.width(new l.Number(C.width)).height(
                new l.Number(C.height),
              );
            },
            clone: function (f) {
              this.writeDataToDom();
              var y = A(this.node.cloneNode(!0));
              return f ? f.add(y) : this.after(y), y;
            },
            remove: function () {
              return this.parent() && this.parent().removeElement(this), this;
            },
            replace: function (f) {
              return this.after(f).remove(), f;
            },
            addTo: function (f) {
              return f.put(this);
            },
            putIn: function (f) {
              return f.add(this);
            },
            id: function (f) {
              return this.attr("id", f);
            },
            show: function () {
              return this.style("display", "");
            },
            hide: function () {
              return this.style("display", "none");
            },
            visible: function () {
              return this.style("display") != "none";
            },
            toString: function () {
              return this.attr("id");
            },
            classes: function () {
              var f = this.attr("class");
              return f == null ? [] : f.trim().split(l.regex.delimiter);
            },
            hasClass: function (f) {
              return this.classes().indexOf(f) != -1;
            },
            addClass: function (f) {
              if (!this.hasClass(f)) {
                var y = this.classes();
                y.push(f), this.attr("class", y.join(" "));
              }
              return this;
            },
            removeClass: function (f) {
              return (
                this.hasClass(f) &&
                  this.attr(
                    "class",
                    this.classes()
                      .filter(function (y) {
                        return y != f;
                      })
                      .join(" "),
                  ),
                this
              );
            },
            toggleClass: function (f) {
              return this.hasClass(f) ? this.removeClass(f) : this.addClass(f);
            },
            reference: function (f) {
              return l.get(this.attr(f));
            },
            parent: function (f) {
              var y = this;
              if (!y.node.parentNode) return null;
              if (((y = l.adopt(y.node.parentNode)), !f)) return y;
              for (; y && y.node instanceof T.SVGElement; ) {
                if (typeof f == "string" ? y.matches(f) : y instanceof f)
                  return y;
                if (
                  !y.node.parentNode ||
                  y.node.parentNode.nodeName == "#document"
                )
                  return null;
                y = l.adopt(y.node.parentNode);
              }
            },
            doc: function () {
              return this instanceof l.Doc ? this : this.parent(l.Doc);
            },
            parents: function (f) {
              var y = [],
                C = this;
              do {
                if (!(C = C.parent(f)) || !C.node) break;
                y.push(C);
              } while (C.parent);
              return y;
            },
            matches: function (f) {
              return (function (y, C) {
                return (
                  y.matches ||
                  y.matchesSelector ||
                  y.msMatchesSelector ||
                  y.mozMatchesSelector ||
                  y.webkitMatchesSelector ||
                  y.oMatchesSelector
                ).call(y, C);
              })(this.node, f);
            },
            native: function () {
              return this.node;
            },
            svg: function (f) {
              var y = t.createElement("svg");
              if (!(f && this instanceof l.Parent))
                return (
                  y.appendChild((f = t.createElement("svg"))),
                  this.writeDataToDom(),
                  f.appendChild(this.node.cloneNode(!0)),
                  y.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "")
                );
              y.innerHTML =
                "<svg>" +
                f
                  .replace(/\n/, "")
                  .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                "</svg>";
              for (var C = 0, M = y.firstChild.childNodes.length; C < M; C++)
                this.node.appendChild(y.firstChild.firstChild);
              return this;
            },
            writeDataToDom: function () {
              return (
                (this.each || this.lines) &&
                  (this.each ? this : this.lines()).each(function () {
                    this.writeDataToDom();
                  }),
                this.node.removeAttribute("svgjs:data"),
                Object.keys(this.dom).length &&
                  this.node.setAttribute(
                    "svgjs:data",
                    JSON.stringify(this.dom),
                  ),
                this
              );
            },
            setData: function (f) {
              return (this.dom = f), this;
            },
            is: function (f) {
              return (function (y, C) {
                return y instanceof C;
              })(this, f);
            },
          },
        })),
        (l.easing = {
          "-": function (f) {
            return f;
          },
          "<>": function (f) {
            return -Math.cos(f * Math.PI) / 2 + 0.5;
          },
          ">": function (f) {
            return Math.sin((f * Math.PI) / 2);
          },
          "<": function (f) {
            return 1 - Math.cos((f * Math.PI) / 2);
          },
        }),
        (l.morph = function (f) {
          return function (y, C) {
            return new l.MorphObj(y, C).at(f);
          };
        }),
        (l.Situation = l.invent({
          create: function (f) {
            (this.init = !1),
              (this.reversed = !1),
              (this.reversing = !1),
              (this.duration = new l.Number(f.duration).valueOf()),
              (this.delay = new l.Number(f.delay).valueOf()),
              (this.start = +new Date() + this.delay),
              (this.finish = this.start + this.duration),
              (this.ease = f.ease),
              (this.loop = 0),
              (this.loops = !1),
              (this.animations = {}),
              (this.attrs = {}),
              (this.styles = {}),
              (this.transforms = []),
              (this.once = {});
          },
        })),
        (l.FX = l.invent({
          create: function (f) {
            (this._target = f),
              (this.situations = []),
              (this.active = !1),
              (this.situation = null),
              (this.paused = !1),
              (this.lastPos = 0),
              (this.pos = 0),
              (this.absPos = 0),
              (this._speed = 1);
          },
          extend: {
            animate: function (f, y, C) {
              u(f) === "object" &&
                ((y = f.ease), (C = f.delay), (f = f.duration));
              var M = new l.Situation({
                duration: f || 1e3,
                delay: C || 0,
                ease: l.easing[y || "-"] || y,
              });
              return this.queue(M), this;
            },
            target: function (f) {
              return f && f instanceof l.Element
                ? ((this._target = f), this)
                : this._target;
            },
            timeToAbsPos: function (f) {
              return (
                (f - this.situation.start) /
                (this.situation.duration / this._speed)
              );
            },
            absPosToTime: function (f) {
              return (
                (this.situation.duration / this._speed) * f +
                this.situation.start
              );
            },
            startAnimFrame: function () {
              this.stopAnimFrame(),
                (this.animationFrame = T.requestAnimationFrame(
                  function () {
                    this.step();
                  }.bind(this),
                ));
            },
            stopAnimFrame: function () {
              T.cancelAnimationFrame(this.animationFrame);
            },
            start: function () {
              return (
                !this.active &&
                  this.situation &&
                  ((this.active = !0), this.startCurrent()),
                this
              );
            },
            startCurrent: function () {
              return (
                (this.situation.start =
                  +new Date() + this.situation.delay / this._speed),
                (this.situation.finish =
                  this.situation.start + this.situation.duration / this._speed),
                this.initAnimations().step()
              );
            },
            queue: function (f) {
              return (
                (typeof f == "function" || f instanceof l.Situation) &&
                  this.situations.push(f),
                this.situation || (this.situation = this.situations.shift()),
                this
              );
            },
            dequeue: function () {
              return (
                this.stop(),
                (this.situation = this.situations.shift()),
                this.situation &&
                  (this.situation instanceof l.Situation
                    ? this.start()
                    : this.situation.call(this)),
                this
              );
            },
            initAnimations: function () {
              var f,
                y = this.situation;
              if (y.init) return this;
              for (var C in y.animations) {
                (f = this.target()[C]()),
                  Array.isArray(f) || (f = [f]),
                  Array.isArray(y.animations[C]) ||
                    (y.animations[C] = [y.animations[C]]);
                for (var M = f.length; M--; )
                  y.animations[C][M] instanceof l.Number &&
                    (f[M] = new l.Number(f[M])),
                    (y.animations[C][M] = f[M].morph(y.animations[C][M]));
              }
              for (var C in y.attrs)
                y.attrs[C] = new l.MorphObj(this.target().attr(C), y.attrs[C]);
              for (var C in y.styles)
                y.styles[C] = new l.MorphObj(
                  this.target().style(C),
                  y.styles[C],
                );
              return (
                (y.initialTransformation = this.target().matrixify()),
                (y.init = !0),
                this
              );
            },
            clearQueue: function () {
              return (this.situations = []), this;
            },
            clearCurrent: function () {
              return (this.situation = null), this;
            },
            stop: function (f, y) {
              var C = this.active;
              return (
                (this.active = !1),
                y && this.clearQueue(),
                f &&
                  this.situation &&
                  (!C && this.startCurrent(), this.atEnd()),
                this.stopAnimFrame(),
                this.clearCurrent()
              );
            },
            after: function (f) {
              var y = this.last();
              return (
                this.target().on("finished.fx", function C(M) {
                  M.detail.situation == y &&
                    (f.call(this, y), this.off("finished.fx", C));
                }),
                this._callStart()
              );
            },
            during: function (f) {
              var y = this.last(),
                C = function (M) {
                  M.detail.situation == y &&
                    f.call(
                      this,
                      M.detail.pos,
                      l.morph(M.detail.pos),
                      M.detail.eased,
                      y,
                    );
                };
              return (
                this.target().off("during.fx", C).on("during.fx", C),
                this.after(function () {
                  this.off("during.fx", C);
                }),
                this._callStart()
              );
            },
            afterAll: function (f) {
              var y = function C(M) {
                f.call(this), this.off("allfinished.fx", C);
              };
              return (
                this.target().off("allfinished.fx", y).on("allfinished.fx", y),
                this._callStart()
              );
            },
            last: function () {
              return this.situations.length
                ? this.situations[this.situations.length - 1]
                : this.situation;
            },
            add: function (f, y, C) {
              return (this.last()[C || "animations"][f] = y), this._callStart();
            },
            step: function (f) {
              var y, C, M;
              f || (this.absPos = this.timeToAbsPos(+new Date())),
                this.situation.loops !== !1
                  ? ((y = Math.max(this.absPos, 0)),
                    (C = Math.floor(y)),
                    this.situation.loops === !0 || C < this.situation.loops
                      ? ((this.pos = y - C),
                        (M = this.situation.loop),
                        (this.situation.loop = C))
                      : ((this.absPos = this.situation.loops),
                        (this.pos = 1),
                        (M = this.situation.loop - 1),
                        (this.situation.loop = this.situation.loops)),
                    this.situation.reversing &&
                      (this.situation.reversed =
                        this.situation.reversed !=
                        !!((this.situation.loop - M) % 2)))
                  : ((this.absPos = Math.min(this.absPos, 1)),
                    (this.pos = this.absPos)),
                this.pos < 0 && (this.pos = 0),
                this.situation.reversed && (this.pos = 1 - this.pos);
              var z = this.situation.ease(this.pos);
              for (var D in this.situation.once)
                D > this.lastPos &&
                  D <= z &&
                  (this.situation.once[D].call(this.target(), this.pos, z),
                  delete this.situation.once[D]);
              return (
                this.active &&
                  this.target().fire("during", {
                    pos: this.pos,
                    eased: z,
                    fx: this,
                    situation: this.situation,
                  }),
                this.situation
                  ? (this.eachAt(),
                    (this.pos == 1 && !this.situation.reversed) ||
                    (this.situation.reversed && this.pos == 0)
                      ? (this.stopAnimFrame(),
                        this.target().fire("finished", {
                          fx: this,
                          situation: this.situation,
                        }),
                        this.situations.length ||
                          (this.target().fire("allfinished"),
                          this.situations.length ||
                            (this.target().off(".fx"), (this.active = !1))),
                        this.active ? this.dequeue() : this.clearCurrent())
                      : !this.paused && this.active && this.startAnimFrame(),
                    (this.lastPos = z),
                    this)
                  : this
              );
            },
            eachAt: function () {
              var f,
                y = this,
                C = this.target(),
                M = this.situation;
              for (var z in M.animations)
                (f = [].concat(M.animations[z]).map(function ($) {
                  return typeof $ != "string" && $.at
                    ? $.at(M.ease(y.pos), y.pos)
                    : $;
                })),
                  C[z].apply(C, f);
              for (var z in M.attrs)
                (f = [z].concat(M.attrs[z]).map(function (le) {
                  return typeof le != "string" && le.at
                    ? le.at(M.ease(y.pos), y.pos)
                    : le;
                })),
                  C.attr.apply(C, f);
              for (var z in M.styles)
                (f = [z].concat(M.styles[z]).map(function (le) {
                  return typeof le != "string" && le.at
                    ? le.at(M.ease(y.pos), y.pos)
                    : le;
                })),
                  C.style.apply(C, f);
              if (M.transforms.length) {
                (f = M.initialTransformation), (z = 0);
                for (var D = M.transforms.length; z < D; z++) {
                  var U = M.transforms[z];
                  U instanceof l.Matrix
                    ? (f = U.relative
                        ? f.multiply(
                            new l.Matrix().morph(U).at(M.ease(this.pos)),
                          )
                        : f.morph(U).at(M.ease(this.pos)))
                    : (U.relative || U.undo(f.extract()),
                      (f = f.multiply(U.at(M.ease(this.pos)))));
                }
                C.matrix(f);
              }
              return this;
            },
            once: function (f, y, C) {
              var M = this.last();
              return C || (f = M.ease(f)), (M.once[f] = y), this;
            },
            _callStart: function () {
              return (
                setTimeout(
                  function () {
                    this.start();
                  }.bind(this),
                  0,
                ),
                this
              );
            },
          },
          parent: l.Element,
          construct: {
            animate: function (f, y, C) {
              return (this.fx || (this.fx = new l.FX(this))).animate(f, y, C);
            },
            delay: function (f) {
              return (this.fx || (this.fx = new l.FX(this))).delay(f);
            },
            stop: function (f, y) {
              return this.fx && this.fx.stop(f, y), this;
            },
            finish: function () {
              return this.fx && this.fx.finish(), this;
            },
          },
        })),
        (l.MorphObj = l.invent({
          create: function (f, y) {
            return l.Color.isColor(y)
              ? new l.Color(f).morph(y)
              : l.regex.delimiter.test(f)
                ? l.regex.pathLetters.test(f)
                  ? new l.PathArray(f).morph(y)
                  : new l.Array(f).morph(y)
                : l.regex.numberAndUnit.test(y)
                  ? new l.Number(f).morph(y)
                  : ((this.value = f), void (this.destination = y));
          },
          extend: {
            at: function (f, y) {
              return y < 1 ? this.value : this.destination;
            },
            valueOf: function () {
              return this.value;
            },
          },
        })),
        l.extend(l.FX, {
          attr: function (f, y, C) {
            if (u(f) === "object") for (var M in f) this.attr(M, f[M]);
            else this.add(f, y, "attrs");
            return this;
          },
          plot: function (f, y, C, M) {
            return arguments.length == 4
              ? this.plot([f, y, C, M])
              : this.add("plot", new (this.target().morphArray)(f));
          },
        }),
        (l.Box = l.invent({
          create: function (f, y, C, M) {
            if (!(u(f) !== "object" || f instanceof l.Element))
              return l.Box.call(
                this,
                f.left != null ? f.left : f.x,
                f.top != null ? f.top : f.y,
                f.width,
                f.height,
              );
            var z;
            arguments.length == 4 &&
              ((this.x = f), (this.y = y), (this.width = C), (this.height = M)),
              (z = this).x == null &&
                ((z.x = 0), (z.y = 0), (z.width = 0), (z.height = 0)),
              (z.w = z.width),
              (z.h = z.height),
              (z.x2 = z.x + z.width),
              (z.y2 = z.y + z.height),
              (z.cx = z.x + z.width / 2),
              (z.cy = z.y + z.height / 2);
          },
        })),
        (l.BBox = l.invent({
          create: function (f) {
            if (
              (l.Box.apply(this, [].slice.call(arguments)),
              f instanceof l.Element)
            ) {
              var y;
              try {
                if (!t.documentElement.contains) {
                  for (var C = f.node; C.parentNode; ) C = C.parentNode;
                  if (C != t) throw new Error("Element not in the dom");
                }
                y = f.node.getBBox();
              } catch {
                if (f instanceof l.Shape) {
                  l.parser.draw || l.prepare();
                  var M = f.clone(l.parser.draw.instance).show();
                  M &&
                    M.node &&
                    typeof M.node.getBBox == "function" &&
                    (y = M.node.getBBox()),
                    M && typeof M.remove == "function" && M.remove();
                } else
                  y = {
                    x: f.node.clientLeft,
                    y: f.node.clientTop,
                    width: f.node.clientWidth,
                    height: f.node.clientHeight,
                  };
              }
              l.Box.call(this, y);
            }
          },
          inherit: l.Box,
          parent: l.Element,
          construct: {
            bbox: function () {
              return new l.BBox(this);
            },
          },
        })),
        (l.BBox.prototype.constructor = l.BBox),
        (l.Matrix = l.invent({
          create: function (f) {
            var y = S([1, 0, 0, 1, 0, 0]);
            f =
              f === null
                ? y
                : f instanceof l.Element
                  ? f.matrixify()
                  : typeof f == "string"
                    ? S(f.split(l.regex.delimiter).map(parseFloat))
                    : arguments.length == 6
                      ? S([].slice.call(arguments))
                      : Array.isArray(f)
                        ? S(f)
                        : f && u(f) === "object"
                          ? f
                          : y;
            for (var C = R.length - 1; C >= 0; --C)
              this[R[C]] = f[R[C]] != null ? f[R[C]] : y[R[C]];
          },
          extend: {
            extract: function () {
              var f = w(this, 0, 1);
              w(this, 1, 0);
              var y = (180 / Math.PI) * Math.atan2(f.y, f.x) - 90;
              return {
                x: this.e,
                y: this.f,
                transformedX:
                  (this.e * Math.cos((y * Math.PI) / 180) +
                    this.f * Math.sin((y * Math.PI) / 180)) /
                  Math.sqrt(this.a * this.a + this.b * this.b),
                transformedY:
                  (this.f * Math.cos((y * Math.PI) / 180) +
                    this.e * Math.sin((-y * Math.PI) / 180)) /
                  Math.sqrt(this.c * this.c + this.d * this.d),
                rotation: y,
                a: this.a,
                b: this.b,
                c: this.c,
                d: this.d,
                e: this.e,
                f: this.f,
                matrix: new l.Matrix(this),
              };
            },
            clone: function () {
              return new l.Matrix(this);
            },
            morph: function (f) {
              return (this.destination = new l.Matrix(f)), this;
            },
            multiply: function (f) {
              return new l.Matrix(
                this.native().multiply(
                  (function (y) {
                    return y instanceof l.Matrix || (y = new l.Matrix(y)), y;
                  })(f).native(),
                ),
              );
            },
            inverse: function () {
              return new l.Matrix(this.native().inverse());
            },
            translate: function (f, y) {
              return new l.Matrix(this.native().translate(f || 0, y || 0));
            },
            native: function () {
              for (
                var f = l.parser.native.createSVGMatrix(), y = R.length - 1;
                y >= 0;
                y--
              )
                f[R[y]] = this[R[y]];
              return f;
            },
            toString: function () {
              return (
                "matrix(" +
                P(this.a) +
                "," +
                P(this.b) +
                "," +
                P(this.c) +
                "," +
                P(this.d) +
                "," +
                P(this.e) +
                "," +
                P(this.f) +
                ")"
              );
            },
          },
          parent: l.Element,
          construct: {
            ctm: function () {
              return new l.Matrix(this.node.getCTM());
            },
            screenCTM: function () {
              if (this instanceof l.Nested) {
                var f = this.rect(1, 1),
                  y = f.node.getScreenCTM();
                return f.remove(), new l.Matrix(y);
              }
              return new l.Matrix(this.node.getScreenCTM());
            },
          },
        })),
        (l.Point = l.invent({
          create: function (f, y) {
            var C;
            (C = Array.isArray(f)
              ? { x: f[0], y: f[1] }
              : u(f) === "object"
                ? { x: f.x, y: f.y }
                : f != null
                  ? { x: f, y: y ?? f }
                  : { x: 0, y: 0 }),
              (this.x = C.x),
              (this.y = C.y);
          },
          extend: {
            clone: function () {
              return new l.Point(this);
            },
            morph: function (f, y) {
              return (this.destination = new l.Point(f, y)), this;
            },
          },
        })),
        l.extend(l.Element, {
          point: function (f, y) {
            return new l.Point(f, y).transform(this.screenCTM().inverse());
          },
        }),
        l.extend(l.Element, {
          attr: function (f, y, C) {
            if (f == null) {
              for (
                f = {}, C = (y = this.node.attributes).length - 1;
                C >= 0;
                C--
              )
                f[y[C].nodeName] = l.regex.isNumber.test(y[C].nodeValue)
                  ? parseFloat(y[C].nodeValue)
                  : y[C].nodeValue;
              return f;
            }
            if (u(f) === "object") for (var M in f) this.attr(M, f[M]);
            else if (y === null) this.node.removeAttribute(f);
            else {
              if (y == null)
                return (y = this.node.getAttribute(f)) == null
                  ? l.defaults.attrs[f]
                  : l.regex.isNumber.test(y)
                    ? parseFloat(y)
                    : y;
              f == "stroke-width"
                ? this.attr("stroke", parseFloat(y) > 0 ? this._stroke : null)
                : f == "stroke" && (this._stroke = y),
                (f != "fill" && f != "stroke") ||
                  (l.regex.isImage.test(y) &&
                    (y = this.doc().defs().image(y, 0, 0)),
                  y instanceof l.Image &&
                    (y = this.doc()
                      .defs()
                      .pattern(0, 0, function () {
                        this.add(y);
                      }))),
                typeof y == "number"
                  ? (y = new l.Number(y))
                  : l.Color.isColor(y)
                    ? (y = new l.Color(y))
                    : Array.isArray(y) && (y = new l.Array(y)),
                f == "leading"
                  ? this.leading && this.leading(y)
                  : typeof C == "string"
                    ? this.node.setAttributeNS(C, f, y.toString())
                    : this.node.setAttribute(f, y.toString()),
                !this.rebuild ||
                  (f != "font-size" && f != "x") ||
                  this.rebuild(f, y);
            }
            return this;
          },
        }),
        l.extend(l.Element, {
          transform: function (f, y) {
            var C;
            return u(f) !== "object"
              ? ((C = new l.Matrix(this).extract()),
                typeof f == "string" ? C[f] : C)
              : ((C = new l.Matrix(this)),
                (y = !!y || !!f.relative),
                f.a != null &&
                  (C = y ? C.multiply(new l.Matrix(f)) : new l.Matrix(f)),
                this.attr("transform", C));
          },
        }),
        l.extend(l.Element, {
          untransform: function () {
            return this.attr("transform", null);
          },
          matrixify: function () {
            return (this.attr("transform") || "")
              .split(l.regex.transforms)
              .slice(0, -1)
              .map(function (f) {
                var y = f.trim().split("(");
                return [
                  y[0],
                  y[1].split(l.regex.delimiter).map(function (C) {
                    return parseFloat(C);
                  }),
                ];
              })
              .reduce(function (f, y) {
                return y[0] == "matrix"
                  ? f.multiply(S(y[1]))
                  : f[y[0]].apply(f, y[1]);
              }, new l.Matrix());
          },
          toParent: function (f) {
            if (this == f) return this;
            var y = this.screenCTM(),
              C = f.screenCTM().inverse();
            return this.addTo(f).untransform().transform(C.multiply(y)), this;
          },
          toDoc: function () {
            return this.toParent(this.doc());
          },
        }),
        (l.Transformation = l.invent({
          create: function (f, y) {
            if (arguments.length > 1 && typeof y != "boolean")
              return this.constructor.call(this, [].slice.call(arguments));
            if (Array.isArray(f))
              for (var C = 0, M = this.arguments.length; C < M; ++C)
                this[this.arguments[C]] = f[C];
            else if (f && u(f) === "object")
              for (C = 0, M = this.arguments.length; C < M; ++C)
                this[this.arguments[C]] = f[this.arguments[C]];
            (this.inversed = !1), y === !0 && (this.inversed = !0);
          },
        })),
        (l.Translate = l.invent({
          parent: l.Matrix,
          inherit: l.Transformation,
          create: function (f, y) {
            this.constructor.apply(this, [].slice.call(arguments));
          },
          extend: {
            arguments: ["transformedX", "transformedY"],
            method: "translate",
          },
        })),
        l.extend(l.Element, {
          style: function (f, y) {
            if (arguments.length == 0) return this.node.style.cssText || "";
            if (arguments.length < 2)
              if (u(f) === "object") for (var C in f) this.style(C, f[C]);
              else {
                if (!l.regex.isCss.test(f)) return this.node.style[p(f)];
                for (
                  f = f
                    .split(/\s*;\s*/)
                    .filter(function (M) {
                      return !!M;
                    })
                    .map(function (M) {
                      return M.split(/\s*:\s*/);
                    });
                  (y = f.pop());

                )
                  this.style(y[0], y[1]);
              }
            else
              this.node.style[p(f)] =
                y === null || l.regex.isBlank.test(y) ? "" : y;
            return this;
          },
        }),
        (l.Parent = l.invent({
          create: function (f) {
            this.constructor.call(this, f);
          },
          inherit: l.Element,
          extend: {
            children: function () {
              return l.utils.map(
                l.utils.filterSVGElements(this.node.childNodes),
                function (f) {
                  return l.adopt(f);
                },
              );
            },
            add: function (f, y) {
              return (
                y == null
                  ? this.node.appendChild(f.node)
                  : f.node != this.node.childNodes[y] &&
                    this.node.insertBefore(f.node, this.node.childNodes[y]),
                this
              );
            },
            put: function (f, y) {
              return this.add(f, y), f;
            },
            has: function (f) {
              return this.index(f) >= 0;
            },
            index: function (f) {
              return [].slice.call(this.node.childNodes).indexOf(f.node);
            },
            get: function (f) {
              return l.adopt(this.node.childNodes[f]);
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.node.childNodes.length - 1);
            },
            each: function (f, y) {
              for (var C = this.children(), M = 0, z = C.length; M < z; M++)
                C[M] instanceof l.Element && f.apply(C[M], [M, C]),
                  y && C[M] instanceof l.Container && C[M].each(f, y);
              return this;
            },
            removeElement: function (f) {
              return this.node.removeChild(f.node), this;
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return delete this._defs, this;
            },
            defs: function () {
              return this.doc().defs();
            },
          },
        })),
        l.extend(l.Parent, {
          ungroup: function (f, y) {
            return (
              y === 0 ||
                this instanceof l.Defs ||
                this.node == l.parser.draw ||
                ((f =
                  f || (this instanceof l.Doc ? this : this.parent(l.Parent))),
                (y = y || 1 / 0),
                this.each(function () {
                  return this instanceof l.Defs
                    ? this
                    : this instanceof l.Parent
                      ? this.ungroup(f, y - 1)
                      : this.toParent(f);
                }),
                this.node.firstChild || this.remove()),
              this
            );
          },
          flatten: function (f, y) {
            return this.ungroup(f, y);
          },
        }),
        (l.Container = l.invent({
          create: function (f) {
            this.constructor.call(this, f);
          },
          inherit: l.Parent,
        })),
        (l.ViewBox = l.invent({ parent: l.Container, construct: {} })),
        [
          "click",
          "dblclick",
          "mousedown",
          "mouseup",
          "mouseover",
          "mouseout",
          "mousemove",
          "touchstart",
          "touchmove",
          "touchleave",
          "touchend",
          "touchcancel",
        ].forEach(function (f) {
          l.Element.prototype[f] = function (y) {
            return l.on(this.node, f, y), this;
          };
        }),
        (l.listeners = []),
        (l.handlerMap = []),
        (l.listenerId = 0),
        (l.on = function (f, y, C, M, z) {
          var D = C.bind(M || f.instance || f),
            U = (l.handlerMap.indexOf(f) + 1 || l.handlerMap.push(f)) - 1,
            $ = y.split(".")[0],
            le = y.split(".")[1] || "*";
          (l.listeners[U] = l.listeners[U] || {}),
            (l.listeners[U][$] = l.listeners[U][$] || {}),
            (l.listeners[U][$][le] = l.listeners[U][$][le] || {}),
            C._svgjsListenerId || (C._svgjsListenerId = ++l.listenerId),
            (l.listeners[U][$][le][C._svgjsListenerId] = D),
            f.addEventListener($, D, z || { passive: !0 });
        }),
        (l.off = function (f, y, C) {
          var M = l.handlerMap.indexOf(f),
            z = y && y.split(".")[0],
            D = y && y.split(".")[1],
            U = "";
          if (M != -1)
            if (C) {
              if ((typeof C == "function" && (C = C._svgjsListenerId), !C))
                return;
              l.listeners[M][z] &&
                l.listeners[M][z][D || "*"] &&
                (f.removeEventListener(z, l.listeners[M][z][D || "*"][C], !1),
                delete l.listeners[M][z][D || "*"][C]);
            } else if (D && z) {
              if (l.listeners[M][z] && l.listeners[M][z][D]) {
                for (var $ in l.listeners[M][z][D])
                  l.off(f, [z, D].join("."), $);
                delete l.listeners[M][z][D];
              }
            } else if (D)
              for (var le in l.listeners[M])
                for (var U in l.listeners[M][le])
                  D === U && l.off(f, [le, D].join("."));
            else if (z) {
              if (l.listeners[M][z]) {
                for (var U in l.listeners[M][z]) l.off(f, [z, U].join("."));
                delete l.listeners[M][z];
              }
            } else {
              for (var le in l.listeners[M]) l.off(f, le);
              delete l.listeners[M], delete l.handlerMap[M];
            }
        }),
        l.extend(l.Element, {
          on: function (f, y, C, M) {
            return l.on(this.node, f, y, C, M), this;
          },
          off: function (f, y) {
            return l.off(this.node, f, y), this;
          },
          fire: function (f, y) {
            return (
              f instanceof T.Event
                ? this.node.dispatchEvent(f)
                : this.node.dispatchEvent(
                    (f = new l.CustomEvent(f, { detail: y, cancelable: !0 })),
                  ),
              (this._event = f),
              this
            );
          },
          event: function () {
            return this._event;
          },
        }),
        (l.Defs = l.invent({ create: "defs", inherit: l.Container })),
        (l.G = l.invent({
          create: "g",
          inherit: l.Container,
          extend: {
            x: function (f) {
              return f == null
                ? this.transform("x")
                : this.transform({ x: f - this.x() }, !0);
            },
          },
          construct: {
            group: function () {
              return this.put(new l.G());
            },
          },
        })),
        (l.Doc = l.invent({
          create: function (f) {
            f &&
              ((f = typeof f == "string" ? t.getElementById(f) : f).nodeName ==
              "svg"
                ? this.constructor.call(this, f)
                : (this.constructor.call(this, l.create("svg")),
                  f.appendChild(this.node),
                  this.size("100%", "100%")),
              this.namespace().defs());
          },
          inherit: l.Container,
          extend: {
            namespace: function () {
              return this.attr({ xmlns: l.ns, version: "1.1" })
                .attr("xmlns:xlink", l.xlink, l.xmlns)
                .attr("xmlns:svgjs", l.svgjs, l.xmlns);
            },
            defs: function () {
              var f;
              return (
                this._defs ||
                  ((f = this.node.getElementsByTagName("defs")[0])
                    ? (this._defs = l.adopt(f))
                    : (this._defs = new l.Defs()),
                  this.node.appendChild(this._defs.node)),
                this._defs
              );
            },
            parent: function () {
              return this.node.parentNode &&
                this.node.parentNode.nodeName != "#document"
                ? this.node.parentNode
                : null;
            },
            remove: function () {
              return (
                this.parent() && this.parent().removeChild(this.node), this
              );
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return (
                delete this._defs,
                l.parser.draw &&
                  !l.parser.draw.parentNode &&
                  this.node.appendChild(l.parser.draw),
                this
              );
            },
            clone: function (f) {
              this.writeDataToDom();
              var y = this.node,
                C = A(y.cloneNode(!0));
              return (
                f
                  ? (f.node || f).appendChild(C.node)
                  : y.parentNode.insertBefore(C.node, y.nextSibling),
                C
              );
            },
          },
        })),
        l.extend(l.Element, {}),
        (l.Gradient = l.invent({
          create: function (f) {
            this.constructor.call(this, l.create(f + "Gradient")),
              (this.type = f);
          },
          inherit: l.Container,
          extend: {
            at: function (f, y, C) {
              return this.put(new l.Stop()).update(f, y, C);
            },
            update: function (f) {
              return (
                this.clear(), typeof f == "function" && f.call(this, this), this
              );
            },
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            toString: function () {
              return this.fill();
            },
            attr: function (f, y, C) {
              return (
                f == "transform" && (f = "gradientTransform"),
                l.Container.prototype.attr.call(this, f, y, C)
              );
            },
          },
          construct: {
            gradient: function (f, y) {
              return this.defs().gradient(f, y);
            },
          },
        })),
        l.extend(l.Gradient, l.FX, {
          from: function (f, y) {
            return (this._target || this).type == "radial"
              ? this.attr({ fx: new l.Number(f), fy: new l.Number(y) })
              : this.attr({ x1: new l.Number(f), y1: new l.Number(y) });
          },
          to: function (f, y) {
            return (this._target || this).type == "radial"
              ? this.attr({ cx: new l.Number(f), cy: new l.Number(y) })
              : this.attr({ x2: new l.Number(f), y2: new l.Number(y) });
          },
        }),
        l.extend(l.Defs, {
          gradient: function (f, y) {
            return this.put(new l.Gradient(f)).update(y);
          },
        }),
        (l.Stop = l.invent({
          create: "stop",
          inherit: l.Element,
          extend: {
            update: function (f) {
              return (
                (typeof f == "number" || f instanceof l.Number) &&
                  (f = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2],
                  }),
                f.opacity != null && this.attr("stop-opacity", f.opacity),
                f.color != null && this.attr("stop-color", f.color),
                f.offset != null && this.attr("offset", new l.Number(f.offset)),
                this
              );
            },
          },
        })),
        (l.Pattern = l.invent({
          create: "pattern",
          inherit: l.Container,
          extend: {
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            update: function (f) {
              return (
                this.clear(), typeof f == "function" && f.call(this, this), this
              );
            },
            toString: function () {
              return this.fill();
            },
            attr: function (f, y, C) {
              return (
                f == "transform" && (f = "patternTransform"),
                l.Container.prototype.attr.call(this, f, y, C)
              );
            },
          },
          construct: {
            pattern: function (f, y, C) {
              return this.defs().pattern(f, y, C);
            },
          },
        })),
        l.extend(l.Defs, {
          pattern: function (f, y, C) {
            return this.put(new l.Pattern())
              .update(C)
              .attr({
                x: 0,
                y: 0,
                width: f,
                height: y,
                patternUnits: "userSpaceOnUse",
              });
          },
        }),
        (l.Shape = l.invent({
          create: function (f) {
            this.constructor.call(this, f);
          },
          inherit: l.Element,
        })),
        (l.Symbol = l.invent({
          create: "symbol",
          inherit: l.Container,
          construct: {
            symbol: function () {
              return this.put(new l.Symbol());
            },
          },
        })),
        (l.Use = l.invent({
          create: "use",
          inherit: l.Shape,
          extend: {
            element: function (f, y) {
              return this.attr("href", (y || "") + "#" + f, l.xlink);
            },
          },
          construct: {
            use: function (f, y) {
              return this.put(new l.Use()).element(f, y);
            },
          },
        })),
        (l.Rect = l.invent({
          create: "rect",
          inherit: l.Shape,
          construct: {
            rect: function (f, y) {
              return this.put(new l.Rect()).size(f, y);
            },
          },
        })),
        (l.Circle = l.invent({
          create: "circle",
          inherit: l.Shape,
          construct: {
            circle: function (f) {
              return this.put(new l.Circle())
                .rx(new l.Number(f).divide(2))
                .move(0, 0);
            },
          },
        })),
        l.extend(l.Circle, l.FX, {
          rx: function (f) {
            return this.attr("r", f);
          },
          ry: function (f) {
            return this.rx(f);
          },
        }),
        (l.Ellipse = l.invent({
          create: "ellipse",
          inherit: l.Shape,
          construct: {
            ellipse: function (f, y) {
              return this.put(new l.Ellipse()).size(f, y).move(0, 0);
            },
          },
        })),
        l.extend(l.Ellipse, l.Rect, l.FX, {
          rx: function (f) {
            return this.attr("rx", f);
          },
          ry: function (f) {
            return this.attr("ry", f);
          },
        }),
        l.extend(l.Circle, l.Ellipse, {
          x: function (f) {
            return f == null ? this.cx() - this.rx() : this.cx(f + this.rx());
          },
          y: function (f) {
            return f == null ? this.cy() - this.ry() : this.cy(f + this.ry());
          },
          cx: function (f) {
            return f == null ? this.attr("cx") : this.attr("cx", f);
          },
          cy: function (f) {
            return f == null ? this.attr("cy") : this.attr("cy", f);
          },
          width: function (f) {
            return f == null
              ? 2 * this.rx()
              : this.rx(new l.Number(f).divide(2));
          },
          height: function (f) {
            return f == null
              ? 2 * this.ry()
              : this.ry(new l.Number(f).divide(2));
          },
          size: function (f, y) {
            var C = v(this, f, y);
            return this.rx(new l.Number(C.width).divide(2)).ry(
              new l.Number(C.height).divide(2),
            );
          },
        }),
        (l.Line = l.invent({
          create: "line",
          inherit: l.Shape,
          extend: {
            array: function () {
              return new l.PointArray([
                [this.attr("x1"), this.attr("y1")],
                [this.attr("x2"), this.attr("y2")],
              ]);
            },
            plot: function (f, y, C, M) {
              return f == null
                ? this.array()
                : ((f =
                    y !== void 0
                      ? { x1: f, y1: y, x2: C, y2: M }
                      : new l.PointArray(f).toLine()),
                  this.attr(f));
            },
            move: function (f, y) {
              return this.attr(this.array().move(f, y).toLine());
            },
            size: function (f, y) {
              var C = v(this, f, y);
              return this.attr(this.array().size(C.width, C.height).toLine());
            },
          },
          construct: {
            line: function (f, y, C, M) {
              return l.Line.prototype.plot.apply(
                this.put(new l.Line()),
                f != null ? [f, y, C, M] : [0, 0, 0, 0],
              );
            },
          },
        })),
        (l.Polyline = l.invent({
          create: "polyline",
          inherit: l.Shape,
          construct: {
            polyline: function (f) {
              return this.put(new l.Polyline()).plot(f || new l.PointArray());
            },
          },
        })),
        (l.Polygon = l.invent({
          create: "polygon",
          inherit: l.Shape,
          construct: {
            polygon: function (f) {
              return this.put(new l.Polygon()).plot(f || new l.PointArray());
            },
          },
        })),
        l.extend(l.Polyline, l.Polygon, {
          array: function () {
            return (
              this._array ||
              (this._array = new l.PointArray(this.attr("points")))
            );
          },
          plot: function (f) {
            return f == null
              ? this.array()
              : this.clear().attr(
                  "points",
                  typeof f == "string"
                    ? f
                    : (this._array = new l.PointArray(f)),
                );
          },
          clear: function () {
            return delete this._array, this;
          },
          move: function (f, y) {
            return this.attr("points", this.array().move(f, y));
          },
          size: function (f, y) {
            var C = v(this, f, y);
            return this.attr("points", this.array().size(C.width, C.height));
          },
        }),
        l.extend(l.Line, l.Polyline, l.Polygon, {
          morphArray: l.PointArray,
          x: function (f) {
            return f == null ? this.bbox().x : this.move(f, this.bbox().y);
          },
          y: function (f) {
            return f == null ? this.bbox().y : this.move(this.bbox().x, f);
          },
          width: function (f) {
            var y = this.bbox();
            return f == null ? y.width : this.size(f, y.height);
          },
          height: function (f) {
            var y = this.bbox();
            return f == null ? y.height : this.size(y.width, f);
          },
        }),
        (l.Path = l.invent({
          create: "path",
          inherit: l.Shape,
          extend: {
            morphArray: l.PathArray,
            array: function () {
              return (
                this._array || (this._array = new l.PathArray(this.attr("d")))
              );
            },
            plot: function (f) {
              return f == null
                ? this.array()
                : this.clear().attr(
                    "d",
                    typeof f == "string"
                      ? f
                      : (this._array = new l.PathArray(f)),
                  );
            },
            clear: function () {
              return delete this._array, this;
            },
          },
          construct: {
            path: function (f) {
              return this.put(new l.Path()).plot(f || new l.PathArray());
            },
          },
        })),
        (l.Image = l.invent({
          create: "image",
          inherit: l.Shape,
          extend: {
            load: function (f) {
              if (!f) return this;
              var y = this,
                C = new T.Image();
              return (
                l.on(C, "load", function () {
                  l.off(C);
                  var M = y.parent(l.Pattern);
                  M !== null &&
                    (y.width() == 0 &&
                      y.height() == 0 &&
                      y.size(C.width, C.height),
                    M &&
                      M.width() == 0 &&
                      M.height() == 0 &&
                      M.size(y.width(), y.height()),
                    typeof y._loaded == "function" &&
                      y._loaded.call(y, {
                        width: C.width,
                        height: C.height,
                        ratio: C.width / C.height,
                        url: f,
                      }));
                }),
                l.on(C, "error", function (M) {
                  l.off(C),
                    typeof y._error == "function" && y._error.call(y, M);
                }),
                this.attr("href", (C.src = this.src = f), l.xlink)
              );
            },
            loaded: function (f) {
              return (this._loaded = f), this;
            },
            error: function (f) {
              return (this._error = f), this;
            },
          },
          construct: {
            image: function (f, y, C) {
              return this.put(new l.Image())
                .load(f)
                .size(y || 0, C || y || 0);
            },
          },
        })),
        (l.Text = l.invent({
          create: function () {
            this.constructor.call(this, l.create("text")),
              (this.dom.leading = new l.Number(1.3)),
              (this._rebuild = !0),
              (this._build = !1),
              this.attr("font-family", l.defaults.attrs["font-family"]);
          },
          inherit: l.Shape,
          extend: {
            x: function (f) {
              return f == null ? this.attr("x") : this.attr("x", f);
            },
            text: function (f) {
              if (f === void 0) {
                f = "";
                for (
                  var y = this.node.childNodes, C = 0, M = y.length;
                  C < M;
                  ++C
                )
                  C != 0 &&
                    y[C].nodeType != 3 &&
                    l.adopt(y[C]).dom.newLined == 1 &&
                    (f += `
`),
                    (f += y[C].textContent);
                return f;
              }
              if ((this.clear().build(!0), typeof f == "function"))
                f.call(this, this);
              else {
                C = 0;
                for (
                  var z = (f = f.split(`
`)).length;
                  C < z;
                  C++
                )
                  this.tspan(f[C]).newLine();
              }
              return this.build(!1).rebuild();
            },
            size: function (f) {
              return this.attr("font-size", f).rebuild();
            },
            leading: function (f) {
              return f == null
                ? this.dom.leading
                : ((this.dom.leading = new l.Number(f)), this.rebuild());
            },
            lines: function () {
              var f = ((this.textPath && this.textPath()) || this).node,
                y = l.utils.map(
                  l.utils.filterSVGElements(f.childNodes),
                  function (C) {
                    return l.adopt(C);
                  },
                );
              return new l.Set(y);
            },
            rebuild: function (f) {
              if (
                (typeof f == "boolean" && (this._rebuild = f), this._rebuild)
              ) {
                var y = this,
                  C = 0,
                  M = this.dom.leading * new l.Number(this.attr("font-size"));
                this.lines().each(function () {
                  this.dom.newLined &&
                    (y.textPath() || this.attr("x", y.attr("x")),
                    this.text() ==
                    `
`
                      ? (C += M)
                      : (this.attr("dy", M + C), (C = 0)));
                }),
                  this.fire("rebuild");
              }
              return this;
            },
            build: function (f) {
              return (this._build = !!f), this;
            },
            setData: function (f) {
              return (
                (this.dom = f),
                (this.dom.leading = new l.Number(f.leading || 1.3)),
                this
              );
            },
          },
          construct: {
            text: function (f) {
              return this.put(new l.Text()).text(f);
            },
            plain: function (f) {
              return this.put(new l.Text()).plain(f);
            },
          },
        })),
        (l.Tspan = l.invent({
          create: "tspan",
          inherit: l.Shape,
          extend: {
            text: function (f) {
              return f == null
                ? this.node.textContent +
                    (this.dom.newLined
                      ? `
`
                      : "")
                : (typeof f == "function" ? f.call(this, this) : this.plain(f),
                  this);
            },
            dx: function (f) {
              return this.attr("dx", f);
            },
            dy: function (f) {
              return this.attr("dy", f);
            },
            newLine: function () {
              var f = this.parent(l.Text);
              return (
                (this.dom.newLined = !0),
                this.dy(f.dom.leading * f.attr("font-size")).attr("x", f.x())
              );
            },
          },
        })),
        l.extend(l.Text, l.Tspan, {
          plain: function (f) {
            return (
              this._build === !1 && this.clear(),
              this.node.appendChild(t.createTextNode(f)),
              this
            );
          },
          tspan: function (f) {
            var y = ((this.textPath && this.textPath()) || this).node,
              C = new l.Tspan();
            return (
              this._build === !1 && this.clear(),
              y.appendChild(C.node),
              C.text(f)
            );
          },
          clear: function () {
            for (
              var f = ((this.textPath && this.textPath()) || this).node;
              f.hasChildNodes();

            )
              f.removeChild(f.lastChild);
            return this;
          },
          length: function () {
            return this.node.getComputedTextLength();
          },
        }),
        (l.TextPath = l.invent({
          create: "textPath",
          inherit: l.Parent,
          parent: l.Text,
          construct: {
            morphArray: l.PathArray,
            array: function () {
              var f = this.track();
              return f ? f.array() : null;
            },
            plot: function (f) {
              var y = this.track(),
                C = null;
              return y && (C = y.plot(f)), f == null ? C : this;
            },
            track: function () {
              var f = this.textPath();
              if (f) return f.reference("href");
            },
            textPath: function () {
              if (
                this.node.firstChild &&
                this.node.firstChild.nodeName == "textPath"
              )
                return l.adopt(this.node.firstChild);
            },
          },
        })),
        (l.Nested = l.invent({
          create: function () {
            this.constructor.call(this, l.create("svg")),
              this.style("overflow", "visible");
          },
          inherit: l.Container,
          construct: {
            nested: function () {
              return this.put(new l.Nested());
            },
          },
        }));
      var h = {
        stroke: [
          "color",
          "width",
          "opacity",
          "linecap",
          "linejoin",
          "miterlimit",
          "dasharray",
          "dashoffset",
        ],
        fill: ["color", "opacity", "rule"],
        prefix: function (f, y) {
          return y == "color" ? f : f + "-" + y;
        },
      };
      function d(f, y, C, M) {
        return C + M.replace(l.regex.dots, " .");
      }
      function p(f) {
        return f.toLowerCase().replace(/-(.)/g, function (y, C) {
          return C.toUpperCase();
        });
      }
      function m(f) {
        return f.charAt(0).toUpperCase() + f.slice(1);
      }
      function x(f) {
        var y = f.toString(16);
        return y.length == 1 ? "0" + y : y;
      }
      function v(f, y, C) {
        if (y == null || C == null) {
          var M = f.bbox();
          y == null
            ? (y = (M.width / M.height) * C)
            : C == null && (C = (M.height / M.width) * y);
        }
        return { width: y, height: C };
      }
      function w(f, y, C) {
        return { x: y * f.a + C * f.c + 0, y: y * f.b + C * f.d + 0 };
      }
      function S(f) {
        return { a: f[0], b: f[1], c: f[2], d: f[3], e: f[4], f: f[5] };
      }
      function A(f) {
        for (var y = f.childNodes.length - 1; y >= 0; y--)
          f.childNodes[y] instanceof T.SVGElement && A(f.childNodes[y]);
        return l.adopt(f).id(l.eid(f.nodeName));
      }
      function P(f) {
        return Math.abs(f) > 1e-37 ? f : 0;
      }
      ["fill", "stroke"].forEach(function (f) {
        var y = {};
        (y[f] = function (C) {
          if (C === void 0) return this;
          if (
            typeof C == "string" ||
            l.Color.isRgb(C) ||
            (C && typeof C.fill == "function")
          )
            this.attr(f, C);
          else
            for (var M = h[f].length - 1; M >= 0; M--)
              C[h[f][M]] != null && this.attr(h.prefix(f, h[f][M]), C[h[f][M]]);
          return this;
        }),
          l.extend(l.Element, l.FX, y);
      }),
        l.extend(l.Element, l.FX, {
          translate: function (f, y) {
            return this.transform({ x: f, y });
          },
          matrix: function (f) {
            return this.attr(
              "transform",
              new l.Matrix(
                arguments.length == 6 ? [].slice.call(arguments) : f,
              ),
            );
          },
          opacity: function (f) {
            return this.attr("opacity", f);
          },
          dx: function (f) {
            return this.x(
              new l.Number(f).plus(this instanceof l.FX ? 0 : this.x()),
              !0,
            );
          },
          dy: function (f) {
            return this.y(
              new l.Number(f).plus(this instanceof l.FX ? 0 : this.y()),
              !0,
            );
          },
        }),
        l.extend(l.Path, {
          length: function () {
            return this.node.getTotalLength();
          },
          pointAt: function (f) {
            return this.node.getPointAtLength(f);
          },
        }),
        (l.Set = l.invent({
          create: function (f) {
            Array.isArray(f) ? (this.members = f) : this.clear();
          },
          extend: {
            add: function () {
              for (
                var f = [].slice.call(arguments), y = 0, C = f.length;
                y < C;
                y++
              )
                this.members.push(f[y]);
              return this;
            },
            remove: function (f) {
              var y = this.index(f);
              return y > -1 && this.members.splice(y, 1), this;
            },
            each: function (f) {
              for (var y = 0, C = this.members.length; y < C; y++)
                f.apply(this.members[y], [y, this.members]);
              return this;
            },
            clear: function () {
              return (this.members = []), this;
            },
            length: function () {
              return this.members.length;
            },
            has: function (f) {
              return this.index(f) >= 0;
            },
            index: function (f) {
              return this.members.indexOf(f);
            },
            get: function (f) {
              return this.members[f];
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.members.length - 1);
            },
            valueOf: function () {
              return this.members;
            },
          },
          construct: {
            set: function (f) {
              return new l.Set(f);
            },
          },
        })),
        (l.FX.Set = l.invent({
          create: function (f) {
            this.set = f;
          },
        })),
        (l.Set.inherit = function () {
          var f = [];
          for (var y in l.Shape.prototype)
            typeof l.Shape.prototype[y] == "function" &&
              typeof l.Set.prototype[y] != "function" &&
              f.push(y);
          for (var y in (f.forEach(function (M) {
            l.Set.prototype[M] = function () {
              for (var z = 0, D = this.members.length; z < D; z++)
                this.members[z] &&
                  typeof this.members[z][M] == "function" &&
                  this.members[z][M].apply(this.members[z], arguments);
              return M == "animate"
                ? this.fx || (this.fx = new l.FX.Set(this))
                : this;
            };
          }),
          (f = []),
          l.FX.prototype))
            typeof l.FX.prototype[y] == "function" &&
              typeof l.FX.Set.prototype[y] != "function" &&
              f.push(y);
          f.forEach(function (C) {
            l.FX.Set.prototype[C] = function () {
              for (var M = 0, z = this.set.members.length; M < z; M++)
                this.set.members[M].fx[C].apply(
                  this.set.members[M].fx,
                  arguments,
                );
              return this;
            };
          });
        }),
        l.extend(l.Element, {}),
        l.extend(l.Element, {
          remember: function (f, y) {
            if (u(arguments[0]) === "object")
              for (var C in f) this.remember(C, f[C]);
            else {
              if (arguments.length == 1) return this.memory()[f];
              this.memory()[f] = y;
            }
            return this;
          },
          forget: function () {
            if (arguments.length == 0) this._memory = {};
            else
              for (var f = arguments.length - 1; f >= 0; f--)
                delete this.memory()[arguments[f]];
            return this;
          },
          memory: function () {
            return this._memory || (this._memory = {});
          },
        }),
        (l.get = function (f) {
          var y = t.getElementById(
            (function (C) {
              var M = (C || "").toString().match(l.regex.reference);
              if (M) return M[1];
            })(f) || f,
          );
          return l.adopt(y);
        }),
        (l.select = function (f, y) {
          return new l.Set(
            l.utils.map((y || t).querySelectorAll(f), function (C) {
              return l.adopt(C);
            }),
          );
        }),
        l.extend(l.Parent, {
          select: function (f) {
            return l.select(f, this.node);
          },
        });
      var R = "abcdef".split("");
      if (typeof T.CustomEvent != "function") {
        var O = function (f, y) {
          y = y || { bubbles: !1, cancelable: !1, detail: void 0 };
          var C = t.createEvent("CustomEvent");
          return C.initCustomEvent(f, y.bubbles, y.cancelable, y.detail), C;
        };
        (O.prototype = T.Event.prototype), (l.CustomEvent = O);
      } else l.CustomEvent = T.CustomEvent;
      return l;
    }),
    u(i) === "object"
      ? (e.exports = yi.document
          ? ts(yi, yi.document)
          : function (T) {
              return ts(T, T.document);
            })
      : (yi.SVG = ts(yi, yi.document)),
    function () {
      (SVG.Filter = SVG.invent({
        create: "filter",
        inherit: SVG.Parent,
        extend: {
          source: "SourceGraphic",
          sourceAlpha: "SourceAlpha",
          background: "BackgroundImage",
          backgroundAlpha: "BackgroundAlpha",
          fill: "FillPaint",
          stroke: "StrokePaint",
          autoSetIn: !0,
          put: function (o, h) {
            return (
              this.add(o, h),
              !o.attr("in") && this.autoSetIn && o.attr("in", this.source),
              o.attr("result") || o.attr("result", o),
              o
            );
          },
          blend: function (o, h, d) {
            return this.put(new SVG.BlendEffect(o, h, d));
          },
          colorMatrix: function (o, h) {
            return this.put(new SVG.ColorMatrixEffect(o, h));
          },
          convolveMatrix: function (o) {
            return this.put(new SVG.ConvolveMatrixEffect(o));
          },
          componentTransfer: function (o) {
            return this.put(new SVG.ComponentTransferEffect(o));
          },
          composite: function (o, h, d) {
            return this.put(new SVG.CompositeEffect(o, h, d));
          },
          flood: function (o, h) {
            return this.put(new SVG.FloodEffect(o, h));
          },
          offset: function (o, h) {
            return this.put(new SVG.OffsetEffect(o, h));
          },
          image: function (o) {
            return this.put(new SVG.ImageEffect(o));
          },
          merge: function () {
            var o = [void 0];
            for (var h in arguments) o.push(arguments[h]);
            return this.put(
              new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, o))(),
            );
          },
          gaussianBlur: function (o, h) {
            return this.put(new SVG.GaussianBlurEffect(o, h));
          },
          morphology: function (o, h) {
            return this.put(new SVG.MorphologyEffect(o, h));
          },
          diffuseLighting: function (o, h, d) {
            return this.put(new SVG.DiffuseLightingEffect(o, h, d));
          },
          displacementMap: function (o, h, d, p, m) {
            return this.put(new SVG.DisplacementMapEffect(o, h, d, p, m));
          },
          specularLighting: function (o, h, d, p) {
            return this.put(new SVG.SpecularLightingEffect(o, h, d, p));
          },
          tile: function () {
            return this.put(new SVG.TileEffect());
          },
          turbulence: function (o, h, d, p, m) {
            return this.put(new SVG.TurbulenceEffect(o, h, d, p, m));
          },
          toString: function () {
            return "url(#" + this.attr("id") + ")";
          },
        },
      })),
        SVG.extend(SVG.Defs, {
          filter: function (o) {
            var h = this.put(new SVG.Filter());
            return typeof o == "function" && o.call(h, h), h;
          },
        }),
        SVG.extend(SVG.Container, {
          filter: function (o) {
            return this.defs().filter(o);
          },
        }),
        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
          filter: function (o) {
            return (
              (this.filterer =
                o instanceof SVG.Element ? o : this.doc().filter(o)),
              this.doc() &&
                this.filterer.doc() !== this.doc() &&
                this.doc().defs().add(this.filterer),
              this.attr("filter", this.filterer),
              this.filterer
            );
          },
          unfilter: function (o) {
            return (
              this.filterer && o === !0 && this.filterer.remove(),
              delete this.filterer,
              this.attr("filter", null)
            );
          },
        }),
        (SVG.Effect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (o) {
              return o == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", o);
            },
            result: function (o) {
              return o == null ? this.attr("result") : this.attr("result", o);
            },
            toString: function () {
              return this.result();
            },
          },
        })),
        (SVG.ParentEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Parent,
          extend: {
            in: function (o) {
              return o == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", o);
            },
            result: function (o) {
              return o == null ? this.attr("result") : this.attr("result", o);
            },
            toString: function () {
              return this.result();
            },
          },
        }));
      var T = {
        blend: function (o, h) {
          return this.parent() && this.parent().blend(this, o, h);
        },
        colorMatrix: function (o, h) {
          return this.parent() && this.parent().colorMatrix(o, h).in(this);
        },
        convolveMatrix: function (o) {
          return this.parent() && this.parent().convolveMatrix(o).in(this);
        },
        componentTransfer: function (o) {
          return this.parent() && this.parent().componentTransfer(o).in(this);
        },
        composite: function (o, h) {
          return this.parent() && this.parent().composite(this, o, h);
        },
        flood: function (o, h) {
          return this.parent() && this.parent().flood(o, h);
        },
        offset: function (o, h) {
          return this.parent() && this.parent().offset(o, h).in(this);
        },
        image: function (o) {
          return this.parent() && this.parent().image(o);
        },
        merge: function () {
          return (
            this.parent() &&
            this.parent().merge.apply(this.parent(), [this].concat(arguments))
          );
        },
        gaussianBlur: function (o, h) {
          return this.parent() && this.parent().gaussianBlur(o, h).in(this);
        },
        morphology: function (o, h) {
          return this.parent() && this.parent().morphology(o, h).in(this);
        },
        diffuseLighting: function (o, h, d) {
          return (
            this.parent() && this.parent().diffuseLighting(o, h, d).in(this)
          );
        },
        displacementMap: function (o, h, d, p) {
          return (
            this.parent() && this.parent().displacementMap(this, o, h, d, p)
          );
        },
        specularLighting: function (o, h, d, p) {
          return (
            this.parent() && this.parent().specularLighting(o, h, d, p).in(this)
          );
        },
        tile: function () {
          return this.parent() && this.parent().tile().in(this);
        },
        turbulence: function (o, h, d, p, m) {
          return (
            this.parent() && this.parent().turbulence(o, h, d, p, m).in(this)
          );
        },
      };
      SVG.extend(SVG.Effect, T),
        SVG.extend(SVG.ParentEffect, T),
        (SVG.ChildEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (o) {
              this.attr("in", o);
            },
          },
        }));
      var t = {
          blend: function (o, h, d) {
            this.attr({ in: o, in2: h, mode: d || "normal" });
          },
          colorMatrix: function (o, h) {
            o == "matrix" && (h = s(h)),
              this.attr({ type: o, values: h === void 0 ? null : h });
          },
          convolveMatrix: function (o) {
            (o = s(o)),
              this.attr({
                order: Math.sqrt(o.split(" ").length),
                kernelMatrix: o,
              });
          },
          composite: function (o, h, d) {
            this.attr({ in: o, in2: h, operator: d });
          },
          flood: function (o, h) {
            this.attr("flood-color", o),
              h != null && this.attr("flood-opacity", h);
          },
          offset: function (o, h) {
            this.attr({ dx: o, dy: h });
          },
          image: function (o) {
            this.attr("href", o, SVG.xlink);
          },
          displacementMap: function (o, h, d, p, m) {
            this.attr({
              in: o,
              in2: h,
              scale: d,
              xChannelSelector: p,
              yChannelSelector: m,
            });
          },
          gaussianBlur: function (o, h) {
            o != null || h != null
              ? this.attr(
                  "stdDeviation",
                  (function (d) {
                    if (!Array.isArray(d)) return d;
                    for (var p = 0, m = d.length, x = []; p < m; p++)
                      x.push(d[p]);
                    return x.join(" ");
                  })(Array.prototype.slice.call(arguments)),
                )
              : this.attr("stdDeviation", "0 0");
          },
          morphology: function (o, h) {
            this.attr({ operator: o, radius: h });
          },
          tile: function () {},
          turbulence: function (o, h, d, p, m) {
            this.attr({
              numOctaves: h,
              seed: d,
              stitchTiles: p,
              baseFrequency: o,
              type: m,
            });
          },
        },
        l = {
          merge: function () {
            var o;
            if (arguments[0] instanceof SVG.Set) {
              var h = this;
              arguments[0].each(function (p) {
                this instanceof SVG.MergeNode
                  ? h.put(this)
                  : (this instanceof SVG.Effect ||
                      this instanceof SVG.ParentEffect) &&
                    h.put(new SVG.MergeNode(this));
              });
            } else {
              o = Array.isArray(arguments[0]) ? arguments[0] : arguments;
              for (var d = 0; d < o.length; d++)
                o[d] instanceof SVG.MergeNode
                  ? this.put(o[d])
                  : this.put(new SVG.MergeNode(o[d]));
            }
          },
          componentTransfer: function (o) {
            if (
              ((this.rgb = new SVG.Set()),
              ["r", "g", "b", "a"].forEach(
                function (d) {
                  (this[d] = new SVG["Func" + d.toUpperCase()]("identity")),
                    this.rgb.add(this[d]),
                    this.node.appendChild(this[d].node);
                }.bind(this),
              ),
              o)
            )
              for (var h in (o.rgb &&
                (["r", "g", "b"].forEach(
                  function (d) {
                    this[d].attr(o.rgb);
                  }.bind(this),
                ),
                delete o.rgb),
              o))
                this[h].attr(o[h]);
          },
          diffuseLighting: function (o, h, d) {
            this.attr({
              surfaceScale: o,
              diffuseConstant: h,
              kernelUnitLength: d,
            });
          },
          specularLighting: function (o, h, d, p) {
            this.attr({
              surfaceScale: o,
              diffuseConstant: h,
              specularExponent: d,
              kernelUnitLength: p,
            });
          },
        },
        r = {
          distantLight: function (o, h) {
            this.attr({ azimuth: o, elevation: h });
          },
          pointLight: function (o, h, d) {
            this.attr({ x: o, y: h, z: d });
          },
          spotLight: function (o, h, d, p, m, x) {
            this.attr({
              x: o,
              y: h,
              z: d,
              pointsAtX: p,
              pointsAtY: m,
              pointsAtZ: x,
            });
          },
          mergeNode: function (o) {
            this.attr("in", o);
          },
        };
      function s(o) {
        return (
          Array.isArray(o) && (o = new SVG.Array(o)),
          o
            .toString()
            .replace(/^\s+/, "")
            .replace(/\s+$/, "")
            .replace(/\s+/g, " ")
        );
      }
      function a() {
        var o = function () {};
        for (var h in (typeof arguments[arguments.length - 1] == "function" &&
          ((o = arguments[arguments.length - 1]),
          Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
        arguments))
          for (var d in arguments[h]) o(arguments[h][d], d, arguments[h]);
      }
      ["r", "g", "b", "a"].forEach(function (o) {
        r["Func" + o.toUpperCase()] = function (h) {
          switch ((this.attr("type", h), h)) {
            case "table":
              this.attr("tableValues", arguments[1]);
              break;
            case "linear":
              this.attr("slope", arguments[1]),
                this.attr("intercept", arguments[2]);
              break;
            case "gamma":
              this.attr("amplitude", arguments[1]),
                this.attr("exponent", arguments[2]),
                this.attr("offset", arguments[2]);
          }
        };
      }),
        a(t, function (o, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                o.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.Effect,
            extend: {},
          });
        }),
        a(l, function (o, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                o.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.ParentEffect,
            extend: {},
          });
        }),
        a(r, function (o, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                o.apply(this, arguments);
            },
            inherit: SVG.ChildEffect,
            extend: {},
          });
        }),
        SVG.extend(SVG.MergeEffect, {
          in: function (o) {
            return (
              o instanceof SVG.MergeNode
                ? this.add(o, 0)
                : this.add(new SVG.MergeNode(o), 0),
              this
            );
          },
        }),
        SVG.extend(
          SVG.CompositeEffect,
          SVG.BlendEffect,
          SVG.DisplacementMapEffect,
          {
            in2: function (o) {
              return o == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in2") + '"]')
                      .get(0)) ||
                    this.attr("in2")
                : this.attr("in2", o);
            },
          },
        ),
        (SVG.filter = {
          sepiatone: [
            0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334,
            0.111, 0, 0, 0, 0, 0, 1, 0,
          ],
        });
    }.call(void 0),
    (function () {
      function T(a, o, h, d, p, m, x) {
        for (
          var v = a.slice(o, h || x),
            w = d.slice(p, m || x),
            S = 0,
            A = { pos: [0, 0], start: [0, 0] },
            P = { pos: [0, 0], start: [0, 0] };
          (v[S] = t.call(A, v[S])),
            (w[S] = t.call(P, w[S])),
            v[S][0] != w[S][0] ||
            v[S][0] == "M" ||
            (v[S][0] == "A" && (v[S][4] != w[S][4] || v[S][5] != w[S][5]))
              ? (Array.prototype.splice.apply(
                  v,
                  [S, 1].concat(r.call(A, v[S])),
                ),
                Array.prototype.splice.apply(w, [S, 1].concat(r.call(P, w[S]))))
              : ((v[S] = l.call(A, v[S])), (w[S] = l.call(P, w[S]))),
            !(++S == v.length && S == w.length);

        )
          S == v.length &&
            v.push([
              "C",
              A.pos[0],
              A.pos[1],
              A.pos[0],
              A.pos[1],
              A.pos[0],
              A.pos[1],
            ]),
            S == w.length &&
              w.push([
                "C",
                P.pos[0],
                P.pos[1],
                P.pos[0],
                P.pos[1],
                P.pos[0],
                P.pos[1],
              ]);
        return { start: v, dest: w };
      }
      function t(a) {
        switch (a[0]) {
          case "z":
          case "Z":
            (a[0] = "L"), (a[1] = this.start[0]), (a[2] = this.start[1]);
            break;
          case "H":
            (a[0] = "L"), (a[2] = this.pos[1]);
            break;
          case "V":
            (a[0] = "L"), (a[2] = a[1]), (a[1] = this.pos[0]);
            break;
          case "T":
            (a[0] = "Q"),
              (a[3] = a[1]),
              (a[4] = a[2]),
              (a[1] = this.reflection[1]),
              (a[2] = this.reflection[0]);
            break;
          case "S":
            (a[0] = "C"),
              (a[6] = a[4]),
              (a[5] = a[3]),
              (a[4] = a[2]),
              (a[3] = a[1]),
              (a[2] = this.reflection[1]),
              (a[1] = this.reflection[0]);
        }
        return a;
      }
      function l(a) {
        var o = a.length;
        return (
          (this.pos = [a[o - 2], a[o - 1]]),
          "SCQT".indexOf(a[0]) != -1 &&
            (this.reflection = [
              2 * this.pos[0] - a[o - 4],
              2 * this.pos[1] - a[o - 3],
            ]),
          a
        );
      }
      function r(a) {
        var o = [a];
        switch (a[0]) {
          case "M":
            return (this.pos = this.start = [a[1], a[2]]), o;
          case "L":
            (a[5] = a[3] = a[1]),
              (a[6] = a[4] = a[2]),
              (a[1] = this.pos[0]),
              (a[2] = this.pos[1]);
            break;
          case "Q":
            (a[6] = a[4]),
              (a[5] = a[3]),
              (a[4] = (1 * a[4]) / 3 + (2 * a[2]) / 3),
              (a[3] = (1 * a[3]) / 3 + (2 * a[1]) / 3),
              (a[2] = (1 * this.pos[1]) / 3 + (2 * a[2]) / 3),
              (a[1] = (1 * this.pos[0]) / 3 + (2 * a[1]) / 3);
            break;
          case "A":
            (o = (function (h, d) {
              var p,
                m,
                x,
                v,
                w,
                S,
                A,
                P,
                R,
                O,
                f,
                y,
                C,
                M,
                z,
                D,
                U,
                $,
                le,
                ne,
                se,
                he,
                ye,
                Pe,
                Le,
                Ie,
                Ke = Math.abs(d[1]),
                Be = Math.abs(d[2]),
                st = d[3] % 360,
                Xl = d[4],
                bi = d[5],
                Ya = d[6],
                Ba = d[7],
                Mt = new SVG.Point(h),
                xt = new SVG.Point(Ya, Ba),
                ph = [];
              if (Ke === 0 || Be === 0 || (Mt.x === xt.x && Mt.y === xt.y))
                return [["C", Mt.x, Mt.y, xt.x, xt.y, xt.x, xt.y]];
              for (
                p = new SVG.Point(
                  (Mt.x - xt.x) / 2,
                  (Mt.y - xt.y) / 2,
                ).transform(new SVG.Matrix().rotate(st)),
                  (m = (p.x * p.x) / (Ke * Ke) + (p.y * p.y) / (Be * Be)) > 1 &&
                    ((Ke *= m = Math.sqrt(m)), (Be *= m)),
                  x = new SVG.Matrix()
                    .rotate(st)
                    .scale(1 / Ke, 1 / Be)
                    .rotate(-st),
                  Mt = Mt.transform(x),
                  xt = xt.transform(x),
                  v = [xt.x - Mt.x, xt.y - Mt.y],
                  S = v[0] * v[0] + v[1] * v[1],
                  w = Math.sqrt(S),
                  v[0] /= w,
                  v[1] /= w,
                  A = S < 4 ? Math.sqrt(1 - S / 4) : 0,
                  Xl === bi && (A *= -1),
                  P = new SVG.Point(
                    (xt.x + Mt.x) / 2 + A * -v[1],
                    (xt.y + Mt.y) / 2 + A * v[0],
                  ),
                  R = new SVG.Point(Mt.x - P.x, Mt.y - P.y),
                  O = new SVG.Point(xt.x - P.x, xt.y - P.y),
                  f = Math.acos(R.x / Math.sqrt(R.x * R.x + R.y * R.y)),
                  R.y < 0 && (f *= -1),
                  y = Math.acos(O.x / Math.sqrt(O.x * O.x + O.y * O.y)),
                  O.y < 0 && (y *= -1),
                  bi && f > y && (y += 2 * Math.PI),
                  !bi && f < y && (y -= 2 * Math.PI),
                  M = Math.ceil((2 * Math.abs(f - y)) / Math.PI),
                  D = [],
                  U = f,
                  C = (y - f) / M,
                  z = (4 * Math.tan(C / 4)) / 3,
                  se = 0;
                se <= M;
                se++
              )
                (le = Math.cos(U)),
                  ($ = Math.sin(U)),
                  (ne = new SVG.Point(P.x + le, P.y + $)),
                  (D[se] = [
                    new SVG.Point(ne.x + z * $, ne.y - z * le),
                    ne,
                    new SVG.Point(ne.x - z * $, ne.y + z * le),
                  ]),
                  (U += C);
              for (
                D[0][0] = D[0][1].clone(),
                  D[D.length - 1][2] = D[D.length - 1][1].clone(),
                  x = new SVG.Matrix().rotate(st).scale(Ke, Be).rotate(-st),
                  se = 0,
                  he = D.length;
                se < he;
                se++
              )
                (D[se][0] = D[se][0].transform(x)),
                  (D[se][1] = D[se][1].transform(x)),
                  (D[se][2] = D[se][2].transform(x));
              for (se = 1, he = D.length; se < he; se++)
                (ye = (ne = D[se - 1][2]).x),
                  (Pe = ne.y),
                  (Le = (ne = D[se][0]).x),
                  (Ie = ne.y),
                  (Ya = (ne = D[se][1]).x),
                  (Ba = ne.y),
                  ph.push(["C", ye, Pe, Le, Ie, Ya, Ba]);
              return ph;
            })(this.pos, a)),
              (a = o[0]);
        }
        return (
          (a[0] = "C"),
          (this.pos = [a[5], a[6]]),
          (this.reflection = [2 * a[5] - a[3], 2 * a[6] - a[4]]),
          o
        );
      }
      function s(a, o) {
        if (o === !1) return !1;
        for (var h = o, d = a.length; h < d; ++h) if (a[h][0] == "M") return h;
        return !1;
      }
      SVG.extend(SVG.PathArray, {
        morph: function (a) {
          for (
            var o = this.value, h = this.parse(a), d = 0, p = 0, m = !1, x = !1;
            d !== !1 || p !== !1;

          ) {
            var v;
            (m = s(o, d !== !1 && d + 1)),
              (x = s(h, p !== !1 && p + 1)),
              d === !1 &&
                (d =
                  (v = new SVG.PathArray(w.start).bbox()).height == 0 ||
                  v.width == 0
                    ? o.push(o[0]) - 1
                    : o.push(["M", v.x + v.width / 2, v.y + v.height / 2]) - 1),
              p === !1 &&
                (p =
                  (v = new SVG.PathArray(w.dest).bbox()).height == 0 ||
                  v.width == 0
                    ? h.push(h[0]) - 1
                    : h.push(["M", v.x + v.width / 2, v.y + v.height / 2]) - 1);
            var w = T(o, d, m, h, p, x);
            (o = o.slice(0, d).concat(w.start, m === !1 ? [] : o.slice(m))),
              (h = h.slice(0, p).concat(w.dest, x === !1 ? [] : h.slice(x))),
              (d = m !== !1 && d + w.start.length),
              (p = x !== !1 && p + w.dest.length);
          }
          return (
            (this.value = o),
            (this.destination = new SVG.PathArray()),
            (this.destination.value = h),
            this
          );
        },
      });
    })(),
    function () {
      function T(t) {
        t.remember("_draggable", this), (this.el = t);
      }
      (T.prototype.init = function (t, l) {
        var r = this;
        (this.constraint = t),
          (this.value = l),
          this.el.on("mousedown.drag", function (s) {
            r.start(s);
          }),
          this.el.on("touchstart.drag", function (s) {
            r.start(s);
          });
      }),
        (T.prototype.transformPoint = function (t, l) {
          var r =
            ((t = t || window.event).changedTouches && t.changedTouches[0]) ||
            t;
          return (
            (this.p.x = r.clientX - (l || 0)),
            (this.p.y = r.clientY),
            this.p.matrixTransform(this.m)
          );
        }),
        (T.prototype.getBBox = function () {
          var t = this.el.bbox();
          return (
            this.el instanceof SVG.Nested && (t = this.el.rbox()),
            (this.el instanceof SVG.G ||
              this.el instanceof SVG.Use ||
              this.el instanceof SVG.Nested) &&
              ((t.x = this.el.x()), (t.y = this.el.y())),
            t
          );
        }),
        (T.prototype.start = function (t) {
          if (
            (t.type != "click" &&
              t.type != "mousedown" &&
              t.type != "mousemove") ||
            (t.which || t.buttons) == 1
          ) {
            var l = this;
            if (
              (this.el.fire("beforedrag", { event: t, handler: this }),
              !this.el.event().defaultPrevented)
            ) {
              t.preventDefault(),
                t.stopPropagation(),
                (this.parent =
                  this.parent ||
                  this.el.parent(SVG.Nested) ||
                  this.el.parent(SVG.Doc)),
                (this.p = this.parent.node.createSVGPoint()),
                (this.m = this.el.node.getScreenCTM().inverse());
              var r,
                s = this.getBBox();
              if (this.el instanceof SVG.Text)
                switch (
                  ((r = this.el.node.getComputedTextLength()),
                  this.el.attr("text-anchor"))
                ) {
                  case "middle":
                    r /= 2;
                    break;
                  case "start":
                    r = 0;
                }
              (this.startPoints = {
                point: this.transformPoint(t, r),
                box: s,
                transform: this.el.transform(),
              }),
                SVG.on(window, "mousemove.drag", function (a) {
                  l.drag(a);
                }),
                SVG.on(window, "touchmove.drag", function (a) {
                  l.drag(a);
                }),
                SVG.on(window, "mouseup.drag", function (a) {
                  l.end(a);
                }),
                SVG.on(window, "touchend.drag", function (a) {
                  l.end(a);
                }),
                this.el.fire("dragstart", {
                  event: t,
                  p: this.startPoints.point,
                  m: this.m,
                  handler: this,
                });
            }
          }
        }),
        (T.prototype.drag = function (t) {
          var l = this.getBBox(),
            r = this.transformPoint(t),
            s = this.startPoints.box.x + r.x - this.startPoints.point.x,
            a = this.startPoints.box.y + r.y - this.startPoints.point.y,
            o = this.constraint,
            h = r.x - this.startPoints.point.x,
            d = r.y - this.startPoints.point.y;
          if (
            (this.el.fire("dragmove", {
              event: t,
              p: r,
              m: this.m,
              handler: this,
            }),
            this.el.event().defaultPrevented)
          )
            return r;
          if (typeof o == "function") {
            var p = o.call(this.el, s, a, this.m);
            typeof p == "boolean" && (p = { x: p, y: p }),
              p.x === !0 ? this.el.x(s) : p.x !== !1 && this.el.x(p.x),
              p.y === !0 ? this.el.y(a) : p.y !== !1 && this.el.y(p.y);
          } else
            typeof o == "object" &&
              (o.minX != null && s < o.minX
                ? (h = (s = o.minX) - this.startPoints.box.x)
                : o.maxX != null &&
                  s > o.maxX - l.width &&
                  (h = (s = o.maxX - l.width) - this.startPoints.box.x),
              o.minY != null && a < o.minY
                ? (d = (a = o.minY) - this.startPoints.box.y)
                : o.maxY != null &&
                  a > o.maxY - l.height &&
                  (d = (a = o.maxY - l.height) - this.startPoints.box.y),
              o.snapToGrid != null &&
                ((s -= s % o.snapToGrid),
                (a -= a % o.snapToGrid),
                (h -= h % o.snapToGrid),
                (d -= d % o.snapToGrid)),
              this.el instanceof SVG.G
                ? this.el
                    .matrix(this.startPoints.transform)
                    .transform({ x: h, y: d }, !0)
                : this.el.move(s, a));
          return r;
        }),
        (T.prototype.end = function (t) {
          var l = this.drag(t);
          this.el.fire("dragend", { event: t, p: l, m: this.m, handler: this }),
            SVG.off(window, "mousemove.drag"),
            SVG.off(window, "touchmove.drag"),
            SVG.off(window, "mouseup.drag"),
            SVG.off(window, "touchend.drag");
        }),
        SVG.extend(SVG.Element, {
          draggable: function (t, l) {
            (typeof t != "function" && typeof t != "object") ||
              ((l = t), (t = !0));
            var r = this.remember("_draggable") || new T(this);
            return (
              (t = t === void 0 || t)
                ? r.init(l || {}, t)
                : (this.off("mousedown.drag"), this.off("touchstart.drag")),
              this
            );
          },
        });
    }.call(void 0),
    (function () {
      function T(t) {
        (this.el = t),
          t.remember("_selectHandler", this),
          (this.pointSelection = { isSelected: !1 }),
          (this.rectSelection = { isSelected: !1 }),
          (this.pointsList = {
            lt: [0, 0],
            rt: ["width", 0],
            rb: ["width", "height"],
            lb: [0, "height"],
            t: ["width", 0],
            r: ["width", "height"],
            b: ["width", "height"],
            l: [0, "height"],
          }),
          (this.pointCoord = function (l, r, s) {
            var a = typeof l != "string" ? l : r[l];
            return s ? a / 2 : a;
          }),
          (this.pointCoords = function (l, r) {
            var s = this.pointsList[l];
            return {
              x: this.pointCoord(s[0], r, l === "t" || l === "b"),
              y: this.pointCoord(s[1], r, l === "r" || l === "l"),
            };
          });
      }
      (T.prototype.init = function (t, l) {
        var r = this.el.bbox();
        this.options = {};
        var s = this.el.selectize.defaults.points;
        for (var a in this.el.selectize.defaults)
          (this.options[a] = this.el.selectize.defaults[a]),
            l[a] !== void 0 && (this.options[a] = l[a]);
        var o = ["points", "pointsExclude"];
        for (var a in o) {
          var h = this.options[o[a]];
          typeof h == "string"
            ? (h = h.length > 0 ? h.split(/\s*,\s*/i) : [])
            : typeof h == "boolean" && o[a] === "points" && (h = h ? s : []),
            (this.options[o[a]] = h);
        }
        (this.options.points = [s, this.options.points].reduce(function (d, p) {
          return d.filter(function (m) {
            return p.indexOf(m) > -1;
          });
        })),
          (this.options.points = [
            this.options.points,
            this.options.pointsExclude,
          ].reduce(function (d, p) {
            return d.filter(function (m) {
              return p.indexOf(m) < 0;
            });
          })),
          (this.parent = this.el.parent()),
          (this.nested = this.nested || this.parent.group()),
          this.nested.matrix(new SVG.Matrix(this.el).translate(r.x, r.y)),
          this.options.deepSelect &&
          ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1
            ? this.selectPoints(t)
            : this.selectRect(t),
          this.observe(),
          this.cleanup();
      }),
        (T.prototype.selectPoints = function (t) {
          return (
            (this.pointSelection.isSelected = t),
            this.pointSelection.set ||
              ((this.pointSelection.set = this.parent.set()),
              this.drawPoints()),
            this
          );
        }),
        (T.prototype.getPointArray = function () {
          var t = this.el.bbox();
          return this.el
            .array()
            .valueOf()
            .map(function (l) {
              return [l[0] - t.x, l[1] - t.y];
            });
        }),
        (T.prototype.drawPoints = function () {
          for (
            var t = this, l = this.getPointArray(), r = 0, s = l.length;
            r < s;
            ++r
          ) {
            var a = (function (h) {
                return function (d) {
                  (d = d || window.event).preventDefault
                    ? d.preventDefault()
                    : (d.returnValue = !1),
                    d.stopPropagation();
                  var p = d.pageX || d.touches[0].pageX,
                    m = d.pageY || d.touches[0].pageY;
                  t.el.fire("point", { x: p, y: m, i: h, event: d });
                };
              })(r),
              o = this.drawPoint(l[r][0], l[r][1])
                .addClass(this.options.classPoints)
                .addClass(this.options.classPoints + "_point")
                .on("touchstart", a)
                .on("mousedown", a);
            this.pointSelection.set.add(o);
          }
        }),
        (T.prototype.drawPoint = function (t, l) {
          var r = this.options.pointType;
          switch (r) {
            case "circle":
              return this.drawCircle(t, l);
            case "rect":
              return this.drawRect(t, l);
            default:
              if (typeof r == "function") return r.call(this, t, l);
              throw new Error("Unknown " + r + " point type!");
          }
        }),
        (T.prototype.drawCircle = function (t, l) {
          return this.nested.circle(this.options.pointSize).center(t, l);
        }),
        (T.prototype.drawRect = function (t, l) {
          return this.nested
            .rect(this.options.pointSize, this.options.pointSize)
            .center(t, l);
        }),
        (T.prototype.updatePointSelection = function () {
          var t = this.getPointArray();
          this.pointSelection.set.each(function (l) {
            (this.cx() === t[l][0] && this.cy() === t[l][1]) ||
              this.center(t[l][0], t[l][1]);
          });
        }),
        (T.prototype.updateRectSelection = function () {
          var t = this,
            l = this.el.bbox();
          if (
            (this.rectSelection.set
              .get(0)
              .attr({ width: l.width, height: l.height }),
            this.options.points.length &&
              this.options.points.map(function (s, a) {
                var o = t.pointCoords(s, l);
                t.rectSelection.set.get(a + 1).center(o.x, o.y);
              }),
            this.options.rotationPoint)
          ) {
            var r = this.rectSelection.set.length();
            this.rectSelection.set.get(r - 1).center(l.width / 2, 20);
          }
        }),
        (T.prototype.selectRect = function (t) {
          var l = this,
            r = this.el.bbox();
          function s(h) {
            return function (d) {
              (d = d || window.event).preventDefault
                ? d.preventDefault()
                : (d.returnValue = !1),
                d.stopPropagation();
              var p = d.pageX || d.touches[0].pageX,
                m = d.pageY || d.touches[0].pageY;
              l.el.fire(h, { x: p, y: m, event: d });
            };
          }
          if (
            ((this.rectSelection.isSelected = t),
            (this.rectSelection.set =
              this.rectSelection.set || this.parent.set()),
            this.rectSelection.set.get(0) ||
              this.rectSelection.set.add(
                this.nested
                  .rect(r.width, r.height)
                  .addClass(this.options.classRect),
              ),
            this.options.points.length &&
              this.rectSelection.set.length() < 2 &&
              (this.options.points.map(function (h, d) {
                var p = l.pointCoords(h, r),
                  m = l
                    .drawPoint(p.x, p.y)
                    .attr("class", l.options.classPoints + "_" + h)
                    .on("mousedown", s(h))
                    .on("touchstart", s(h));
                l.rectSelection.set.add(m);
              }),
              this.rectSelection.set.each(function () {
                this.addClass(l.options.classPoints);
              })),
            this.options.rotationPoint &&
              ((this.options.points && !this.rectSelection.set.get(9)) ||
                (!this.options.points && !this.rectSelection.set.get(1))))
          ) {
            var a = function (h) {
                (h = h || window.event).preventDefault
                  ? h.preventDefault()
                  : (h.returnValue = !1),
                  h.stopPropagation();
                var d = h.pageX || h.touches[0].pageX,
                  p = h.pageY || h.touches[0].pageY;
                l.el.fire("rot", { x: d, y: p, event: h });
              },
              o = this.drawPoint(r.width / 2, 20)
                .attr("class", this.options.classPoints + "_rot")
                .on("touchstart", a)
                .on("mousedown", a);
            this.rectSelection.set.add(o);
          }
        }),
        (T.prototype.handler = function () {
          var t = this.el.bbox();
          this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)),
            this.rectSelection.isSelected && this.updateRectSelection(),
            this.pointSelection.isSelected && this.updatePointSelection();
        }),
        (T.prototype.observe = function () {
          var t = this;
          if (MutationObserver)
            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
              (this.observerInst =
                this.observerInst ||
                new MutationObserver(function () {
                  t.handler();
                })),
                this.observerInst.observe(this.el.node, { attributes: !0 });
            else
              try {
                this.observerInst.disconnect(), delete this.observerInst;
              } catch {}
          else
            this.el.off("DOMAttrModified.select"),
              (this.rectSelection.isSelected ||
                this.pointSelection.isSelected) &&
                this.el.on("DOMAttrModified.select", function () {
                  t.handler();
                });
        }),
        (T.prototype.cleanup = function () {
          !this.rectSelection.isSelected &&
            this.rectSelection.set &&
            (this.rectSelection.set.each(function () {
              this.remove();
            }),
            this.rectSelection.set.clear(),
            delete this.rectSelection.set),
            !this.pointSelection.isSelected &&
              this.pointSelection.set &&
              (this.pointSelection.set.each(function () {
                this.remove();
              }),
              this.pointSelection.set.clear(),
              delete this.pointSelection.set),
            this.pointSelection.isSelected ||
              this.rectSelection.isSelected ||
              (this.nested.remove(), delete this.nested);
        }),
        SVG.extend(SVG.Element, {
          selectize: function (t, l) {
            return (
              typeof t == "object" && ((l = t), (t = !0)),
              (this.remember("_selectHandler") || new T(this)).init(
                t === void 0 || t,
                l || {},
              ),
              this
            );
          },
        }),
        (SVG.Element.prototype.selectize.defaults = {
          points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
          pointsExclude: [],
          classRect: "svg_select_boundingRect",
          classPoints: "svg_select_points",
          pointSize: 7,
          rotationPoint: !0,
          deepSelect: !1,
          pointType: "circle",
        });
    })(),
    (function () {
      (function () {
        function T(t) {
          t.remember("_resizeHandler", this),
            (this.el = t),
            (this.parameters = {}),
            (this.lastUpdateCall = null),
            (this.p = t.doc().node.createSVGPoint());
        }
        (T.prototype.transformPoint = function (t, l, r) {
          return (
            (this.p.x = t - (this.offset.x - window.pageXOffset)),
            (this.p.y = l - (this.offset.y - window.pageYOffset)),
            this.p.matrixTransform(r || this.m)
          );
        }),
          (T.prototype._extractPosition = function (t) {
            return {
              x: t.clientX != null ? t.clientX : t.touches[0].clientX,
              y: t.clientY != null ? t.clientY : t.touches[0].clientY,
            };
          }),
          (T.prototype.init = function (t) {
            var l = this;
            if ((this.stop(), t !== "stop")) {
              for (var r in ((this.options = {}), this.el.resize.defaults))
                (this.options[r] = this.el.resize.defaults[r]),
                  t[r] !== void 0 && (this.options[r] = t[r]);
              this.el.on("lt.resize", function (s) {
                l.resize(s || window.event);
              }),
                this.el.on("rt.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("rb.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("lb.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("t.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("r.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("b.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("l.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("rot.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.el.on("point.resize", function (s) {
                  l.resize(s || window.event);
                }),
                this.update();
            }
          }),
          (T.prototype.stop = function () {
            return (
              this.el.off("lt.resize"),
              this.el.off("rt.resize"),
              this.el.off("rb.resize"),
              this.el.off("lb.resize"),
              this.el.off("t.resize"),
              this.el.off("r.resize"),
              this.el.off("b.resize"),
              this.el.off("l.resize"),
              this.el.off("rot.resize"),
              this.el.off("point.resize"),
              this
            );
          }),
          (T.prototype.resize = function (t) {
            var l = this;
            (this.m = this.el.node.getScreenCTM().inverse()),
              (this.offset = { x: window.pageXOffset, y: window.pageYOffset });
            var r = this._extractPosition(t.detail.event);
            if (
              ((this.parameters = {
                type: this.el.type,
                p: this.transformPoint(r.x, r.y),
                x: t.detail.x,
                y: t.detail.y,
                box: this.el.bbox(),
                rotation: this.el.transform().rotation,
              }),
              this.el.type === "text" &&
                (this.parameters.fontSize = this.el.attr()["font-size"]),
              t.detail.i !== void 0)
            ) {
              var s = this.el.array().valueOf();
              (this.parameters.i = t.detail.i),
                (this.parameters.pointCoords = [
                  s[t.detail.i][0],
                  s[t.detail.i][1],
                ]);
            }
            switch (t.type) {
              case "lt":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o);
                  if (
                    this.parameters.box.width - h[0] > 0 &&
                    this.parameters.box.height - h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - h[0],
                        )
                      );
                    (h = this.checkAspectRatio(h)),
                      this.el
                        .move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y + h[1],
                        )
                        .size(
                          this.parameters.box.width - h[0],
                          this.parameters.box.height - h[1],
                        );
                  }
                };
                break;
              case "rt":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 2);
                  if (
                    this.parameters.box.width + h[0] > 0 &&
                    this.parameters.box.height - h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - h[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + h[0],
                        )
                      );
                    (h = this.checkAspectRatio(h, !0)),
                      this.el
                        .move(
                          this.parameters.box.x,
                          this.parameters.box.y + h[1],
                        )
                        .size(
                          this.parameters.box.width + h[0],
                          this.parameters.box.height - h[1],
                        );
                  }
                };
                break;
              case "rb":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 0);
                  if (
                    this.parameters.box.width + h[0] > 0 &&
                    this.parameters.box.height + h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - h[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + h[0],
                        )
                      );
                    (h = this.checkAspectRatio(h)),
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .size(
                          this.parameters.box.width + h[0],
                          this.parameters.box.height + h[1],
                        );
                  }
                };
                break;
              case "lb":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 1);
                  if (
                    this.parameters.box.width - h[0] > 0 &&
                    this.parameters.box.height + h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - h[0],
                        )
                      );
                    (h = this.checkAspectRatio(h, !0)),
                      this.el
                        .move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y,
                        )
                        .size(
                          this.parameters.box.width - h[0],
                          this.parameters.box.height + h[1],
                        );
                  }
                };
                break;
              case "t":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 2);
                  if (this.parameters.box.height - h[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y + h[1])
                      .height(this.parameters.box.height - h[1]);
                  }
                };
                break;
              case "r":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 0);
                  if (this.parameters.box.width + h[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .width(this.parameters.box.width + h[0]);
                  }
                };
                break;
              case "b":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 0);
                  if (this.parameters.box.height + h[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .height(this.parameters.box.height + h[1]);
                  }
                };
                break;
              case "l":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(a, o, 1);
                  if (this.parameters.box.width - h[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x + h[0], this.parameters.box.y)
                      .width(this.parameters.box.width - h[0]);
                  }
                };
                break;
              case "rot":
                this.calc = function (a, o) {
                  var h = a + this.parameters.p.x,
                    d = o + this.parameters.p.y,
                    p = Math.atan2(
                      this.parameters.p.y -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      this.parameters.p.x -
                        this.parameters.box.x -
                        this.parameters.box.width / 2,
                    ),
                    m = Math.atan2(
                      d -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      h - this.parameters.box.x - this.parameters.box.width / 2,
                    ),
                    x =
                      this.parameters.rotation +
                      (180 * (m - p)) / Math.PI +
                      this.options.snapToAngle / 2;
                  this.el
                    .center(this.parameters.box.cx, this.parameters.box.cy)
                    .rotate(
                      x - (x % this.options.snapToAngle),
                      this.parameters.box.cx,
                      this.parameters.box.cy,
                    );
                };
                break;
              case "point":
                this.calc = function (a, o) {
                  var h = this.snapToGrid(
                      a,
                      o,
                      this.parameters.pointCoords[0],
                      this.parameters.pointCoords[1],
                    ),
                    d = this.el.array().valueOf();
                  (d[this.parameters.i][0] =
                    this.parameters.pointCoords[0] + h[0]),
                    (d[this.parameters.i][1] =
                      this.parameters.pointCoords[1] + h[1]),
                    this.el.plot(d);
                };
            }
            this.el.fire("resizestart", {
              dx: this.parameters.x,
              dy: this.parameters.y,
              event: t,
            }),
              SVG.on(window, "touchmove.resize", function (a) {
                l.update(a || window.event);
              }),
              SVG.on(window, "touchend.resize", function () {
                l.done();
              }),
              SVG.on(window, "mousemove.resize", function (a) {
                l.update(a || window.event);
              }),
              SVG.on(window, "mouseup.resize", function () {
                l.done();
              });
          }),
          (T.prototype.update = function (t) {
            if (t) {
              var l = this._extractPosition(t),
                r = this.transformPoint(l.x, l.y),
                s = r.x - this.parameters.p.x,
                a = r.y - this.parameters.p.y;
              (this.lastUpdateCall = [s, a]),
                this.calc(s, a),
                this.el.fire("resizing", { dx: s, dy: a, event: t });
            } else
              this.lastUpdateCall &&
                this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
          }),
          (T.prototype.done = function () {
            (this.lastUpdateCall = null),
              SVG.off(window, "mousemove.resize"),
              SVG.off(window, "mouseup.resize"),
              SVG.off(window, "touchmove.resize"),
              SVG.off(window, "touchend.resize"),
              this.el.fire("resizedone");
          }),
          (T.prototype.snapToGrid = function (t, l, r, s) {
            var a;
            return (
              s !== void 0
                ? (a = [
                    (r + t) % this.options.snapToGrid,
                    (s + l) % this.options.snapToGrid,
                  ])
                : ((r = r ?? 3),
                  (a = [
                    (this.parameters.box.x +
                      t +
                      (1 & r ? 0 : this.parameters.box.width)) %
                      this.options.snapToGrid,
                    (this.parameters.box.y +
                      l +
                      (2 & r ? 0 : this.parameters.box.height)) %
                      this.options.snapToGrid,
                  ])),
              t < 0 && (a[0] -= this.options.snapToGrid),
              l < 0 && (a[1] -= this.options.snapToGrid),
              (t -=
                Math.abs(a[0]) < this.options.snapToGrid / 2
                  ? a[0]
                  : a[0] -
                    (t < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              (l -=
                Math.abs(a[1]) < this.options.snapToGrid / 2
                  ? a[1]
                  : a[1] -
                    (l < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              this.constraintToBox(t, l, r, s)
            );
          }),
          (T.prototype.constraintToBox = function (t, l, r, s) {
            var a,
              o,
              h = this.options.constraint || {};
            return (
              s !== void 0
                ? ((a = r), (o = s))
                : ((a =
                    this.parameters.box.x +
                    (1 & r ? 0 : this.parameters.box.width)),
                  (o =
                    this.parameters.box.y +
                    (2 & r ? 0 : this.parameters.box.height))),
              h.minX !== void 0 && a + t < h.minX && (t = h.minX - a),
              h.maxX !== void 0 && a + t > h.maxX && (t = h.maxX - a),
              h.minY !== void 0 && o + l < h.minY && (l = h.minY - o),
              h.maxY !== void 0 && o + l > h.maxY && (l = h.maxY - o),
              [t, l]
            );
          }),
          (T.prototype.checkAspectRatio = function (t, l) {
            if (!this.options.saveAspectRatio) return t;
            var r = t.slice(),
              s = this.parameters.box.width / this.parameters.box.height,
              a = this.parameters.box.width + t[0],
              o = this.parameters.box.height - t[1],
              h = a / o;
            return (
              h < s
                ? ((r[1] = a / s - this.parameters.box.height),
                  l && (r[1] = -r[1]))
                : h > s &&
                  ((r[0] = this.parameters.box.width - o * s),
                  l && (r[0] = -r[0])),
              r
            );
          }),
          SVG.extend(SVG.Element, {
            resize: function (t) {
              return (
                (this.remember("_resizeHandler") || new T(this)).init(t || {}),
                this
              );
            },
          }),
          (SVG.Element.prototype.resize.defaults = {
            snapToAngle: 0.1,
            snapToGrid: 1,
            constraint: {},
            saveAspectRatio: !1,
          });
      }).call(this);
    })(),
    window.Apex === void 0 && (window.Apex = {});
  var dh = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "initModules",
            value: function () {
              (this.ctx.publicMethods = [
                "updateOptions",
                "updateSeries",
                "appendData",
                "appendSeries",
                "toggleSeries",
                "showSeries",
                "hideSeries",
                "setLocale",
                "resetSeries",
                "zoomX",
                "toggleDataPointSelection",
                "dataURI",
                "exportToCSV",
                "addXaxisAnnotation",
                "addYaxisAnnotation",
                "addPointAnnotation",
                "clearAnnotations",
                "removeAnnotation",
                "paper",
                "destroy",
              ]),
                (this.ctx.eventList = [
                  "click",
                  "mousedown",
                  "mousemove",
                  "mouseleave",
                  "touchstart",
                  "touchmove",
                  "touchleave",
                  "mouseup",
                  "touchend",
                ]),
                (this.ctx.animations = new W(this.ctx)),
                (this.ctx.axes = new fe(this.ctx)),
                (this.ctx.core = new Wp(this.ctx.el, this.ctx)),
                (this.ctx.config = new we({})),
                (this.ctx.data = new Pl(this.ctx)),
                (this.ctx.grid = new V(this.ctx)),
                (this.ctx.graphics = new Z(this.ctx)),
                (this.ctx.coreUtils = new oe(this.ctx)),
                (this.ctx.crosshairs = new xe(this.ctx)),
                (this.ctx.events = new ee(this.ctx)),
                (this.ctx.exports = new Gi(this.ctx)),
                (this.ctx.localization = new re(this.ctx)),
                (this.ctx.options = new gt()),
                (this.ctx.responsive = new Me(this.ctx)),
                (this.ctx.series = new $e(this.ctx)),
                (this.ctx.theme = new Fe(this.ctx)),
                (this.ctx.formatters = new pl(this.ctx)),
                (this.ctx.titleSubtitle = new Xe(this.ctx)),
                (this.ctx.legend = new ih(this.ctx)),
                (this.ctx.toolbar = new rh(this.ctx)),
                (this.ctx.tooltip = new ah(this.ctx)),
                (this.ctx.dimensions = new gl(this.ctx)),
                (this.ctx.updateHelpers = new Vp(this.ctx)),
                (this.ctx.zoomPanSelection = new Tp(this.ctx)),
                (this.ctx.w.globals.tooltip = new ah(this.ctx));
            },
          },
        ]),
        T
      );
    })(),
    fh = (function () {
      function T(t) {
        g(this, T), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(T, [
          {
            key: "clear",
            value: function (t) {
              var l = t.isUpdating;
              this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(),
                this.ctx.toolbar && this.ctx.toolbar.destroy(),
                (this.ctx.animations = null),
                (this.ctx.axes = null),
                (this.ctx.annotations = null),
                (this.ctx.core = null),
                (this.ctx.data = null),
                (this.ctx.grid = null),
                (this.ctx.series = null),
                (this.ctx.responsive = null),
                (this.ctx.theme = null),
                (this.ctx.formatters = null),
                (this.ctx.titleSubtitle = null),
                (this.ctx.legend = null),
                (this.ctx.dimensions = null),
                (this.ctx.options = null),
                (this.ctx.crosshairs = null),
                (this.ctx.zoomPanSelection = null),
                (this.ctx.updateHelpers = null),
                (this.ctx.toolbar = null),
                (this.ctx.localization = null),
                (this.ctx.w.globals.tooltip = null),
                this.clearDomElements({ isUpdating: l });
            },
          },
          {
            key: "killSVG",
            value: function (t) {
              t.each(function (l, r) {
                this.removeClass("*"), this.off(), this.stop();
              }, !0),
                t.ungroup(),
                t.clear();
            },
          },
          {
            key: "clearDomElements",
            value: function (t) {
              var l = this,
                r = t.isUpdating,
                s = this.w.globals.dom.Paper.node;
              s.parentNode &&
                s.parentNode.parentNode &&
                !r &&
                (s.parentNode.parentNode.style.minHeight = "unset");
              var a = this.w.globals.dom.baseEl;
              a &&
                this.ctx.eventList.forEach(function (h) {
                  a.removeEventListener(h, l.ctx.events.documentEvent);
                });
              var o = this.w.globals.dom;
              if (this.ctx.el !== null)
                for (; this.ctx.el.firstChild; )
                  this.ctx.el.removeChild(this.ctx.el.firstChild);
              this.killSVG(o.Paper),
                o.Paper.remove(),
                (o.elWrap = null),
                (o.elGraphical = null),
                (o.elLegendWrap = null),
                (o.elLegendForeign = null),
                (o.baseEl = null),
                (o.elGridRect = null),
                (o.elGridRectMask = null),
                (o.elGridRectMarkerMask = null),
                (o.elForecastMask = null),
                (o.elNonForecastMask = null),
                (o.elDefs = null);
            },
          },
        ]),
        T
      );
    })(),
    Ha = new WeakMap(),
    Gp = (function () {
      function T(t, l) {
        g(this, T),
          (this.opts = l),
          (this.ctx = this),
          (this.w = new ze(l).init()),
          (this.el = t),
          (this.w.globals.cuid = L.randomId()),
          (this.w.globals.chartID = this.w.config.chart.id
            ? L.escapeString(this.w.config.chart.id)
            : this.w.globals.cuid),
          new dh(this).initModules(),
          (this.create = L.bind(this.create, this)),
          (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
          (this.parentResizeHandler = this._parentResizeCallback.bind(this));
      }
      return (
        k(
          T,
          [
            {
              key: "render",
              value: function () {
                var t = this;
                return new Promise(function (l, r) {
                  if (t.el !== null) {
                    Apex._chartInstances === void 0 &&
                      (Apex._chartInstances = []),
                      t.w.config.chart.id &&
                        Apex._chartInstances.push({
                          id: t.w.globals.chartID,
                          group: t.w.config.chart.group,
                          chart: t,
                        }),
                      t.setLocale(t.w.config.chart.defaultLocale);
                    var s = t.w.config.chart.events.beforeMount;
                    if (
                      (typeof s == "function" && s(t, t.w),
                      t.events.fireEvent("beforeMount", [t, t.w]),
                      window.addEventListener("resize", t.windowResizeHandler),
                      (function (m, x) {
                        var v = !1;
                        if (m.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                          var w = m.getBoundingClientRect();
                          (m.style.display !== "none" && w.width !== 0) ||
                            (v = !0);
                        }
                        var S = new ResizeObserver(function (A) {
                          v && x.call(m, A), (v = !0);
                        });
                        m.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                          ? Array.from(m.children).forEach(function (A) {
                              return S.observe(A);
                            })
                          : S.observe(m),
                          Ha.set(x, S);
                      })(t.el.parentNode, t.parentResizeHandler),
                      !t.css)
                    ) {
                      var a = t.el.getRootNode && t.el.getRootNode(),
                        o = L.is("ShadowRoot", a),
                        h = t.el.ownerDocument,
                        d = h.getElementById("apexcharts-css");
                      (!o && d) ||
                        ((t.css = document.createElement("style")),
                        (t.css.id = "apexcharts-css"),
                        (t.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}
`),
                        o ? a.prepend(t.css) : h.head.appendChild(t.css));
                    }
                    var p = t.create(t.w.config.series, {});
                    if (!p) return l(t);
                    t.mount(p)
                      .then(function () {
                        typeof t.w.config.chart.events.mounted == "function" &&
                          t.w.config.chart.events.mounted(t, t.w),
                          t.events.fireEvent("mounted", [t, t.w]),
                          l(p);
                      })
                      .catch(function (m) {
                        r(m);
                      });
                  } else r(new Error("Element not found"));
                });
              },
            },
            {
              key: "create",
              value: function (t, l) {
                var r = this.w;
                new dh(this).initModules();
                var s = this.w.globals;
                if (
                  ((s.noData = !1),
                  (s.animationEnded = !1),
                  this.responsive.checkResponsiveConfig(l),
                  r.config.xaxis.convertedCatToNumeric &&
                    new ge(r.config).convertCatToNumericXaxis(
                      r.config,
                      this.ctx,
                    ),
                  this.el === null ||
                    (this.core.setupElements(),
                    r.config.chart.type === "treemap" &&
                      ((r.config.grid.show = !1),
                      (r.config.yaxis[0].show = !1)),
                    s.svgWidth === 0))
                )
                  return (s.animationEnded = !0), null;
                var a = oe.checkComboSeries(t);
                (s.comboCharts = a.comboCharts),
                  (s.comboBarCount = a.comboBarCount);
                var o = t.every(function (m) {
                  return m.data && m.data.length === 0;
                });
                (t.length === 0 || o) && this.series.handleNoData(),
                  this.events.setupEventHandlers(),
                  this.data.parseData(t),
                  this.theme.init(),
                  new Wt(this).setGlobalMarkerSize(),
                  this.formatters.setLabelFormatters(),
                  this.titleSubtitle.draw(),
                  (s.noData &&
                    s.collapsedSeries.length !== s.series.length &&
                    !r.config.legend.showForSingleSeries) ||
                    this.legend.init(),
                  this.series.hasAllSeriesEqualX(),
                  s.axisCharts &&
                    (this.core.coreCalculations(),
                    r.config.xaxis.type !== "category" &&
                      this.formatters.setLabelFormatters(),
                    (this.ctx.toolbar.minX = r.globals.minX),
                    (this.ctx.toolbar.maxX = r.globals.maxX)),
                  this.formatters.heatmapLabelFormatters(),
                  new oe(this).getLargestMarkerSize(),
                  this.dimensions.plotCoords();
                var h = this.core.xySettings();
                this.grid.createGridMask();
                var d = this.core.plotChartType(t, h),
                  p = new Gt(this);
                return (
                  p.bringForward(),
                  r.config.dataLabels.background.enabled &&
                    p.dataLabelsBackground(),
                  this.core.shiftGraphPosition(),
                  {
                    elGraph: d,
                    xyRatios: h,
                    dimensions: {
                      plot: {
                        left: r.globals.translateX,
                        top: r.globals.translateY,
                        width: r.globals.gridWidth,
                        height: r.globals.gridHeight,
                      },
                    },
                  }
                );
              },
            },
            {
              key: "mount",
              value: function () {
                var t = this,
                  l =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  r = this,
                  s = r.w;
                return new Promise(function (a, o) {
                  if (r.el === null)
                    return o(
                      new Error(
                        "Not enough data to display or target element not found",
                      ),
                    );
                  (l === null || s.globals.allSeriesCollapsed) &&
                    r.series.handleNoData(),
                    (r.grid = new V(r));
                  var h = r.grid.drawGrid();
                  if (
                    ((r.annotations = new fl(r)),
                    r.annotations.drawImageAnnos(),
                    r.annotations.drawTextAnnos(),
                    s.config.grid.position === "back" &&
                      h &&
                      s.globals.dom.elGraphical.add(h.el),
                    Array.isArray(l.elGraph))
                  )
                    for (var d = 0; d < l.elGraph.length; d++)
                      s.globals.dom.elGraphical.add(l.elGraph[d]);
                  else s.globals.dom.elGraphical.add(l.elGraph);
                  s.config.grid.position === "front" &&
                    h &&
                    s.globals.dom.elGraphical.add(h.el),
                    h &&
                      h.elGridBorders &&
                      h.elGridBorders.node &&
                      s.globals.dom.elGraphical.add(h.elGridBorders),
                    s.config.xaxis.crosshairs.position === "front" &&
                      r.crosshairs.drawXCrosshairs(),
                    s.config.yaxis[0].crosshairs.position === "front" &&
                      r.crosshairs.drawYCrosshairs(),
                    s.config.chart.type !== "treemap" &&
                      r.axes.drawAxis(s.config.chart.type, h);
                  var p = new X(t.ctx, h),
                    m = new Y(t.ctx, h);
                  if (
                    (h !== null &&
                      (p.xAxisLabelCorrections(h.xAxisTickWidth),
                      m.setYAxisTextAlignments(),
                      s.config.yaxis.map(function (v, w) {
                        s.globals.ignoreYAxisIndexes.indexOf(w) === -1 &&
                          m.yAxisTitleRotate(w, v.opposite);
                      })),
                    r.annotations.drawAxesAnnotations(),
                    !s.globals.noData)
                  ) {
                    if (
                      (s.config.tooltip.enabled &&
                        !s.globals.noData &&
                        r.w.globals.tooltip.drawTooltip(l.xyRatios),
                      s.globals.axisCharts &&
                        (s.globals.isXNumeric ||
                          s.config.xaxis.convertedCatToNumeric ||
                          s.globals.isRangeBar))
                    )
                      (s.config.chart.zoom.enabled ||
                        (s.config.chart.selection &&
                          s.config.chart.selection.enabled) ||
                        (s.config.chart.pan && s.config.chart.pan.enabled)) &&
                        r.zoomPanSelection.init({ xyRatios: l.xyRatios });
                    else {
                      var x = s.config.chart.toolbar.tools;
                      [
                        "zoom",
                        "zoomin",
                        "zoomout",
                        "selection",
                        "pan",
                        "reset",
                      ].forEach(function (v) {
                        x[v] = !1;
                      });
                    }
                    s.config.chart.toolbar.show &&
                      !s.globals.allSeriesCollapsed &&
                      r.toolbar.createToolbar();
                  }
                  s.globals.memory.methodsToExec.length > 0 &&
                    s.globals.memory.methodsToExec.forEach(function (v) {
                      v.method(v.params, !1, v.context);
                    }),
                    s.globals.axisCharts ||
                      s.globals.noData ||
                      r.core.resizeNonAxisCharts(),
                    a(r);
                });
              },
            },
            {
              key: "destroy",
              value: function () {
                var t, l;
                window.removeEventListener("resize", this.windowResizeHandler),
                  this.el.parentNode,
                  (t = this.parentResizeHandler),
                  (l = Ha.get(t)) && (l.disconnect(), Ha.delete(t));
                var r = this.w.config.chart.id;
                r &&
                  Apex._chartInstances.forEach(function (s, a) {
                    s.id === L.escapeString(r) &&
                      Apex._chartInstances.splice(a, 1);
                  }),
                  new fh(this.ctx).clear({ isUpdating: !1 });
              },
            },
            {
              key: "updateOptions",
              value: function (t) {
                var l = this,
                  r =
                    arguments.length > 1 &&
                    arguments[1] !== void 0 &&
                    arguments[1],
                  s =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  a =
                    !(arguments.length > 3 && arguments[3] !== void 0) ||
                    arguments[3],
                  o =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  h = this.w;
                return (
                  (h.globals.selection = void 0),
                  t.series &&
                    (this.series.resetSeries(!1, !0, !1),
                    t.series.length &&
                      t.series[0].data &&
                      (t.series = t.series.map(function (d, p) {
                        return l.updateHelpers._extendSeries(d, p);
                      })),
                    this.updateHelpers.revertDefaultAxisMinMax()),
                  t.xaxis && (t = this.updateHelpers.forceXAxisUpdate(t)),
                  t.yaxis && (t = this.updateHelpers.forceYAxisUpdate(t)),
                  h.globals.collapsedSeriesIndices.length > 0 &&
                    this.series.clearPreviousPaths(),
                  t.theme && (t = this.theme.updateThemeOptions(t)),
                  this.updateHelpers._updateOptions(t, r, s, a, o)
                );
              },
            },
            {
              key: "updateSeries",
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  r =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2];
                return (
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(t, l, r)
                );
              },
            },
            {
              key: "appendSeries",
              value: function (t) {
                var l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  r =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  s = this.w.config.series.slice();
                return (
                  s.push(t),
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(s, l, r)
                );
              },
            },
            {
              key: "appendData",
              value: function (t) {
                var l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  r = this;
                (r.w.globals.dataChanged = !0), r.series.getPreviousPaths();
                for (
                  var s = r.w.config.series.slice(), a = 0;
                  a < s.length;
                  a++
                )
                  if (t[a] !== null && t[a] !== void 0)
                    for (var o = 0; o < t[a].data.length; o++)
                      s[a].data.push(t[a].data[o]);
                return (
                  (r.w.config.series = s),
                  l && (r.w.globals.initialSeries = L.clone(r.w.config.series)),
                  this.update()
                );
              },
            },
            {
              key: "update",
              value: function (t) {
                var l = this;
                return new Promise(function (r, s) {
                  new fh(l.ctx).clear({ isUpdating: !0 });
                  var a = l.create(l.w.config.series, t);
                  if (!a) return r(l);
                  l.mount(a)
                    .then(function () {
                      typeof l.w.config.chart.events.updated == "function" &&
                        l.w.config.chart.events.updated(l, l.w),
                        l.events.fireEvent("updated", [l, l.w]),
                        (l.w.globals.isDirty = !0),
                        r(l);
                    })
                    .catch(function (o) {
                      s(o);
                    });
                });
              },
            },
            {
              key: "getSyncedCharts",
              value: function () {
                var t = this.getGroupedCharts(),
                  l = [this];
                return (
                  t.length &&
                    ((l = []),
                    t.forEach(function (r) {
                      l.push(r);
                    })),
                  l
                );
              },
            },
            {
              key: "getGroupedCharts",
              value: function () {
                var t = this;
                return Apex._chartInstances
                  .filter(function (l) {
                    if (l.group) return !0;
                  })
                  .map(function (l) {
                    return t.w.config.chart.group === l.group ? l.chart : t;
                  });
              },
            },
            {
              key: "toggleSeries",
              value: function (t) {
                return this.series.toggleSeries(t);
              },
            },
            {
              key: "highlightSeriesOnLegendHover",
              value: function (t, l) {
                return this.series.toggleSeriesOnHover(t, l);
              },
            },
            {
              key: "showSeries",
              value: function (t) {
                this.series.showSeries(t);
              },
            },
            {
              key: "hideSeries",
              value: function (t) {
                this.series.hideSeries(t);
              },
            },
            {
              key: "resetSeries",
              value: function () {
                var t =
                    !(arguments.length > 0 && arguments[0] !== void 0) ||
                    arguments[0],
                  l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1];
                this.series.resetSeries(t, l);
              },
            },
            {
              key: "addEventListener",
              value: function (t, l) {
                this.events.addEventListener(t, l);
              },
            },
            {
              key: "removeEventListener",
              value: function (t, l) {
                this.events.removeEventListener(t, l);
              },
            },
            {
              key: "addXaxisAnnotation",
              value: function (t) {
                var l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  r =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                r && (s = r), s.annotations.addXaxisAnnotationExternal(t, l, s);
              },
            },
            {
              key: "addYaxisAnnotation",
              value: function (t) {
                var l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  r =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                r && (s = r), s.annotations.addYaxisAnnotationExternal(t, l, s);
              },
            },
            {
              key: "addPointAnnotation",
              value: function (t) {
                var l =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  r =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                r && (s = r), s.annotations.addPointAnnotationExternal(t, l, s);
              },
            },
            {
              key: "clearAnnotations",
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : void 0,
                  l = this;
                t && (l = t), l.annotations.clearAnnotations(l);
              },
            },
            {
              key: "removeAnnotation",
              value: function (t) {
                var l =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : void 0,
                  r = this;
                l && (r = l), r.annotations.removeAnnotation(r, t);
              },
            },
            {
              key: "getChartArea",
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-inner",
                );
              },
            },
            {
              key: "getSeriesTotalXRange",
              value: function (t, l) {
                return this.coreUtils.getSeriesTotalsXRange(t, l);
              },
            },
            {
              key: "getHighestValueInSeries",
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new j(this.ctx).getMinYMaxY(t).highestY;
              },
            },
            {
              key: "getLowestValueInSeries",
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new j(this.ctx).getMinYMaxY(t).lowestY;
              },
            },
            {
              key: "getSeriesTotal",
              value: function () {
                return this.w.globals.seriesTotals;
              },
            },
            {
              key: "toggleDataPointSelection",
              value: function (t, l) {
                return this.updateHelpers.toggleDataPointSelection(t, l);
              },
            },
            {
              key: "zoomX",
              value: function (t, l) {
                this.ctx.toolbar.zoomUpdateOptions(t, l);
              },
            },
            {
              key: "setLocale",
              value: function (t) {
                this.localization.setCurrentLocaleValues(t);
              },
            },
            {
              key: "dataURI",
              value: function (t) {
                return new Gi(this.ctx).dataURI(t);
              },
            },
            {
              key: "exportToCSV",
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
                return new Gi(this.ctx).exportToCSV(t);
              },
            },
            {
              key: "paper",
              value: function () {
                return this.w.globals.dom.Paper;
              },
            },
            {
              key: "_parentResizeCallback",
              value: function () {
                this.w.globals.animationEnded &&
                  this.w.config.chart.redrawOnParentResize &&
                  this._windowResize();
              },
            },
            {
              key: "_windowResize",
              value: function () {
                var t = this;
                clearTimeout(this.w.globals.resizeTimer),
                  (this.w.globals.resizeTimer = window.setTimeout(function () {
                    (t.w.globals.resized = !0),
                      (t.w.globals.dataChanged = !1),
                      t.ctx.update();
                  }, 150));
              },
            },
            {
              key: "_windowResizeHandler",
              value: function () {
                var t = this.w.config.chart.redrawOnWindowResize;
                typeof t == "function" && (t = t()), t && this._windowResize();
              },
            },
          ],
          [
            {
              key: "getChartByID",
              value: function (t) {
                var l = L.escapeString(t),
                  r = Apex._chartInstances.filter(function (s) {
                    return s.id === l;
                  })[0];
                return r && r.chart;
              },
            },
            {
              key: "initOnLoad",
              value: function () {
                for (
                  var t = document.querySelectorAll("[data-apexcharts]"), l = 0;
                  l < t.length;
                  l++
                )
                  new T(
                    t[l],
                    JSON.parse(t[l].getAttribute("data-options")),
                  ).render();
              },
            },
            {
              key: "exec",
              value: function (t, l) {
                var r = this.getChartByID(t);
                if (r) {
                  r.w.globals.isExecCalled = !0;
                  var s = null;
                  if (r.publicMethods.indexOf(l) !== -1) {
                    for (
                      var a = arguments.length,
                        o = new Array(a > 2 ? a - 2 : 0),
                        h = 2;
                      h < a;
                      h++
                    )
                      o[h - 2] = arguments[h];
                    s = r[l].apply(r, o);
                  }
                  return s;
                }
              },
            },
            {
              key: "merge",
              value: function (t, l) {
                return L.extend(t, l);
              },
            },
          ],
        ),
        T
      );
    })();
  e.exports = Gp;
})(H0, H0.exports);
var fy = H0.exports,
  Sp = { exports: {} },
  py = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
  gy = py,
  my = gy;
function Cp() {}
function Ap() {}
Ap.resetWarningCache = Cp;
var xy = function () {
  function e(c, u, g, b, k, E) {
    if (E !== my) {
      var I = new Error(
        "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types",
      );
      throw ((I.name = "Invariant Violation"), I);
    }
  }
  e.isRequired = e;
  function i() {
    return e;
  }
  var n = {
    array: e,
    bigint: e,
    bool: e,
    func: e,
    number: e,
    object: e,
    string: e,
    symbol: e,
    any: e,
    arrayOf: i,
    element: e,
    elementType: e,
    instanceOf: i,
    node: e,
    objectOf: i,
    oneOf: i,
    oneOfType: i,
    shape: i,
    exact: i,
    checkPropTypes: Ap,
    resetWarningCache: Cp,
  };
  return (n.PropTypes = n), n;
};
Sp.exports = xy();
var vy = Sp.exports,
  th;
Object.defineProperty(kp, "__esModule", { value: !0 });
var yy =
    typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            typeof Symbol == "function" &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        },
  by =
    Object.assign ||
    function (e) {
      for (var i = 1; i < arguments.length; i++) {
        var n,
          c = arguments[i];
        for (n in c)
          Object.prototype.hasOwnProperty.call(c, n) && (e[n] = c[n]);
      }
      return e;
    },
  wy = (function () {
    function e(i, n) {
      for (var c = 0; c < n.length; c++) {
        var u = n[c];
        (u.enumerable = u.enumerable || !1),
          (u.configurable = !0),
          "value" in u && (u.writable = !0),
          Object.defineProperty(i, u.key, u);
      }
    }
    return function (i, n, c) {
      return n && e(i.prototype, n), c && e(i, c), i;
    };
  })(),
  ky = fy,
  Ep = lh(ky),
  Pp = ce,
  Qr = lh(Pp),
  Sy = vy,
  Ll = lh(Sy);
function lh(e) {
  return e && e.__esModule ? e : { default: e };
}
function Cy(e, i, n) {
  return (
    i in e
      ? Object.defineProperty(e, i, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[i] = n),
    e
  );
}
function Ay(e, i) {
  var n,
    c = {};
  for (n in e)
    0 <= i.indexOf(n) ||
      (Object.prototype.hasOwnProperty.call(e, n) && (c[n] = e[n]));
  return c;
}
function Ey(e, i) {
  if (!(e instanceof i))
    throw new TypeError("Cannot call a class as a function");
}
function Py(e, i) {
  if (e) return !i || (typeof i != "object" && typeof i != "function") ? e : i;
  throw new ReferenceError(
    "this hasn't been initialised - super() hasn't been called",
  );
}
function Ly(e, i) {
  if (typeof i != "function" && i !== null)
    throw new TypeError(
      "Super expression must either be null or a function, not " + typeof i,
    );
  (e.prototype = Object.create(i && i.prototype, {
    constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 },
  })),
    i &&
      (Object.setPrototypeOf ? Object.setPrototypeOf(e, i) : (e.__proto__ = i));
}
window.ApexCharts = Ep.default;
var t1 = (function () {
  function e(i) {
    Ey(this, e);
    var n = Py(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, i));
    return (
      Qr.default.createRef
        ? (n.chartRef = Qr.default.createRef())
        : (n.setRef = function (c) {
            return (n.chartRef = c);
          }),
      (n.chart = null),
      n
    );
  }
  return (
    Ly(e, Pp.Component),
    wy(e, [
      {
        key: "render",
        value: function () {
          var i = Ay(this.props, []);
          return Qr.default.createElement(
            "div",
            by({ ref: Qr.default.createRef ? this.chartRef : this.setRef }, i),
          );
        },
      },
      {
        key: "componentDidMount",
        value: function () {
          var i = Qr.default.createRef ? this.chartRef.current : this.chartRef;
          (this.chart = new Ep.default(i, this.getConfig())),
            this.chart.render();
        },
      },
      {
        key: "getConfig",
        value: function () {
          var g = this.props,
            i = g.type,
            n = g.height,
            c = g.width,
            u = g.series,
            g = g.options;
          return this.extend(g, {
            chart: { type: i, height: n, width: c },
            series: u,
          });
        },
      },
      {
        key: "isObject",
        value: function (i) {
          return (
            i &&
            (i === void 0 ? "undefined" : yy(i)) === "object" &&
            !Array.isArray(i) &&
            i != null
          );
        },
      },
      {
        key: "extend",
        value: function (i, n) {
          var c = this,
            u =
              (typeof Object.assign != "function" &&
                (Object.assign = function (g) {
                  if (g == null)
                    throw new TypeError(
                      "Cannot convert undefined or null to object",
                    );
                  for (var b = Object(g), k = 1; k < arguments.length; k++) {
                    var E = arguments[k];
                    if (E != null)
                      for (var I in E) E.hasOwnProperty(I) && (b[I] = E[I]);
                  }
                  return b;
                }),
              Object.assign({}, i));
          return (
            this.isObject(i) &&
              this.isObject(n) &&
              Object.keys(n).forEach(function (g) {
                c.isObject(n[g]) && g in i
                  ? (u[g] = c.extend(i[g], n[g]))
                  : Object.assign(u, Cy({}, g, n[g]));
              }),
            u
          );
        },
      },
      {
        key: "componentDidUpdate",
        value: function (i) {
          if (!this.chart) return null;
          var u = this.props,
            k = u.options,
            n = u.series,
            c = u.height,
            u = u.width,
            g = JSON.stringify(i.options),
            b = JSON.stringify(i.series),
            k = JSON.stringify(k),
            E = JSON.stringify(n);
          (g === k && b === E && c === i.height && u === i.width) ||
            (b !== E && g === k && c === i.height && u === i.width
              ? this.chart.updateSeries(n)
              : this.chart.updateOptions(this.getConfig()));
        },
      },
      {
        key: "componentWillUnmount",
        value: function () {
          this.chart &&
            typeof this.chart.destroy == "function" &&
            this.chart.destroy();
        },
      },
    ]),
    e
  );
})();
((th = kp.default = t1).propTypes = {
  type: Ll.default.string.isRequired,
  width: Ll.default.oneOfType([Ll.default.string, Ll.default.number]),
  height: Ll.default.oneOfType([Ll.default.string, Ll.default.number]),
  series: Ll.default.array.isRequired,
  options: Ll.default.object.isRequired,
}),
  (t1.defaultProps = { type: "line", width: "100%", height: "auto" });
const $i = {
    legend: { show: !1, position: "top", horizontalAlign: "left" },
    colors: ["#3C50E0", "#80CAEE"],
    chart: {
      fontFamily: "Satoshi, sans-serif",
      height: 335,
      type: "area",
      dropShadow: {
        enabled: !0,
        color: "#623CEA14",
        top: 10,
        blur: 4,
        left: 0,
        opacity: 0.1,
      },
      toolbar: { show: !1 },
    },
    responsive: [
      { breakpoint: 1024, options: { chart: { height: 300 } } },
      { breakpoint: 1366, options: { chart: { height: 350 } } },
    ],
    stroke: { width: [2, 2], curve: "straight" },
    grid: { xaxis: { lines: { show: !0 } }, yaxis: { lines: { show: !0 } } },
    dataLabels: { enabled: !1 },
    markers: {
      size: 4,
      colors: "#fff",
      strokeColors: ["#3056D3", "#80CAEE"],
      strokeWidth: 3,
      strokeOpacity: 0.9,
      strokeDashArray: 0,
      fillOpacity: 1,
      discrete: [],
      hover: { size: void 0, sizeOffset: 3 },
    },
    xaxis: {
      type: "category",
      categories: [],
      axisBorder: { show: !1 },
      axisTicks: { show: !1 },
    },
    yaxis: { title: { style: { fontSize: "0px" } }, min: 0, max: 100 },
  },
  Ty = (e, i, n) => {
    const c = [],
      u = [],
      g = [];
    for (let b = -3; b <= 12; b++) {
      const k = new Date(n);
      k.setHours(n.getHours() + b);
      const I = k.getHours().toString().padStart(2, "0") + ":00:00";
      let F;
      k.getDate() === n.getDate()
        ? (F = e.find((H) => H.datetime === I))
        : (F = i.find((H) => H.datetime === I)),
        F &&
          (c.push(F.datetime.slice(0, 5)),
          u.push(((F.temp - 31) / 1.8).toFixed(1)),
          g.push(F.windspeed));
    }
    return { labels: c, temperatures: u, windSpeeds: g };
  },
  My = () => {
    const { name: e } = es();
    console.log("name", e);
    const n = Gc().getQueryData(["weather", e]);
    console.log("data:", n);
    const c = new Date(),
      [u, g] = ce.useState({
        series: [
          { name: "Temperature in °C", data: [] },
          { name: "Wind Speed in km/h", data: [] },
        ],
      });
    return (
      ce.useEffect(() => {
        if (n) {
          const b = n == null ? void 0 : n.days[0].hours,
            k =
              n != null && n.days[1]
                ? n == null
                  ? void 0
                  : n.days[1].hours
                : [],
            { labels: E, temperatures: I, windSpeeds: F } = Ty(b, k, c);
          g({
            series: [
              { name: "Temperature in °C", data: I },
              { name: "Wind Speed in km/h", data: F },
            ],
          }),
            ($i.xaxis.categories = E);
        }
      }, [n]),
      _.jsxs("div", {
        className:
          "col-span-12 rounded-sm border border-stroke bg-white px-5 pt-7.5 pb-5 shadow-default dark:border-strokedark dark:bg-boxdark sm:px-7.5 xl:col-span-8",
        children: [
          _.jsxs("div", {
            className:
              "flex flex-wrap items-start justify-between gap-3 sm:flex-nowrap",
            children: [
              _.jsxs("div", {
                className: "flex w-full flex-wrap gap-3 sm:gap-5",
                children: [
                  _.jsxs("div", {
                    className: "flex min-w-47.5",
                    children: [
                      _.jsx("span", {
                        className:
                          "mt-1 mr-2 flex h-4 w-full max-w-4 items-center justify-center rounded-full border border-primary",
                        children: _.jsx("span", {
                          className:
                            "block h-2.5 w-full max-w-2.5 rounded-full bg-primary",
                        }),
                      }),
                      _.jsx("div", {
                        className: "w-full",
                        children: _.jsx("p", {
                          className: "font-semibold text-primary",
                          children: "Temperature",
                        }),
                      }),
                    ],
                  }),
                  _.jsxs("div", {
                    className: "flex min-w-47.5",
                    children: [
                      _.jsx("span", {
                        className:
                          "mt-1 mr-2 flex h-4 w-full max-w-4 items-center justify-center rounded-full border border-secondary",
                        children: _.jsx("span", {
                          className:
                            "block h-2.5 w-full max-w-2.5 rounded-full bg-secondary",
                        }),
                      }),
                      _.jsx("div", {
                        className: "w-full",
                        children: _.jsx("p", {
                          className: "font-semibold text-secondary",
                          children: "Wind Speed",
                        }),
                      }),
                    ],
                  }),
                ],
              }),
              _.jsx("div", {
                className: "flex w-full max-w-45 justify-end",
                children: _.jsxs("div", {
                  className:
                    "inline-flex items-center rounded-md bg-whiter p-1.5 dark:bg-meta-4",
                  children: [
                    _.jsx("button", {
                      className:
                        "rounded bg-white py-1 px-3 text-xs font-medium text-black shadow-card hover:bg-white hover:shadow-card dark:bg-boxdark dark:text-white dark:hover:bg-boxdark",
                      children: "Day",
                    }),
                    _.jsx("button", {
                      className:
                        "rounded py-1 px-3 text-xs font-medium text-black hover:bg-white hover:shadow-card dark:text-white dark:hover:bg-boxdark",
                      children: "Week",
                    }),
                    _.jsx("button", {
                      className:
                        "rounded py-1 px-3 text-xs font-medium text-black hover:bg-white hover:shadow-card dark:text-white dark:hover:bg-boxdark",
                      children: "Month",
                    }),
                  ],
                }),
              }),
            ],
          }),
          _.jsx("div", {
            children: _.jsx("div", {
              id: "chartOne",
              className: "-ml-5",
              children: _.jsx(th, {
                options: {
                  ...$i,
                  xaxis: {
                    ...$i.xaxis,
                    categories: u.series[0].data.map((b, k) => {
                      var E;
                      return (E = $i == null ? void 0 : $i.xaxis) == null
                        ? void 0
                        : E.categories[k];
                    }),
                  },
                },
                series: u.series,
                type: "area",
                height: 350,
              }),
            }),
          }),
        ],
      })
    );
  },
  Ry = () => {
    const { name: e } = es(),
      n = Gc().getQueryData(["weather", e]),
      [c, u] = ce.useState({
        colors: ["#3C50E0", "#80CAEE"],
        chart: {
          fontFamily: "Satoshi, sans-serif",
          type: "bar",
          height: 335,
          stacked: !0,
          toolbar: { show: !1 },
          zoom: { enabled: !1 },
        },
        responsive: [
          {
            breakpoint: 1536,
            options: {
              plotOptions: { bar: { borderRadius: 0, columnWidth: "25%" } },
            },
          },
        ],
        plotOptions: {
          bar: {
            horizontal: !1,
            borderRadius: 0,
            columnWidth: "25%",
            borderRadiusApplication: "end",
            borderRadiusWhenStacked: "last",
          },
        },
        dataLabels: { enabled: !1 },
        xaxis: { categories: [] },
        legend: {
          position: "top",
          horizontalAlign: "left",
          fontFamily: "Satoshi",
          fontWeight: 500,
          fontSize: "14px",
          markers: { radius: 99 },
        },
        fill: { opacity: 1 },
      }),
      [g, b] = ce.useState([
        { name: "Temperature", data: [] },
        { name: "Humidity", data: [] },
      ]);
    return (
      ce.useEffect(() => {
        var k;
        if (n) {
          const E =
              (k = n == null ? void 0 : n.days) == null
                ? void 0
                : k.slice(0, 7),
            I =
              E == null
                ? void 0
                : E.map((q) => ((Number(q.temp) - 32) / 1.8).toFixed(1)),
            F = E == null ? void 0 : E.map((q) => q.humidity);
          b([
            { name: "Temperature", data: I },
            { name: "Humidity", data: F },
          ]);
          const H = [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
            ],
            G = new Date().getDay(),
            K = H.slice(G, G + 7)
              .concat(H.slice(0, G))
              .slice(0, 7);
          u((q) => ({ ...q, xaxis: { categories: K } }));
        }
      }, [n]),
      _.jsxs("div", {
        className:
          "col-span-12 rounded-sm border border-stroke bg-white p-7.5 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-4",
        children: [
          _.jsx("div", {
            className: "mb-4 justify-between gap-4 sm:flex",
            children: _.jsx("div", {
              children: _.jsx("h4", {
                className: "text-xl font-semibold text-black dark:text-white",
                children: "Temperature and Humidity",
              }),
            }),
          }),
          _.jsx("div", {
            children: _.jsx("div", {
              id: "chartTwo",
              className: "-ml-5 -mb-9",
              children: _.jsx(th, {
                options: c,
                series: g,
                type: "bar",
                height: 350,
              }),
            }),
          }),
        ],
      })
    );
  };
var Lp = { exports: {} };
(function (e, i) {
  (function (n, c) {
    e.exports = c();
  })(Zp, function () {
    function n(X, V) {
      (X.prototype = Object.create(V.prototype)),
        (X.prototype.constructor = X),
        c(X, V);
    }
    function c(X, V) {
      return (
        (c = Object.setPrototypeOf
          ? Object.setPrototypeOf.bind()
          : function (N, j) {
              return (N.__proto__ = j), N;
            }),
        c(X, V)
      );
    }
    function u(X) {
      if (X === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called",
        );
      return X;
    }
    function g(X) {
      throw new TypeError('"' + X + '" is read-only');
    }
    function b(X, V) {
      (V == null || V > X.length) && (V = X.length);
      for (var N = 0, j = new Array(V); N < V; N++) j[N] = X[N];
      return j;
    }
    function k(X, V) {
      var N = (typeof Symbol < "u" && X[Symbol.iterator]) || X["@@iterator"];
      if (N) return (N = N.call(X)).next.bind(N);
      if (
        Array.isArray(X) ||
        (N = (function (Y, ee) {
          if (Y) {
            if (typeof Y == "string") return b(Y, ee);
            var re = Object.prototype.toString.call(Y).slice(8, -1);
            return (
              re === "Object" && Y.constructor && (re = Y.constructor.name),
              re === "Map" || re === "Set"
                ? Array.from(Y)
                : re === "Arguments" ||
                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(re)
                  ? b(Y, ee)
                  : void 0
            );
          }
        })(X)) ||
        (V && X && typeof X.length == "number")
      ) {
        N && (X = N);
        var j = 0;
        return function () {
          return j >= X.length ? { done: !0 } : { done: !1, value: X[j++] };
        };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    Element.prototype.matches ||
      (Element.prototype.matches =
        Element.prototype.matchesSelector ||
        Element.prototype.mozMatchesSelector ||
        Element.prototype.msMatchesSelector ||
        Element.prototype.oMatchesSelector ||
        Element.prototype.webkitMatchesSelector ||
        function (X) {
          for (
            var V = (this.document || this.ownerDocument).querySelectorAll(X),
              N = V.length;
            g("i") >= 0 && V.item(N) !== this;

          );
          return N > -1;
        }),
      Object.assign ||
        Object.defineProperty(Object, "assign", {
          enumerable: !1,
          configurable: !0,
          writable: !0,
          value: function (X) {
            if (X == null)
              throw new TypeError("Cannot convert first argument to object");
            for (var V = Object(X), N = 1; N < arguments.length; N++) {
              var j = arguments[N];
              if (j != null) {
                j = Object(j);
                for (
                  var Y = Object.keys(Object(j)), ee = 0, re = Y.length;
                  ee < re;
                  ee++
                ) {
                  var fe = Y[ee],
                    xe = Object.getOwnPropertyDescriptor(j, fe);
                  xe !== void 0 && xe.enumerable && (V[fe] = j[fe]);
                }
              }
            }
            return V;
          },
        });
    var E = function (X) {
        return (
          (function (V) {
            return !!V && typeof V == "object";
          })(X) &&
          !(function (V) {
            var N = Object.prototype.toString.call(V);
            return (
              N === "[object RegExp]" ||
              N === "[object Date]" ||
              (function (j) {
                return j instanceof Node;
              })(V) ||
              (function (j) {
                return j.$$typeof === I;
              })(V)
            );
          })(X)
        );
      },
      I =
        typeof Symbol == "function" && Symbol.for
          ? Symbol.for("react.element")
          : 60103;
    function F(X, V) {
      return V.clone !== !1 && V.isMergeableObject(X)
        ? Q(((N = X), Array.isArray(N) ? [] : {}), X, V)
        : X;
      var N;
    }
    function H(X, V, N) {
      return X.concat(V).map(function (j) {
        return F(j, N);
      });
    }
    function G(X) {
      return Object.keys(X).concat(
        (function (V) {
          return Object.getOwnPropertySymbols
            ? Object.getOwnPropertySymbols(V).filter(function (N) {
                return V.propertyIsEnumerable(N);
              })
            : [];
        })(X),
      );
    }
    function K(X, V) {
      try {
        return V in X;
      } catch {
        return !1;
      }
    }
    function q(X, V, N) {
      var j = {};
      return (
        N.isMergeableObject(X) &&
          G(X).forEach(function (Y) {
            j[Y] = F(X[Y], N);
          }),
        G(V).forEach(function (Y) {
          (function (ee, re) {
            return (
              K(ee, re) &&
              !(
                Object.hasOwnProperty.call(ee, re) &&
                Object.propertyIsEnumerable.call(ee, re)
              )
            );
          })(X, Y) ||
            (K(X, Y) && N.isMergeableObject(V[Y])
              ? (j[Y] = (function (ee, re) {
                  if (!re.customMerge) return Q;
                  var fe = re.customMerge(ee);
                  return typeof fe == "function" ? fe : Q;
                })(Y, N)(X[Y], V[Y], N))
              : (j[Y] = F(V[Y], N)));
        }),
        j
      );
    }
    var Q = function (X, V, N) {
        ((N = N || {}).arrayMerge = N.arrayMerge || H),
          (N.isMergeableObject = N.isMergeableObject || E),
          (N.cloneUnlessOtherwiseSpecified = F);
        var j = Array.isArray(V);
        return j === Array.isArray(X)
          ? j
            ? N.arrayMerge(X, V, N)
            : q(X, V, N)
          : F(V, N);
      },
      ue = function (X) {
        return typeof X == "object" && X.nodeType !== void 0
          ? X
          : typeof X == "string"
            ? document.querySelector(X)
            : null;
      },
      B = function (X, V, N, j) {
        j === void 0 && (j = !1);
        var Y = document.createElement(X);
        return (
          N && (Y[j ? "innerHTML" : "textContent"] = N),
          V && (Y.className = V),
          Y
        );
      },
      L = function (X) {
        X.parentNode.removeChild(X);
      },
      W = function (X, V, N) {
        return N === void 0 && (N = !1), N ? Q(X, V) : Object.assign(X, V);
      },
      te = function (X, V) {
        return X.toLowerCase() + ":to:" + V.toLowerCase();
      },
      Z = function (X, V) {
        Object.assign(X.prototype, V);
      },
      oe = {},
      pe = 1,
      ae = {
        on: function (X, V, N, j) {
          j === void 0 && (j = {});
          var Y = "jvm:" + V + "::" + pe++;
          (oe[Y] = { selector: X, handler: N }),
            (N._uid = Y),
            X.addEventListener(V, N, j);
        },
        delegate: function (X, V, N, j) {
          (V = V.split(" ")).forEach(function (Y) {
            ae.on(X, Y, function (ee) {
              var re = ee.target;
              re.matches(N) && j.call(re, ee);
            });
          });
        },
        off: function (X, V, N) {
          var j = V.split(":")[1];
          X.removeEventListener(j, N), delete oe[N._uid];
        },
        flush: function () {
          Object.keys(oe).forEach(function (X) {
            ae.off(oe[X].selector, X, oe[X].handler);
          });
        },
        getEventRegistry: function () {
          return oe;
        },
      },
      ke = {
        onLoaded: "map:loaded",
        onViewportChange: "viewport:changed",
        onRegionClick: "region:clicked",
        onMarkerClick: "marker:clicked",
        onRegionSelected: "region:selected",
        onMarkerSelected: "marker:selected",
        onRegionTooltipShow: "region.tooltip:show",
        onMarkerTooltipShow: "marker.tooltip:show",
        onDestroyed: "map:destroyed",
      },
      Se = function (X, V, N) {
        var j = ue(V),
          Y =
            j.getAttribute("class").indexOf("jvm-region") === -1
              ? "marker"
              : "region",
          ee = Y === "region",
          re = ee ? j.getAttribute("data-code") : j.getAttribute("data-index"),
          fe = ee ? ke.onRegionSelected : ke.onMarkerSelected;
        return (
          N && (fe = ee ? ke.onRegionTooltipShow : ke.onMarkerTooltipShow),
          {
            type: Y,
            code: re,
            event: fe,
            element: ee ? X.regions[re].element : X._markers[re].element,
            tooltipText: ee
              ? X._mapData.paths[re].name || ""
              : X._markers[re].config.name || "",
          }
        );
      },
      it = (function () {
        function X() {}
        return (
          (X.prototype.dispose = function () {
            this._tooltip ? L(this._tooltip) : this.shape.remove();
            for (
              var V, N = k(Object.getOwnPropertyNames(this));
              !(V = N()).done;

            )
              this[V.value] = null;
          }),
          X
        );
      })(),
      gt = {
        getLabelText: function (X, V) {
          if (V) {
            if (typeof V.render == "function") {
              var N = [];
              return (
                this.config && this.config.marker && N.push(this.config.marker),
                N.push(X),
                V.render.apply(this, N)
              );
            }
            return X;
          }
        },
        getLabelOffsets: function (X, V) {
          return typeof V.offsets == "function"
            ? V.offsets(X)
            : Array.isArray(V.offsets)
              ? V.offsets[X]
              : [0, 0];
        },
        setStyle: function (X, V) {
          this.shape.setStyle(X, V);
        },
        remove: function () {
          this.shape.remove(), this.label && this.label.remove();
        },
        hover: function (X) {
          this._setStatus("isHovered", X);
        },
        select: function (X) {
          this._setStatus("isSelected", X);
        },
        _setStatus: function (X, V) {
          (this.shape[X] = V),
            this.shape.updateStyle(),
            (this[X] = V),
            this.label && ((this.label[X] = V), this.label.updateStyle());
        },
      },
      fl = (function (X) {
        function V(j) {
          var Y,
            ee = j.map,
            re = j.code,
            fe = j.path,
            xe = j.style,
            Me = j.label,
            Fe = j.labelStyle,
            Xe = j.labelsGroup;
          ((Y = X.call(this) || this)._map = ee),
            (Y.shape = Y._createRegion(fe, re, xe));
          var rt = Y.getLabelText(re, Me);
          if (Me && rt) {
            var nt = Y.shape.getBBox(),
              Ee = Y.getLabelOffsets(re, Me);
            (Y.labelX = nt.x + nt.width / 2 + Ee[0]),
              (Y.labelY = nt.y + nt.height / 2 + Ee[1]),
              (Y.label = Y._map.canvas.createText(
                {
                  text: rt,
                  textAnchor: "middle",
                  alignmentBaseline: "central",
                  dataCode: re,
                  x: Y.labelX,
                  y: Y.labelY,
                },
                Fe,
                Xe,
              )),
              Y.label.addClass("jvm-region jvm-element");
          }
          return Y;
        }
        n(V, X);
        var N = V.prototype;
        return (
          (N._createRegion = function (j, Y, ee) {
            return (
              (j = this._map.canvas.createPath(
                { d: j, dataCode: Y },
                ee,
              )).addClass("jvm-region jvm-element"),
              j
            );
          }),
          (N.updateLabelPosition = function () {
            this.label &&
              this.label.set({
                x:
                  this.labelX * this._map.scale +
                  this._map.transX * this._map.scale,
                y:
                  this.labelY * this._map.scale +
                  this._map.transY * this._map.scale,
              });
          }),
          V
        );
      })(it);
    Z(fl, gt);
    var Ze = (function (X) {
        function V(N) {
          var j,
            Y = N.index,
            ee = N.map,
            re = N.style,
            fe = N.x1,
            xe = N.y1,
            Me = N.x2,
            Fe = N.y2,
            Xe = N.group,
            rt = N.config;
          return (
            ((j = X.call(this) || this).config = rt),
            (j.shape = ee.canvas.createLine(
              { x1: fe, y1: xe, x2: Me, y2: Fe, dataIndex: Y },
              re,
              Xe,
            )),
            j.shape.addClass("jvm-line"),
            j
          );
        }
        return (
          n(V, X),
          (V.prototype.setStyle = function (N, j) {
            this.shape.setStyle(N, j);
          }),
          V
        );
      })(it),
      pl = (function (X) {
        function V(j) {
          var Y,
            ee = j.index,
            re = j.style,
            fe = j.label,
            xe = j.cx,
            Me = j.cy,
            Fe = j.map,
            Xe = j.group;
          return (
            ((Y = X.call(this) || this)._map = Fe),
            (Y._isImage = !!re.initial.image),
            (Y.config = arguments[0]),
            (Y.shape = Fe.canvas[Y._isImage ? "createImage" : "createCircle"](
              { dataIndex: ee, cx: xe, cy: Me },
              re,
              Xe,
            )),
            Y.shape.addClass("jvm-marker jvm-element"),
            Y._isImage && Y.updateLabelPosition(),
            fe && Y._createLabel(Y.config),
            Y
          );
        }
        n(V, X);
        var N = V.prototype;
        return (
          (N.updateLabelPosition = function () {
            this.label &&
              this.label.set({
                x:
                  this._labelX * this._map.scale +
                  this._offsets[0] +
                  this._map.transX * this._map.scale +
                  5 +
                  (this._isImage
                    ? (this.shape.width || 0) / 2
                    : this.shape.node.r.baseVal.value),
                y:
                  this._labelY * this._map.scale +
                  this._map.transY * this._map.scale +
                  this._offsets[1],
              });
          }),
          (N._createLabel = function (j) {
            var Y = j.index,
              ee = j.map,
              re = j.label,
              fe = j.labelsGroup,
              xe = j.cx,
              Me = j.cy,
              Fe = j.marker,
              Xe = j.isRecentlyCreated,
              rt = this.getLabelText(Y, re);
            (this._labelX = xe / ee.scale - ee.transX),
              (this._labelY = Me / ee.scale - ee.transY),
              (this._offsets =
                Xe && Fe.offsets ? Fe.offsets : this.getLabelOffsets(Y, re)),
              (this.label = ee.canvas.createText(
                {
                  text: rt,
                  dataIndex: Y,
                  x: this._labelX,
                  y: this._labelY,
                  dy: "0.6ex",
                },
                ee.params.markerLabelStyle,
                fe,
              )),
              this.label.addClass("jvm-marker jvm-element"),
              Xe && this.updateLabelPosition();
          }),
          V
        );
      })(it);
    Z(pl, gt);
    var Al = (function () {
        function X(V) {
          V === void 0 && (V = {}),
            (this._options = V),
            (this._map = this._options.map),
            (this._series = this._options.series),
            (this._body = B("div", "jvm-legend")),
            this._options.cssClass &&
              this._body.setAttribute("class", this._options.cssClass),
            V.vertical
              ? this._map.legendVertical.appendChild(this._body)
              : this._map.legendHorizontal.appendChild(this._body),
            this.render();
        }
        return (
          (X.prototype.render = function () {
            var V,
              N = this._series.scale.getTicks(),
              j = B("div", "jvm-legend-inner");
            if (((this._body.innderHTML = ""), this._options.title)) {
              var Y = B("div", "jvm-legend-title", this._options.title);
              this._body.appendChild(Y);
            }
            this._body.appendChild(j);
            for (var ee = 0; ee < N.length; ee++) {
              var re = B("div", "jvm-legend-tick"),
                fe = B("div", "jvm-legend-tick-sample");
              switch (this._series.config.attribute) {
                case "fill":
                  (V = N[ee].value),
                    /\.(jpg|gif|png)$/.test(V)
                      ? (fe.style.background = "url(" + N[ee].value + ")")
                      : (fe.style.background = N[ee].value);
                  break;
                case "stroke":
                  fe.style.background = N[ee].value;
                  break;
                case "image":
                  (fe.style.background =
                    "url(" +
                    (typeof N[ee].value == "object"
                      ? N[ee].value.url
                      : N[ee].value) +
                    ") no-repeat center center"),
                    (fe.style.backgroundSize = "cover");
              }
              re.appendChild(fe);
              var xe = N[ee].label;
              this._options.labelRender && (xe = this._options.labelRender(xe));
              var Me = B("div", "jvm-legend-tick-text", xe);
              re.appendChild(Me), j.appendChild(re);
            }
          }),
          X
        );
      })(),
      El = (function () {
        function X(N) {
          this._scale = N;
        }
        var V = X.prototype;
        return (
          (V.getValue = function (N) {
            return this._scale[N];
          }),
          (V.getTicks = function () {
            var N = [];
            for (var j in this._scale)
              N.push({ label: j, value: this._scale[j] });
            return N;
          }),
          X
        );
      })(),
      ge = (function () {
        function X(N, j, Y) {
          N === void 0 && (N = {}),
            (this._map = Y),
            (this._elements = j),
            (this._values = N.values || {}),
            (this.config = N),
            (this.config.attribute = N.attribute || "fill"),
            N.attributes && this.setAttributes(N.attributes),
            typeof N.scale == "object" && (this.scale = new El(N.scale)),
            this.config.legend &&
              (this.legend = new Al(
                W({ map: this._map, series: this }, this.config.legend),
              )),
            this.setValues(this._values);
        }
        var V = X.prototype;
        return (
          (V.setValues = function (N) {
            var j = {};
            for (var Y in N) N[Y] && (j[Y] = this.scale.getValue(N[Y]));
            this.setAttributes(j);
          }),
          (V.setAttributes = function (N) {
            for (var j in N)
              this._elements[j] &&
                this._elements[j].element.setStyle(this.config.attribute, N[j]);
          }),
          (V.clear = function () {
            var N,
              j = {};
            for (N in this._values)
              this._elements[N] &&
                (j[N] =
                  this._elements[N].element.shape.style.initial[
                    this.config.attribute
                  ]);
            this.setAttributes(j), (this._values = {});
          }),
          X
        );
      })(),
      we = {
        mill: function (X, V, N) {
          return {
            x: this.radius * (V - N) * this.radDeg,
            y:
              (-this.radius *
                Math.log(Math.tan((45 + 0.4 * X) * this.radDeg))) /
              0.8,
          };
        },
        merc: function (X, V, N) {
          return {
            x: this.radius * (V - N) * this.radDeg,
            y:
              -this.radius *
              Math.log(Math.tan(Math.PI / 4 + (X * Math.PI) / 360)),
          };
        },
        aea: function (X, V, N) {
          var j = N * this.radDeg,
            Y = 29.5 * this.radDeg,
            ee = 45.5 * this.radDeg,
            re = X * this.radDeg,
            fe = V * this.radDeg,
            xe = (Math.sin(Y) + Math.sin(ee)) / 2,
            Me = Math.cos(Y) * Math.cos(Y) + 2 * xe * Math.sin(Y),
            Fe = xe * (fe - j),
            Xe = Math.sqrt(Me - 2 * xe * Math.sin(re)) / xe,
            rt = Math.sqrt(Me - 2 * xe * Math.sin(0)) / xe;
          return {
            x: Xe * Math.sin(Fe) * this.radius,
            y: -(rt - Xe * Math.cos(Fe)) * this.radius,
          };
        },
        lcc: function (X, V, N) {
          var j = N * this.radDeg,
            Y = V * this.radDeg,
            ee = 33 * this.radDeg,
            re = 45 * this.radDeg,
            fe = X * this.radDeg,
            xe =
              Math.log(Math.cos(ee) * (1 / Math.cos(re))) /
              Math.log(
                Math.tan(Math.PI / 4 + re / 2) *
                  (1 / Math.tan(Math.PI / 4 + ee / 2)),
              ),
            Me =
              (Math.cos(ee) * Math.pow(Math.tan(Math.PI / 4 + ee / 2), xe)) /
              xe,
            Fe = Me * Math.pow(1 / Math.tan(Math.PI / 4 + fe / 2), xe),
            Xe = Me * Math.pow(1 / Math.tan(Math.PI / 4 + 0), xe);
          return {
            x: Fe * Math.sin(xe * (Y - j)) * this.radius,
            y: -(Xe - Fe * Math.cos(xe * (Y - j))) * this.radius,
          };
        },
      };
    (we.degRad = 180 / Math.PI),
      (we.radDeg = Math.PI / 180),
      (we.radius = 6381372);
    var Ce = {
        _setupContainerEvents: function () {
          var X,
            V,
            N = this,
            j = this,
            Y = !1;
          this.params.draggable &&
            (ae.on(this.container, "mousemove", function (ee) {
              if (!Y) return !1;
              (j.transX -= (X - ee.pageX) / j.scale),
                (j.transY -= (V - ee.pageY) / j.scale),
                j._applyTransform(),
                (X = ee.pageX),
                (V = ee.pageY);
            }),
            ae.on(this.container, "mousedown", function (ee) {
              return (Y = !0), (X = ee.pageX), (V = ee.pageY), !1;
            }),
            ae.on(document.body, "mouseup", function () {
              Y = !1;
            })),
            this.params.zoomOnScroll &&
              ae.on(this.container, "wheel", function (ee) {
                var re =
                    75 *
                    ((ee.deltaY || -ee.wheelDelta || ee.detail) >> 10 || 1),
                  fe = N.container.getBoundingClientRect(),
                  xe = ee.pageX - fe.left - window.pageXOffset,
                  Me = ee.pageY - fe.top - window.pageYOffset,
                  Fe = Math.pow(
                    1 + j.params.zoomOnScrollSpeed / 1e3,
                    -1.5 * re,
                  );
                j.tooltip && j._tooltip.hide(),
                  j._setScale(j.scale * Fe, xe, Me),
                  ee.preventDefault();
              });
        },
        _setupElementEvents: function () {
          var X,
            V,
            N,
            j = this,
            Y = this.container;
          ae.on(Y, "mousemove", function (ee) {
            Math.abs(X - ee.pageX) + Math.abs(V - ee.pageY) > 2 && (N = !0);
          }),
            ae.delegate(Y, "mousedown", ".jvm-element", function (ee) {
              (X = ee.pageX), (V = ee.pageY), (N = !1);
            }),
            ae.delegate(Y, "mouseover mouseout", ".jvm-element", function (ee) {
              var re = Se(j, this, !0),
                fe = j.params.showTooltip;
              ee.type === "mouseover"
                ? (re.element.hover(!0),
                  fe &&
                    (j._tooltip.text(re.tooltipText),
                    j._tooltip.show(),
                    j._emit(re.event, [ee, j._tooltip, re.code])))
                : (re.element.hover(!1), fe && j._tooltip.hide());
            }),
            ae.delegate(Y, "mouseup", ".jvm-element", function (ee) {
              var re = Se(j, this);
              if (
                !N &&
                ((re.type === "region" && j.params.regionsSelectable) ||
                  (re.type === "marker" && j.params.markersSelectable))
              ) {
                var fe = re.element;
                j.params[re.type + "sSelectableOne"] &&
                  j._clearSelected(re.type + "s"),
                  re.element.isSelected ? fe.select(!1) : fe.select(!0),
                  j._emit(re.event, [
                    re.code,
                    fe.isSelected,
                    j._getSelected(re.type + "s"),
                  ]);
              }
            }),
            ae.delegate(Y, "click", ".jvm-element", function (ee) {
              var re = Se(j, this),
                fe = re.type,
                xe = re.code;
              j._emit(fe === "region" ? ke.onRegionClick : ke.onMarkerClick, [
                ee,
                xe,
              ]);
            });
        },
        _setupZoomButtons: function () {
          var X = this,
            V = B("div", "jvm-zoom-btn jvm-zoomin", "&#43;", !0),
            N = B("div", "jvm-zoom-btn jvm-zoomout", "&#x2212", !0);
          this.container.appendChild(V), this.container.appendChild(N);
          var j = function (Y) {
            return (
              Y === void 0 && (Y = !0),
              function () {
                return X._setScale(
                  Y ? X.scale * X.params.zoomStep : X.scale / X.params.zoomStep,
                  X._width / 2,
                  X._height / 2,
                  !1,
                  X.params.zoomAnimate,
                );
              }
            );
          };
          ae.on(V, "click", j()), ae.on(N, "click", j(!1));
        },
        _setupContainerTouchEvents: function () {
          var X,
            V,
            N,
            j,
            Y,
            ee,
            re,
            fe = this,
            xe = function (Me) {
              var Fe,
                Xe,
                rt,
                nt,
                Ee = Me.touches;
              if ((Me.type == "touchstart" && (re = 0), Ee.length == 1))
                re == 1 &&
                  ((rt = fe.transX),
                  (nt = fe.transY),
                  (fe.transX -= (N - Ee[0].pageX) / fe.scale),
                  (fe.transY -= (j - Ee[0].pageY) / fe.scale),
                  fe._tooltip.hide(),
                  fe._applyTransform(),
                  (rt == fe.transX && nt == fe.transY) || Me.preventDefault()),
                  (N = Ee[0].pageX),
                  (j = Ee[0].pageY);
              else if (Ee.length == 2)
                if (re == 2)
                  (Xe =
                    Math.sqrt(
                      Math.pow(Ee[0].pageX - Ee[1].pageX, 2) +
                        Math.pow(Ee[0].pageY - Ee[1].pageY, 2),
                    ) / V),
                    fe._setScale(X * Xe, Y, ee),
                    fe._tooltip.hide(),
                    Me.preventDefault();
                else {
                  var St = fe.container.getBoundingClientRect();
                  (Fe = {
                    top: St.top + window.scrollY,
                    left: St.left + window.scrollX,
                  }),
                    (Y =
                      Ee[0].pageX > Ee[1].pageX
                        ? Ee[1].pageX + (Ee[0].pageX - Ee[1].pageX) / 2
                        : Ee[0].pageX + (Ee[1].pageX - Ee[0].pageX) / 2),
                    (ee =
                      Ee[0].pageY > Ee[1].pageY
                        ? Ee[1].pageY + (Ee[0].pageY - Ee[1].pageY) / 2
                        : Ee[0].pageY + (Ee[1].pageY - Ee[0].pageY) / 2),
                    (Y -= Fe.left),
                    (ee -= Fe.top),
                    (X = fe.scale),
                    (V = Math.sqrt(
                      Math.pow(Ee[0].pageX - Ee[1].pageX, 2) +
                        Math.pow(Ee[0].pageY - Ee[1].pageY, 2),
                    ));
                }
              re = Ee.length;
            };
          ae.on(fe.container, "touchstart", xe),
            ae.on(fe.container, "touchmove", xe);
        },
        _createRegions: function () {
          for (var X in ((this._regionLabelsGroup =
            this._regionLabelsGroup ||
            this.canvas.createGroup("jvm-regions-labels-group")),
          this._mapData.paths)) {
            var V = new fl({
              map: this,
              code: X,
              path: this._mapData.paths[X].path,
              style: W({}, this.params.regionStyle),
              labelStyle: this.params.regionLabelStyle,
              labelsGroup: this._regionLabelsGroup,
              label: this.params.labels && this.params.labels.regions,
            });
            this.regions[X] = { config: this._mapData.paths[X], element: V };
          }
        },
        _createLines: function (X, V, N) {
          N === void 0 && (N = !1);
          var j = !1,
            Y = !1;
          for (var ee in ((this.linesGroup =
            this.linesGroup || this.canvas.createGroup("jvm-lines-group")),
          X)) {
            var re = X[ee];
            for (var fe in V) {
              var xe = N ? V[fe].config : V[fe];
              xe.name === re.from && (j = this.getMarkerPosition(xe)),
                xe.name === re.to && (Y = this.getMarkerPosition(xe));
            }
            j !== !1 &&
              Y !== !1 &&
              (this._lines[te(re.from, re.to)] = new Ze({
                index: ee,
                map: this,
                style: W(
                  { initial: this.params.lineStyle },
                  { initial: re.style || {} },
                  !0,
                ),
                x1: j.x,
                y1: j.y,
                x2: Y.x,
                y2: Y.y,
                group: this.linesGroup,
                config: re,
              }));
          }
        },
        _createMarkers: function (X, V) {
          var N = this;
          X === void 0 && (X = {}),
            V === void 0 && (V = !1),
            (this._markersGroup =
              this._markersGroup ||
              this.canvas.createGroup("jvm-markers-group")),
            (this._markerLabelsGroup =
              this._markerLabelsGroup ||
              this.canvas.createGroup("jvm-markers-labels-group"));
          var j = function () {
            var ee = X[Y],
              re = N.getMarkerPosition(ee),
              fe = ee.coords.join(":");
            if (!re) return "continue";
            if (V) {
              if (
                Object.keys(N._markers).filter(function (Me) {
                  return N._markers[Me]._uid === fe;
                }).length
              )
                return "continue";
              Y = Object.keys(N._markers).length;
            }
            var xe = new pl({
              index: Y,
              map: N,
              style: W(N.params.markerStyle, { initial: ee.style || {} }, !0),
              label: N.params.labels && N.params.labels.markers,
              labelsGroup: N._markerLabelsGroup,
              cx: re.x,
              cy: re.y,
              group: N._markersGroup,
              marker: ee,
              isRecentlyCreated: V,
            });
            N._markers[Y] && N.removeMarkers([Y]),
              (N._markers[Y] = { _uid: fe, config: ee, element: xe });
          };
          for (var Y in X) j();
        },
        _createSeries: function () {
          for (var X in ((this.series = { markers: [], regions: [] }),
          this.params.series))
            for (var V = 0; V < this.params.series[X].length; V++)
              this.series[X][V] = new ge(
                this.params.series[X][V],
                X === "markers" ? this._markers : this.regions,
                this,
              );
        },
        _applyTransform: function () {
          var X, V, N, j;
          this._defaultWidth * this.scale <= this._width
            ? ((X =
                (this._width - this._defaultWidth * this.scale) /
                (2 * this.scale)),
              (N =
                (this._width - this._defaultWidth * this.scale) /
                (2 * this.scale)))
            : ((X = 0),
              (N =
                (this._width - this._defaultWidth * this.scale) / this.scale)),
            this._defaultHeight * this.scale <= this._height
              ? ((V =
                  (this._height - this._defaultHeight * this.scale) /
                  (2 * this.scale)),
                (j =
                  (this._height - this._defaultHeight * this.scale) /
                  (2 * this.scale)))
              : ((V = 0),
                (j =
                  (this._height - this._defaultHeight * this.scale) /
                  this.scale)),
            this.transY > V
              ? (this.transY = V)
              : this.transY < j && (this.transY = j),
            this.transX > X
              ? (this.transX = X)
              : this.transX < N && (this.transX = N),
            this.canvas.applyTransformParams(
              this.scale,
              this.transX,
              this.transY,
            ),
            this._markers && this._repositionMarkers(),
            this._lines && this._repositionLines(),
            this._repositionLabels();
        },
        _resize: function () {
          var X = this._baseScale;
          this._width / this._height > this._defaultWidth / this._defaultHeight
            ? ((this._baseScale = this._height / this._defaultHeight),
              (this._baseTransX =
                Math.abs(this._width - this._defaultWidth * this._baseScale) /
                (2 * this._baseScale)))
            : ((this._baseScale = this._width / this._defaultWidth),
              (this._baseTransY =
                Math.abs(this._height - this._defaultHeight * this._baseScale) /
                (2 * this._baseScale))),
            (this.scale *= this._baseScale / X),
            (this.transX *= this._baseScale / X),
            (this.transY *= this._baseScale / X);
        },
        _setScale: function (X, V, N, j, Y) {
          var ee,
            re,
            fe,
            xe,
            Me,
            Fe,
            Xe,
            rt,
            nt,
            Ee,
            St = this,
            gl = 0,
            vi = Math.abs(
              Math.round((60 * (X - this.scale)) / Math.max(X, this.scale)),
            );
          X > this.params.zoomMax * this._baseScale
            ? (X = this.params.zoomMax * this._baseScale)
            : X < this.params.zoomMin * this._baseScale &&
              (X = this.params.zoomMin * this._baseScale),
            V !== void 0 &&
              N !== void 0 &&
              ((ee = X / this.scale),
              j
                ? ((nt =
                    V +
                    (this._defaultWidth *
                      (this._width / (this._defaultWidth * X))) /
                      2),
                  (Ee =
                    N +
                    (this._defaultHeight *
                      (this._height / (this._defaultHeight * X))) /
                      2))
                : ((nt = this.transX - ((ee - 1) / X) * V),
                  (Ee = this.transY - ((ee - 1) / X) * N))),
            Y && vi > 0
              ? ((fe = this.scale),
                (xe = (X - fe) / vi),
                (Me = this.transX * this.scale),
                (Xe = this.transY * this.scale),
                (Fe = (nt * X - Me) / vi),
                (rt = (Ee * X - Xe) / vi),
                (re = setInterval(function () {
                  (gl += 1),
                    (St.scale = fe + xe * gl),
                    (St.transX = (Me + Fe * gl) / St.scale),
                    (St.transY = (Xe + rt * gl) / St.scale),
                    St._applyTransform(),
                    gl == vi &&
                      (clearInterval(re),
                      St._emit(ke.onViewportChange, [
                        St.scale,
                        St.transX,
                        St.transY,
                      ]));
                }, 10)))
              : ((this.transX = nt),
                (this.transY = Ee),
                (this.scale = X),
                this._applyTransform(),
                this._emit(ke.onViewportChange, [
                  this.scale,
                  this.transX,
                  this.transY,
                ]));
        },
        setFocus: function (X) {
          var V = this;
          X === void 0 && (X = {});
          var N,
            j = [];
          if (
            (X.region ? j.push(X.region) : X.regions && (j = X.regions),
            j.length)
          )
            return (
              j.forEach(function (fe) {
                if (V.regions[fe]) {
                  var xe = V.regions[fe].element.shape.getBBox();
                  xe &&
                    (N =
                      N === void 0
                        ? xe
                        : {
                            x: Math.min(N.x, xe.x),
                            y: Math.min(N.y, xe.y),
                            width:
                              Math.max(N.x + N.width, xe.x + xe.width) -
                              Math.min(N.x, xe.x),
                            height:
                              Math.max(N.y + N.height, xe.y + xe.height) -
                              Math.min(N.y, xe.y),
                          });
                }
              }),
              this._setScale(
                Math.min(this._width / N.width, this._height / N.height),
                -(N.x + N.width / 2),
                -(N.y + N.height / 2),
                !0,
                X.animate,
              )
            );
          if (X.coords) {
            var Y = this.coordsToPoint(X.coords[0], X.coords[1]),
              ee = this.transX - Y.x / this.scale,
              re = this.transY - Y.y / this.scale;
            return this._setScale(
              X.scale * this._baseScale,
              ee,
              re,
              !0,
              X.animate,
            );
          }
        },
        updateSize: function () {
          (this._width = this.container.offsetWidth),
            (this._height = this.container.offsetHeight),
            this._resize(),
            this.canvas.setSize(this._width, this._height),
            this._applyTransform();
        },
        coordsToPoint: function (X, V) {
          var N = mt.maps[this.params.map].projection,
            j = we[N.type](X, V, N.centralMeridian),
            Y = j.x,
            ee = j.y,
            re = this.getInsetForPoint(Y, ee);
          if (!re) return !1;
          var fe = re.bbox;
          return (
            (Y = ((Y - fe[0].x) / (fe[1].x - fe[0].x)) * re.width * this.scale),
            (ee =
              ((ee - fe[0].y) / (fe[1].y - fe[0].y)) * re.height * this.scale),
            {
              x: Y + this.transX * this.scale + re.left * this.scale,
              y: ee + this.transY * this.scale + re.top * this.scale,
            }
          );
        },
        getInsetForPoint: function (X, V) {
          for (
            var N = mt.maps[this.params.map].insets, j = 0;
            j < N.length;
            j++
          ) {
            var Y = N[j].bbox,
              ee = Y[0],
              re = Y[1];
            if (X > ee.x && X < re.x && V > ee.y && V < re.y) return N[j];
          }
        },
        getMarkerPosition: function (X) {
          var V = X.coords;
          return mt.maps[this.params.map].projection
            ? this.coordsToPoint.apply(this, V)
            : {
                x: V[0] * this.scale + this.transX * this.scale,
                y: V[1] * this.scale + this.transY * this.scale,
              };
        },
        _repositionLines: function () {
          var X = !1,
            V = !1;
          for (var N in this._lines) {
            for (var j in this._markers) {
              var Y = this._markers[j];
              Y.config.name === this._lines[N].config.from &&
                (X = this.getMarkerPosition(Y.config)),
                Y.config.name === this._lines[N].config.to &&
                  (V = this.getMarkerPosition(Y.config));
            }
            X !== !1 &&
              V !== !1 &&
              this._lines[N].setStyle({ x1: X.x, y1: X.y, x2: V.x, y2: V.y });
          }
        },
        _repositionMarkers: function () {
          for (var X in this._markers) {
            var V = this.getMarkerPosition(this._markers[X].config);
            V !== !1 && this._markers[X].element.setStyle({ cx: V.x, cy: V.y });
          }
        },
        _repositionLabels: function () {
          var X = this.params.labels;
          if (X) {
            if (X.regions)
              for (var V in this.regions)
                this.regions[V].element.updateLabelPosition();
            if (X.markers)
              for (var N in this._markers)
                this._markers[N].element.updateLabelPosition();
          }
        },
      },
      ze = (function () {
        function X(N, j) {
          (this.node = this._createElement(N)), j && this.set(j);
        }
        var V = X.prototype;
        return (
          (V._createElement = function (N) {
            return document.createElementNS("http://www.w3.org/2000/svg", N);
          }),
          (V.addClass = function (N) {
            this.node.setAttribute("class", N);
          }),
          (V.getBBox = function () {
            return this.node.getBBox();
          }),
          (V.set = function (N, j) {
            if (typeof N == "object") for (var Y in N) this.applyAttr(Y, N[Y]);
            else this.applyAttr(N, j);
          }),
          (V.get = function (N) {
            return this.style.initial[N];
          }),
          (V.applyAttr = function (N, j) {
            this.node.setAttribute(
              N.replace(/[\w]([A-Z])/g, function (Y) {
                return Y[0] + "-" + Y[1];
              }).toLowerCase(),
              j,
            );
          }),
          (V.remove = function () {
            L(this.node);
          }),
          X
        );
      })(),
      Te = (function (X) {
        function V(j, Y, ee) {
          var re;
          return (
            ee === void 0 && (ee = {}),
            ((re = X.call(this, j, Y) || this).isHovered = !1),
            (re.isSelected = !1),
            (re.style = ee),
            (re.style.current = {}),
            re.updateStyle(),
            re
          );
        }
        n(V, X);
        var N = V.prototype;
        return (
          (N.setStyle = function (j, Y) {
            var ee;
            typeof j == "object"
              ? W(this.style.current, j)
              : W(this.style.current, (((ee = {})[j] = Y), ee)),
              this.updateStyle();
          }),
          (N.updateStyle = function () {
            var j = {};
            W(j, this.style.initial),
              W(j, this.style.current),
              this.isHovered && W(j, this.style.hover),
              this.isSelected &&
                (W(j, this.style.selected),
                this.isHovered && W(j, this.style.selectedHover)),
              this.set(j);
          }),
          V
        );
      })(ze),
      Wt = (function (X) {
        function V(N, j) {
          return X.call(this, "text", N, j) || this;
        }
        return (
          n(V, X),
          (V.prototype.applyAttr = function (N, j) {
            N === "text"
              ? (this.node.textContent = j)
              : X.prototype.applyAttr.call(this, N, j);
          }),
          V
        );
      })(Te),
      Vt = (function (X) {
        function V(N, j) {
          return X.call(this, "image", N, j) || this;
        }
        return (
          n(V, X),
          (V.prototype.applyAttr = function (N, j) {
            var Y;
            N === "image"
              ? (typeof j == "object"
                  ? ((Y = j.url), (this.offset = j.offset || [0, 0]))
                  : ((Y = j), (this.offset = [0, 0])),
                this.node.setAttributeNS(
                  "http://www.w3.org/1999/xlink",
                  "href",
                  Y,
                ),
                (this.width = 23),
                (this.height = 23),
                this.applyAttr("width", this.width),
                this.applyAttr("height", this.height),
                this.applyAttr("x", this.cx - this.width / 2 + this.offset[0]),
                this.applyAttr("y", this.cy - this.height / 2 + this.offset[1]))
              : N == "cx"
                ? ((this.cx = j),
                  this.width &&
                    this.applyAttr("x", j - this.width / 2 + this.offset[0]))
                : N == "cy"
                  ? ((this.cy = j),
                    this.height &&
                      this.applyAttr("y", j - this.height / 2 + this.offset[1]))
                  : X.prototype.applyAttr.apply(this, arguments);
          }),
          V
        );
      })(Te),
      Gt = (function (X) {
        function V(j) {
          var Y;
          return (
            ((Y = X.call(this, "svg") || this)._container = j),
            (Y._defsElement = new ze("defs")),
            (Y._rootElement = new ze("g", { id: "jvm-regions-group" })),
            Y.node.appendChild(Y._defsElement.node),
            Y.node.appendChild(Y._rootElement.node),
            Y._container.appendChild(Y.node),
            Y
          );
        }
        n(V, X);
        var N = V.prototype;
        return (
          (N.setSize = function (j, Y) {
            this.node.setAttribute("width", j),
              this.node.setAttribute("height", Y);
          }),
          (N.applyTransformParams = function (j, Y, ee) {
            this._rootElement.node.setAttribute(
              "transform",
              "scale(" + j + ") translate(" + Y + ", " + ee + ")",
            );
          }),
          (N.createPath = function (j, Y) {
            var ee = new Te("path", j, Y);
            return ee.node.setAttribute("fill-rule", "evenodd"), this._add(ee);
          }),
          (N.createCircle = function (j, Y, ee) {
            var re = new Te("circle", j, Y);
            return this._add(re, ee);
          }),
          (N.createLine = function (j, Y, ee) {
            var re = new Te("line", j, Y);
            return this._add(re, ee);
          }),
          (N.createText = function (j, Y, ee) {
            var re = new Wt(j, Y);
            return this._add(re, ee);
          }),
          (N.createImage = function (j, Y, ee) {
            var re = new Vt(j, Y);
            return this._add(re, ee);
          }),
          (N.createGroup = function (j) {
            var Y = new ze("g");
            return (
              this.node.appendChild(Y.node),
              j && (Y.node.id = j),
              (Y.canvas = this),
              Y
            );
          }),
          (N._add = function (j, Y) {
            return (Y = Y || this._rootElement).node.appendChild(j.node), j;
          }),
          V
        );
      })(ze),
      $e = (function (X) {
        function V(j) {
          var Y;
          Y = X.call(this) || this;
          var ee = B("div", "jvm-tooltip");
          return (
            (Y._map = j),
            (Y._tooltip = document.body.appendChild(ee)),
            Y._bindEventListeners(),
            u(Y) || u(Y)
          );
        }
        n(V, X);
        var N = V.prototype;
        return (
          (N._bindEventListeners = function () {
            var j = this;
            ae.on(this._map.container, "mousemove", function (Y) {
              if (j._tooltip.classList.contains("active")) {
                var ee,
                  re,
                  fe = ((ee = j._map.container),
                  (re = "#jvm-regions-group"),
                  Element.prototype.querySelector.call(
                    ee,
                    re,
                  )).getBoundingClientRect(),
                  xe = j._tooltip.getBoundingClientRect(),
                  Me = xe.height,
                  Fe = xe.width,
                  Xe = Y.clientY <= fe.top + Me + 5,
                  rt = Y.pageY - Me - 5,
                  nt = Y.pageX - Fe - 5;
                Xe && ((rt += Me + 5), (nt -= 10)),
                  Y.clientX < fe.left + Fe + 5 &&
                    ((nt = Y.pageX + 5 + 2), Xe && (nt += 10)),
                  j.css({ top: rt + "px", left: nt + "px" });
              }
            });
          }),
          (N.getElement = function () {
            return this._tooltip;
          }),
          (N.show = function () {
            this._tooltip.classList.add("active");
          }),
          (N.hide = function () {
            this._tooltip.classList.remove("active");
          }),
          (N.text = function (j, Y) {
            Y === void 0 && (Y = !1);
            var ee = Y ? "innerHTML" : "textContent";
            if (!j) return this._tooltip[ee];
            this._tooltip[ee] = j;
          }),
          (N.css = function (j) {
            for (var Y in j) this._tooltip.style[Y] = j[Y];
            return this;
          }),
          V
        );
      })(it),
      Pl = (function () {
        function X(N, j) {
          var Y = N.scale,
            ee = N.values;
          (this._scale = Y),
            (this._values = ee),
            (this._fromColor = this.hexToRgb(Y[0])),
            (this._toColor = this.hexToRgb(Y[1])),
            (this._map = j),
            this.setMinMaxValues(ee),
            this.visualize();
        }
        var V = X.prototype;
        return (
          (V.setMinMaxValues = function (N) {
            for (var j in ((this.min = Number.MAX_VALUE), (this.max = 0), N))
              (j = parseFloat(N[j])) > this.max && (this.max = j),
                j < this.min && (this.min = j);
          }),
          (V.visualize = function () {
            var N,
              j = {};
            for (var Y in this._values)
              (N = parseFloat(this._values[Y])),
                isNaN(N) || (j[Y] = this.getValue(N));
            this.setAttributes(j);
          }),
          (V.setAttributes = function (N) {
            for (var j in N)
              this._map.regions[j] &&
                this._map.regions[j].element.setStyle("fill", N[j]);
          }),
          (V.getValue = function (N) {
            for (var j, Y = "#", ee = 0; ee < 3; ee++)
              Y +=
                ((j = Math.round(
                  this._fromColor[ee] +
                    (this._toColor[ee] - this._fromColor[ee]) *
                      ((N - this.min) / (this.max - this.min)),
                ).toString(16)).length === 1
                  ? "0"
                  : "") + j;
            return Y;
          }),
          (V.hexToRgb = function (N) {
            var j = 0,
              Y = 0,
              ee = 0;
            return (
              N.length == 4
                ? ((j = "0x" + N[1] + N[1]),
                  (Y = "0x" + N[2] + N[2]),
                  (ee = "0x" + N[3] + N[3]))
                : N.length == 7 &&
                  ((j = "0x" + N[1] + N[2]),
                  (Y = "0x" + N[3] + N[4]),
                  (ee = "0x" + N[5] + N[6])),
              [parseInt(j), parseInt(Y), parseInt(ee)]
            );
          }),
          X
        );
      })(),
      mt = (function () {
        function X(N) {
          var j = this;
          if (
            (N === void 0 && (N = {}),
            (this.params = W(X.defaults, N, !0)),
            !X.maps[this.params.map])
          )
            throw new Error(
              "Attempt to use map which was not loaded: " + N.map,
            );
          (this.regions = {}),
            (this.scale = 1),
            (this.transX = 0),
            (this.transY = 0),
            (this._mapData = X.maps[this.params.map]),
            (this._markers = {}),
            (this._lines = {}),
            (this._defaultWidth = this._mapData.width),
            (this._defaultHeight = this._mapData.height),
            (this._height = 0),
            (this._width = 0),
            (this._baseScale = 1),
            (this._baseTransX = 0),
            (this._baseTransY = 0),
            document.readyState !== "loading"
              ? this._init()
              : window.addEventListener("DOMContentLoaded", function () {
                  return j._init();
                });
        }
        var V = X.prototype;
        return (
          (V._init = function () {
            var N = this.params;
            (this.container = ue(N.selector)),
              this.container.classList.add("jvm-container"),
              (this.canvas = new Gt(this.container)),
              this.setBackgroundColor(N.backgroundColor),
              this._createRegions(),
              this.updateSize(),
              this._createLines(N.lines || {}, N.markers || {}),
              this._createMarkers(N.markers),
              this._repositionLabels(),
              this._setupContainerEvents(),
              this._setupElementEvents(),
              N.zoomButtons && this._setupZoomButtons(),
              N.showTooltip && (this._tooltip = new $e(this)),
              N.selectedRegions &&
                this._setSelected("regions", N.selectedRegions),
              N.selectedMarkers &&
                this._setSelected("_markers", N.selectedMarkers),
              N.focusOn && this.setFocus(N.focusOn),
              N.visualizeData &&
                (this.dataVisualization = new Pl(N.visualizeData, this)),
              N.bindTouchEvents &&
                ("ontouchstart" in window ||
                  (window.DocumentTouch &&
                    document instanceof DocumentTouch)) &&
                this._setupContainerTouchEvents(),
              N.series &&
                (this.container.appendChild(
                  (this.legendHorizontal = B(
                    "div",
                    "jvm-series-container jvm-series-h",
                  )),
                ),
                this.container.appendChild(
                  (this.legendVertical = B(
                    "div",
                    "jvm-series-container jvm-series-v",
                  )),
                ),
                this._createSeries()),
              this._emit(ke.onLoaded, [this]);
          }),
          (V.setBackgroundColor = function (N) {
            this.container.style.backgroundColor = N;
          }),
          (V.getSelectedRegions = function () {
            return this._getSelected("regions");
          }),
          (V.clearSelectedRegions = function () {
            this._clearSelected("regions");
          }),
          (V.getSelectedMarkers = function () {
            return this._getSelected("_markers");
          }),
          (V.clearSelectedMarkers = function () {
            this._clearSelected("_markers");
          }),
          (V.addMarkers = function (N) {
            if (Array.isArray(N)) return this._createMarkers(N, !0);
            this._createMarkers([N], !0);
          }),
          (V.removeMarkers = function (N) {
            var j = this;
            N || (N = Object.keys(this._markers)),
              N.forEach(function (Y) {
                j._markers[Y].element.remove(), delete j._markers[Y];
              });
          }),
          (V.addLine = function (N, j, Y) {
            Y === void 0 && (Y = {}),
              console.warn(
                "`addLine` method is deprecated, please use `addLines` instead.",
              ),
              this._createLines(
                [{ from: N, to: j, style: Y }],
                this._markers,
                !0,
              );
          }),
          (V.addLines = function (N) {
            var j = this._getLinesAsUids();
            Array.isArray(N) || (N = [N]),
              this._createLines(
                N.filter(function (Y) {
                  return !(j.indexOf(te(Y.from, Y.to)) > -1);
                }),
                this._markers,
                !0,
              );
          }),
          (V.removeLines = function (N) {
            var j = this;
            (N = Array.isArray(N)
              ? N.map(function (Y) {
                  return te(Y.from, Y.to);
                })
              : this._getLinesAsUids()).forEach(function (Y) {
              j._lines[Y].dispose(), delete j._lines[Y];
            });
          }),
          (V.removeLine = function (N, j) {
            console.warn(
              "`removeLine` method is deprecated, please use `removeLines` instead.",
            );
            var Y = te(N, j);
            this._lines.hasOwnProperty(Y) &&
              (this._lines[Y].element.remove(), delete this._lines[Y]);
          }),
          (V.reset = function () {
            for (var N in this.series)
              for (var j = 0; j < this.series[N].length; j++)
                this.series[N][j].clear();
            this.legendHorizontal &&
              (L(this.legendHorizontal), (this.legendHorizontal = null)),
              this.legendVertical &&
                (L(this.legendVertical), (this.legendVertical = null)),
              (this.scale = this._baseScale),
              (this.transX = this._baseTransX),
              (this.transY = this._baseTransY),
              this._applyTransform(),
              this.clearSelectedMarkers(),
              this.clearSelectedRegions(),
              this.removeMarkers();
          }),
          (V.destroy = function (N) {
            var j = this;
            N === void 0 && (N = !0),
              ae.flush(),
              this._tooltip.dispose(),
              this._emit(ke.onDestroyed),
              N &&
                Object.keys(this).forEach(function (Y) {
                  try {
                    delete j[Y];
                  } catch {}
                });
          }),
          (V.extend = function (N, j) {
            if (typeof this[N] == "function")
              throw new Error(
                "The method [" +
                  N +
                  "] does already exist, please use another name.",
              );
            X.prototype[N] = j;
          }),
          (V._emit = function (N, j) {
            for (var Y in ke)
              ke[Y] === N &&
                typeof this.params[Y] == "function" &&
                this.params[Y].apply(this, j);
          }),
          (V._getSelected = function (N) {
            var j = [];
            for (var Y in this[N]) this[N][Y].element.isSelected && j.push(Y);
            return j;
          }),
          (V._setSelected = function (N, j) {
            var Y = this;
            j.forEach(function (ee) {
              Y[N][ee] && Y[N][ee].element.select(!0);
            });
          }),
          (V._clearSelected = function (N) {
            var j = this;
            this._getSelected(N).forEach(function (Y) {
              j[N][Y].element.select(!1);
            });
          }),
          (V._getLinesAsUids = function () {
            return Object.keys(this._lines);
          }),
          X
        );
      })();
    (mt.maps = {}),
      (mt.defaults = {
        map: "world",
        backgroundColor: "transparent",
        draggable: !0,
        zoomButtons: !0,
        zoomOnScroll: !0,
        zoomOnScrollSpeed: 3,
        zoomMax: 12,
        zoomMin: 1,
        zoomAnimate: !0,
        showTooltip: !0,
        zoomStep: 1.5,
        bindTouchEvents: !0,
        lineStyle: {
          stroke: "#808080",
          strokeWidth: 1,
          strokeLinecap: "round",
        },
        markersSelectable: !1,
        markersSelectableOne: !1,
        markerStyle: {
          initial: {
            r: 7,
            fill: "#374151",
            fillOpacity: 1,
            stroke: "#FFF",
            strokeWidth: 5,
            strokeOpacity: 0.5,
          },
          hover: { fill: "#3cc0ff", cursor: "pointer" },
          selected: { fill: "blue" },
          selectedHover: {},
        },
        markerLabelStyle: {
          initial: {
            fontFamily: "Verdana",
            fontSize: 12,
            fontWeight: 500,
            cursor: "default",
            fill: "#374151",
          },
          hover: { cursor: "pointer" },
          selected: {},
          selectedHover: {},
        },
        regionsSelectable: !1,
        regionsSelectableOne: !1,
        regionStyle: {
          initial: {
            fill: "#dee2e8",
            fillOpacity: 1,
            stroke: "none",
            strokeWidth: 0,
          },
          hover: { fillOpacity: 0.7, cursor: "pointer" },
          selected: { fill: "#9ca3af" },
          selectedHover: {},
        },
        regionLabelStyle: {
          initial: {
            fontFamily: "Verdana",
            fontSize: "12",
            fontWeight: "bold",
            cursor: "default",
            fill: "#35373e",
          },
          hover: { cursor: "pointer" },
        },
      }),
      Object.assign(mt.prototype, Ce);
    var Gi = (function () {
      function X(V) {
        if ((V === void 0 && (V = {}), !V.selector))
          throw new Error("Selector is not given.");
        return new mt(V);
      }
      return (
        (X.addMap = function (V, N) {
          mt.maps[V] = N;
        }),
        X
      );
    })();
    return (window.jsVectorMap = Gi);
  });
})(Lp);
var Ny = Lp.exports;
const Iy = Y0(Ny);
jsVectorMap.addMap("in_mill", {
  insets: [
    {
      width: 900,
      top: 0,
      height: 932.9661457393951,
      bbox: [
        { y: -4125883782575976e-9, x: 7589536343670783e-9 },
        { y: -752405.3962423172, x: 10843813641475728e-9 },
      ],
      left: 0,
    },
  ],
  paths: {
    "IN-BR": {
      path: "M484.32,277.67l0.73,-0.96l-0.3,-0.93l-0.88,-0.99l2.18,-0.33l2.83,0.22l2.64,-2.44l0.65,0.88l1.12,0.53l0.73,1.16l1.44,0.13l0.88,1.39l0.78,0.52l8.92,1.6l1.49,1.54l0.75,2.31l-0.09,2.43l-1.0,2.2l0.17,0.95l0.56,0.5l3.94,1.04l1.49,-0.43l1.1,0.93l2.15,0.84l0.79,1.78l1.96,0.85l0.04,0.75l0.36,0.35l0.96,0.04l2.23,-0.69l0.89,0.36l0.08,1.86l1.02,1.19l3.03,0.83l1.86,-0.39l1.41,-1.3l1.63,-0.0l2.51,-1.3l2.45,-0.81l2.64,1.62l0.21,0.97l-0.22,2.39l0.42,1.46l2.16,1.84l1.01,-0.0l0.22,0.89l0.54,0.28l1.3,-0.5l2.57,-2.01l1.7,-0.38l3.07,1.67l1.2,0.08l1.34,0.59l2.79,-0.96l0.36,0.09l0.11,0.57l0.46,0.36l1.14,-0.05l4.28,1.79l1.88,1.41l4.91,2.34l0.65,-0.32l0.42,-0.67l1.5,0.42l1.07,-0.27l0.84,-0.55l0.93,-1.39l2.89,-1.18l1.56,-1.41l0.73,3.4l1.29,2.14l1.24,0.5l2.44,-0.41l0.71,1.14l2.25,0.92l0.7,-0.4l0.94,-1.66l1.64,-0.68l1.77,0.1l2.15,1.18l1.43,0.3l2.71,-1.46l0.9,0.58l0.74,0.03l0.64,-0.42l0.39,-1.06l1.69,0.41l1.28,-0.84l0.78,0.58l1.04,1.56l1.36,0.93l1.28,-0.0l1.4,-1.3l0.98,-1.67l0.32,-2.54l1.11,0.19l1.81,-0.54l-0.25,1.26l2.57,2.21l-0.61,0.46l-0.14,0.71l1.31,0.93l0.18,0.65l-0.99,0.12l-1.4,1.13l-1.21,0.45l-3.14,3.08l-1.92,1.35l-1.46,0.45l-1.05,1.31l-3.05,2.6l-0.73,2.89l-0.66,0.33l-0.26,0.54l0.49,1.44l1.99,1.18l1.38,2.54l1.16,1.11l1.88,0.79l1.0,0.91l0.39,1.89l-0.42,2.19l0.68,1.39l-1.31,-0.23l-0.83,-0.82l-1.07,-0.2l-2.31,1.07l-0.91,0.98l-2.54,1.15l-0.86,1.17l-0.03,0.52l1.06,1.26l0.71,0.03l1.1,2.34l-1.16,1.61l-1.13,-0.8l-2.11,0.07l-2.4,-0.65l-0.85,-1.16l-1.55,-0.73l-2.09,1.48l-1.42,3.04l-1.75,-0.38l-1.94,0.54l-0.7,1.28l-0.53,2.54l-1.11,-0.28l-1.23,0.43l-1.15,1.08l-0.95,1.56l-0.02,4.14l-1.58,2.6l0.22,1.29l-0.25,2.5l-0.67,2.32l-3.65,-0.85l-1.11,1.73l-0.08,0.78l-1.8,-0.56l-1.86,-1.14l-0.7,0.13l-0.57,0.88l-0.58,0.3l-1.44,0.17l-1.24,-0.58l-1.1,0.08l-2.84,2.71l-0.35,2.31l-0.66,0.61l-0.34,1.45l-4.74,-2.95l0.93,-1.5l-0.46,-2.24l-2.49,-0.71l-1.39,0.5l-1.2,-0.75l-0.53,-2.93l-0.94,-1.11l-1.16,-0.27l0.25,-0.54l-0.25,-0.67l-1.15,0.06l-1.82,1.29l-1.16,0.12l-1.33,-1.63l-1.34,-0.72l-2.71,0.04l-1.03,0.64l-0.64,1.13l-0.35,1.75l-1.32,0.86l0.46,1.43l-0.08,1.26l-2.09,-0.13l-1.88,1.89l-1.05,-0.3l-2.8,-0.01l-3.56,0.74l-0.45,0.74l-3.09,1.2l-0.45,0.51l-0.04,0.72l-1.53,1.38l0.11,-1.07l-0.45,-0.39l-3.33,1.32l-1.97,-0.04l-0.37,-0.38l-0.39,-2.05l-0.44,-0.37l-0.85,0.15l-0.38,-1.56l-1.06,-0.48l-3.69,2.24l-0.86,1.72l-2.29,-0.51l-1.24,1.5l-0.27,0.79l-0.51,0.49l-0.76,0.1l-1.39,-1.35l-2.08,-1.34l-1.51,-1.71l0.38,-0.69l-0.02,-1.06l-0.71,-1.19l-0.78,-0.19l-0.66,0.49l-0.73,-0.27l-1.47,0.23l-0.36,0.39l-0.0,1.03l-0.3,-0.98l-0.78,-0.09l-0.53,1.26l-0.76,-0.87l-1.6,-3.93l-0.85,-0.67l-0.69,0.16l-0.72,1.49l-2.03,1.42l-2.05,0.28l-1.37,-0.23l-0.86,0.31l-0.55,0.68l-1.94,0.19l-4.92,-0.81l0.03,-2.88l-0.43,-1.19l0.61,-1.14l-0.28,-1.64l-0.55,-0.62l-2.0,-0.71l-2.6,-2.78l0.35,-1.72l-0.05,-2.24l-1.27,-2.58l0.34,-3.02l0.62,-1.14l1.7,-1.27l11.06,-6.27l0.86,-0.66l0.44,-0.81l2.19,-0.92l3.62,-3.02l1.7,-2.16l2.53,-1.98l0.88,-0.25l0.74,0.43l-0.04,1.29l0.37,0.92l0.82,0.61l1.2,0.16l1.16,-0.32l0.69,-0.62l0.03,-1.0l-0.41,-1.1l0.17,-0.52l1.25,-0.49l1.93,1.49l1.54,0.6l1.32,0.01l2.29,-1.37l0.73,-1.81l-0.34,-0.78l-2.28,-2.05l-2.42,-0.33l-1.18,-0.71l-0.5,-0.92l-0.82,-0.67l-3.49,0.28l-0.93,-0.9l-0.59,-1.69l-0.97,-0.39l-0.91,-1.45l-2.52,-1.19l-1.28,-2.57l-1.04,-0.81l0.41,-0.8l2.49,-0.34l0.91,-0.6l1.31,0.19l0.82,-0.39l0.25,-0.57l-0.78,-1.52l0.71,-1.33l0.02,-0.66l-0.45,-0.55l-2.83,-0.73l-2.18,-1.58l-1.33,0.6l-1.31,-0.25l0.0,-2.11l0.43,0.93l0.6,0.15l0.88,-1.02l1.95,-0.62l1.34,-2.77l8.58,0.29l0.57,-0.33l0.16,-0.55l-0.47,-0.95l-2.41,-2.3l-0.79,-0.41l-1.03,-0.04l0.16,-2.85l-0.51,-1.31l-1.39,-0.46l-1.37,0.64l-2.26,-1.46l-1.22,-2.32l-0.19,-2.14l-0.79,-0.77l-0.57,-1.24l-1.11,-1.03l0.06,-2.11l-0.66,-1.12l-1.11,-0.96l0.19,-1.5l-0.52,-0.38l-0.62,0.03Z",
      name: "Bihar",
    },
    "IN-PY": {
      path: "M432.94,621.28l0.12,-0.11l0.06,0.17l-0.03,-0.0l-0.16,-0.05ZM434.43,621.71l0.34,-0.0l0.03,0.12l-0.21,-0.03l-0.16,-0.08ZM355.48,770.41l0.24,-0.33l0.83,0.78l1.19,-0.08l-0.49,1.07l1.07,0.9l0.61,-0.12l1.09,-0.94l-0.97,2.81l-1.98,-0.18l-0.66,-0.53l0.23,-1.51l-1.16,-1.87ZM356.86,803.07l0.79,-0.26l-0.03,-0.93l0.92,0.32l0.8,-0.45l0.68,0.07l0.07,4.51l-0.78,-0.6l0.25,-0.69l-0.28,-0.5l-2.69,-0.99l0.29,-0.48ZM218.44,768.85l0.02,-2.05l1.16,0.12l1.63,-1.29l0.73,0.2l-0.37,0.3l-0.72,-0.09l-0.44,0.41l-0.27,1.66l-1.25,1.09l-0.5,-0.37Z",
      name: "Puducherry",
    },
    "IN-DD": {
      path: "M144.48,504.35l0.06,-0.81l0.49,-1.24l0.48,0.6l0.06,1.15l-1.09,0.3Z",
      name: "Daman and Diu",
    },
    "IN-DN": {
      path: "M146.62,508.98l1.49,0.02l0.64,-1.32l0.96,0.1l1.81,-1.3l0.0,1.2l1.42,0.47l-2.51,1.64l-0.2,0.71l0.26,1.36l0.63,0.79l1.15,0.12l0.71,-0.32l0.3,-1.06l1.1,0.26l-0.01,2.67l-0.38,1.21l-1.24,-0.9l-1.12,0.47l-0.96,-0.54l-0.98,0.61l-1.35,-2.56l-0.26,-1.86l-1.39,-1.3l-0.07,-0.48Z",
      name: "Dadra and Nagar Haveli",
    },
    "IN-DL": {
      path: "M269.18,237.92l-1.09,-1.45l1.02,-1.35l1.39,-0.53l0.24,-1.0l0.78,-0.87l-0.35,-3.41l0.21,-0.9l1.59,-0.79l1.2,-0.05l0.91,-0.88l2.3,0.67l1.4,-0.39l0.27,0.61l-0.2,0.97l0.58,1.16l2.51,2.23l0.25,0.66l0.62,2.22l-0.95,1.04l-0.26,0.81l0.7,1.44l-2.32,0.75l-0.66,0.79l0.48,1.01l-0.98,0.25l-2.63,-1.33l-0.89,-1.75l-2.19,-1.1l-0.66,0.01l-0.48,0.79l-2.76,0.39Z",
      name: "Delhi",
    },
    "IN-NL": {
      path: "M779.92,344.86l0.24,-2.48l-0.5,-1.53l-1.51,-1.38l-1.72,-2.41l5.61,-4.5l1.79,-2.48l3.84,-3.32l0.18,-0.6l-0.86,-1.43l1.99,-1.01l0.92,0.2l0.22,1.55l-1.05,1.7l0.18,0.61l0.39,0.2l3.95,-0.86l1.52,-1.07l1.37,-2.13l-0.58,-1.75l0.0,-0.99l1.01,-1.64l0.11,-3.4l2.88,-3.87l2.12,-1.95l0.79,-3.49l2.04,-2.58l0.89,2.11l0.8,0.16l0.76,-0.33l1.67,-1.57l0.74,-1.09l0.25,-1.63l1.49,-1.74l1.12,-0.19l0.86,-0.7l1.24,0.02l2.52,-1.07l3.03,-1.88l1.13,-0.97l1.92,-2.9l1.52,-1.46l1.31,0.78l1.78,-0.04l4.5,-2.81l1.45,1.13l0.13,1.9l-0.88,1.28l-0.18,0.95l0.32,0.93l0.81,0.73l-0.26,2.06l0.63,1.74l-1.12,0.02l-0.96,1.1l-1.61,0.79l-0.48,2.09l-2.17,2.74l0.78,2.22l-0.69,2.6l0.11,2.79l0.48,1.15l0.9,0.47l-0.42,0.83l0.3,2.22l0.56,0.6l1.14,0.39l0.23,0.64l-2.48,2.95l-2.14,1.25l-0.24,1.45l0.63,3.47l-0.08,1.03l-1.42,0.62l-3.3,4.31l-0.08,0.67l-0.92,0.26l-1.66,2.11l-2.18,0.49l-1.29,0.92l-0.79,-0.14l-2.19,-1.69l1.06,-3.49l0.1,-2.14l-0.72,-0.37l-2.49,2.12l-1.72,0.98l-1.48,1.73l-1.75,0.89l-3.83,0.5l-1.34,-0.81l-1.99,0.08l-1.96,-1.16l-6.95,0.35l-1.1,0.4l-0.54,1.41l0.25,0.38l1.19,0.4l0.13,0.77l-3.93,3.81l-0.97,2.24l-1.16,1.64l-1.08,-1.27l-1.34,-0.42l-1.8,-1.16Z",
      name: "Nagaland",
    },
    "IN-WB": {
      path: "M545.45,405.85l-0.5,-0.98l0.56,-0.42l5.08,-0.89l0.31,-0.72l-0.47,-1.55l0.74,-0.53l1.67,0.87l0.84,0.07l-0.32,2.17l0.35,0.57l1.81,0.66l1.35,0.95l1.69,-0.33l1.95,-1.65l0.58,-2.23l1.76,-1.44l7.16,-2.58l3.6,-0.58l1.37,-0.52l0.56,-0.8l0.21,-1.04l-0.38,-1.28l0.13,-0.59l1.64,-2.23l2.89,1.56l1.05,0.13l2.02,1.46l1.68,0.42l1.24,-0.23l0.42,-0.94l-0.98,-1.3l1.48,0.29l0.47,0.6l0.77,0.13l0.6,-0.83l0.08,-1.2l0.67,-0.26l0.38,-0.66l-0.04,-1.15l-1.61,-2.24l1.91,-0.48l0.42,1.44l0.56,0.34l1.97,-0.7l1.91,0.1l1.22,-1.17l-0.03,-2.65l0.4,-0.06l1.12,0.83l0.64,-0.01l0.71,-0.96l0.29,-1.21l1.52,0.03l0.69,-0.57l0.01,-0.7l-0.45,-0.74l-0.74,-0.19l-0.01,-0.67l2.93,-1.81l1.74,-3.39l0.04,-1.52l0.75,-1.33l-0.41,-1.07l0.04,-1.25l-0.42,-0.42l1.37,0.59l1.07,-0.12l0.94,-0.6l0.46,-0.93l-0.2,-0.47l-0.58,-0.24l0.58,-0.51l0.08,-0.51l-0.69,-2.04l-0.63,-1.08l-1.12,-0.31l-0.14,-0.29l0.68,0.28l0.62,-0.34l0.26,-2.07l0.61,-1.34l-0.14,-1.71l-1.05,-3.44l-2.07,-1.79l-0.21,-1.92l0.46,-1.62l0.97,-1.02l0.74,-1.55l-0.87,-2.23l-0.57,-0.72l-0.74,-0.08l-0.57,-0.84l0.56,-0.79l2.33,-1.03l0.96,-1.0l2.16,-0.97l1.4,1.03l1.9,0.33l0.47,-0.45l-0.11,-1.05l-0.63,-0.84l0.41,-2.35l-0.5,-2.1l-1.25,-1.16l-1.89,-0.81l-1.11,-1.14l-1.2,-2.32l-1.92,-1.09l-0.39,-1.0l0.85,-0.61l0.64,-2.73l2.92,-2.46l1.08,-1.34l1.42,-0.41l1.96,-1.39l2.66,-2.74l1.56,-0.7l1.28,-1.06l1.18,-0.21l0.32,-0.73l-0.46,-1.15l-1.07,-0.55l0.79,-0.66l-0.12,-0.71l-1.34,-1.38l-1.14,-0.68l0.23,-1.51l-0.57,-0.35l-2.11,0.6l-0.78,-0.16l2.21,-5.06l0.16,-2.07l-0.51,-3.36l-1.72,-3.31l-1.28,-1.98l-1.44,-0.95l-1.12,-1.75l0.87,-4.21l1.51,1.11l0.39,1.54l0.74,0.73l4.09,0.21l3.92,1.74l2.29,-0.56l2.85,-2.48l2.71,0.28l1.59,-0.16l0.79,0.57l1.28,0.26l2.69,1.54l0.46,1.37l0.19,3.46l0.29,0.34l1.63,-1.15l0.76,1.97l0.84,0.27l1.26,-0.33l0.64,0.28l1.07,0.92l0.7,1.54l0.63,0.6l3.73,0.29l1.04,-0.28l0.94,-0.75l1.87,-0.3l3.01,1.82l2.09,-0.18l2.3,0.6l0.6,0.46l-0.29,1.59l0.63,0.37l2.22,-0.41l1.68,0.7l2.49,0.24l0.75,-0.98l0.75,2.6l0.28,3.28l-0.9,2.05l-0.46,2.89l-0.88,0.81l0.31,0.9l-1.25,0.59l-0.72,1.5l-0.86,0.56l0.04,1.22l-1.55,0.49l-0.18,-0.8l-0.86,-0.37l-1.27,0.64l-0.02,1.22l-0.94,0.39l-0.42,1.08l0.57,0.68l-0.48,0.58l0.23,0.75l1.09,0.15l-1.54,1.52l-0.38,1.81l-1.38,-1.31l-2.29,0.18l-0.73,-0.75l-1.31,0.6l-0.84,-0.27l-1.33,-1.22l-1.01,-0.45l-0.8,-1.36l-2.47,-1.14l-0.46,-0.78l-0.28,-2.06l-1.01,-1.97l-0.01,-0.39l0.84,-0.04l0.09,-1.08l-1.36,-0.64l-0.24,-0.96l-1.33,-0.55l-1.96,-1.58l-0.57,-0.06l-0.99,0.67l-0.74,1.31l-0.01,0.73l0.75,0.92l1.61,0.68l0.49,1.17l0.62,0.23l0.34,0.57l0.65,0.14l-0.29,0.34l-1.18,0.29l-0.68,-0.22l-1.29,-1.25l-1.04,-0.25l-0.91,0.46l-0.72,1.18l-0.91,-1.51l-1.33,-0.61l-1.97,0.6l0.81,-0.62l0.24,-1.27l-1.29,-0.96l-0.66,-1.82l-1.2,-0.43l-0.74,-1.07l-1.95,-0.46l-2.01,-1.77l-1.53,-0.53l-0.33,-2.09l-0.46,-0.49l-0.9,0.45l-0.68,1.2l-1.21,3.24l0.06,0.87l0.87,0.76l0.58,-0.35l0.14,-0.78l2.98,0.87l0.96,2.56l-1.84,-0.15l-3.0,2.73l-0.3,2.13l-3.15,1.09l-1.89,1.47l-0.78,1.93l0.51,1.07l-0.12,0.57l-0.79,0.64l-1.63,3.72l0.4,2.48l1.35,2.12l1.02,0.06l2.3,-0.88l0.79,0.4l1.81,2.04l2.96,2.25l0.25,2.15l1.56,0.98l1.71,2.04l2.13,0.28l2.25,1.05l0.73,-0.2l0.76,-0.76l1.66,-0.37l1.12,1.2l-0.48,1.96l1.4,2.3l1.33,0.44l0.8,0.66l2.14,0.08l-0.15,0.49l-1.45,1.22l-0.04,1.1l-0.32,0.07l-0.24,0.62l-2.61,-0.88l-0.47,0.18l-0.58,0.98l-1.64,-0.16l-2.86,-0.85l-1.23,-0.01l-1.12,0.71l-2.46,-0.78l-1.5,0.37l-0.35,0.76l-0.17,3.89l-0.99,1.68l-0.5,1.66l-1.59,2.27l-1.78,-0.3l-0.37,-1.1l-1.21,-1.04l-1.33,0.16l-1.59,0.83l-0.21,0.5l0.78,2.11l-0.83,1.08l-0.67,0.34l-0.28,1.04l-0.9,0.53l-0.14,1.33l-0.83,2.23l0.28,0.45l0.9,0.3l0.73,1.05l0.07,1.91l1.05,1.48l0.84,0.18l8.01,4.07l2.42,1.81l5.01,0.7l1.0,-1.38l1.17,0.59l0.6,0.78l0.3,2.04l-0.42,0.68l-1.42,0.76l-0.3,0.7l-0.09,2.48l0.81,1.21l0.65,0.38l-0.58,0.9l0.35,2.32l-1.67,1.6l-1.68,0.07l-0.85,0.66l-0.02,1.23l-0.76,1.49l0.25,1.1l-0.6,3.39l0.72,0.51l-0.1,0.68l0.41,0.56l1.25,0.21l1.1,1.66l1.75,1.33l0.39,0.76l0.88,0.04l0.61,-0.71l-1.51,4.2l-1.03,1.81l-0.01,0.88l0.44,0.92l2.58,1.08l1.56,-0.51l3.8,1.0l-2.85,2.89l-0.46,0.98l-0.39,3.23l1.78,3.39l1.51,0.97l-0.23,1.76l-0.92,1.57l1.48,4.98l-0.13,0.51l-0.56,0.36l0.08,0.71l1.11,0.51l0.92,3.0l-0.39,1.34l0.91,2.85l-0.27,0.58l1.66,2.45l0.42,1.62l-1.03,0.69l-0.22,1.48l0.63,1.91l0.14,2.67l-1.18,0.15l-0.44,0.52l-1.34,-0.77l-0.36,-1.32l-0.38,-0.28l-0.81,0.22l-0.3,0.82l0.64,1.51l2.25,1.42l0.54,0.87l0.86,3.85l1.27,1.9l-0.01,1.43l-0.48,0.14l-0.33,-0.52l-0.69,-0.07l-0.64,0.78l-1.89,-1.22l-1.24,-0.27l-0.7,-3.49l-0.61,-0.28l-0.4,0.34l-0.62,2.07l0.63,2.03l-0.94,0.29l0.5,-1.05l-0.26,-0.97l-0.39,-0.27l-1.42,1.86l0.48,2.23l-0.61,0.28l-1.15,-0.41l0.33,-1.07l-1.1,-2.67l0.57,-3.6l-0.26,-0.99l0.59,-1.77l0.2,-2.12l1.06,-1.02l0.23,-0.74l-0.27,-0.9l-1.35,-1.0l1.61,-2.01l-1.14,-0.17l-1.44,1.2l-0.31,1.39l1.07,0.87l-0.15,0.5l-0.98,2.08l-1.2,-0.05l0.8,-2.06l-0.43,-2.86l1.34,-2.58l-0.1,-0.63l-0.99,-0.36l-1.64,3.33l0.18,2.1l-0.71,1.31l-0.13,2.49l-0.97,2.58l-0.07,2.69l0.46,0.46l1.46,-0.37l0.16,0.55l-0.31,1.14l-0.55,-0.13l-0.4,0.44l0.23,2.14l-0.66,0.46l-0.07,1.76l-0.47,-0.41l-0.69,0.01l-0.11,1.32l-0.51,-0.09l0.07,-1.06l0.6,-0.74l0.46,-2.03l-0.73,-2.54l0.85,-1.8l-0.11,-1.1l-0.98,-1.56l0.53,-1.9l-0.75,-0.79l-0.46,-0.03l-0.08,0.85l-0.75,1.52l0.64,2.32l-0.63,0.42l-0.66,1.98l0.48,3.04l-0.28,0.49l-1.35,0.68l-0.22,-1.85l0.28,-0.81l-0.46,-0.52l-1.07,0.39l-0.38,-0.84l-0.84,0.2l-0.44,-2.18l-0.57,-0.66l-0.63,-0.16l-0.42,0.44l0.08,0.75l1.01,3.85l-0.42,1.45l0.66,1.05l-0.95,0.35l-0.35,-1.27l-0.51,-0.52l-0.6,0.03l-0.58,-1.49l0.87,-2.47l-0.23,-0.94l0.2,-0.63l-1.67,-3.15l-0.24,-2.24l0.24,-0.83l2.02,-2.79l-0.71,-3.23l-3.61,-1.75l-0.09,-0.54l-0.61,-0.27l-0.84,0.43l-0.77,-0.39l-1.03,-1.26l-0.97,-4.14l-0.49,-0.54l-0.92,-0.13l-0.41,0.6l0.54,0.86l0.74,3.83l0.6,1.16l1.56,1.46l3.72,0.8l0.73,0.61l0.32,1.05l-0.22,0.69l-1.51,1.64l-2.08,0.56l0.04,1.33l-2.0,4.07l-2.48,1.79l-1.01,1.44l-4.96,3.02l-2.47,0.14l-4.13,1.11l-1.25,-2.09l0.04,-2.21l-0.26,-0.62l-0.76,-0.57l-4.7,-1.12l-0.64,-1.11l-0.35,-2.0l-0.83,-1.17l-2.44,-0.78l-2.21,2.36l-0.3,-0.07l-0.94,-1.35l0.28,-2.14l-0.68,-1.6l-1.45,-1.03l-1.64,-0.67l-1.74,-0.15l-2.08,-1.48l-1.77,-0.61l-0.33,-0.57l0.32,-0.22l0.61,-0.36l1.19,0.03l0.28,-1.32l2.26,-0.3l0.3,-0.79l-1.52,-1.54l-0.47,-2.23l-2.14,-1.64l-0.14,-0.58l0.98,0.03l0.45,-0.53l-0.69,-1.9l-1.33,-1.0l-2.63,-0.5l-0.79,-2.5l-1.98,-1.62l-0.94,-0.49l-1.31,-0.05l-1.46,-1.14l0.13,-2.51l0.41,-1.21l-0.13,-0.83l0.77,-0.68l1.92,-0.56l0.18,-0.83l-1.95,-0.64l-4.23,-0.15l-1.7,-0.37l-1.31,-0.0l-1.19,0.45l-5.28,-5.12l-1.99,-0.54l-1.51,0.49l-0.33,-1.19l-1.25,-1.57l0.38,-1.25l1.12,-1.59l0.49,-2.12l-0.57,-0.72l-1.16,-0.03ZM621.37,462.65l0.62,0.85l-0.48,1.24l-0.1,-0.46l-0.03,-1.63ZM639.28,467.29l-1.47,0.01l-0.03,-1.73l1.33,0.75l0.17,0.97ZM630.2,458.45l-0.18,-0.62l0.39,-0.95l1.22,-1.6l0.22,0.26l-0.7,3.21l-0.96,-0.3ZM615.62,464.13l-1.95,-0.31l-0.34,-0.61l1.43,-4.38l1.08,-1.59l0.53,2.85l-0.1,1.69l-0.79,0.55l-0.14,0.48l0.28,1.31ZM614.23,456.85l0.15,-1.15l0.64,-1.08l0.26,0.49l-0.18,0.81l-0.87,0.92Z",
      name: "West Bengal",
    },
    "IN-HR": {
      path: "M197.67,196.54l-1.92,0.66l-0.68,-0.19l-0.12,-0.33l0.58,-1.74l1.54,-0.71l0.56,-0.71l0.04,-0.87l-1.03,-1.19l0.03,-0.46l3.74,1.02l2.05,-1.87l3.05,-0.56l0.68,0.68l2.25,0.52l0.65,1.26l1.95,1.36l2.44,-0.58l0.57,-1.17l-0.41,1.39l0.24,1.61l1.61,1.38l0.49,-0.02l0.38,-1.05l0.49,-0.25l0.24,0.89l0.89,1.26l-0.77,0.21l-0.05,1.32l-0.89,0.47l-0.18,0.49l2.26,4.51l0.68,0.02l1.72,-0.75l-0.08,-1.9l0.4,-0.66l1.05,-0.42l0.07,-0.72l1.15,-1.12l1.84,-2.76l4.54,1.48l1.87,-0.35l1.18,0.2l0.81,-0.43l0.25,-1.03l1.84,-0.6l1.45,0.72l0.68,1.43l0.66,0.57l2.19,0.36l1.5,-0.6l1.29,-0.08l1.38,-1.54l2.31,-0.92l2.19,-1.64l-0.08,-0.61l-0.99,-0.75l-0.42,-1.25l0.77,-2.4l0.6,-0.91l-0.16,-0.9l0.93,-0.28l0.17,-0.47l-1.41,-0.86l0.04,-0.31l1.21,0.8l1.17,0.28l1.1,-0.22l0.28,-0.67l0.98,0.56l0.49,-0.29l0.43,-0.88l0.03,-1.16l0.63,1.85l0.67,0.93l1.52,0.62l1.31,-0.04l3.08,-2.2l0.45,-2.11l-1.11,-0.83l-0.74,-1.06l1.96,-0.97l2.75,-2.1l0.15,-0.69l-0.67,-0.42l0.18,-0.95l0.62,-0.28l0.94,0.26l1.29,-0.13l1.11,2.15l0.94,0.05l0.48,-0.5l0.29,-1.07l-0.34,-3.0l0.44,-1.02l-0.52,-1.05l0.23,-1.9l-0.5,-1.28l-0.77,-0.38l-0.31,-1.22l-0.78,-0.13l0.06,-1.77l-0.44,-1.16l0.68,-1.4l0.01,-0.71l-0.29,-0.49l-0.85,-0.37l-0.78,-1.44l0.75,-0.5l0.96,1.15l1.8,0.0l0.72,0.82l0.49,1.43l1.37,0.91l0.34,0.94l3.46,1.85l0.71,0.88l0.16,2.59l-0.5,1.22l0.09,0.78l2.08,1.94l0.25,0.78l0.44,0.23l0.93,-0.4l1.76,0.9l1.62,0.31l0.93,0.77l1.26,-0.33l0.59,0.71l2.07,-0.23l2.03,1.34l-0.49,3.0l-4.77,4.22l-0.4,1.32l-2.42,1.67l-0.2,0.66l-0.96,0.19l-0.26,0.72l-1.47,1.42l-0.66,1.71l-0.89,4.15l-0.47,0.9l-0.85,0.28l0.03,1.48l-0.81,0.56l-0.03,0.91l-0.63,0.62l-0.17,1.53l0.38,1.01l-0.82,0.38l-0.38,0.67l0.4,1.11l-0.1,1.06l0.71,0.51l0.71,-0.06l-1.49,1.77l0.33,0.56l2.21,0.16l-0.49,1.16l0.06,1.19l0.44,0.83l-0.56,1.13l0.32,4.99l-0.22,0.57l1.83,3.91l-0.49,0.52l-0.07,0.59l1.38,1.81l-0.48,0.8l-1.19,0.43l-2.62,-0.68l-1.12,0.96l-1.76,0.23l-1.23,0.79l-0.42,1.42l0.38,3.16l-0.71,0.77l-0.21,0.93l-1.26,0.39l-1.28,1.97l1.21,2.02l0.49,0.29l3.29,-0.53l0.51,-0.79l1.96,0.95l0.92,1.77l2.96,1.49l1.17,-0.15l0.67,-0.44l0.11,-0.6l-0.47,-0.68l0.36,-0.34l2.21,-0.63l1.36,1.03l-0.01,0.77l0.51,0.3l0.72,-0.35l0.65,1.19l0.96,-0.1l-0.04,0.82l0.65,0.59l-0.7,2.07l0.67,0.83l0.27,1.32l1.0,0.34l-0.17,0.55l-0.64,0.25l-0.17,0.47l0.74,0.72l-0.77,0.85l0.01,1.32l-0.24,-0.15l-0.61,0.36l0.19,1.33l-0.23,0.73l0.1,0.41l1.03,0.81l0.7,1.8l-0.54,0.3l-1.08,1.73l-1.24,-0.14l-1.14,1.02l-2.4,0.84l-0.96,0.82l-1.05,0.03l-0.37,0.47l-0.86,-0.73l-0.59,0.56l-0.3,-0.44l-0.52,-0.11l-0.85,0.76l-1.92,-0.54l-0.95,0.12l-0.53,1.25l0.42,0.62l0.78,0.36l-1.77,0.36l-1.03,1.64l-1.71,0.27l-0.23,-0.17l0.72,-0.3l0.15,-0.38l-0.57,-0.95l0.43,-2.47l0.88,-1.72l-0.19,-3.96l-0.52,-2.28l0.64,-2.88l-0.31,-0.93l-2.2,-2.22l-0.95,-0.48l-1.46,0.62l-1.38,1.94l-3.45,2.5l-0.25,0.95l0.49,1.35l-1.85,0.43l-0.89,0.93l-0.83,-2.12l-1.96,-0.59l0.71,-0.57l-0.55,-0.72l0.54,-0.08l0.22,-0.4l-0.98,-1.7l-0.96,-0.35l-1.98,0.38l-0.71,-1.02l-1.24,-0.44l-0.56,0.44l-0.0,0.81l1.23,1.18l-0.83,0.3l-0.23,0.52l0.19,0.51l1.05,0.65l-0.19,0.59l-0.5,0.06l-1.74,-1.05l-0.94,0.38l-1.54,-0.12l-0.66,0.79l-0.18,1.38l0.66,2.16l0.02,1.52l0.69,0.96l0.29,1.5l-0.62,0.44l-1.77,-1.38l-3.88,0.2l-0.48,-1.45l-1.14,-0.82l-0.09,-0.38l1.1,-0.25l0.59,-0.56l0.14,-0.71l-0.49,-0.68l0.63,-1.33l1.08,-1.16l0.14,-0.82l-0.76,-0.63l-0.7,0.22l-0.51,0.59l-0.74,-0.62l1.69,-0.98l0.71,-0.94l0.81,0.77l0.71,0.05l0.34,-1.01l-1.72,-2.96l-2.17,-2.79l-2.33,-2.11l-2.17,-0.91l-1.14,0.06l-0.05,-1.25l-2.28,-1.69l-3.18,-4.01l-3.25,-9.33l1.03,-1.13l-0.06,-1.08l-0.44,-0.58l-1.68,-0.7l-1.73,-2.58l0.02,-0.98l-0.52,-1.06l0.81,-0.33l0.22,-0.76l-0.73,-2.06l-0.71,-0.18l-1.11,0.73l0.1,-1.56l-0.26,-0.42l-0.65,-0.14l-1.3,0.6l-0.77,0.84l-0.86,0.08l-1.19,-0.66l-1.07,0.71l-1.9,0.54l-1.12,-1.64l-0.56,-0.19l-1.59,0.27l-1.1,-2.41l-0.82,-0.74l-2.52,-0.92l-0.97,0.26l-1.36,1.06l-1.48,-0.23l-1.78,0.2l-0.51,0.37l-0.23,0.76l-0.28,-0.03l-2.1,-3.33l0.28,-0.41l1.47,-0.13l0.47,-0.84l0.07,-1.62l-1.13,-1.94l0.92,-5.58l-0.73,-0.83l-1.02,0.44ZM259.41,180.33l-0.42,0.53l-0.13,0.09l0.07,-0.25l0.48,-0.37Z",
      name: "Haryana",
    },
    "IN-HP": {
      path: "M229.45,117.96l1.78,-1.92l0.71,-1.52l-0.42,-0.79l-1.07,0.13l-0.02,-1.36l3.39,-1.15l1.65,-1.71l4.23,-3.05l-0.07,-0.68l-1.73,-2.9l0.38,-1.22l1.73,-1.98l0.07,-1.31l-0.71,-1.74l0.32,-2.08l-1.4,-2.4l-1.75,-1.91l-0.13,-0.95l1.18,-0.43l1.48,0.51l0.94,0.92l0.79,-0.09l4.49,-3.83l4.22,-1.75l0.9,-0.95l0.55,-1.64l2.1,-1.4l1.27,-0.58l3.51,-0.66l0.95,-0.52l2.35,1.47l3.95,-0.18l5.58,5.42l4.66,2.96l1.53,0.84l6.68,2.06l0.97,-0.1l0.54,-0.69l2.55,-0.39l2.39,-0.78l1.97,-1.57l2.83,-1.51l4.08,4.65l1.07,2.36l1.06,1.32l0.31,2.34l2.3,3.1l1.48,0.01l1.99,-1.8l2.17,-0.84l2.03,-0.16l0.85,-0.83l1.36,-0.66l0.22,-1.01l0.92,0.01l0.38,1.9l-0.26,1.58l-2.3,2.04l-0.82,2.5l0.0,1.13l0.76,0.84l0.89,0.12l1.87,-1.75l1.92,3.19l-0.51,1.13l0.86,3.58l-0.14,1.8l1.83,1.02l4.14,5.78l2.59,1.76l0.19,0.99l-0.67,1.45l-0.59,2.7l-0.94,1.85l0.75,1.03l-0.01,1.01l0.96,1.57l1.22,0.41l1.58,1.69l-3.62,3.17l0.06,1.16l1.86,1.29l-0.72,3.51l0.1,0.8l0.49,0.69l1.22,0.56l2.79,-0.26l1.58,1.74l1.69,2.52l0.03,0.64l-1.52,0.33l-1.82,-0.11l-0.93,-0.71l-1.48,-2.18l-4.35,-0.29l-1.49,-0.5l-3.2,0.35l-2.0,-1.63l-0.97,-0.01l-1.04,-0.74l-1.82,-0.16l-1.0,0.16l-1.58,1.0l-1.51,0.46l-4.45,2.55l-3.03,-0.02l-4.59,4.61l0.1,1.68l-1.55,0.35l-0.07,0.87l1.2,1.32l0.08,0.92l-0.09,0.37l-0.57,-0.32l-0.55,0.2l-1.49,3.28l0.05,1.22l0.89,0.92l0.27,1.62l0.79,1.6l-0.76,0.85l-0.03,0.51l0.97,1.5l1.17,0.3l-0.02,0.5l-4.31,2.33l-2.78,0.6l-0.54,1.0l-1.24,-0.9l-1.78,0.25l0.35,-0.76l-0.47,-0.5l-2.06,0.86l-0.62,-0.66l-1.76,-0.37l-1.86,-0.95l-0.96,0.35l-0.19,-0.67l-1.61,-1.27l-0.4,-0.67l0.53,-1.47l0.06,-1.86l-0.36,-1.18l-0.9,-1.08l-3.39,-1.8l-0.27,-0.87l-1.32,-0.83l-0.45,-1.35l-0.95,-1.09l-1.97,-0.09l-1.17,-1.21l-1.44,0.74l-4.03,-3.4l-0.52,-1.32l0.49,-1.87l-0.67,-0.63l0.08,-1.55l0.76,-1.11l-0.03,-0.41l-0.37,-0.37l-0.92,-0.05l-0.01,-0.8l-0.54,-0.83l-0.54,-0.15l-0.51,0.57l-0.55,-0.83l-1.05,0.02l-0.81,-0.71l-0.55,0.31l-2.49,-4.37l-1.8,0.74l-0.04,1.86l-0.67,0.19l-0.54,1.21l-0.85,-0.29l-1.23,0.33l-0.44,-0.26l-0.89,-1.09l-2.37,-7.15l-4.5,-8.19l0.07,-0.38l1.15,-0.14l0.15,-0.7l-2.74,-4.52l-5.6,-2.94l-3.59,-0.7Z",
      name: "Himachal Pradesh",
    },
    "IN-AS": {
      path: "M663.07,316.48l0.01,-0.33l2.23,-0.81l0.27,-0.58l-0.2,-0.73l0.78,-0.56l0.58,-1.33l1.61,-0.9l-0.43,-0.98l0.82,-0.66l0.51,-3.03l0.94,-2.19l-0.3,-3.5l-0.71,-2.22l1.37,0.07l6.69,-1.16l1.04,-0.91l0.73,-1.87l0.84,-0.52l2.26,-0.19l1.89,-1.28l0.86,0.13l2.83,1.94l3.6,1.77l4.05,0.43l8.94,-0.5l1.75,-0.74l0.81,-0.01l3.25,0.08l2.45,0.93l1.24,-0.17l1.11,-0.58l1.4,-2.16l0.7,-0.32l1.42,0.14l0.88,1.73l0.8,0.57l2.17,-0.43l1.87,0.42l1.57,-0.18l3.68,-1.8l0.91,1.59l0.76,0.22l0.63,-0.55l-0.09,-1.07l0.42,-0.45l-0.02,-0.62l1.9,1.21l2.1,-0.24l1.36,-1.2l0.28,-0.99l3.65,0.29l3.76,-0.78l8.62,-2.47l2.73,-1.83l3.43,0.48l3.48,1.5l0.3,0.71l0.71,0.55l1.88,0.49l10.99,-1.18l1.14,0.32l1.27,0.98l0.87,0.01l1.48,-0.64l3.25,-0.5l1.99,-0.77l4.25,-3.13l0.32,-0.77l-0.24,-1.72l0.51,-0.89l4.15,-4.24l8.09,-6.65l0.47,-1.11l-1.32,-1.97l0.7,-0.82l1.01,1.03l2.02,0.77l3.03,-0.68l1.08,0.66l1.54,-0.32l4.22,-2.16l4.21,-1.1l4.59,-2.26l9.18,-3.21l1.71,-0.97l1.72,0.75l1.48,0.08l4.22,-1.06l4.0,-2.54l1.27,-0.38l7.37,-0.1l-2.08,3.62l-3.49,4.12l-0.39,1.22l0.72,3.03l2.67,2.25l0.25,1.82l-0.48,1.35l0.33,0.7l-0.05,1.3l0.79,0.26l1.3,-1.47l0.92,-0.12l0.74,0.97l-0.03,1.23l-1.02,0.66l-0.4,0.89l-1.02,0.43l-0.42,0.76l-0.96,-0.32l-2.26,0.04l-4.83,1.83l-2.47,-1.34l-1.74,0.34l-0.89,0.84l-0.76,2.13l-1.08,1.05l-2.06,0.87l-2.93,2.18l-2.33,0.23l-1.17,1.42l-3.92,2.33l-1.33,0.03l-1.25,-0.77l-0.62,0.03l-1.42,1.26l-2.28,3.32l-0.98,0.83l-2.89,1.8l-2.43,1.03l-1.31,-0.0l-0.86,0.71l-1.1,0.15l-1.9,2.12l-0.28,1.68l-0.66,0.97l-1.47,1.38l-0.68,0.17l-0.59,-1.92l-0.66,-0.39l-0.54,0.12l-2.29,2.96l-0.75,3.42l-2.08,1.89l-2.98,4.02l-0.17,3.6l-1.03,1.73l0.01,1.2l0.57,1.47l-1.16,1.72l-1.19,0.85l-3.43,0.81l1.09,-1.91l-0.08,-1.11l-0.43,-0.8l-1.57,-0.43l-2.36,1.15l-0.41,1.0l0.9,1.2l-3.78,3.26l-1.75,2.44l-5.74,4.65l0.02,1.06l1.74,2.27l1.43,1.25l0.42,1.24l-0.09,1.81l-1.83,2.72l-2.5,5.47l-0.88,0.27l-0.67,0.79l-0.14,1.08l0.51,1.11l-1.1,0.82l0.37,1.06l-1.35,2.11l-0.19,0.93l-1.4,-0.34l-0.76,0.41l-0.42,0.68l-0.98,3.15l0.15,0.92l0.37,0.32l-0.7,1.62l0.54,1.23l-1.03,0.63l-0.78,4.46l-0.49,0.04l-0.71,1.05l-1.92,-0.33l-2.5,0.78l-1.72,-3.21l-0.61,-0.53l-0.52,-0.02l-0.53,0.59l-1.18,3.26l-2.61,2.91l0.05,1.31l-0.98,0.5l-3.21,2.95l-0.74,-0.22l-0.53,-0.84l-0.23,-0.86l0.42,-1.1l-0.34,-0.48l-4.04,-0.06l-1.99,-0.48l0.99,-2.26l0.18,-1.77l-0.74,-1.72l-0.3,-1.98l-2.13,-1.46l0.78,-3.19l1.58,-4.31l0.04,-1.65l-0.52,-1.57l0.67,-0.52l0.99,0.32l2.9,1.82l3.14,-0.9l0.81,-1.3l-0.35,-1.35l-0.87,-0.64l-0.1,-0.43l-1.9,-1.24l3.56,-3.27l1.3,-0.42l0.35,-0.75l2.67,-0.27l0.89,-0.99l3.76,-1.27l0.46,-0.64l-0.78,-1.58l0.37,-1.38l-0.38,-1.05l-2.72,-2.53l-2.06,-0.78l-0.47,-0.7l-0.81,-0.43l1.34,-1.1l1.33,-1.73l0.23,-0.63l-0.27,-0.67l-1.06,-0.16l-1.61,0.87l-3.56,-3.68l-2.01,-1.75l-1.09,-0.46l-2.26,1.22l-2.7,0.45l-1.34,0.75l0.18,-1.73l-0.23,-1.9l1.48,-3.54l-0.29,-0.86l-0.88,-0.3l-0.05,-0.67l2.62,-2.44l0.29,-0.89l-0.27,-0.45l-3.49,-0.3l-3.33,1.02l-1.08,-0.05l-2.93,0.66l-0.79,-0.14l-2.03,-1.5l-0.88,0.03l-1.87,1.45l-1.06,2.67l-1.17,1.02l-0.79,-0.11l0.48,-1.79l-0.31,-1.05l-0.62,-0.43l-1.23,-0.02l-3.89,4.8l0.26,0.86l-1.79,0.13l-1.8,0.55l-1.04,0.78l-1.85,2.29l-1.11,0.57l-0.36,-0.65l-0.11,-3.58l-0.9,-0.34l-2.65,0.99l-0.98,-0.4l-0.72,0.37l0.17,-1.18l-0.25,-0.83l-1.14,-0.53l-0.7,-0.86l-3.36,-0.26l-1.72,0.28l-0.87,0.55l-0.12,-0.83l-0.79,-0.34l-3.3,0.94l-0.24,-0.8l-0.65,-0.4l-0.61,0.19l-1.3,1.31l0.29,-0.71l-0.11,-0.76l-1.17,-0.96l-1.09,-0.45l-2.78,-0.18l-0.9,0.14l-1.44,0.94l-5.77,0.82l-3.11,2.52l-1.92,2.43l-0.44,1.79l-0.72,1.25l0.16,2.24l1.61,1.92l-0.05,0.49l-0.77,0.48l-2.0,0.28l-0.42,0.72l-0.22,2.1l-1.52,0.65l0.59,-5.87l-1.02,-2.98l-0.55,-2.85l0.1,-0.67l1.34,-2.33l0.13,-0.78l-0.68,-0.66l0.5,-0.89l-0.56,-0.92l-0.84,0.15l-0.91,-1.29l-0.12,-1.51l-1.12,-2.31l-0.58,-0.37l-1.15,-0.04Z",
      name: "Assam",
    },
    "IN-UT": {
      path: "M290.95,175.24l-0.31,-0.45l0.16,-0.23l3.37,-0.85l3.64,-1.92l0.42,-0.6l-0.06,-1.2l-1.32,-0.46l-0.68,-1.08l0.48,-0.37l0.27,-0.91l-0.22,-0.97l-0.63,-0.85l-0.26,-1.61l-0.89,-0.91l-0.01,-0.76l1.22,-2.78l0.89,0.28l0.59,-1.05l-0.14,-1.41l-1.18,-1.28l0.81,0.08l0.67,-0.49l0.3,-0.73l-0.32,-1.05l3.9,-4.07l0.54,-0.28l2.79,0.1l4.5,-2.57l3.73,-1.55l1.69,0.15l0.85,0.68l1.03,0.03l1.2,1.2l0.94,0.46l2.61,-0.37l2.11,0.53l4.18,0.25l1.13,1.91l1.22,0.95l3.16,0.05l1.25,-0.6l0.0,-1.27l-1.82,-2.75l-1.58,-1.74l0.87,-1.39l0.96,0.85l1.0,-0.03l1.1,-3.41l1.16,-0.22l2.08,1.39l0.62,1.44l1.05,0.36l-0.03,1.25l0.74,0.86l0.04,1.22l1.46,0.85l0.54,2.52l0.53,0.57l2.26,0.97l1.08,2.47l2.17,0.27l1.63,2.04l1.6,0.58l1.91,-0.81l3.23,-0.54l3.15,0.76l1.58,2.12l3.25,1.54l1.81,2.14l1.15,0.36l1.78,-0.62l0.99,1.35l0.94,0.56l-0.58,1.06l-0.99,0.19l-0.34,0.48l0.09,0.66l0.95,1.13l0.08,0.47l-0.68,1.46l0.45,0.55l2.1,-0.18l2.17,0.6l5.67,2.86l2.65,0.07l3.78,2.21l1.84,2.43l5.1,1.78l0.86,0.44l0.68,1.13l-2.12,0.8l-0.8,-0.96l-0.55,-0.09l-0.49,0.35l-1.01,1.05l0.22,1.15l-0.44,0.64l-2.27,1.77l-1.2,1.7l-2.2,1.62l-2.18,0.57l-0.85,1.97l-2.18,2.84l-0.56,0.44l-1.9,0.52l-0.92,0.77l-0.45,0.93l-0.04,1.03l0.96,3.25l-1.75,1.83l-0.16,1.01l-1.64,1.45l-0.25,0.68l-1.2,0.53l-0.28,0.84l1.3,3.62l0.76,0.26l-0.56,2.85l-0.47,-0.21l-0.86,0.34l-0.15,0.75l0.5,1.37l-0.14,0.51l-1.7,0.08l-1.15,0.63l-0.63,1.38l-0.35,2.99l-1.44,0.97l-0.65,1.28l0.08,2.75l1.04,0.9l-1.16,1.58l-1.43,0.55l-0.87,-0.37l-0.04,-1.04l-0.44,-0.24l-0.79,0.2l0.08,-0.94l-0.38,-0.4l-1.62,0.37l0.3,-1.52l-1.13,-0.87l-2.18,-0.29l-0.6,0.22l-0.26,0.74l-0.54,0.19l-1.94,-0.41l-1.16,0.47l-0.67,-0.89l-1.55,-0.1l-2.32,0.86l-0.71,-2.13l-1.46,-1.68l-2.4,-0.13l-3.8,-2.61l-0.66,-0.74l-0.55,-1.37l-2.39,-1.3l-0.84,-0.11l-3.42,1.35l-0.4,-1.87l-1.03,-1.41l-4.38,-2.28l0.11,-0.62l0.69,-0.26l1.19,0.27l0.76,-1.03l0.69,0.21l0.69,-0.27l1.77,-1.76l0.03,-1.29l-3.55,-1.07l-4.97,-2.81l-1.61,-1.38l-2.29,-3.67l-1.11,-1.1l-3.59,-1.79l-2.29,-3.9l-2.23,-2.17l-1.68,0.04l-0.85,1.12l0.16,1.82l1.13,4.27l-0.23,1.21l-0.92,0.93l-1.27,0.59l-0.53,-0.16l-3.81,-2.16l-3.95,2.04l-1.26,-2.37l-1.0,-3.95l-0.15,-3.69l1.35,-2.08l1.34,-3.04l3.16,-2.75l0.2,-1.02l-0.65,-0.63l-5.42,-2.71l-2.87,-2.4l-1.41,-0.26l-0.93,0.49Z",
      name: "Uttaranchal",
    },
    "IN-JH": {
      path: "M485.62,401.35l-2.2,-0.83l-1.66,0.13l-0.64,-0.47l-0.92,-2.18l0.46,-1.96l-0.75,-2.15l-5.31,-5.13l-0.45,-1.24l-0.28,-2.67l-2.23,-1.57l-3.11,-0.55l0.74,-1.85l1.39,-1.87l0.17,-1.31l1.15,-1.83l-0.17,-0.87l-1.63,-2.76l0.11,-0.69l0.93,-0.61l2.97,-0.32l4.77,0.81l1.87,-0.08l1.71,-1.09l1.28,0.23l2.91,-0.51l1.72,-1.44l0.63,-1.37l1.28,2.2l0.99,2.58l0.91,0.66l0.71,-0.13l0.37,-0.54l0.48,0.46l0.71,-0.09l0.31,-0.39l0.0,-0.99l1.13,-0.14l0.85,0.26l0.77,-0.44l0.4,0.65l0.01,0.81l-0.37,0.6l0.15,0.73l1.64,1.83l3.74,2.84l1.49,-0.24l1.96,-2.6l1.54,0.48l0.78,-0.11l0.96,-1.83l3.19,-2.01l0.37,0.18l0.47,1.68l1.14,0.05l0.36,1.93l0.73,0.76l1.93,0.23l3.38,-1.36l-0.14,0.95l0.71,0.62l2.29,-1.85l0.34,-1.09l2.75,-1.0l0.7,-0.85l3.22,-0.65l2.72,-0.0l1.15,0.31l2.07,-1.87l1.74,0.23l0.61,-0.3l0.36,-0.71l0.0,-1.21l-0.39,-1.16l1.12,-0.67l0.91,-2.77l0.59,-0.38l2.49,-0.03l0.87,0.51l1.73,1.86l1.65,-0.22l1.97,-1.34l-0.19,1.0l1.95,0.69l0.56,2.96l0.66,1.0l1.38,0.68l1.57,-0.48l1.85,0.5l0.24,1.48l-0.96,1.25l0.15,0.88l5.46,3.3l0.78,-0.54l0.24,-1.39l0.74,-0.75l0.22,-2.08l2.61,-2.45l1.79,0.61l1.64,-0.17l0.97,-0.45l0.63,-0.86l1.69,1.09l2.36,0.74l0.49,-0.24l0.04,-1.06l0.79,-1.32l2.54,0.86l1.25,-0.22l0.91,-2.73l0.27,-2.7l-0.24,-0.98l1.59,-2.79l-0.02,-3.96l1.79,-2.25l0.83,-0.3l1.16,0.31l0.51,-0.24l1.12,-3.76l1.51,-0.38l1.41,0.51l0.77,-0.28l1.6,-3.24l1.37,-1.12l1.1,0.52l1.08,1.31l2.68,0.7l1.93,-0.1l0.67,0.49l0.1,0.59l-0.46,1.42l0.24,2.13l2.17,2.01l1.05,3.9l-0.72,3.72l-1.0,-0.18l-0.39,1.06l0.51,0.67l1.0,0.23l0.43,0.82l0.61,1.83l-0.66,0.58l-0.05,0.67l0.77,0.42l-1.14,0.75l-2.41,-0.72l-0.85,0.38l0.07,0.8l1.03,0.5l-0.1,1.01l0.4,0.96l-0.7,1.06l-0.04,1.52l-1.26,2.69l-3.44,2.56l0.02,1.36l0.28,0.36l0.67,-0.02l0.2,0.56l-1.83,0.11l-0.91,2.13l-1.27,-0.85l-1.16,0.28l-0.22,0.53l0.12,2.26l-0.83,0.87l-1.67,-0.16l-1.77,0.66l-0.38,-1.37l-0.75,-0.37l-2.33,0.63l-0.38,0.95l1.58,2.04l0.13,0.85l-0.99,0.74l-0.22,1.61l-0.67,-0.67l-1.24,-0.31l-1.18,0.26l-0.11,0.83l0.9,1.18l-0.74,0.16l-1.48,-0.36l-1.99,-1.45l-1.11,-0.15l-2.74,-1.55l-0.75,0.01l-2.05,2.64l-0.2,0.99l0.37,1.17l-0.54,1.3l-4.61,0.89l-7.31,2.64l-2.04,1.68l-0.42,2.01l-1.8,1.61l-1.1,0.29l-1.25,-0.91l-1.7,-0.6l0.37,-1.76l-0.17,-0.83l-3.17,-1.24l-0.91,0.23l-0.6,0.76l0.27,2.08l-4.66,0.65l-1.05,0.72l-0.09,0.97l0.72,1.07l1.45,0.25l-0.37,1.69l-1.12,1.59l-0.47,1.62l0.4,0.99l0.91,0.9l0.58,1.59l0.42,0.13l1.6,-0.54l1.56,0.43l4.28,4.41l1.21,0.8l2.64,-0.43l6.48,0.73l-1.12,0.37l-1.06,1.04l-0.38,5.19l1.78,1.49l1.55,0.14l2.47,1.85l0.25,1.52l0.66,1.08l0.97,0.46l1.88,0.17l1.02,0.78l0.5,1.15l-1.24,0.06l-0.21,0.5l0.21,1.04l2.24,1.83l0.38,2.09l1.43,1.35l-2.14,0.24l-0.34,0.37l-0.06,1.01l-0.83,-0.19l-1.36,0.84l-5.58,-3.66l-3.08,0.44l-0.93,-0.27l-2.33,-2.54l-5.72,-2.93l-1.38,-1.66l-0.96,-0.22l-0.63,0.3l-0.7,0.93l-1.56,0.42l-0.49,0.53l0.14,1.26l1.25,1.79l0.31,2.33l-0.08,0.94l-0.78,1.36l0.01,0.75l0.7,1.68l-0.43,2.63l-1.68,2.46l-1.06,0.74l-1.12,0.27l-1.32,-0.84l-0.04,-1.41l0.7,-1.51l-0.5,-0.78l-3.63,1.66l-3.84,-0.98l-3.16,-1.78l-1.39,-0.0l-2.85,1.24l-2.91,3.01l-0.82,-0.88l-2.85,-1.79l-1.6,-0.26l-1.46,0.46l1.5,-2.94l1.65,-2.4l0.39,-1.42l-0.54,-3.97l-0.68,-1.83l-0.62,-0.17l-2.32,1.61l-1.27,0.2l-0.95,0.73l-3.4,-0.9l-1.07,0.16l-1.02,0.58l-6.68,0.19l-0.58,0.37l-0.42,1.49l-2.34,1.14l-2.91,0.15l-2.41,-1.06l-1.51,-0.19l-0.86,-0.65l-2.56,-3.71l-2.65,-1.24l0.21,-0.7l2.1,-1.9l1.68,-0.16l2.55,-1.92l1.17,-2.68l0.95,-0.49l2.7,-2.47l0.21,-1.44l-0.78,-2.37l-1.27,-0.8l-2.38,0.04l-2.05,-0.95l-0.44,0.2l-0.1,0.88l-0.34,-0.13l-0.73,-2.68l-1.84,-1.99l-0.24,-1.17l0.56,-3.95l-0.52,-2.22l-1.03,-0.81l-1.27,0.92l-0.09,-0.36l0.24,-2.83l1.54,-1.82l0.43,-1.07l-0.96,-2.79l-0.87,-0.33l-1.62,0.72l-0.34,0.71l0.12,1.14Z",
      name: "Jharkhand",
    },
    "IN-JK": {
      path: "M176.08,35.04l2.37,-2.36l-0.15,-2.71l0.72,-0.56l5.27,-0.96l3.12,-1.98l1.87,-0.7l1.84,-0.15l1.87,0.3l7.81,2.66l10.87,2.04l5.97,-0.52l1.57,1.55l2.54,1.46l8.19,2.07l5.87,-0.33l2.57,-2.29l3.11,-1.82l1.42,-1.8l0.86,-0.17l1.84,0.74l1.27,-0.01l3.39,-0.84l5.27,-2.66l0.99,0.15l1.97,1.12l3.39,-0.56l3.4,-2.92l0.32,-0.85l0.08,-2.41l0.59,-0.43l1.96,-0.39l1.61,0.69l0.77,0.01l2.91,-2.36l0.56,-0.77l0.2,-1.26l-0.34,-1.59l0.44,-0.53l22.94,-13.34l0.94,1.29l1.66,0.81l1.15,-0.36l2.19,-1.83l1.4,0.07l0.25,0.97l-1.39,3.65l-0.24,2.94l1.11,2.66l2.85,4.79l0.56,3.9l0.5,1.32l1.45,1.99l1.9,6.57l0.74,1.28l1.29,1.15l1.47,0.62l7.06,1.14l1.68,0.66l2.57,1.86l1.66,2.01l3.68,1.47l0.79,0.71l0.72,1.3l0.34,1.43l-0.32,1.36l-2.12,1.93l-2.99,1.23l-2.52,1.81l-0.26,3.11l1.51,4.2l0.72,4.34l-0.37,6.71l0.6,2.02l0.76,1.24l2.91,2.63l1.83,2.73l2.61,1.09l0.44,1.63l0.42,0.49l2.17,-0.32l3.4,1.53l2.5,0.11l0.76,0.38l0.07,0.93l-1.15,2.16l-0.31,3.79l0.76,1.2l1.74,1.47l1.04,2.98l1.58,1.74l-0.13,2.04l-1.78,2.45l-2.99,2.26l-1.28,1.37l-2.29,-0.49l-2.63,0.8l-0.83,0.67l-1.0,3.25l-1.34,-0.22l-2.55,1.01l-0.76,-0.22l-4.17,-3.55l-0.99,-2.71l0.36,-2.45l-0.62,-0.72l-0.73,-0.26l-0.88,0.28l-1.95,1.75l-6.89,0.7l-0.72,0.37l-0.3,0.78l-1.91,1.79l-0.48,-0.21l-0.24,-0.53l0.84,-2.71l2.04,-1.64l0.41,-0.81l0.1,-2.61l-0.35,-1.18l-0.52,-0.44l-1.59,0.09l-0.31,0.35l-0.01,0.78l-1.28,0.59l-0.52,0.64l-1.76,0.13l-2.36,0.83l-1.87,1.76l-1.16,0.19l-1.94,-2.71l-0.28,-2.27l-1.13,-1.48l-1.11,-2.41l-4.43,-4.94l-0.7,-0.03l-1.02,0.5l-3.7,2.62l-4.93,1.16l-0.67,0.74l-0.48,-0.0l-6.46,-2.01l-1.4,-0.78l-4.53,-2.86l-5.76,-5.55l-4.11,0.12l-1.88,-1.36l-0.71,-0.13l-1.11,0.56l-3.58,0.69l-3.2,1.74l-0.74,0.87l-0.39,1.36l-0.68,0.71l-4.17,1.72l-4.44,3.8l-1.01,-0.85l-1.7,-0.58l-1.74,0.49l-0.44,0.98l0.29,1.07l3.0,3.83l-0.27,2.22l0.73,1.87l-0.04,0.89l-1.7,1.9l-0.05,0.61l-0.99,1.43l-2.76,1.28l-0.43,1.18l-0.85,0.7l-2.45,0.3l-1.37,0.77l-2.13,2.4l-1.29,-0.76l0.03,-0.69l-0.42,-0.49l-1.71,0.82l-2.67,0.07l-3.04,-2.13l-2.21,-0.52l-3.16,-1.86l-3.66,0.69l-2.22,-1.01l-3.41,0.48l-0.92,-0.3l-0.7,-0.79l-0.95,-2.82l0.8,-1.82l-0.19,-2.8l1.2,-2.89l-0.26,-1.2l-0.74,-0.4l-0.76,0.21l-0.63,0.65l-0.62,1.67l-1.02,0.49l-2.05,0.22l-2.05,-1.37l-2.17,0.76l-0.5,-0.09l-0.91,-1.05l0.73,-1.21l0.13,-0.85l-0.81,-4.48l-1.14,-0.74l-2.8,-0.45l-1.0,-0.55l-1.7,-2.2l-2.9,-2.45l-0.36,-0.9l0.31,-1.78l2.08,-1.05l0.87,-1.05l1.26,-3.13l0.67,-2.87l-0.65,-2.12l-5.01,-3.36l-0.4,-1.27l0.28,-1.74l1.77,-2.59l3.3,-0.55l2.28,-1.26l1.59,-1.84l0.35,-1.48l-0.54,-1.32l-1.2,-0.71l-3.32,0.36l-2.29,-0.58l-2.14,0.5l-0.78,-0.15l-1.4,-1.35l-0.24,-0.86l0.22,-0.85l3.05,-2.05l0.2,-1.12l-1.36,-3.16l-0.58,-0.7l-2.81,-0.24l-1.92,-1.19l-0.07,-1.35l1.86,-1.69l0.23,-1.76Z",
      name: "Jammu and Kashmir",
    },
    "IN-UP": {
      path: "M275.34,205.39l0.08,-0.87l-0.4,-0.81l0.98,-0.64l0.26,-0.62l-0.39,-1.02l0.09,-1.08l0.63,-0.63l-0.03,-0.78l0.85,-0.74l-0.12,-1.31l0.85,-0.26l0.57,-1.11l1.48,-5.73l1.43,-1.37l0.17,-0.58l0.94,-0.1l0.3,-0.86l2.37,-1.61l0.44,-1.41l4.79,-4.24l0.56,-1.76l0.08,-1.88l0.69,-0.43l1.01,0.2l2.73,2.32l5.75,3.03l-3.25,2.91l-1.42,3.18l-1.4,2.22l0.14,4.1l1.02,4.01l1.5,2.84l0.53,0.17l3.93,-2.12l4.27,2.33l1.87,-0.79l1.16,-1.27l0.27,-1.53l-1.31,-5.86l0.44,-0.6l0.93,-0.03l1.97,1.95l2.37,3.99l3.63,1.83l1.01,1.0l2.3,3.68l1.72,1.49l5.15,2.91l3.22,0.87l-0.29,0.67l-1.36,1.2l-1.25,-0.03l-0.74,1.01l-0.97,-0.35l-0.89,0.33l-0.75,1.13l0.36,0.82l4.44,2.28l0.82,1.11l0.45,2.3l0.61,0.28l1.07,-0.68l2.94,-0.83l2.2,1.17l0.37,1.16l0.83,0.95l3.93,2.71l1.56,0.36l0.81,-0.24l1.2,1.39l0.83,2.42l0.51,0.21l2.48,-0.94l0.99,-0.02l0.51,0.84l0.69,0.17l1.07,-0.46l2.12,0.39l0.81,-0.28l0.49,-0.86l1.92,0.26l0.58,0.43l-0.37,1.25l0.26,0.54l0.61,0.21l1.18,-0.4l0.11,1.23l0.97,0.05l0.34,0.98l1.38,0.56l1.93,-0.72l0.97,-1.03l0.5,-1.07l2.2,2.05l1.78,0.44l1.1,1.2l1.02,0.42l1.36,2.19l0.82,0.27l1.64,-0.21l2.4,2.1l0.56,-0.22l0.15,-0.44l-0.17,-2.69l0.63,-0.53l0.74,0.02l0.4,1.04l2.24,0.66l1.17,1.65l1.64,0.62l1.64,1.48l0.65,0.35l2.05,0.21l0.35,1.28l0.73,0.61l1.33,0.34l1.04,-0.11l0.72,1.29l5.03,1.12l0.53,0.65l1.04,2.88l2.01,2.4l-0.35,0.91l0.75,0.97l1.19,0.06l0.59,-0.34l0.52,-0.97l0.76,0.17l1.08,0.92l0.65,1.65l0.59,0.53l2.77,1.38l1.6,1.47l2.32,0.63l1.89,1.78l3.25,1.95l1.27,0.05l1.97,-1.88l0.73,-0.31l1.44,0.14l0.64,0.2l1.19,1.09l1.86,0.8l3.63,2.88l2.4,1.17l1.78,1.68l1.35,0.37l2.68,-0.3l3.76,-0.93l0.61,0.23l0.78,1.86l0.64,3.77l1.05,1.07l3.78,0.24l2.16,1.0l1.95,0.46l3.79,-0.02l1.0,0.38l1.46,1.18l1.22,1.83l0.87,0.34l1.01,-0.06l1.26,-0.95l0.95,-1.56l-0.43,-1.73l0.64,-0.32l6.11,0.45l7.74,3.44l-0.08,0.57l0.44,0.31l0.89,-0.1l-0.14,1.46l1.68,1.8l-0.02,2.27l2.55,3.19l0.12,2.0l1.36,2.56l2.76,1.74l1.3,-0.6l0.85,0.05l0.44,0.97l-0.19,2.57l0.25,0.77l1.93,0.52l2.54,2.63l-8.75,-0.21l-0.69,0.64l-0.89,2.26l-1.87,0.57l-0.58,0.71l-0.53,-0.86l-1.04,0.3l-0.27,2.29l0.45,0.95l1.56,0.43l1.39,-0.63l2.0,1.49l2.85,0.74l-0.75,1.75l0.72,1.59l-1.71,-0.01l-0.98,0.62l-2.56,0.37l-0.78,0.73l-0.02,1.17l1.57,1.59l0.8,1.89l2.75,1.4l0.66,1.24l1.01,0.41l0.56,1.63l1.2,1.16l0.84,0.22l2.77,-0.43l1.0,1.36l1.44,0.91l2.29,0.25l2.18,1.96l0.09,0.43l-0.43,1.02l-1.48,1.05l-1.13,0.16l-1.72,-0.61l-1.57,-1.34l-1.31,-0.02l-1.48,0.93l0.37,2.52l-1.19,0.43l-1.3,-0.47l-0.42,-2.32l-1.02,-0.59l-1.43,0.28l-2.76,2.12l-1.74,2.2l-3.5,2.93l-2.15,0.89l-1.31,1.48l-12.02,6.86l-1.28,1.31l-0.44,1.05l-0.35,3.14l0.15,0.85l1.12,1.85l-0.29,4.03l2.54,2.96l2.69,1.36l0.21,1.11l-0.62,1.25l0.43,1.32l-0.04,2.89l-2.45,0.3l-1.39,1.1l-0.01,1.49l1.65,3.07l-0.95,1.29l-0.26,1.5l-1.39,1.86l-1.72,4.05l-1.53,1.2l-0.32,1.67l-0.84,1.34l-3.39,1.26l-4.96,-0.24l-1.19,-0.65l-1.66,-1.53l-1.22,-0.35l-0.94,-1.34l-0.99,-0.75l0.07,-1.48l-1.86,-1.99l0.85,-0.12l0.85,-0.74l0.33,-2.2l0.73,-1.76l-0.05,-2.43l-0.94,-0.86l0.33,-2.55l-0.28,-1.36l0.21,-0.26l0.93,0.28l0.92,-0.26l0.51,-1.09l-1.52,-2.87l-1.63,-0.31l-0.22,-1.37l-0.98,-0.12l-2.9,1.04l-1.34,-0.13l-2.9,-0.97l-1.02,0.1l-0.38,0.54l0.07,1.74l-0.34,0.46l-2.48,0.03l0.46,-0.94l-0.09,-0.81l-0.63,-0.61l-1.13,-0.04l0.05,-2.17l-0.46,-0.58l-0.5,0.11l-0.69,1.01l-0.23,-0.11l0.34,-1.13l-0.43,-1.53l-0.75,-0.06l-2.07,1.15l-2.62,-1.65l-2.34,-0.36l-2.44,-1.83l0.1,-1.46l-1.19,-1.84l-1.25,-0.33l-1.65,0.49l-0.55,-0.18l-0.66,-1.21l-3.93,-0.58l0.12,-0.94l-1.36,-2.79l-0.44,-0.15l-3.52,1.18l-0.04,0.71l1.17,0.85l-1.17,0.38l-1.22,-0.17l0.17,-0.95l-0.6,-0.6l-1.6,-0.5l-2.36,0.14l-0.44,0.65l0.07,2.14l-1.89,2.61l0.26,1.6l-1.41,0.32l-0.94,1.06l-2.61,-1.77l-1.96,0.4l-1.39,-1.0l-2.12,0.47l-1.76,-0.18l0.84,-1.31l0.15,-0.88l0.88,-0.9l0.2,-1.29l0.88,-2.03l-0.08,-0.99l-0.92,-0.55l-1.39,0.37l-0.83,1.53l-3.3,0.4l-0.04,0.77l1.71,1.4l-2.08,0.3l-0.9,-0.82l-0.8,-1.5l-0.89,-0.3l-0.66,0.44l0.01,1.06l-2.31,-0.37l-0.6,0.3l0.4,1.75l1.24,0.71l-0.82,0.53l-0.4,0.04l-1.56,-1.55l-0.56,0.43l0.22,1.27l-1.38,-0.38l-1.63,0.37l-0.51,-0.7l-0.17,-0.93l1.06,-0.2l1.53,-1.78l2.0,-1.08l0.21,-0.73l-0.78,-2.05l-0.88,-0.18l-0.5,-0.7l-0.94,-0.49l-0.28,-2.59l-0.93,-1.59l-0.79,-0.28l-1.27,0.27l-0.88,-0.25l-2.49,2.19l-1.13,-0.36l-2.27,1.05l-3.01,2.29l-2.37,0.66l-0.35,0.48l0.02,0.73l1.03,1.63l-1.68,0.65l-0.98,-0.78l-3.65,0.23l-3.08,-0.97l-0.92,0.48l-1.43,1.94l-0.32,-0.02l-0.21,-0.76l-0.47,-0.4l-1.47,0.02l-0.45,0.65l0.08,1.56l-0.7,0.07l-0.49,-0.55l0.21,-1.36l0.89,-0.87l1.71,-2.67l0.6,-1.48l-0.19,-0.47l-0.47,-0.14l-1.16,0.86l-0.87,-0.19l-0.77,0.28l-0.81,0.96l-0.37,-0.96l1.04,-2.22l-0.64,-0.78l-0.75,0.11l-1.26,2.01l-0.04,1.23l0.78,3.19l-3.22,-0.57l-1.29,1.21l-0.23,-1.37l-0.3,-0.28l-0.87,-0.01l-1.75,0.66l-0.09,-0.73l1.1,-1.71l-0.97,-0.87l-0.86,-0.22l-0.71,0.35l-0.16,1.32l-1.22,0.43l-1.02,1.15l-0.59,0.21l-0.12,-0.99l0.32,-0.89l1.91,-1.82l-0.03,-1.44l0.63,-1.25l0.16,-1.42l-0.55,-0.91l-1.06,0.13l0.35,-1.08l-0.08,-1.1l-0.23,-0.57l-0.88,-0.52l-0.72,0.25l-0.62,0.73l-0.32,0.9l0.03,1.77l-0.3,0.25l-0.55,-0.02l-0.1,-2.28l-0.54,-0.97l-0.57,-0.09l-1.75,1.02l-0.19,1.54l0.75,0.94l-0.52,0.98l0.19,1.26l-2.07,-2.02l-1.41,-0.23l-1.13,0.35l-0.36,0.65l0.12,0.74l-1.48,1.74l-0.57,1.6l0.32,0.71l1.59,1.5l1.08,2.41l1.2,6.41l2.31,3.04l0.36,3.85l-0.65,1.88l0.4,1.02l1.03,0.66l2.06,-0.54l1.03,0.19l1.85,3.2l-0.17,1.52l0.39,0.4l1.51,0.37l-0.16,1.09l-0.47,0.87l-1.67,1.57l-1.07,2.4l-1.57,1.53l-0.99,-0.36l-0.45,-1.43l-2.96,-0.6l-3.64,-3.03l-1.66,-0.82l-1.14,0.44l-0.61,1.98l-0.56,0.69l-0.97,0.47l-0.88,-0.44l-0.41,-0.83l0.63,-1.22l-0.08,-0.85l-2.21,-1.45l-0.19,-0.65l-0.85,-0.52l-0.49,-0.89l1.35,-2.51l0.03,-0.97l-0.38,-0.52l0.07,-1.6l-0.96,-1.46l-0.21,-2.0l-0.83,-1.48l-0.83,-0.73l0.24,-0.53l2.34,-1.55l2.17,-2.14l0.53,-1.55l-0.31,-1.12l1.1,-3.45l-0.18,-1.0l-1.96,-3.91l-1.39,-2.03l2.35,-2.06l0.58,-0.87l0.55,-1.89l3.26,-0.78l2.42,0.06l1.81,-1.06l2.97,-0.59l1.28,-0.74l0.27,-0.98l-0.81,-2.2l0.14,-1.22l0.38,-0.7l1.92,-1.49l0.81,-2.07l1.37,-1.68l1.06,-2.84l1.2,-1.91l-0.03,-0.77l-0.96,-0.97l0.0,-0.62l1.1,-0.89l-0.56,-1.88l0.59,-0.57l1.79,-0.57l1.29,-1.72l0.13,-0.63l-0.6,-0.73l0.33,-1.15l-0.1,-1.04l-0.67,-1.92l-2.1,-3.28l-0.72,-3.17l-0.59,-0.68l-1.97,0.16l-2.0,-1.93l-0.9,-0.14l-0.36,-0.7l-0.99,0.05l-0.56,-0.52l-1.79,0.76l-1.18,-0.01l-0.74,0.63l-0.64,-0.02l-1.43,-0.82l-1.72,-0.3l-1.05,-1.0l-1.16,-0.1l-0.54,-0.83l-0.76,-0.27l-2.23,0.18l-0.93,1.15l-1.2,-0.18l-0.62,-0.89l0.78,-0.3l1.09,-1.02l0.27,-0.71l-0.74,-0.73l-1.94,-0.48l-2.22,0.1l-1.26,1.15l-1.17,0.12l-0.39,0.59l-0.88,-0.48l-2.81,-0.37l-1.09,0.33l-0.92,-0.47l-3.28,-0.47l-2.51,1.71l-3.97,1.63l-1.26,-0.07l-0.91,1.46l-0.86,0.49l0.13,-2.17l0.57,-0.69l6.23,-2.89l2.25,-0.54l0.72,-0.58l0.09,-0.67l-0.84,-0.74l-0.84,0.58l-0.62,-1.04l-0.47,-0.22l-0.8,0.55l-1.65,-0.21l-0.65,-1.0l-0.85,-0.27l0.11,-0.38l2.42,-0.72l0.53,-1.05l1.15,-0.65l0.56,-1.2l-1.43,-2.52l-0.3,-1.75l-1.54,-0.43l-3.64,-2.12l-0.61,-1.8l-2.26,-2.94l0.03,-1.53l-0.68,-0.68l0.5,-0.81l-0.04,-0.86l-0.47,-1.19l-0.72,-0.53l-0.37,-2.72l0.75,-0.66l2.6,-0.95l0.83,-0.85l0.99,0.2l0.51,-0.21l1.14,-1.79l0.79,-0.67l-0.81,-2.35l-1.02,-0.86l0.1,-1.29l0.34,0.21l0.6,-0.43l-0.26,-1.77l1.08,-0.7l0.18,-0.62l-0.76,-0.58l0.74,-1.51l-1.42,-0.68l-0.05,-0.97l-0.62,-0.65l0.87,-2.29l-0.41,-0.56l-0.44,0.04l-0.11,-1.16l-0.36,-0.26l-0.88,0.17l-0.49,-1.15l-0.94,0.01l-0.29,-0.67l-1.11,-0.66l-1.05,-1.92l1.12,-1.48l-0.06,-1.04l-0.85,-2.6l-2.48,-2.18l-0.53,-1.11l0.23,-0.83l-0.41,-0.93l0.54,-1.42l-1.35,-1.66l0.54,-1.2l-1.8,-3.7l-0.14,-5.52l0.56,-1.3l-0.47,-0.92l-0.03,-0.89l0.47,-1.5l-0.93,-0.73l-1.3,0.03l1.29,-1.31l-0.05,-0.56l-0.46,-0.39l-0.95,-0.01Z",
      name: "Uttar Pradesh",
    },
    "IN-SK": {
      path: "M624.09,256.17l1.74,-1.11l1.5,0.04l2.71,-2.5l1.43,1.15l2.65,0.52l2.31,1.81l-0.23,2.08l1.28,1.8l0.06,0.92l-1.46,6.18l-1.76,3.15l-0.24,1.13l0.49,0.78l-0.09,1.51l0.63,1.96l3.56,3.09l-0.14,0.55l-0.53,0.4l-1.78,0.44l-1.01,0.67l-1.42,2.94l-1.56,-0.85l-4.67,-0.11l-3.06,2.58l-1.78,0.44l-3.84,-1.72l-3.55,-0.05l-0.65,-0.3l-0.58,-1.87l-1.79,-1.32l0.79,-2.13l-0.61,-1.91l0.81,-1.92l-0.56,-1.88l2.65,-4.71l1.54,-4.54l-0.12,-1.42l0.29,-1.16l-0.51,-0.51l-1.07,-0.3l-0.48,-1.12l0.06,-0.62l0.47,-0.48l1.19,0.1l6.6,-1.18l0.74,-0.55Z",
      name: "Sikkim",
    },
    "IN-MZ": {
      path: "M743.96,392.77l0.71,0.19l0.37,-0.45l-0.14,-2.85l0.55,-1.85l-0.42,-1.43l0.33,-2.14l-0.11,-2.89l-0.65,-1.18l2.99,-0.03l-0.38,1.02l0.75,1.88l1.11,0.72l1.07,-0.2l3.08,-2.92l1.24,-0.79l-0.05,-1.35l2.53,-2.77l1.3,-3.49l2.32,3.71l1.02,0.04l1.89,-0.78l1.44,0.32l0.94,-0.24l0.11,0.82l0.68,0.79l-0.94,1.59l0.08,1.22l-0.6,3.47l-0.55,0.59l0.12,0.67l2.91,1.14l1.2,0.91l1.31,-0.55l0.72,0.69l0.62,0.01l1.32,-0.83l0.11,1.34l0.61,0.24l0.97,-0.45l0.25,1.53l1.46,2.27l0.56,5.39l1.62,1.71l0.15,1.2l-0.99,6.3l0.22,3.39l-0.91,1.69l-0.09,5.36l-1.22,2.4l-1.63,1.33l-0.58,0.03l-1.4,-1.49l-0.78,-0.25l-0.99,0.29l-0.58,0.74l0.04,2.05l0.88,1.94l0.12,0.97l-1.74,2.48l-1.23,1.16l-0.27,2.69l1.21,3.12l-0.33,2.8l0.6,1.65l1.1,1.18l0.34,1.19l0.24,3.97l-1.47,0.77l-0.09,0.62l0.38,0.78l-2.29,-0.79l-1.1,0.42l-0.08,2.78l-1.0,0.47l-0.71,1.34l0.31,2.1l-0.63,-0.79l-0.82,-0.32l-0.71,0.4l-0.47,1.47l-0.37,-1.67l-0.66,-0.91l-2.03,-1.9l-1.96,-1.42l-0.88,-0.27l-0.8,0.54l0.01,1.48l-0.37,0.18l-0.18,0.63l-0.08,1.63l-0.92,0.25l-0.78,0.79l-1.04,-4.15l0.88,-0.24l0.27,-1.25l-1.83,-11.1l-0.51,-1.55l-0.17,-4.45l-0.52,-1.11l-1.15,-1.14l-0.55,-3.59l-0.61,-0.67l-0.91,-0.36l-0.68,-1.66l0.02,-2.29l-0.78,-4.56l0.13,-1.61l0.79,-1.88l-0.27,-2.46l-0.7,-0.81l-0.08,-0.97l-0.71,-0.88l-1.55,-6.66l0.55,-2.59l-0.21,-1.75l0.23,-1.48l0.46,-0.67Z",
      name: "Mizoram",
    },
    "IN-CT": {
      path: "M376.2,561.12l-0.76,-1.04l-0.54,-2.04l-1.09,-0.57l-0.15,-0.57l0.27,-0.65l2.07,-1.28l0.36,-0.85l-0.24,-0.79l-1.82,-2.18l-0.32,-1.59l0.51,-1.14l2.36,-3.16l1.16,-4.17l1.21,-0.64l1.08,-1.84l1.03,-0.48l0.89,-1.14l0.61,-0.26l1.07,2.14l2.07,0.07l0.93,1.63l0.73,0.22l1.24,-1.17l2.22,-1.2l0.11,-0.81l-0.84,-1.42l2.23,-0.73l0.65,-1.58l-0.64,-1.49l-1.37,-1.28l-4.18,-1.73l-0.94,-2.81l-2.92,-1.34l-1.24,-2.7l-0.75,-0.22l-0.84,0.27l-0.46,0.55l-0.09,0.78l-1.61,-0.42l1.75,-0.9l0.59,-1.0l-0.24,-0.9l-1.6,-0.51l0.5,-0.9l1.91,0.56l0.81,-0.33l0.83,-4.19l-1.06,-3.19l-3.34,-0.41l0.3,-2.29l0.6,-0.47l2.53,-0.4l2.93,-1.99l0.18,-0.75l-0.42,-1.42l0.05,-2.41l0.61,-1.47l-0.41,-1.1l-0.13,-2.2l-1.6,-0.59l-2.16,0.82l0.34,-0.93l1.82,-1.1l0.25,-1.05l-0.49,-2.64l-0.19,-4.61l-0.89,-0.79l-1.73,0.09l-0.93,-1.74l0.73,-4.2l0.63,-0.84l4.35,-2.42l1.73,-2.04l0.06,-1.69l1.3,-3.97l-0.11,-3.65l0.64,-4.84l1.91,-0.95l0.61,-1.04l0.55,-1.62l-0.09,-3.28l2.01,-4.15l0.85,-0.2l1.2,1.46l0.55,-0.07l0.46,-0.5l0.09,-0.85l-0.42,-0.87l0.8,-0.52l0.42,-2.56l1.99,-1.5l0.72,-1.23l0.16,-3.55l1.21,-1.92l0.5,-0.43l0.46,0.94l1.05,0.27l3.57,-1.69l1.2,1.52l0.79,0.43l1.06,-0.45l2.76,-2.24l3.2,-1.03l0.92,-1.95l2.97,-1.77l-0.02,-1.86l0.73,-1.05l-0.19,-2.83l0.19,-0.37l2.32,-0.91l2.35,-2.12l0.23,-0.95l-0.31,-1.56l0.29,-0.66l3.67,-1.75l1.99,-0.03l0.88,-1.76l1.03,-4.6l-0.16,-1.02l-2.37,-2.04l-2.34,0.08l-0.36,-0.7l-0.98,-0.37l-2.06,-3.14l-0.79,-0.36l-1.44,-0.08l-3.16,-1.17l-0.65,0.1l-2.65,1.78l-0.44,0.01l-0.97,-2.0l0.65,-0.89l0.15,-1.17l1.07,-0.61l1.02,-1.6l-0.17,-1.22l-1.75,-3.33l0.06,-1.2l1.2,-0.2l1.84,1.89l1.03,0.75l1.08,0.3l1.09,-0.04l3.01,-1.44l1.96,0.13l2.28,1.14l3.87,0.03l1.87,0.48l8.34,0.33l1.27,-0.98l2.41,-1.15l0.77,-1.85l3.07,-1.14l0.59,-0.82l0.3,-1.29l0.83,0.21l1.66,1.52l1.43,0.77l5.35,0.26l3.78,-1.46l1.03,-1.62l0.25,-1.54l1.45,-1.09l0.74,-1.65l3.19,0.58l1.86,1.28l0.24,2.82l0.99,1.75l4.75,4.36l0.66,1.82l-0.44,2.11l1.35,2.8l1.06,0.48l1.68,-0.12l2.34,0.83l0.55,-0.55l-0.05,-1.51l1.36,-0.48l0.76,2.35l-1.89,2.51l-0.29,3.17l0.54,1.11l0.6,0.01l0.99,-0.91l0.48,0.7l0.3,1.5l-0.56,4.03l0.33,1.47l1.84,1.98l0.9,2.89l1.12,0.31l0.52,-0.4l0.04,-0.52l1.65,0.8l2.21,-0.09l0.9,0.49l0.71,2.65l-0.72,0.97l-2.99,2.18l-1.13,2.64l-2.36,1.79l-1.78,0.21l-2.14,1.78l-0.72,2.26l0.72,1.48l0.15,1.18l-1.13,1.76l-3.47,0.93l-3.65,3.0l-3.05,1.37l-2.17,2.82l-0.35,1.32l0.73,1.02l-1.48,0.97l-0.33,1.95l0.41,0.86l1.39,0.93l-0.35,1.31l0.13,0.75l-0.12,0.3l-0.98,0.13l-0.29,0.89l-1.06,-0.2l-0.46,0.37l-0.32,1.8l-3.28,5.47l-0.78,2.64l0.11,1.7l1.58,1.75l0.07,1.4l-2.14,-0.68l-0.99,0.11l-0.68,0.98l-0.1,1.33l-0.9,1.29l-0.91,2.51l-1.44,1.46l-2.01,0.14l-3.31,-2.01l-4.53,0.66l-0.98,0.41l-1.12,-0.49l-3.11,0.28l-0.56,0.45l-0.04,1.31l-2.46,4.73l-1.43,0.95l-1.59,2.2l-1.09,0.56l0.01,-0.76l-0.55,-0.52l-1.36,-0.25l-0.68,0.54l-0.09,4.18l0.72,2.52l-0.83,4.18l0.61,1.45l0.67,0.17l0.4,1.27l0.79,0.22l-0.29,3.71l0.48,1.12l0.27,3.76l-0.69,2.58l0.08,0.98l2.58,1.62l2.3,0.07l1.42,1.1l1.33,-0.5l1.05,0.06l-0.41,3.09l0.82,1.35l-3.43,2.25l0.01,-2.29l-1.81,-0.32l-1.56,-0.7l-3.66,-0.37l-0.86,0.54l-0.78,1.34l-2.46,-4.66l-0.59,-0.31l-1.08,0.07l-0.43,-0.79l-2.26,-1.77l-0.81,0.21l-0.92,1.26l-0.28,-0.91l-2.18,-2.08l-0.5,0.09l-1.32,1.38l-0.97,0.56l-1.53,2.64l-0.2,1.29l0.69,1.16l3.02,1.8l0.98,1.71l2.17,0.75l-0.29,2.12l0.41,1.88l-0.25,4.24l0.5,0.47l0.99,0.22l0.95,1.7l1.38,0.51l0.36,0.45l-0.98,1.25l0.11,0.61l0.97,0.86l-0.71,1.75l-0.07,1.21l0.69,1.82l-0.2,1.59l1.06,0.93l0.17,1.09l0.72,1.28l0.08,2.46l-1.85,1.77l-0.79,3.73l-0.61,-0.56l-0.52,-0.03l-0.99,1.69l-2.34,0.54l-1.59,1.62l-1.01,0.36l-0.27,0.97l1.23,1.04l0.02,0.59l-1.55,1.0l-3.02,2.84l-1.83,2.83l-1.7,0.58l-0.96,1.18l-3.23,1.04l-0.99,2.18l0.33,1.34l-0.54,2.23l-0.74,1.15l-0.25,2.85l-0.67,1.16l-0.18,1.23l-0.74,-0.38l-0.78,0.41l-0.23,2.18l-4.04,0.11l-2.81,-1.08l-3.48,1.96l-0.54,-0.18l-0.8,-1.55l-0.22,-3.95l-1.15,-2.66l-0.11,-1.07l0.7,-1.59l-0.22,-0.76l-1.09,-0.27l-1.63,0.55l-0.57,-2.01l-0.9,-0.47l-0.7,0.29l-0.43,1.22l-1.37,0.06l-0.16,-0.75l1.24,-0.83l0.07,-0.8l-2.14,-4.79l-2.4,-3.04l-2.13,-2.27l-1.92,-1.33l-1.32,-0.24l-1.74,0.54l-1.0,-0.81l-0.58,0.42Z",
      name: "Chhattisgarh",
    },
    "IN-CH": {
      path: "M266.15,165.51l-2.24,-2.23l-0.12,-0.55l1.16,-0.55l1.66,0.15l0.44,1.34l-0.16,1.56l-0.74,0.28Z",
      name: "Chandigarh",
    },
    "IN-GA": {
      path: "M171.13,653.34l0.82,-0.49l2.2,-0.25l0.84,-1.12l0.38,0.84l1.86,0.75l0.72,2.4l1.25,1.01l1.01,0.17l2.17,-0.81l2.03,0.13l1.31,-0.56l1.58,0.8l0.64,3.06l-0.59,1.24l0.03,0.83l0.59,0.86l0.06,1.41l1.19,1.5l0.15,1.34l-0.25,0.39l-1.24,0.3l-0.42,0.49l0.16,0.93l1.4,1.13l-1.01,2.75l0.15,2.34l-1.02,2.28l-0.76,0.39l-1.33,0.04l-1.82,1.18l-1.4,-0.88l0.06,-1.67l-0.32,-0.72l-0.99,-0.43l-1.0,-1.7l-1.34,-0.43l0.32,-0.82l0.93,-0.77l0.11,-0.61l-0.54,-0.55l-1.62,-5.41l-0.52,-0.65l-1.65,-0.3l-0.6,-0.51l2.08,0.23l0.62,-0.25l0.78,0.3l0.93,0.96l0.63,-0.35l-0.02,-0.58l-1.35,-1.45l-3.77,-1.12l0.45,-0.68l1.85,-0.72l-0.19,-0.91l-0.59,-0.35l-2.36,1.34l-0.55,-0.34l0.05,-0.87l-0.54,-1.54l0.59,-0.89l2.24,-0.65l0.3,-0.6l-0.39,-0.4l-1.74,0.07l-1.67,1.11l-0.87,-2.2Z",
      name: "Goa",
    },
    "IN-GJ": {
      path: "M0.5,399.96l0.7,-0.07l0.65,-0.85l1.21,0.35l1.42,-0.85l0.14,-0.66l-0.59,-0.43l-0.93,0.34l-0.77,-0.57l-0.51,-2.68l-0.67,0.36l0.47,-2.07l0.64,-0.96l1.64,-0.62l-0.08,-1.16l0.42,0.58l0.75,0.19l1.26,-1.22l0.45,0.24l0.9,-0.64l10.29,-0.14l0.4,-0.4l0.04,-10.49l0.51,-1.05l1.13,0.05l0.45,2.22l0.74,0.73l0.91,-0.37l1.29,-2.29l1.82,2.06l0.74,0.04l2.52,-1.05l3.13,1.14l3.52,-0.99l8.54,0.22l0.76,0.33l2.36,2.42l1.6,0.78l7.98,0.11l1.43,-0.3l1.28,-1.0l1.64,-3.28l4.06,-0.84l1.74,-1.07l2.27,-0.31l1.43,-0.97l4.1,-0.7l0.18,0.38l-0.74,0.64l-0.12,0.58l0.81,3.24l1.9,1.14l4.26,0.3l3.16,-1.22l0.2,-0.72l-0.41,-0.77l2.11,-1.57l2.5,0.12l0.86,-0.95l1.84,-0.89l-0.41,-1.47l-2.81,-0.83l0.18,-2.07l-0.72,-0.83l-0.07,-0.71l0.57,-1.53l2.65,-1.55l1.66,0.93l2.93,0.8l0.95,0.0l2.15,-0.83l2.27,0.43l1.81,-1.1l2.8,-0.18l1.22,0.17l1.61,0.83l3.68,-0.64l0.6,1.02l1.38,0.34l0.62,-0.37l0.1,-0.96l0.5,-0.3l0.41,0.01l0.74,0.75l1.17,0.13l1.71,-1.24l1.73,-0.39l1.37,1.61l2.36,0.79l1.19,0.15l3.43,-0.47l-2.31,0.59l-0.18,0.93l1.37,1.15l1.47,0.26l0.66,0.97l1.68,0.05l0.11,1.14l1.25,1.86l1.07,-0.16l0.95,-2.34l0.8,-0.05l1.64,0.97l1.95,0.54l0.81,1.65l0.86,0.74l5.67,1.0l1.08,-0.16l1.04,-0.81l0.65,-2.67l0.5,-0.68l2.52,-0.5l-0.24,2.59l0.32,0.65l2.29,0.98l1.23,-0.39l0.06,0.28l-0.47,0.73l-1.64,-0.01l-1.21,1.67l-0.94,2.61l0.78,2.06l0.54,0.75l2.28,1.54l0.5,1.22l1.44,1.4l0.56,-0.04l1.5,-1.02l1.08,-1.87l1.13,1.79l0.1,1.35l0.71,1.7l-1.66,1.34l-0.33,3.86l0.52,0.44l1.25,0.07l1.17,1.92l1.59,0.55l0.03,3.2l1.07,0.14l1.29,-1.03l1.02,0.87l0.0,2.34l0.46,1.2l-0.33,1.36l0.26,0.43l1.46,0.1l1.41,0.86l2.79,-0.78l2.48,3.21l1.08,0.17l1.17,-0.81l2.08,1.91l1.71,0.9l0.52,0.58l0.09,1.77l0.56,0.94l1.07,0.46l1.24,-0.62l0.32,0.13l0.75,0.47l1.19,2.04l1.06,0.7l1.04,2.54l0.7,3.74l0.67,0.28l0.99,-0.26l1.0,1.07l0.15,0.89l-2.47,4.86l-0.69,0.73l-2.4,0.5l-3.97,3.3l-2.47,-0.52l-1.06,0.61l-0.17,1.4l2.3,2.09l0.7,0.27l2.5,-0.14l1.17,0.57l-0.52,0.85l-1.21,0.63l-1.38,0.14l-0.87,-0.73l-0.66,-0.14l-0.64,0.34l-0.43,0.83l0.19,3.95l0.98,1.17l0.6,2.21l0.72,1.01l-0.37,1.38l-0.01,2.02l-1.86,0.34l-2.66,1.26l-0.98,0.85l-1.36,0.17l-2.94,1.25l-0.44,1.12l0.24,2.28l1.08,1.72l-0.69,1.24l-1.5,0.35l-0.49,0.63l0.39,1.13l1.62,2.41l0.55,0.29l5.43,-1.52l3.48,0.09l1.05,-0.57l1.48,0.8l2.63,-0.9l0.24,0.98l-1.57,1.06l-3.99,1.1l-1.51,-0.44l-0.73,0.2l-2.61,2.26l-1.23,3.23l-2.07,0.72l-0.67,-0.54l-0.58,-0.03l-0.41,0.34l-0.93,2.34l-2.01,1.14l-0.89,-0.22l-0.84,0.23l-2.12,-1.04l-0.82,0.35l0.24,1.02l1.22,1.18l1.38,0.77l2.01,-0.03l1.03,1.36l1.56,0.58l2.32,2.59l0.99,2.76l0.19,3.31l-0.49,0.92l-2.42,2.07l-0.13,1.4l-0.42,0.84l-2.66,1.32l-1.84,0.02l-1.33,-1.63l-3.25,-1.89l-1.11,-1.53l-0.78,0.14l-0.93,1.49l-1.29,0.62l-0.04,0.76l1.28,0.48l0.25,1.12l0.99,0.4l0.28,1.19l-2.99,5.31l0.78,1.33l0.23,1.97l-0.49,1.57l0.17,0.94l-3.44,-0.35l-0.69,0.66l-0.27,1.36l-1.1,0.52l-0.38,-0.06l-0.01,-1.51l-0.72,-0.56l-1.37,-0.12l-0.43,0.32l-0.21,0.95l-0.95,0.04l-0.36,-1.68l2.24,-1.3l0.45,-0.95l-0.35,-0.68l-1.23,-0.09l0.08,-1.11l-0.81,-0.47l-2.07,1.39l-1.14,-0.0l-0.65,1.29l-1.14,-0.15l-0.55,0.41l-0.11,0.95l1.46,1.36l0.23,1.61l-1.88,0.66l-1.35,-0.06l-0.65,0.32l-1.02,-0.24l-1.45,0.83l0.73,-2.93l0.57,-1.06l-0.41,-0.59l0.18,-1.49l0.99,-2.09l0.98,-0.77l1.51,-0.17l0.65,-0.65l-0.08,-1.64l-0.77,-1.03l0.99,-1.77l-0.03,-2.84l0.62,-1.11l-0.07,-2.45l1.33,-1.05l-0.21,-0.59l-0.63,-0.42l-0.03,-1.1l-0.67,-0.08l-0.38,0.46l-0.11,-0.45l0.53,-1.02l-0.21,-0.61l-1.26,0.33l0.35,-1.15l-0.63,-0.76l1.16,-0.71l0.28,-0.98l-0.44,-0.43l-1.52,0.3l-0.45,-0.77l-1.18,-0.59l1.25,0.19l0.67,-0.14l0.43,-0.53l-1.08,-2.77l-0.57,-0.44l-1.51,0.57l-0.74,-0.19l0.11,-0.83l-0.45,-0.52l-0.52,-0.03l1.22,-0.68l-0.09,-0.44l-1.49,-0.75l-1.09,-0.93l-0.03,-0.45l-0.63,-0.3l-0.58,0.41l-0.15,-0.32l-0.44,-1.87l1.42,-0.28l0.28,-0.74l-0.56,-0.42l-1.68,0.12l1.8,-0.54l2.67,-1.74l0.35,0.25l0.59,-0.15l0.08,-1.13l-0.83,-0.39l-2.31,0.85l-1.68,1.13l0.77,-1.49l2.09,-1.65l2.56,-1.29l1.44,-1.98l1.44,0.24l2.03,-0.72l0.96,-0.67l4.65,-1.88l0.51,-0.51l0.13,-0.73l-0.86,-0.4l-3.05,1.6l-2.75,0.95l-2.09,-0.31l-1.84,0.69l-1.99,-0.44l-1.81,0.3l-1.83,-0.23l-2.19,0.51l-0.03,-0.91l0.75,-1.97l0.26,-2.24l0.6,-0.39l1.0,-2.09l0.74,-0.36l1.38,-0.01l0.52,-0.51l0.26,-0.88l0.74,-0.47l-0.31,-0.63l-1.03,0.01l-0.6,0.71l-2.18,0.28l-2.07,1.63l-0.98,-1.7l1.19,-5.61l0.93,-1.11l0.97,-0.45l1.83,0.91l0.97,-0.07l1.05,0.62l0.56,-0.08l1.83,-2.13l0.87,-0.16l1.4,0.83l0.95,-0.34l0.39,-1.48l-0.64,-1.05l-0.97,0.51l-1.22,-0.43l-0.84,0.08l-1.89,0.94l-2.79,-0.93l-1.08,0.05l-1.68,-0.54l-0.77,0.2l-1.65,1.38l-0.67,0.2l0.15,-0.47l-0.39,-0.52l-1.99,0.41l-0.25,-1.46l0.75,-0.74l0.1,-0.66l-0.41,-0.73l-0.48,-0.12l-1.3,0.92l-0.97,2.53l-1.14,-0.05l-0.41,-1.1l-0.83,-0.23l-1.09,0.05l-0.53,0.76l-1.33,-0.02l-0.2,0.66l0.68,0.67l1.07,0.28l0.85,-0.5l0.31,0.91l0.9,0.39l1.02,-0.03l0.24,1.05l-0.28,3.28l-1.38,1.94l-1.79,0.18l-0.67,0.89l-0.99,-0.87l-1.35,-0.09l-0.31,0.32l0.18,0.41l0.66,0.43l-0.97,-0.27l-0.45,0.17l0.18,0.63l-1.59,0.61l0.15,0.67l1.89,0.64l1.44,-0.1l0.69,0.88l-0.18,0.92l-1.97,-1.61l-0.75,-0.2l-0.45,0.23l-0.2,1.02l1.11,0.46l0.3,0.48l-2.34,-0.84l-0.76,0.39l0.16,2.39l0.61,0.07l0.52,0.59l1.44,-0.43l1.41,0.38l1.26,-0.46l0.97,1.2l0.7,1.57l0.66,0.39l0.82,0.02l0.65,0.95l0.03,0.91l-0.66,0.75l-1.0,3.65l-2.24,2.74l-0.51,1.07l-1.35,1.36l-0.58,2.43l0.41,1.27l-3.25,1.99l-2.05,0.24l-4.99,3.12l-1.45,0.04l-2.41,1.15l-1.67,1.19l0.07,-0.5l-1.13,0.05l-1.81,1.46l-0.9,1.36l-4.4,1.16l-5.39,2.64l-1.52,0.13l-0.92,0.73l-2.44,0.05l-0.65,0.93l-3.65,0.22l-0.99,-0.18l-0.85,-0.59l-1.16,0.23l-1.21,-0.86l-4.8,-1.96l-2.71,-1.5l-1.64,-1.54l-1.94,-0.78l-8.52,-7.09l-3.03,-3.95l-3.49,-3.74l-0.87,-1.33l-0.17,-0.96l-1.73,-1.02l-3.88,-4.04l-1.94,-1.14l-2.67,-3.2l-1.63,-1.0l-0.84,-1.01l-0.18,-1.89l-0.66,-0.19l-0.63,0.59l-0.54,-0.17l-4.18,-3.73l-1.45,-1.96l-1.46,-1.14l-1.7,-2.63l-1.65,-1.48l-1.47,-2.81l0.88,-3.29l0.5,-0.76l1.32,-0.83l-0.26,0.75l1.01,1.24l0.67,0.08l1.02,-0.44l0.83,0.17l0.94,-0.69l0.25,0.21l-1.03,2.68l0.24,0.84l1.52,1.23l2.4,-0.38l1.52,-0.7l0.65,-0.71l2.26,-0.04l1.51,-0.42l1.45,-1.37l0.19,-0.7l-0.34,-1.28l0.36,-0.06l0.3,2.26l1.88,0.7l0.59,-0.29l0.11,-0.39l0.69,-0.13l0.66,-0.9l0.59,0.21l0.46,-0.2l0.83,-2.0l1.53,1.64l0.7,-0.0l0.95,-1.43l1.58,-0.33l2.54,-2.09l2.6,-0.59l2.59,0.34l1.25,-0.49l4.5,-7.15l0.16,-1.52l1.55,-2.48l2.22,-1.93l1.09,0.04l0.73,-0.69l0.69,-1.43l0.07,-0.9l-0.87,-2.13l-1.25,-0.94l-2.24,1.56l-0.43,0.78l0.33,1.53l-0.31,2.26l-1.2,0.23l-0.53,-0.37l-0.68,0.08l-0.97,-0.5l-1.1,-1.31l-0.65,0.29l-0.22,1.03l-1.45,0.21l-0.85,-0.55l-0.06,-0.82l-0.53,0.16l-0.65,1.13l0.61,0.91l-1.78,0.22l-2.05,0.8l-5.13,1.18l-2.35,1.7l-1.17,1.86l-1.81,-0.42l-2.04,-0.02l-0.85,-0.55l-1.78,-0.11l-5.03,-1.67l-4.08,-0.59l-4.99,-3.19l-5.31,-2.24l-6.42,-4.41l-0.28,-0.83l-0.74,-0.31l-0.42,-0.6l0.49,-0.71l0.1,-0.83l-0.57,-0.36l-1.75,0.26l-0.15,-0.25l0.45,-0.89l1.3,-0.27l0.19,-0.55l-1.43,-1.28l-1.29,-0.24l-0.08,-0.55l0.78,-0.72l-0.27,-0.47l-1.15,-0.11l-0.95,0.55l-0.06,-1.22l-1.08,0.26l1.83,-2.32l-0.14,-0.36l-0.86,-0.1l-0.56,-0.78l-0.49,-0.1l-0.21,0.45l0.29,1.18l-0.41,0.11l-0.0,-3.49l2.18,0.23l0.39,-0.38l0.04,-0.61l-0.48,-0.5l1.61,-0.59l1.53,-1.82l1.55,-0.78l1.08,-1.78l1.61,-0.09l3.07,-2.0l-0.09,-0.69l-0.8,-0.19l-1.32,0.28l-1.37,1.12l-2.52,0.25l-0.62,0.52l-0.65,1.24l-5.16,2.14l-2.79,3.05l0.2,0.67l-0.49,0.4l-4.27,-0.24l-0.75,-0.44ZM141.04,481.24l-0.02,0.35l-0.14,0.07l0.03,-0.2l0.13,-0.22ZM139.1,480.22l0.01,0.97l-0.7,0.34l-0.26,-0.5l0.95,-0.81ZM28.19,437.73l0.34,-0.24l-0.1,0.14l-0.23,0.1Z",
      name: "Gujarat",
    },
    "IN-RJ": {
      path: "M113.16,366.39l-0.79,-0.19l-0.82,-1.14l-3.88,0.61l-1.37,-0.78l-1.49,-0.21l-3.05,0.21l-1.75,1.08l-2.15,-0.45l-2.94,0.83l-2.75,-0.76l-1.27,-0.83l-0.91,-0.2l-1.55,-3.64l-2.68,-4.47l-2.06,-7.11l-3.54,-3.49l-0.79,-2.29l-1.64,-1.88l-0.21,-1.01l0.33,-6.6l-0.19,-1.6l-0.91,-1.04l-1.23,-0.24l-3.67,1.06l-3.52,0.09l-2.79,-0.74l-0.75,-0.92l-0.69,-1.91l-3.03,-3.12l-0.94,-1.52l-0.54,-1.56l0.29,-3.26l1.77,-3.12l0.63,-2.52l-0.28,-1.98l0.55,-1.87l-0.16,-5.57l-1.0,-1.17l-2.36,-0.91l-7.44,0.28l-1.19,-0.44l-3.46,-2.72l-4.77,-1.9l-0.82,-0.89l-0.21,-1.18l1.29,-7.93l0.8,-2.43l1.22,-2.0l8.35,-7.32l1.89,-2.92l2.65,-2.47l0.77,-1.08l2.56,-6.91l7.24,-6.53l3.37,-0.9l2.19,0.73l2.89,2.68l0.22,2.51l0.96,2.12l1.23,1.73l1.86,1.21l2.15,0.28l2.76,-0.58l7.27,-3.47l2.28,-0.75l5.18,-0.75l5.05,-0.01l9.45,-2.8l0.73,-1.01l0.37,-4.13l0.46,-1.13l2.41,-3.02l5.04,-4.28l1.5,-3.1l1.81,-6.71l0.69,-1.31l2.22,-2.6l16.76,-8.5l1.03,-0.96l1.04,-2.37l2.71,-3.73l5.61,-10.36l4.24,-13.14l5.55,-2.7l5.67,-1.24l1.25,-0.68l5.27,-4.38l0.01,1.53l-2.58,4.47l0.0,0.93l0.33,0.34l15.39,0.72l3.64,0.48l0.02,0.94l0.94,0.93l0.04,0.52l-2.13,1.4l-0.59,2.13l0.48,0.91l1.08,0.31l2.26,-0.71l0.48,-0.41l0.19,0.23l-0.67,2.55l-0.26,2.85l0.37,1.18l0.79,0.98l-0.07,1.22l-0.19,0.37l-1.73,0.3l-0.34,0.95l2.48,3.97l1.17,-0.0l0.51,-1.04l3.42,-0.01l1.87,-1.25l2.62,1.15l1.36,2.74l1.0,0.28l1.28,-0.27l0.65,1.25l0.71,0.48l2.28,-0.55l0.86,-0.67l1.03,0.64l1.26,-0.12l1.93,-1.4l-0.21,1.19l0.37,0.73l0.69,0.23l1.08,-0.74l0.54,1.48l-0.83,0.46l-0.2,0.49l0.54,1.33l0.0,1.06l1.94,2.91l1.92,0.98l-0.02,0.67l-0.77,0.56l-0.22,0.85l3.34,9.56l3.35,4.22l2.17,1.57l-0.14,0.74l0.33,0.67l1.41,0.08l2.09,0.88l2.08,1.93l2.08,2.67l1.58,2.67l-0.7,-0.71l-0.52,-0.07l-1.05,1.15l-1.53,0.73l-0.43,0.67l0.27,0.88l0.98,0.7l0.61,-0.02l0.86,-0.7l-1.13,1.37l-0.82,1.64l0.59,0.99l-0.48,0.39l-0.91,-0.04l-0.45,0.81l0.15,0.87l1.22,0.93l0.58,1.57l0.74,0.31l3.48,-0.31l1.76,1.41l1.39,-0.66l0.29,-1.0l-0.42,-1.48l-0.6,-0.68l-0.03,-1.56l-0.65,-2.07l0.15,-1.09l0.22,-0.27l1.06,0.2l1.09,-0.39l1.6,1.04l1.18,-0.25l0.39,-0.55l0.02,-0.94l-1.13,-0.83l0.85,-0.33l0.02,-0.98l0.68,0.29l2.29,-0.31l0.49,0.72l-0.59,-0.08l-0.38,0.31l0.06,0.73l0.66,0.56l-0.57,0.47l0.03,0.51l1.42,0.83l0.92,0.06l0.52,1.73l0.97,0.65l1.15,-1.04l2.04,-0.52l0.28,-0.58l-0.44,-1.85l3.39,-2.44l1.36,-1.92l1.01,-0.38l2.42,2.36l0.15,0.52l-0.65,2.79l0.52,2.35l0.19,3.84l-0.86,1.6l-0.46,2.44l0.4,1.04l-0.58,0.37l-0.03,0.84l0.72,0.56l2.1,-0.25l1.27,-1.76l2.05,-0.4l0.26,-0.81l-1.3,-0.89l0.24,-0.53l1.97,0.6l0.71,-0.1l0.6,-0.56l0.81,0.49l0.58,-0.41l0.82,0.59l0.81,-0.67l0.38,0.07l0.36,2.7l0.84,0.78l0.33,0.85l0.04,0.6l-0.52,1.02l0.73,0.91l0.01,1.61l2.3,3.01l0.95,2.22l1.87,0.74l1.89,1.31l1.14,0.19l0.15,1.49l0.75,1.73l0.61,0.61l-0.36,0.58l-1.2,0.7l-0.31,0.83l-2.57,0.82l-0.37,0.89l0.3,0.66l0.88,0.32l0.64,1.0l2.23,0.36l0.7,-0.5l0.87,1.25l-1.42,0.37l-6.42,3.0l-0.85,1.15l-0.02,2.84l0.73,0.32l0.77,-0.2l1.26,-1.79l1.15,0.07l4.09,-1.67l2.33,-1.65l2.98,0.47l0.85,0.51l1.05,-0.35l2.89,0.35l1.09,1.2l0.67,-0.29l0.09,-1.11l1.09,-0.08l1.28,-1.16l1.69,-0.04l2.02,0.57l-0.98,0.92l-1.12,0.42l-0.05,0.72l0.66,0.88l-0.85,0.24l-0.1,0.82l-1.0,-0.26l-0.95,0.2l-0.54,3.52l-0.93,0.02l-0.98,-0.46l-1.99,0.86l-1.51,0.22l-0.57,0.55l-0.21,0.79l-1.71,0.58l-0.26,0.53l0.27,0.69l-2.38,1.08l-0.92,1.0l-2.98,0.75l-3.21,2.22l-2.11,0.06l-0.56,0.59l-0.11,0.9l-2.76,0.32l-1.52,2.06l-2.32,1.81l-2.65,0.18l-0.91,0.72l-0.32,0.96l-1.97,0.47l-0.92,1.2l-1.56,1.0l-1.05,0.28l-0.68,1.19l-2.24,1.52l-0.52,1.68l-0.79,0.35l-0.93,1.01l-2.88,0.01l-0.79,1.22l-0.84,0.14l-1.36,1.03l-1.09,1.85l-0.12,1.68l-1.03,0.59l1.24,6.15l1.02,3.16l1.64,0.79l1.23,1.75l2.04,0.43l1.85,1.25l0.57,0.11l1.26,-0.41l1.39,0.2l1.84,1.04l0.77,-0.39l1.71,0.0l2.77,-1.21l2.19,0.5l1.34,-0.62l0.88,-1.95l0.69,-0.54l1.52,-0.36l0.69,0.22l0.38,0.55l-0.47,1.46l0.69,1.45l-0.15,1.82l1.16,1.77l-0.39,1.97l-1.43,1.01l-1.76,-0.7l-1.13,0.24l-1.06,-0.21l-3.5,1.17l-2.7,0.19l-4.12,1.59l-0.88,1.16l-0.03,0.67l0.99,2.1l0.11,1.21l-0.8,0.67l-1.8,0.4l-0.46,0.59l0.01,0.63l2.21,2.47l1.07,0.57l2.33,0.03l1.64,1.33l0.87,1.46l0.43,2.21l-0.59,0.95l-3.32,1.33l-0.31,-0.01l-0.09,-0.98l-0.76,-1.19l-1.72,-0.45l-0.99,0.55l0.19,7.02l0.56,1.52l1.87,2.64l-0.75,1.42l-2.66,0.44l-2.87,-1.98l-0.29,-0.38l0.59,-1.58l-0.65,-0.89l-1.49,0.26l-1.32,0.66l-0.62,0.81l-0.38,1.25l-0.93,0.27l-0.8,-1.35l-0.81,-0.46l-2.36,0.15l-2.37,-0.75l-2.62,0.03l-0.56,-0.65l-0.06,-1.39l-0.91,-0.21l-1.44,0.8l-0.41,0.77l-0.22,5.75l-0.91,1.03l-3.07,2.04l-0.18,0.86l0.58,0.69l-0.36,0.8l-2.54,1.42l-3.18,1.16l-1.39,-1.09l-0.78,0.05l-0.42,0.67l0.21,1.39l-0.75,1.99l-1.04,-0.67l-1.53,-0.23l-0.54,-1.73l-2.26,-1.43l-0.39,-0.57l-0.11,-1.38l0.73,-1.34l0.34,-0.08l2.56,1.5l0.99,-0.14l1.03,-0.78l1.53,0.76l2.78,-3.75l-0.19,-0.69l-1.38,-0.85l-0.38,-0.73l0.33,-1.04l1.14,-1.39l0.31,-1.44l-0.35,-1.02l-1.31,-0.83l-0.49,-2.5l0.29,-1.27l0.46,-0.6l2.12,0.79l0.87,-0.42l0.54,-0.87l-0.12,-3.35l-1.72,-2.18l-0.08,-1.9l-1.45,-1.82l-0.93,-0.39l-1.02,0.2l-2.12,1.19l-6.1,1.13l-1.71,-0.05l-2.46,-0.66l-2.71,0.12l-0.69,-0.28l-0.43,-0.95l1.0,-1.04l0.14,-0.7l-0.82,-1.9l1.39,1.33l1.73,0.45l2.43,-0.55l1.29,-1.43l-0.03,-0.57l-0.61,-0.38l-3.06,0.55l-1.27,-0.53l0.04,-0.32l1.57,0.36l0.71,-0.62l-0.09,-0.83l-0.78,-1.15l0.96,-1.84l-0.38,-0.68l-2.77,0.61l-2.39,-0.18l-0.87,0.22l-1.43,2.29l0.29,1.74l-0.19,0.81l-1.27,-0.2l-1.56,1.09l-2.66,-1.04l-1.24,-1.01l-1.28,-0.2l-0.46,0.24l-0.21,0.62l0.68,2.0l-0.19,1.6l0.21,0.59l3.12,0.55l1.1,-0.15l0.1,0.39l-0.55,2.44l-0.6,0.36l-1.68,0.1l-1.61,-1.83l-0.62,-1.83l-0.6,-0.15l-0.56,0.47l-0.19,2.47l0.42,1.11l-2.09,4.22l-0.12,0.98l0.53,0.75l3.35,1.05l0.25,0.61l-2.43,2.42l-0.39,1.79l-0.73,1.25l0.16,0.52l0.56,0.3l2.45,-0.12l1.2,0.69l0.89,3.8l2.05,2.4l-0.64,1.04l-1.18,3.43l-0.18,1.43l0.11,2.2l0.8,1.33l0.19,1.94l-2.53,4.99l-0.87,0.81l-5.89,2.59l-2.01,1.8l-1.52,2.59l0.02,1.08l0.6,0.72l2.45,0.79l1.39,0.05l1.5,1.36l-2.98,1.57l-1.93,0.47l-2.21,1.15l-2.7,-0.33l-1.68,0.98l-0.59,-0.97l-0.83,-0.47l-1.34,-2.19l-1.43,-0.75l-1.43,0.61l-0.48,-0.26l-0.72,-2.86l-2.18,-1.34l-2.15,-1.97l-0.91,-0.2l-0.73,0.85l-0.66,-0.04l-2.15,-2.97l-0.57,-0.34l-2.93,0.76l-1.14,-0.82l-1.17,0.04l0.32,-1.25l-0.46,-1.22l0.13,-1.76l-0.24,-0.9l-1.4,-1.24l-0.65,0.06l-1.41,1.07l0.32,-2.39l-0.31,-0.73l-1.75,-0.71l-1.19,-1.94l-1.47,-0.23l0.28,-3.15l1.47,-1.08l0.28,-0.53l-0.77,-1.97l-0.12,-1.42l-1.32,-2.1l-0.38,-0.24l-0.65,0.19l-1.13,1.93l-1.34,0.87l-0.98,-1.08l-0.62,-1.36l-2.63,-2.03l-0.7,-1.62l0.87,-2.35l0.88,-1.21l1.13,0.05l0.78,-0.31l0.62,-1.27l-0.18,-0.76l-0.43,-0.3l-1.27,0.38l-1.91,-0.74l0.23,-2.35l-0.43,-1.01l-1.21,-0.11l-2.26,0.63l-0.78,1.08l-0.46,2.35l-0.86,0.68l-0.6,0.06l-1.89,-0.53l-3.52,-0.4l-1.51,-2.29l-2.14,-0.65l-1.84,-1.02l-1.46,0.26l-0.78,2.15l-0.36,0.2l-0.92,-1.62l-0.24,-1.27l-1.85,-0.15l-0.62,-0.94l-1.53,-0.29l-0.97,-0.75l2.33,-0.44l0.22,-0.89l-0.68,-0.67l-4.54,0.35l-2.17,-0.71l-1.13,-1.44l-0.59,-0.29l-2.11,0.47l-1.51,1.18l-0.76,-0.09l-0.9,-0.81l-0.82,0.05l-0.91,0.64l-0.15,0.93ZM294.16,288.97l0.26,-0.35l0.11,-0.1l-0.05,0.3l-0.31,0.15ZM252.61,250.52l-0.88,-0.6l-0.15,-0.41l0.59,0.24l0.44,0.77Z",
      name: "Rajasthan",
    },
    "IN-MP": {
      path: "M191.91,423.84l-0.52,-3.36l-0.53,-1.39l0.74,-0.61l0.77,-0.34l2.88,0.29l2.23,-1.16l1.99,-0.5l3.36,-1.88l-0.0,-0.75l-1.53,-1.53l-4.03,-0.93l-0.42,-0.88l1.39,-2.39l1.85,-1.66l5.83,-2.55l1.04,-0.94l1.49,-3.12l1.15,-1.64l0.11,-1.95l-0.24,-1.12l-0.77,-1.25l-0.08,-1.88l0.16,-1.29l1.86,-4.79l-2.14,-2.67l-0.45,-2.8l-0.59,-1.21l-1.63,-0.91l-2.47,0.1l0.66,-1.0l0.32,-1.64l1.74,-1.48l0.81,-1.32l-0.17,-0.87l-0.45,-0.45l-3.45,-1.11l-0.08,-0.37l2.2,-4.61l-0.4,-1.42l0.1,-1.99l0.36,1.48l0.95,0.81l0.7,1.18l0.53,0.26l1.56,-0.03l1.01,-0.34l0.72,-0.72l0.5,-2.94l-0.75,-0.84l-1.19,0.14l-2.6,-0.34l0.17,-1.7l-0.66,-1.97l0.84,0.14l1.09,0.93l2.15,1.06l1.16,0.09l1.62,-1.1l1.02,0.31l0.63,-0.38l0.36,-1.3l-0.29,-1.62l1.1,-1.75l2.84,0.09l2.19,-0.57l-0.84,1.67l0.9,1.76l-1.84,-0.24l-0.48,0.64l0.06,0.81l0.84,0.71l1.12,0.24l2.91,-0.55l-1.3,1.1l-1.61,0.23l-1.34,-0.35l-1.47,-1.38l-0.77,0.01l-0.33,0.88l0.81,1.84l-0.85,0.94l-0.32,0.92l0.8,1.39l1.08,0.43l2.69,-0.13l2.41,0.65l1.95,0.06l6.25,-1.16l2.89,-1.35l0.81,0.55l0.9,1.26l0.02,1.76l1.69,2.09l0.14,2.99l-0.72,0.67l-1.35,-0.77l-1.15,0.13l-0.74,0.98l-0.34,1.56l0.56,2.82l1.31,0.91l0.28,0.62l-0.23,1.1l-1.45,2.03l-0.07,0.88l0.25,0.76l1.62,1.36l-2.15,2.93l-1.36,-0.75l-1.75,0.95l-3.0,-1.53l-0.78,0.44l-0.86,1.74l0.13,1.58l0.39,0.76l2.43,1.6l0.49,1.72l0.33,0.26l1.63,0.23l0.86,0.6l0.71,0.05l0.53,-0.62l0.69,-1.91l-0.18,-1.56l1.04,0.97l0.88,0.15l3.38,-1.22l2.74,-1.55l0.62,-1.43l-0.58,-1.02l2.89,-1.87l1.22,-1.46l0.23,-5.8l1.25,-0.97l0.03,1.13l0.96,1.07l0.65,0.22l2.18,-0.18l2.45,0.76l2.27,-0.16l0.37,0.22l0.5,1.22l0.8,0.37l1.54,-0.47l0.94,-2.01l2.1,-0.79l-0.46,2.16l2.85,2.18l0.96,0.53l3.22,-0.59l1.09,-2.16l-2.28,-3.57l-0.43,-4.0l0.27,-1.37l-0.24,-1.82l1.59,0.28l0.46,1.83l1.11,0.44l3.72,-1.46l0.82,-0.85l0.14,-0.79l-0.48,-2.47l-1.05,-1.74l-1.9,-1.51l-2.48,-0.08l-0.78,-0.44l-1.9,-2.1l0.23,-0.33l1.92,-0.41l0.89,-0.95l-0.08,-1.74l-0.97,-2.28l0.51,-0.72l3.91,-1.51l2.67,-0.19l3.37,-1.16l1.06,0.21l0.95,-0.26l1.95,0.71l1.88,-1.18l0.37,-0.58l0.33,-2.13l-1.25,-2.17l0.23,-1.44l-0.69,-1.42l0.48,-1.43l-0.97,-1.29l-1.87,-0.11l-1.6,0.8l-0.94,1.95l-0.61,0.55l-2.56,-0.43l-2.91,1.24l-1.6,-0.03l-0.73,0.39l-1.59,-1.02l-1.63,-0.22l-1.33,0.41l-1.98,-1.3l-1.68,-0.23l-1.39,-1.83l-1.51,-0.67l-0.88,-2.84l-1.3,-5.49l1.02,-0.67l0.31,-2.18l0.62,-1.04l1.1,-0.9l1.23,-0.38l0.55,-1.06l2.42,0.18l0.59,-0.28l0.95,-1.02l0.89,-0.44l0.58,-1.75l2.19,-1.47l0.56,-1.08l0.9,-0.2l1.61,-1.02l0.91,-1.21l2.0,-0.48l0.62,-1.26l0.58,-0.41l2.55,-0.13l2.61,-2.01l1.39,-1.95l2.46,-0.14l0.69,-0.61l0.16,-0.98l2.14,-0.08l3.22,-2.23l3.09,-0.81l0.88,-0.97l2.69,-1.32l-0.1,-1.03l1.58,-0.6l0.61,-1.23l1.4,-0.18l1.79,-0.82l1.11,0.48l1.32,-0.23l0.74,-2.26l-0.13,-1.3l1.54,0.32l0.58,-0.57l0.06,-0.52l1.15,-0.19l1.1,0.21l1.15,-1.25l2.21,0.06l0.6,0.87l1.21,0.11l1.07,1.0l1.77,0.32l1.5,0.84l1.12,-0.0l0.65,-0.6l1.15,0.01l1.42,-0.73l0.31,0.53l0.62,0.09l0.33,-0.27l0.47,0.74l0.85,0.09l2.08,1.98l1.97,-0.15l0.92,3.46l2.47,4.19l0.31,1.69l-0.36,1.13l0.63,0.93l-1.09,1.53l-1.67,0.49l-0.96,0.95l-0.03,1.06l0.54,0.96l-0.96,0.59l-0.16,1.24l1.03,1.32l-1.17,1.84l-1.04,2.8l-1.41,1.74l-0.79,2.01l-2.15,1.79l-0.42,1.83l0.82,2.19l-0.08,0.67l-0.87,0.47l-3.09,0.63l-2.0,1.1l-2.01,-0.16l-3.47,0.83l-0.72,0.75l-0.3,1.66l-0.43,0.6l-2.48,2.28l0.14,1.03l1.3,1.67l2.05,4.43l-1.1,3.43l0.3,1.25l-0.41,1.16l-1.97,1.91l-2.39,1.59l-0.5,1.2l1.73,2.46l0.18,1.91l0.95,1.42l-0.09,1.58l0.4,0.6l-0.05,0.55l-1.41,2.68l0.63,1.3l0.81,0.48l0.33,0.83l2.13,1.35l-0.66,2.0l1.03,1.4l1.2,0.28l1.31,-0.64l0.68,-0.76l0.44,-1.78l0.54,-0.38l1.29,0.66l3.7,3.07l1.13,0.44l1.71,0.11l0.29,1.21l0.51,0.5l1.39,0.24l2.0,-1.84l1.09,-2.43l1.6,-1.48l0.61,-1.1l0.21,-1.63l-0.77,-0.66l-1.18,-0.2l0.18,-1.5l-0.89,-1.24l-0.76,-1.86l-1.56,-0.8l-2.6,0.54l-0.4,-0.6l-0.1,-0.69l0.64,-1.42l-0.4,-4.14l-2.32,-3.07l-0.93,-5.45l-1.38,-3.44l-1.82,-1.91l0.46,-1.11l1.51,-1.78l-0.04,-0.98l0.34,-0.29l1.63,0.2l1.78,1.89l1.0,-0.11l0.24,-0.64l-0.22,-1.03l0.54,-1.16l-0.8,-1.21l0.38,-1.0l1.02,-0.28l0.21,2.56l0.28,0.42l0.67,0.24l1.06,-0.34l0.39,-0.55l0.01,-2.04l0.8,-1.02l0.43,0.73l-0.35,2.05l0.5,0.45l1.11,-0.0l-0.13,1.21l-0.65,1.35l0.06,1.31l-1.51,1.2l-0.74,1.59l0.05,1.24l0.86,0.77l1.08,-0.45l0.92,-1.08l1.46,-0.63l0.23,-1.37l0.95,0.5l-1.07,1.61l0.14,0.88l0.53,0.5l2.51,-0.66l0.27,1.38l0.64,0.34l0.66,-0.28l0.8,-0.96l3.2,0.58l0.73,-0.83l-0.57,-2.42l0.54,0.56l0.59,0.1l1.28,-1.19l1.03,0.15l0.67,-0.35l-1.84,2.96l-0.99,1.04l-0.22,2.1l0.69,0.76l1.57,0.06l0.34,-0.27l0.21,-2.05l0.73,0.13l0.64,1.13l0.95,-0.04l2.13,-2.35l2.82,0.98l3.59,-0.24l0.55,0.59l0.71,0.2l2.3,-1.07l-0.01,-0.76l-0.98,-1.46l0.31,-0.53l1.98,-0.41l3.08,-2.33l2.01,-0.92l1.31,0.28l1.46,-1.05l0.73,-1.06l0.9,0.24l1.34,-0.26l0.81,1.27l0.36,2.78l1.13,0.71l0.62,0.83l0.69,-0.02l0.56,1.65l-1.97,1.05l-1.44,1.71l-0.96,-0.01l-0.34,0.31l0.1,1.75l0.99,1.21l1.85,-0.32l1.64,0.37l0.55,-0.44l0.02,-0.69l0.89,0.96l1.03,-0.11l1.14,-0.73l0.14,-0.7l-1.44,-0.98l-0.23,-0.67l1.41,0.35l0.98,-0.14l0.49,-0.56l-0.02,-0.89l0.91,1.49l1.19,1.06l2.66,-0.26l0.57,-0.45l-0.02,-0.8l-1.53,-1.17l2.9,-0.26l0.82,-1.55l0.76,-0.22l0.37,0.5l-0.88,2.05l-0.17,1.21l-0.87,0.88l-0.27,1.12l-0.71,0.9l-0.01,0.88l0.65,0.49l1.01,0.13l2.85,-0.5l1.42,1.01l1.82,-0.42l2.77,1.85l0.48,-0.11l0.95,-1.14l1.13,-0.17l0.55,-0.44l-0.19,-1.79l1.86,-2.5l0.21,-1.01l-0.21,-1.35l1.88,-0.09l1.44,0.45l0.14,1.38l1.85,0.38l1.28,-0.26l0.5,-0.44l-0.0,-0.94l-0.92,-0.68l2.58,-0.76l1.08,2.35l-0.2,0.73l0.3,0.56l2.82,0.72l1.28,-0.01l0.48,1.09l0.94,0.37l1.83,-0.48l0.75,0.19l0.86,1.37l-0.24,1.06l0.26,0.65l2.72,2.08l2.45,0.41l2.82,1.69l0.96,-0.18l1.48,-1.0l-0.13,2.39l0.86,0.49l0.92,-0.62l0.09,1.92l0.52,0.37l0.8,-0.12l0.35,0.24l-0.59,1.47l0.13,0.65l3.0,0.17l0.76,-0.21l0.66,-0.93l-0.07,-1.74l4.89,1.07l3.33,-1.1l0.09,1.22l0.4,0.33l1.39,0.15l0.54,1.49l0.68,0.8l-0.36,0.47l-1.52,-0.19l-0.64,0.68l0.2,2.3l-0.31,2.05l0.32,0.63l0.66,0.4l0.01,2.03l-0.73,1.7l-0.24,1.96l-0.48,0.42l-0.99,0.18l-0.36,0.6l0.51,1.13l1.45,1.26l-0.08,1.5l1.94,2.08l-0.51,1.73l-3.3,1.36l-0.49,0.55l-0.31,1.33l-2.3,1.07l-1.01,0.87l-0.88,0.08l-7.25,-0.43l-1.86,-0.49l-3.75,-0.02l-2.21,-1.13l-2.21,-0.16l-3.22,1.48l-0.71,0.02l-1.74,-0.88l-1.97,-1.98l-1.49,-0.09l-0.93,0.68l0.04,1.82l1.74,3.3l0.13,0.87l-0.82,1.16l-1.16,0.74l-0.2,1.29l-0.68,0.92l1.15,2.78l0.98,0.35l3.34,-1.97l2.94,1.13l2.03,0.35l1.91,3.02l1.05,0.45l0.42,0.74l2.45,-0.02l2.02,1.71l-0.93,5.0l-0.6,1.3l-1.71,-0.05l-4.13,2.09l-0.4,0.98l0.22,2.14l-2.16,1.95l-2.51,1.09l-0.4,1.44l0.25,2.13l-0.72,1.02l0.15,1.54l-2.9,1.71l-0.81,1.84l-3.11,0.97l-3.42,2.57l-1.2,-1.63l-0.76,-0.29l-2.59,0.93l-1.23,0.78l-0.33,-0.11l-0.37,-0.87l-0.55,-0.26l-1.18,0.75l-1.36,2.21l-0.12,3.42l-0.63,1.08l-2.01,1.52l-0.47,2.63l-0.86,0.45l-0.09,0.55l0.46,1.25l-1.05,-1.17l-0.71,-0.26l-0.67,0.17l-1.14,1.39l-1.27,2.61l-0.33,1.02l0.08,3.35l-0.46,1.29l-0.84,1.13l-1.17,0.26l-0.81,1.51l-0.42,4.31l0.2,2.79l-0.79,3.1l-0.5,1.32l-1.2,0.7l-4.35,-2.38l-2.47,0.26l0.66,-1.14l-0.53,-1.51l-2.06,-1.52l-0.86,-1.78l-1.97,-0.57l-1.82,-1.32l-2.9,1.1l-0.95,1.06l-2.08,0.67l-1.29,-0.44l-1.59,0.81l-1.72,0.26l-1.05,-1.58l-1.84,-0.51l-3.21,0.31l-2.72,1.46l-0.66,-2.26l-1.15,-0.86l-0.48,-0.84l-1.97,-0.81l-2.96,-0.11l-2.32,-0.77l-0.87,0.22l-0.62,1.76l-4.01,1.3l-2.67,0.31l-2.03,0.7l-0.54,0.74l0.27,1.26l-0.51,0.33l-6.33,1.11l-4.0,-0.66l-1.57,-1.01l-0.97,-0.01l-1.3,0.64l-0.55,-3.04l-0.83,-0.67l-1.23,-0.09l-0.76,0.24l-0.93,1.06l-3.57,1.12l-1.56,1.75l-1.72,1.11l-5.31,1.96l-1.03,0.07l-2.53,-0.84l-2.73,1.48l-0.66,-0.51l-1.65,-0.17l-1.51,0.48l-1.41,-1.01l-0.7,0.0l-0.39,0.34l-1.68,-3.06l0.14,-0.72l3.36,0.16l0.93,-0.48l-0.89,-5.48l-1.4,-0.87l-0.32,-0.69l-0.8,-0.52l-4.42,-0.24l-0.78,0.24l-0.86,0.87l-1.11,0.34l-0.85,0.92l-1.1,-0.81l-2.12,0.08l-2.74,1.01l-3.44,2.43l-2.09,0.11l-1.09,0.46l-0.85,1.04l-0.3,2.63l-1.62,2.5l-2.88,2.12l-0.14,0.51l0.61,1.53l0.02,1.19l-0.72,1.14l-3.85,0.87l-1.98,2.37l-1.61,0.61l-2.78,0.38l-2.94,-0.34l-1.16,-0.59l-1.08,-1.5l0.86,-0.25l0.29,-0.6l-0.36,-2.94l-1.17,-2.7l-0.64,-0.52l-1.32,0.08l-2.71,-0.81l-2.23,-0.27l-2.14,0.52l-3.25,0.17l-2.54,-0.23l-3.15,0.44l-6.44,-0.32l-3.07,-0.67l-2.27,-1.01l-1.93,-3.14l-1.84,-1.33l-1.81,-0.18l-1.57,-0.99l-1.27,-0.25l-4.77,0.17l-1.46,-1.1l-2.02,-0.68l-2.12,-1.56l-0.9,-2.61l0.18,-3.47l-0.27,-1.11l-2.52,-2.68l-1.03,0.05l-1.18,1.1l-1.83,0.63l-0.3,0.75l-0.91,0.4l-1.79,0.03l-1.41,-0.68l0.36,-3.59l-0.75,-1.1l-0.65,-2.31l-0.92,-1.03l-0.2,-3.47l0.42,-0.63l1.49,0.91l2.06,-0.4l1.35,-0.99l0.42,-1.19l-0.17,-0.49l-0.87,-0.58l-3.69,-0.2l-2.05,-1.99l0.61,-0.64l1.89,0.55l1.15,-0.22l3.77,-3.23l1.72,-0.16l1.38,-0.98l2.78,-5.33l0.07,-0.76l-1.19,-1.96l-0.93,-0.37l-0.9,0.29ZM342.94,345.9l-0.07,-0.47l0.06,-0.58l0.99,-1.54l-0.98,2.59Z",
      name: "Madhya Pradesh",
    },
    "IN-OR": {
      path: "M408.6,584.62l0.87,0.38l0.7,-0.57l0.17,-1.23l0.78,-1.54l0.14,-2.48l0.72,-1.11l0.53,-2.11l-0.29,-1.58l0.84,-1.84l0.76,0.02l2.17,-0.82l1.07,-1.24l1.83,-0.69l1.82,-2.82l4.8,-4.17l-0.13,-1.22l-1.17,-0.95l0.98,-0.36l1.48,-1.56l2.18,-0.42l1.07,-1.66l0.73,0.55l0.81,-0.24l0.83,-3.98l0.54,-0.67l1.08,-0.58l0.29,-0.71l-0.1,-2.84l-0.74,-1.34l-0.25,-1.24l-0.98,-0.82l0.26,-1.36l-0.7,-1.85l0.8,-2.84l-0.22,-0.61l-0.86,-0.66l0.89,-0.73l0.05,-0.95l-0.72,-0.89l-1.26,-0.42l-0.99,-1.74l-1.27,-0.51l0.35,-3.73l-0.41,-1.94l0.27,-2.32l-0.75,-0.79l-1.7,-0.38l-0.94,-1.68l-2.97,-1.76l-0.47,-0.78l0.14,-0.74l1.38,-2.44l0.97,-0.56l1.15,-1.25l1.66,1.78l0.44,1.11l1.07,-0.03l0.97,-1.34l1.85,1.55l0.52,0.87l1.61,0.18l2.16,4.28l0.64,0.59l0.76,-0.22l1.26,-1.7l3.32,0.37l1.51,0.69l1.33,0.07l-0.14,2.05l0.48,0.54l0.74,-0.1l3.64,-2.46l0.2,-0.83l-0.84,-1.09l0.5,-2.36l-0.44,-1.37l-1.49,-0.16l-1.2,0.53l-1.26,-1.05l-2.25,-0.06l-2.22,-1.3l0.69,-3.13l-0.27,-3.86l-0.48,-1.12l0.27,-3.95l-0.1,-0.42l-0.55,-0.27l-0.35,0.21l-0.3,-1.32l-0.82,-0.26l-0.35,-0.87l0.85,-4.04l-0.72,-2.56l-0.04,-3.65l0.23,-0.22l0.93,0.25l0.06,0.91l0.5,0.38l1.85,-0.78l1.59,-2.19l1.54,-1.08l2.51,-4.8l0.2,-1.41l2.78,-0.21l1.21,0.48l1.08,-0.43l4.28,-0.65l3.13,1.97l2.46,-0.12l1.12,-0.71l0.83,-1.15l0.91,-2.52l0.94,-1.38l-0.0,-1.07l0.48,-0.85l2.25,0.71l0.98,-0.23l0.33,-0.74l-0.12,-1.25l-1.59,-1.85l-0.16,-1.47l0.71,-2.42l3.3,-5.53l0.24,-1.66l1.26,0.23l0.4,-1.1l0.9,-0.08l0.47,-0.83l0.2,-2.45l-1.77,-1.6l0.22,-1.51l1.57,-1.15l-0.05,-0.68l-0.65,-1.0l2.18,-3.06l2.99,-1.33l3.65,-3.0l2.69,-0.52l0.96,-0.56l1.06,-1.28l0.29,-0.96l-0.2,-1.52l-0.66,-1.22l2.36,1.1l2.44,3.59l1.03,0.81l1.71,0.29l2.63,1.1l3.55,-0.27l2.45,-1.4l0.45,-1.5l6.57,-0.18l2.05,-0.74l3.38,0.91l1.21,-0.78l1.34,-0.23l2.05,-1.36l0.86,2.95l0.13,1.93l-0.32,1.19l-1.6,2.32l-1.72,3.41l0.2,0.71l0.42,0.13l1.79,-0.54l1.28,0.22l4.01,2.74l3.34,-3.21l2.5,-1.08l0.99,-0.02l3.14,1.77l3.92,1.01l2.38,-0.82l1.13,-0.8l-0.69,1.35l0.07,1.78l0.31,0.54l1.81,0.87l1.44,-0.37l1.24,-0.87l1.91,-2.83l0.46,-2.86l-0.71,-2.31l0.76,-1.24l0.11,-1.23l-0.34,-2.49l-1.3,-1.91l-0.08,-0.67l1.7,-0.51l0.76,-0.96l0.5,-0.16l1.56,1.77l5.7,2.91l2.44,2.6l1.27,0.35l2.8,-0.49l5.68,3.71l0.66,0.99l1.88,0.67l2.06,1.47l1.92,0.22l2.3,1.14l0.67,0.67l0.2,0.8l-0.24,2.33l1.32,1.8l1.16,0.01l1.78,-2.16l0.87,0.07l1.39,0.85l0.72,2.92l0.74,1.0l5.27,1.5l0.12,2.57l1.25,2.13l-3.71,1.5l-4.33,0.33l-2.84,1.48l-1.58,1.12l-4.5,4.76l-1.65,2.44l-0.94,2.78l0.21,2.98l3.72,8.83l-0.15,0.33l-2.19,0.13l-0.26,0.6l0.52,0.68l0.66,0.26l2.2,0.07l0.33,0.76l-0.94,-0.18l-0.86,0.63l0.29,0.63l1.57,0.73l-2.3,1.0l-5.38,4.36l-0.87,1.94l-0.14,2.13l0.59,0.38l1.32,-0.93l0.32,0.19l-0.66,0.93l-2.07,1.29l-0.17,0.9l-1.96,1.18l-3.56,1.2l-0.62,0.5l-0.99,3.01l-2.18,2.22l0.07,0.88l-3.15,-2.37l-2.09,-0.05l-0.98,-0.98l-0.43,-1.27l-0.55,-0.22l-0.38,0.27l-0.24,0.91l0.53,1.5l1.8,1.31l2.24,0.53l0.58,1.03l1.33,0.59l-2.46,1.35l-5.48,2.09l-1.05,-0.38l-0.74,0.47l-5.64,1.45l-1.8,0.97l-1.66,0.07l-2.84,1.15l-0.84,-0.01l-2.11,1.23l-2.56,0.82l-0.12,-0.91l1.47,-0.48l0.08,0.59l0.46,0.02l1.85,-1.08l0.04,-4.51l-0.63,-0.57l-2.59,-0.65l-1.42,0.22l-3.64,3.22l-1.69,0.52l-2.08,2.43l0.02,0.78l-1.97,2.76l0.13,1.11l-0.98,0.61l-0.34,0.66l0.22,0.87l0.6,0.2l-0.13,0.36l0.47,0.55l0.96,-0.7l0.74,-0.13l-3.75,3.53l-6.09,4.87l-2.33,2.95l-0.87,-1.1l-2.14,-0.04l-0.56,0.34l0.14,1.16l-0.34,0.71l-0.9,-0.27l-2.35,1.12l-1.26,1.04l-1.69,0.08l-0.26,0.34l0.17,0.89l-0.33,0.72l0.05,0.87l-1.0,1.23l-1.18,0.2l-0.74,1.7l-1.32,1.09l-4.68,0.75l-2.81,-1.03l-5.13,0.38l-1.2,-1.49l-1.61,-4.45l-1.01,-0.54l-1.01,0.18l-0.5,0.86l0.2,1.32l-0.8,-2.26l-2.99,-3.94l-0.88,0.3l-0.51,1.45l-1.24,0.87l-0.57,1.24l-0.56,-1.57l-1.12,-0.44l-0.41,0.64l0.3,1.21l-0.52,0.7l0.12,0.82l-3.07,-1.25l-1.04,0.21l-0.61,0.54l-0.01,0.6l0.92,1.68l0.72,0.88l0.72,0.22l0.53,0.86l-1.83,0.9l-2.19,1.79l-1.56,0.69l-1.43,-0.77l-1.03,0.31l-3.19,3.91l-0.17,2.09l0.81,1.42l1.02,0.22l-1.53,2.04l0.32,1.52l-0.23,0.78l-0.89,0.07l-1.43,0.66l-1.31,0.07l-0.23,-0.16l0.01,-1.09l-0.37,-0.38l-2.06,-0.8l-0.93,0.12l-0.62,0.52l0.12,1.64l-0.33,0.6l-3.15,1.78l-0.71,1.76l-1.31,-0.43l0.47,-2.32l-0.48,-0.89l-2.17,-2.19l-0.29,-2.87l-2.46,-0.5l-2.38,3.46l-0.09,1.68l-0.5,1.42l0.29,1.04l-1.51,2.72l0.14,0.92l1.34,1.18l-0.86,0.75l0.1,2.0l-1.65,0.16l-0.93,1.4l-1.59,-0.19l-1.48,-1.2l-1.32,-0.39l-1.7,0.2l-1.56,1.08l-2.27,0.35l-3.0,1.96l-2.65,1.29l-1.11,1.17l-1.46,0.31l-2.23,1.63l-1.94,-0.89l-0.68,0.23l-0.52,1.0l-2.17,-0.55l0.13,-1.87ZM525.81,532.38l-0.05,-0.65l0.8,-0.25l0.04,-0.71l-0.49,-0.28l1.13,-1.12l-0.4,-0.64l0.3,-0.48l1.49,0.43l1.55,-1.12l1.08,-0.07l0.05,0.45l-1.37,1.35l-0.86,-0.66l-0.66,0.66l-0.63,0.11l0.75,1.39l-2.7,1.6Z",
      name: "Orissa",
    },
    "IN-TN": {
      path: "M249.84,785.28l-0.33,-0.95l0.1,-1.86l1.6,0.49l1.48,-0.2l1.11,-1.27l1.32,-0.6l0.3,-1.05l1.07,-0.88l1.68,0.16l0.34,0.48l0.05,1.28l0.84,0.64l5.71,-0.26l2.06,0.51l0.81,-0.69l0.4,-2.03l2.08,-2.99l2.57,-0.44l2.02,1.94l0.79,0.31l0.61,-0.27l0.51,-1.19l2.74,-0.17l1.14,-0.44l2.26,1.02l2.41,-0.26l1.0,-0.81l1.68,-3.48l0.65,-0.34l3.83,-0.43l1.03,-0.61l3.07,-4.27l0.07,-0.85l-1.01,-1.75l-1.33,-0.89l-1.06,-0.22l-5.49,-0.07l-0.44,-1.25l2.84,-2.25l1.44,-2.2l0.47,-2.63l-0.45,-0.65l-0.84,0.03l0.12,-0.69l-0.38,-1.02l1.14,-3.22l2.33,-0.11l2.46,-1.36l-0.16,-1.26l1.0,-1.73l0.33,-1.31l1.11,-0.38l1.66,-0.0l1.7,1.66l1.0,0.45l0.79,-0.3l0.66,-1.11l0.44,0.08l2.35,1.72l2.91,0.96l1.35,1.89l2.47,1.79l2.53,0.3l0.89,-0.42l1.33,-1.4l0.29,-1.48l0.98,0.03l1.45,-1.18l1.06,-2.6l1.03,-4.37l0.4,-0.53l1.29,-0.38l0.6,-0.96l3.87,-0.67l0.65,1.17l0.79,0.15l0.91,-0.67l0.3,-1.05l0.55,-0.02l0.97,0.23l0.51,0.92l2.1,0.65l2.72,-0.3l0.76,-0.54l2.09,-2.71l1.31,0.59l0.57,-0.08l2.15,-2.17l1.18,-0.62l0.42,-0.71l-0.07,-0.91l0.47,-1.75l0.53,-0.28l1.75,0.15l1.06,1.37l0.63,0.35l2.87,-0.38l0.18,1.3l1.04,0.76l2.31,-0.02l0.42,-0.96l-1.05,-0.98l-0.01,-0.36l1.61,0.07l4.38,-2.25l0.44,-0.72l0.05,-1.3l2.65,-1.83l-0.01,-0.75l-0.67,-0.64l1.64,0.69l-0.38,1.1l0.47,0.56l3.19,0.35l1.48,-0.39l1.4,1.36l0.73,-0.21l0.37,2.77l-0.32,2.03l-0.47,0.24l-0.18,1.0l0.58,0.53l-0.78,1.59l0.16,1.33l-0.83,1.23l-1.04,9.49l-2.92,8.93l-1.83,3.47l-1.09,0.85l-1.06,1.81l-2.53,1.85l0.16,0.59l0.84,0.04l-3.55,5.53l-0.05,1.49l-0.3,0.47l-1.72,1.18l-0.44,-0.37l0.52,-1.02l-0.5,-0.57l-1.34,0.11l-1.1,-0.87l-0.45,0.2l-0.56,0.93l0.7,1.08l0.11,0.84l0.4,0.31l-0.32,1.19l0.17,0.58l1.13,0.75l2.01,0.21l-0.67,1.5l-1.05,6.13l1.05,4.71l0.4,0.35l0.61,-0.29l0.1,0.95l-2.0,0.22l-2.44,2.58l0.36,0.58l0.4,-0.05l2.7,-2.02l1.33,0.48l0.06,2.28l0.62,3.2l-0.18,5.1l-0.92,-0.09l-0.81,0.43l-1.49,-0.42l-0.49,0.56l0.19,0.5l-0.54,-0.02l-0.42,0.61l0.15,1.36l1.28,0.83l1.44,0.41l0.03,0.97l1.52,1.03l0.49,13.03l-0.26,2.66l-1.42,0.34l-0.31,-0.79l-0.71,-0.39l-3.95,-0.65l-0.57,0.16l-0.15,-0.37l-0.92,-0.24l-1.62,0.14l-0.37,0.6l-1.79,0.33l-2.01,-0.48l-3.57,2.3l-0.57,0.81l-0.07,0.98l-0.83,0.53l-0.21,0.7l0.26,2.63l0.76,1.39l-2.05,1.82l-1.8,2.46l-1.51,2.81l-1.66,1.67l-1.79,2.49l-0.15,0.98l-1.21,1.73l-0.77,3.4l0.09,0.95l0.61,1.22l3.32,3.21l1.25,0.55l2.2,0.29l-1.72,0.32l-1.86,-0.59l-2.21,-0.03l-1.0,0.68l-2.02,0.14l-2.57,0.91l-1.52,0.99l-1.66,0.14l-1.25,1.21l-5.65,0.86l-2.39,1.3l-4.3,3.53l-1.8,2.81l-0.65,3.87l0.32,0.48l-1.12,2.25l-0.31,0.0l-0.34,0.62l0.79,1.81l-0.42,3.13l-1.41,1.59l-0.66,2.01l-1.71,0.61l-5.96,3.6l-1.22,1.49l-5.3,1.31l-1.05,0.76l-0.09,0.97l-1.21,0.15l-1.8,-0.34l-4.2,-1.29l-0.71,-0.71l-1.86,-0.93l-2.94,-2.68l1.1,-0.45l0.27,-1.46l1.29,-1.9l-0.16,-1.64l1.05,-0.34l1.18,-1.84l-0.4,-1.16l-2.42,-2.44l-0.23,-1.72l1.65,-2.45l0.62,-2.26l-0.4,-0.73l-1.24,-0.88l-1.07,-2.96l1.19,-0.85l0.75,-1.07l2.53,-7.34l0.84,-1.38l0.92,-2.56l1.1,-1.19l-0.19,-1.38l-1.73,-2.54l-1.26,-0.19l-1.8,0.71l-1.71,-0.93l1.56,-5.5l-0.33,-2.9l1.03,-2.56l-1.11,-3.46l1.54,-3.34l0.06,-1.34l-0.72,-0.72l-0.37,-1.59l-0.96,-1.63l-0.72,-0.66l-1.08,0.13l-2.94,1.32l-3.15,2.41l-1.14,-0.38l-2.36,-2.12l-0.06,-1.8l-0.9,-1.93l0.55,-3.53l-0.17,-2.56l1.09,-0.6l0.57,-0.74l0.43,-3.33l-0.23,-0.65l-0.94,-0.6l-0.87,-1.77l-3.86,-1.64l-0.66,-0.88l-0.13,-0.87l0.37,-1.13l1.9,0.19l0.65,-0.91l-0.74,-0.92l-0.83,-2.15l-0.87,-0.98l0.45,-1.93l-0.71,-0.36l-1.63,0.94l-2.99,0.25l-1.41,-0.46l-1.27,0.3l0.6,-1.1l2.2,-1.72l0.28,-0.77l-0.18,-0.49l-0.71,-0.39l-1.01,-1.28l-1.19,-0.47l-1.21,-0.95l-4.71,-1.32l-0.24,-0.32ZM341.41,854.52l0.89,-0.01l1.99,-1.02l0.32,0.12l-0.32,0.93l0.54,1.1l-1.22,-0.66l-2.2,-0.45ZM352.97,822.23l0.25,0.38l-0.78,-0.16l0.52,-0.21ZM353.99,822.77l0.71,0.09l0.49,0.17l-1.19,-0.25Z",
      name: "Tamil Nadu",
    },
    "IN-AN": {
      path: "M786.03,923.93l0.01,-2.47l0.71,-1.66l1.1,-0.13l0.59,-0.57l1.24,-0.26l1.04,-0.8l0.96,0.7l0.57,1.41l0.32,2.29l1.27,2.41l0.03,1.46l-1.11,2.56l-0.1,1.29l0.41,0.66l-1.31,0.13l-0.67,1.5l0.01,-1.41l-0.81,-0.89l0.05,-0.68l-0.44,-0.46l-0.29,-1.55l-0.7,-0.41l-0.89,-2.01l-1.06,-0.91l-0.92,-0.2ZM785.02,916.8l-0.54,-1.41l0.47,-1.37l1.32,-0.39l0.58,-0.69l0.93,0.88l-0.04,0.59l-2.72,2.39ZM782.63,894.17l0.29,0.95l-0.0,0.53l-1.15,-1.01l0.86,-0.47ZM780.5,891.72l-0.4,-0.52l-0.31,-1.96l1.06,-1.6l0.69,-0.13l0.06,0.48l-0.79,1.64l0.65,1.74l-0.29,-0.16l-0.66,0.5ZM781.79,892.53l-0.6,0.48l-0.41,0.67l-0.01,-0.52l1.02,-0.63ZM777.4,894.02l0.09,1.05l1.22,0.8l0.7,1.14l-0.03,0.45l-0.93,-0.4l-1.7,0.32l-0.12,-1.23l-1.17,-0.29l0.37,-1.49l1.57,-0.36ZM770.19,887.29l-1.18,-0.38l-0.98,-1.26l-0.11,-1.42l0.4,-0.73l0.16,2.27l0.42,0.72l1.29,0.81ZM768.4,766.2l-0.53,-0.93l0.37,-1.58l0.2,0.17l-0.27,1.01l0.23,1.33ZM751.49,774.12l0.88,-1.81l1.07,1.76l0.79,-0.06l0.11,-0.27l0.28,-2.36l-0.24,-1.3l0.63,-1.54l-0.05,-3.07l0.91,-2.0l0.45,0.12l0.42,-0.38l-0.13,0.98l0.73,0.48l1.83,-0.55l0.47,-0.81l-0.31,-1.49l-0.55,-0.41l0.77,-0.26l0.05,-0.92l-0.62,-0.6l-1.27,-0.21l-0.37,-1.1l0.12,-7.3l0.85,-1.29l0.61,-0.06l0.41,-0.65l-0.14,-0.45l-0.94,-0.64l-0.3,-3.47l0.61,-0.75l0.78,-0.04l0.52,-0.68l0.41,-1.58l0.01,-1.58l0.64,-1.33l-0.17,-0.58l-0.62,-0.37l0.62,-2.2l0.77,-1.37l-0.52,-0.97l0.18,-1.42l0.66,-0.54l-0.55,-3.24l1.34,-1.74l0.16,-1.78l1.42,-1.61l0.17,-1.04l1.5,0.01l0.36,-0.57l0.61,-0.13l0.39,0.69l-0.32,1.01l0.14,3.07l0.36,0.22l-0.97,1.23l-0.37,0.19l-0.32,-0.4l-0.65,-0.09l-0.59,0.8l0.51,1.08l1.25,0.22l1.33,1.3l-0.64,1.07l-0.13,2.9l-0.46,2.09l-0.32,0.53l-0.73,-0.2l-0.43,0.42l0.01,-1.38l-0.39,-0.32l-1.19,0.78l-0.29,1.52l0.64,1.07l-0.98,-0.16l-0.37,0.28l-0.91,2.21l0.36,0.65l0.53,0.22l0.74,-0.35l1.04,1.19l0.14,1.72l-0.24,0.98l0.95,1.63l-0.54,2.9l0.5,1.29l0.04,2.05l-1.01,1.21l0.24,0.65l-0.74,0.57l-0.86,-0.65l-0.46,0.06l-0.03,0.59l-1.15,-0.04l-0.43,0.4l0.65,1.8l1.06,0.71l0.12,0.47l-0.83,0.84l0.68,1.2l-0.59,0.69l0.3,1.14l-1.88,2.04l0.04,0.7l-0.77,0.79l-1.34,0.41l-0.13,0.54l0.54,0.76l-1.11,1.91l-0.1,3.33l0.4,0.4l0.63,-0.35l0.24,-1.5l0.24,-0.04l0.31,0.28l0.02,1.58l-1.11,4.78l-1.06,0.35l-1.07,1.13l-0.28,0.88l0.14,1.02l1.12,0.1l0.35,-0.4l0.06,-0.84l0.63,-0.36l0.09,-0.39l0.16,1.37l-0.54,0.66l-0.51,2.56l-1.5,-1.08l-0.07,-0.68l-0.92,-0.79l-0.1,-0.4l0.72,-0.38l0.02,-0.66l-0.9,-0.46l-0.4,-1.88l-0.33,-0.31l-0.95,-0.05l0.1,-3.11l-1.16,-0.79ZM766.4,766.0l0.11,0.62l0.39,0.73l-0.4,-0.42l-0.1,-0.93ZM766.14,717.57l0.26,-0.08l0.11,0.23l-0.14,-0.04l-0.24,-0.1ZM764.5,769.92l0.71,-0.98l0.67,-0.02l1.15,3.22l-0.42,-0.93l-2.11,-1.29ZM758.46,855.43l1.65,1.52l-0.05,1.49l-0.73,0.79l-1.73,-0.53l-0.46,-1.12l-0.04,-0.78l0.91,-0.49l0.44,-0.89ZM756.86,735.74l-0.0,-0.0l0.0,0.0l-0.0,0.0ZM756.0,743.21l0.29,-3.46l0.53,-0.59l0.3,0.45l-0.2,2.01l-0.92,1.58ZM754.65,789.3l-1.08,-0.41l0.1,-0.42l0.79,-0.21l0.37,-0.63l-0.25,-1.63l0.26,-0.56l1.0,1.26l-0.55,1.24l0.54,0.89l-1.17,0.46ZM746.83,808.06l1.1,-0.64l0.47,-1.64l1.46,-0.96l1.09,-0.24l0.89,1.13l0.95,5.03l-1.65,1.72l-0.03,1.18l0.75,0.47l-1.33,1.68l-0.74,-0.18l-1.27,-0.94l-0.69,-0.03l-0.86,0.53l0.62,-0.89l0.47,-1.76l-0.28,-0.78l-0.88,-0.81l-0.09,-2.85ZM751.89,783.09l0.03,-0.27l0.15,0.08l-0.18,0.2ZM742.26,782.71l0.82,0.26l-0.03,0.97l-0.62,-0.14l-0.17,-1.09Z",
      name: "Andaman and Nicobar",
    },
    "IN-AP": {
      path: "M264.69,675.87l0.59,-0.76l0.07,-1.39l0.36,-0.6l2.8,1.59l2.62,0.61l1.43,-0.37l0.97,0.82l0.73,-0.01l1.54,-1.37l1.31,-2.8l0.15,-1.56l-0.84,-4.18l-0.77,-0.9l-1.69,-0.61l-0.35,-2.03l-1.24,-2.4l0.68,0.17l0.39,-0.54l-0.25,-3.31l0.26,-0.71l0.58,-0.39l1.35,0.21l0.43,-0.69l-1.06,-2.44l-0.71,-0.66l0.22,-3.36l1.07,-1.31l2.59,-1.37l1.85,-0.28l2.42,0.6l4.32,0.13l1.56,-1.78l-0.11,-5.3l0.29,-2.68l1.74,-1.65l0.23,-0.94l-0.19,-0.53l-0.65,-0.77l-1.33,-0.57l-3.05,-0.09l-2.95,-0.77l-0.81,-0.99l3.28,-2.1l0.59,-1.33l1.2,-0.69l0.63,-1.85l-0.17,-0.57l-0.53,-0.26l0.62,-0.61l0.01,-0.5l-1.05,-1.21l0.15,-1.25l0.6,-1.07l0.04,-4.5l0.99,-2.39l-1.06,-2.3l-0.29,-1.52l-1.7,-0.89l0.14,-1.28l3.71,-4.76l0.84,-1.7l1.36,-0.46l0.8,-1.28l1.71,-0.45l1.19,-2.36l-0.1,-0.48l-0.75,-0.34l-2.14,0.93l-0.19,-0.69l-0.45,-0.3l-2.59,0.04l-2.16,-1.31l1.48,-2.39l1.78,-0.93l0.36,-0.49l-0.05,-1.04l-0.88,-1.04l0.17,-0.39l3.37,-2.8l0.33,-0.72l-0.5,-2.65l-1.6,-2.0l1.29,-0.9l-0.29,-2.04l-0.67,-1.77l0.45,-1.86l-0.92,-0.71l0.14,-0.69l-0.41,-0.76l-1.22,-0.85l1.13,-1.1l0.45,-2.51l1.0,-1.27l2.52,-0.58l0.7,-0.58l0.49,-1.38l0.0,-1.97l0.53,-0.34l1.61,-0.16l1.72,-3.28l2.15,-0.78l0.23,-0.36l-0.34,-1.09l-1.84,-1.47l-0.22,-1.32l-0.91,-0.24l-0.46,-1.07l-0.79,-0.01l-0.36,-1.59l2.55,-2.32l-0.08,-1.17l0.67,-2.12l1.1,-1.47l-0.09,-0.62l-0.52,-0.3l1.17,-0.67l1.93,0.21l0.99,1.37l0.94,0.51l3.82,0.06l0.7,-0.84l-0.2,-2.94l1.1,-2.01l0.66,-0.49l1.6,-0.35l0.53,-0.52l0.29,-3.48l0.9,-2.06l1.51,-1.08l0.48,-1.2l-0.25,-0.8l-1.04,-0.7l-1.01,-2.43l-0.11,-1.01l1.12,0.56l0.9,1.36l2.14,0.86l1.88,-0.79l1.03,0.35l1.4,-0.06l2.99,1.32l2.05,-0.07l1.73,1.25l1.07,2.89l1.36,0.62l0.25,0.68l1.79,1.04l1.99,-0.29l0.95,-1.2l1.14,-0.51l2.17,-0.33l0.97,0.36l0.92,1.25l3.18,0.53l1.67,1.34l4.21,0.15l0.63,0.59l0.8,0.23l0.8,-0.43l0.38,-1.24l0.6,-0.33l2.94,-1.04l1.61,0.26l2.07,2.63l1.96,0.76l0.99,1.71l-0.24,3.47l-0.86,1.68l0.37,2.75l-1.36,0.99l-1.06,2.07l0.34,1.38l2.14,0.09l0.69,3.21l-0.02,1.49l-0.09,0.45l-1.23,1.17l-0.02,0.58l2.7,1.38l1.76,1.5l0.97,1.3l2.69,0.3l2.3,-0.25l1.3,-0.53l0.65,2.12l1.01,1.62l0.57,0.07l0.54,-0.54l0.85,0.72l2.42,-0.54l2.78,1.95l3.43,4.07l2.24,4.82l0.1,0.39l-1.3,0.98l0.21,1.46l0.85,0.41l1.52,-0.16l0.8,-1.46l0.32,0.3l0.19,1.39l0.64,0.71l2.5,-0.43l-0.56,1.11l-0.13,1.27l1.26,3.31l0.2,3.88l0.99,1.96l0.73,0.43l0.68,-0.01l3.28,-1.92l2.72,1.08l4.53,-0.1l2.71,0.61l0.54,-0.36l0.41,-0.86l2.25,0.87l2.32,-1.68l1.53,-0.34l1.16,-1.21l2.62,-1.27l2.95,-1.92l2.16,-0.31l1.52,-1.07l1.35,-0.19l1.09,0.31l1.49,1.22l2.48,0.09l0.83,-1.36l1.55,-0.1l0.49,-0.61l-0.17,-1.85l0.74,-0.51l0.17,-0.52l-1.52,-1.91l1.52,-2.75l-0.28,-1.1l0.48,-1.33l0.06,-1.57l1.95,-3.0l1.51,0.29l0.18,2.62l2.61,2.97l-0.52,1.6l0.12,0.91l0.46,0.47l1.33,0.37l0.44,0.03l0.56,-0.48l0.51,-1.52l3.2,-1.82l0.51,-1.01l0.02,-1.54l0.74,0.0l1.56,0.66l0.07,1.24l0.76,0.46l1.63,-0.08l1.47,-0.67l0.98,-0.1l0.56,-0.58l0.14,-0.85l-0.35,-1.36l1.58,-2.2l-0.21,-0.73l-1.06,-0.17l-0.66,-1.2l0.16,-1.29l2.94,-3.66l0.7,-0.12l0.81,0.62l0.73,0.08l1.77,-0.8l2.21,-1.8l1.98,-1.03l0.06,-1.12l-0.63,-0.87l-0.79,-0.25l-1.37,-2.23l0.86,-0.26l3.12,1.32l0.82,-0.81l-0.07,-0.7l0.43,-0.9l-0.25,-0.94l0.63,1.68l0.95,0.15l0.99,-1.63l1.13,-0.74l0.49,-1.38l2.55,3.51l0.75,2.17l0.48,0.59l0.48,0.05l0.47,-0.47l-0.04,-1.94l0.98,0.08l1.57,4.35l1.49,1.81l3.28,0.09l2.2,-0.35l2.93,1.04l5.54,-1.07l1.09,-1.13l0.62,-1.56l0.98,-0.06l1.31,-1.51l0.42,-1.9l-0.15,-0.67l1.43,-0.02l1.38,-1.1l2.15,-1.02l0.56,0.31l0.53,-0.11l0.65,-0.92l-0.09,-1.22l0.85,-0.03l-0.54,1.48l0.68,1.11l0.49,0.03l-0.47,1.04l-2.23,3.0l-1.15,0.57l-2.77,4.48l-2.82,2.96l-0.73,1.38l-1.6,1.1l-1.15,1.5l-1.5,0.86l-1.27,0.17l-0.2,0.99l0.68,0.39l-3.6,3.35l-1.01,2.48l-0.96,0.74l-9.31,4.2l-5.02,3.04l-1.05,0.92l-0.79,1.44l-2.3,1.96l-0.27,-0.36l-0.72,0.17l0.02,1.59l-0.64,0.52l-0.41,1.5l-2.25,2.68l-1.09,0.75l-0.71,-0.8l-1.21,0.21l0.09,1.05l1.36,0.64l-1.18,0.69l-0.95,-0.02l-0.33,0.64l0.63,0.87l-4.38,1.88l-5.68,3.7l-0.6,-0.27l-1.36,0.9l-3.72,1.43l-7.5,4.53l-1.63,2.1l-1.66,1.0l-2.23,2.57l-1.51,3.41l0.08,1.5l0.46,0.72l1.58,0.79l1.39,-0.02l-0.85,4.85l-0.72,1.56l-0.34,-0.21l-0.64,0.36l0.4,1.35l-1.04,0.36l-1.68,1.64l-3.44,1.81l-1.69,0.26l-1.26,1.15l-1.04,0.04l-0.51,0.6l-2.47,0.43l-3.09,1.68l-1.37,0.3l-1.56,-0.75l-2.35,-0.2l-0.15,-0.58l-0.72,-0.39l-0.52,-0.02l-0.33,0.68l-1.09,-0.27l-1.67,0.39l-0.14,-0.58l-0.74,-0.5l-1.17,0.41l-1.79,0.07l-1.92,1.15l-0.53,0.79l0.21,1.29l-0.76,0.97l-2.28,6.46l-0.11,1.95l-3.74,2.84l-0.92,1.13l-0.06,0.8l0.57,1.13l-2.57,-2.06l0.0,-4.01l-0.39,-1.55l-0.36,-0.29l-0.5,0.52l-0.41,-0.01l-0.14,0.47l0.47,1.18l-0.03,2.41l-1.75,4.39l-0.16,-2.66l-0.88,-1.48l-0.76,-0.46l-2.81,-0.47l-0.67,0.59l-1.07,0.05l-1.2,0.52l-0.67,-0.32l-3.79,2.32l-1.37,0.39l-3.56,3.09l-2.52,5.95l0.09,0.92l-2.32,3.04l-1.15,2.69l-0.28,3.27l-0.91,3.59l0.05,2.53l1.66,9.47l0.36,0.68l1.24,1.01l0.53,1.67l-0.88,0.68l-0.09,0.67l0.52,0.29l0.92,-0.16l-0.53,2.8l-0.02,3.74l-1.28,2.53l-1.34,0.32l-1.03,0.97l-0.28,0.8l0.6,0.58l0.7,-0.18l1.35,-1.13l-0.31,1.02l0.08,1.41l0.74,3.85l3.06,7.11l-0.1,1.25l-0.75,1.85l0.88,2.52l-2.65,-3.71l-0.68,0.29l-0.0,1.53l-1.2,-0.83l-0.32,1.26l-1.21,1.55l0.16,0.9l1.44,1.97l-1.28,-0.67l-0.81,0.14l-0.23,0.82l0.76,0.9l-1.54,0.67l-0.98,0.96l-0.37,0.8l-0.0,1.1l-4.14,2.13l-1.51,-0.11l-0.43,0.24l-0.2,1.13l0.99,1.03l-1.6,-0.04l-0.56,-0.31l-0.13,-1.26l-0.58,-0.5l-2.98,0.35l-1.45,-1.63l-2.26,-0.23l-1.14,0.77l-0.55,3.0l-1.21,0.66l-1.92,2.04l-0.89,-0.53l-1.16,0.1l-2.64,3.15l-2.32,0.28l-1.86,-0.57l-0.43,-0.86l-1.41,-0.39l-1.2,0.29l-0.34,1.11l-0.43,0.35l-0.49,-0.96l-0.74,-0.38l-4.19,0.72l-0.84,1.11l-1.18,0.3l-0.67,0.81l-1.1,4.55l-0.94,2.36l-1.21,0.96l-0.58,-0.31l-0.63,0.22l-0.3,1.75l-1.22,1.28l-1.26,0.29l-1.25,-0.27l-2.28,-1.65l-1.18,-1.67l0.49,-1.04l-0.22,-1.64l1.12,0.41l1.29,-0.57l0.58,-0.55l0.25,-1.16l2.34,1.53l1.22,-0.06l0.18,-0.61l-0.23,-0.64l-0.55,-0.73l-0.93,-0.53l1.23,-1.78l0.45,-1.4l1.33,-1.04l0.36,-1.9l1.04,-1.54l0.39,-2.6l-0.23,-1.04l-0.44,-0.45l-1.33,0.66l-1.64,-1.13l-1.52,-0.39l-0.68,0.28l-0.85,-1.4l0.29,-1.11l0.25,-5.76l-2.41,-0.54l-1.07,0.43l-1.06,-0.1l-1.4,-0.36l-1.79,-1.79l-1.64,0.09l-0.25,-0.55l1.04,0.02l0.45,-0.71l-0.69,-1.44l0.46,-1.37l-0.59,-2.04l-2.02,-1.06l-0.89,0.52l-1.23,-0.07l-0.99,0.93l-0.07,-0.92l0.96,-1.22l-0.02,-1.23l-0.48,-0.53l-1.02,0.4l-0.82,1.05l-0.97,-0.53l-1.68,-0.25l-0.5,0.21l-0.53,0.99l0.57,1.25l-1.57,1.32l-1.31,0.57l-0.59,1.23l-0.75,-0.55l-1.23,0.19l-0.52,0.4l-0.14,0.76l-1.03,0.09l-1.67,1.05l-1.15,0.02l-0.52,-2.73l-1.41,-1.75l-2.98,-0.12l-1.04,-0.57l-1.02,-0.01l-0.97,-0.78l-0.94,0.37l-0.52,-0.92l-0.7,0.21l-0.38,1.14l-0.84,0.61l0.15,0.54l0.66,0.48l0.16,1.57l-1.79,-0.15l-0.65,0.76l-1.27,-1.08l-0.39,0.07l-0.3,0.59l-0.17,-1.78l1.47,-2.02l0.17,-0.7l-2.33,-3.22l0.13,-1.79l-2.1,-2.47l1.13,-0.73l1.21,0.58l0.81,3.14l2.72,1.07l0.99,0.93l2.32,-0.02l1.96,-0.48l1.11,0.29l1.12,2.0l0.1,1.09l2.11,0.75l0.59,-0.3l0.14,-0.59l-0.49,-1.0l0.03,-1.08l-0.98,-0.86l-0.78,-1.6l0.98,-1.6l-0.1,-0.47l-0.56,-0.36l0.9,-0.86l2.24,-0.25l0.65,-0.42l0.16,-0.69l-0.4,-1.48l0.3,-1.18l-0.34,-0.55l-1.16,-0.23l-0.64,-0.92l-1.06,-0.27l-0.62,0.36l-0.25,0.64l0.8,2.01l-1.15,-1.29l-1.73,-0.59l-0.11,-0.7l-0.49,-0.42l-2.21,0.23l-1.61,-0.55l-0.95,0.55l-0.84,1.16l-0.27,1.81l-4.51,-0.75l0.44,-1.18l-1.73,-1.24l-0.23,-1.08l0.27,-0.48l1.22,-0.27l0.76,-1.39l-0.09,-0.76l-0.92,-0.84l-1.56,-0.07l-0.81,0.33l-1.0,-1.83l-1.09,-0.58l-0.47,-1.96l0.82,-2.71l-0.07,-1.53l0.79,-0.32l0.34,-0.53l0.68,-4.44l-0.77,-0.97l-2.24,-0.88ZM433.84,620.88l0.17,-0.38l-0.47,-0.55l-1.43,0.9l-0.23,0.47l0.64,0.66l2.25,0.65l0.99,-0.27l0.73,-1.0l-0.06,-0.69l-0.49,-0.46l-0.91,0.66l-1.19,0.01ZM368.9,723.15l3.01,0.37l0.36,0.27l-3.63,-0.13l0.26,-0.51ZM392.61,649.39l1.24,0.72l1.36,1.23l-0.92,0.46l-0.54,-0.32l-1.33,-1.56l0.2,-0.53Z",
      name: "Andhra Pradesh",
    },
    "IN-TR": {
      path: "M717.67,412.64l-0.65,-0.93l-0.85,-0.54l-0.68,0.03l-0.65,0.63l-0.23,2.44l0.57,2.74l-0.06,0.54l-0.45,-0.12l-0.61,-0.81l-0.37,-1.24l-1.03,-5.9l0.59,-1.13l-0.93,-0.66l-0.88,-2.95l-1.06,-0.99l-1.73,-4.15l0.05,-0.4l0.82,-0.19l0.29,-0.86l-0.43,-0.72l-0.77,-0.33l-0.07,-0.39l0.16,-0.36l1.69,-0.62l0.97,-2.38l-0.28,-2.65l1.62,-2.42l1.36,0.06l0.65,-0.3l0.79,-3.37l4.46,0.5l2.13,-0.37l1.01,-1.0l0.52,-2.43l0.74,1.43l1.5,0.46l1.08,-0.84l-0.14,-2.07l1.8,0.37l0.24,1.14l1.12,1.01l0.62,0.15l0.7,-0.29l1.07,-3.6l-0.23,-2.31l1.73,0.78l0.54,-0.4l-0.61,-1.47l3.03,0.1l1.08,-0.51l0.67,-0.99l0.07,-3.38l0.92,-0.64l2.0,1.31l0.19,1.75l0.72,1.63l-0.16,1.4l-1.03,2.69l0.62,0.74l1.84,0.3l0.73,1.3l0.1,2.73l-0.33,2.19l0.42,1.35l-0.55,1.87l0.21,2.41l-0.73,0.03l-0.79,1.0l-0.32,1.9l0.2,1.67l-0.69,-0.15l-0.51,0.3l-0.6,1.69l-0.45,-1.43l-0.61,-0.91l-0.46,-0.16l-1.47,0.55l-1.5,1.91l-0.91,0.48l-2.28,-2.56l-1.1,0.12l-0.24,2.55l0.81,3.79l-0.04,1.12l-0.97,1.4l-2.69,1.48l-1.81,2.75l-0.6,1.79l1.57,5.86l-1.05,0.63l-0.6,1.26l-0.91,0.89l-1.59,0.51l-1.08,-0.01l-0.53,0.84l-0.37,-0.53l-1.18,-0.4l-0.36,-0.51l-0.1,-1.09l-0.43,-0.32l-1.19,-4.38l-0.54,-0.55l-0.07,-0.63l-0.43,-0.22Z",
      name: "Tripura",
    },
    "IN-AR": {
      path: "M727.36,274.74l-0.62,-1.27l-2.25,-0.75l-1.77,-2.04l-0.63,-2.3l0.17,-1.09l1.38,-1.87l0.22,-1.28l3.95,-0.13l2.71,1.1l3.56,0.14l1.39,-0.61l1.72,-1.71l1.01,-0.5l3.83,-0.02l0.37,-0.53l-0.09,-1.07l1.06,2.04l0.62,0.37l0.5,-0.13l0.54,-0.87l0.59,0.49l0.55,-0.04l0.85,-1.64l0.39,0.72l0.65,0.34l3.1,-1.35l1.28,-1.18l1.97,-0.69l1.9,-1.8l0.51,-2.58l-0.5,-0.64l-1.47,-0.43l1.15,-1.82l2.62,-1.84l1.03,0.45l1.55,-0.52l1.69,-1.95l1.76,-0.71l1.24,-1.28l2.81,-1.91l1.46,-2.07l0.6,-2.32l1.84,-1.44l6.87,-4.3l3.12,-0.23l2.29,0.22l1.58,-0.99l0.71,0.3l0.81,-0.14l2.24,-1.87l3.52,-1.53l0.33,-1.17l1.78,-0.1l1.59,-0.97l3.25,-1.09l1.23,-1.08l2.5,-0.23l2.96,-3.02l0.01,-0.58l-2.19,-2.29l0.36,-1.16l1.48,-0.19l1.11,-1.53l0.6,-0.3l2.38,-0.12l1.39,-0.42l2.54,-3.14l0.72,-0.07l2.06,1.06l1.8,2.16l-0.17,1.17l0.66,0.67l2.54,-0.06l4.07,1.52l0.43,-0.15l-0.23,-0.8l1.58,0.39l2.15,1.1l2.51,0.45l0.72,1.13l1.93,0.3l0.45,-0.44l-0.2,-1.79l0.72,-0.57l1.81,-0.09l1.12,0.28l0.48,-0.28l0.36,-1.24l0.67,1.6l2.25,-0.39l0.22,-1.1l-0.31,-1.27l1.15,-0.39l0.21,-0.82l0.66,-0.09l1.65,0.69l2.17,0.34l0.42,-0.22l0.93,-1.86l-0.03,-2.09l1.15,-0.32l2.24,0.9l2.73,-1.16l5.47,-0.31l0.94,2.55l1.97,1.67l1.4,-0.02l2.08,-1.11l0.36,0.57l-1.13,2.01l-3.49,1.07l-0.63,0.41l-0.65,1.26l0.64,2.74l0.61,0.25l2.59,-1.66l1.71,-0.53l0.58,1.89l2.46,1.23l0.08,0.91l1.18,0.7l0.56,2.05l2.02,2.58l0.6,2.92l-2.74,2.04l-2.04,1.1l-0.15,0.56l0.83,1.34l-1.06,1.29l0.04,0.55l1.03,0.95l0.99,2.16l0.53,0.2l0.76,-0.58l0.45,-3.4l0.84,-1.52l1.46,-0.72l2.38,0.61l2.09,2.27l2.2,1.38l1.28,1.55l0.59,2.63l2.37,0.85l3.42,-1.46l0.92,0.23l2.0,1.66l0.8,0.21l0.66,1.15l2.77,1.85l0.1,0.6l-0.87,1.91l-0.18,1.48l0.49,0.95l1.42,1.47l0.17,0.72l-0.79,1.9l0.03,1.18l-0.7,0.34l-0.46,-0.84l-0.74,-0.19l-1.48,0.51l-2.77,2.73l-2.06,1.44l-0.27,0.83l-2.08,0.81l-1.02,1.26l-2.24,1.7l-0.77,1.39l-0.0,0.98l0.8,2.32l-0.35,1.45l0.18,0.76l6.72,8.57l0.2,1.05l0.81,0.73l-0.34,0.96l-1.06,-0.38l-1.09,0.3l-0.98,-0.87l-4.19,-1.87l-0.52,-0.42l0.5,-1.38l-0.22,-0.64l-1.04,-0.87l-1.45,-1.95l-2.32,-1.06l-1.15,0.12l-0.8,0.69l-2.05,-0.49l-1.22,1.56l-0.94,0.38l-3.16,-0.19l-8.17,1.35l-2.27,0.98l-1.97,1.39l-2.32,3.7l-1.42,1.63l-3.49,1.13l-2.36,3.2l-2.21,0.47l-1.16,1.96l-1.65,0.03l-1.5,0.46l-2.38,3.54l-4.38,1.68l-0.65,-2.41l0.28,-2.02l-1.15,-1.62l0.08,-0.57l0.86,-1.12l0.18,-1.79l-0.4,-1.17l-1.3,-0.89l0.03,-0.74l2.24,-0.17l3.03,-2.24l2.08,-0.89l1.32,-1.31l0.89,-2.35l1.07,-0.6l3.2,1.39l4.93,-1.84l2.11,-0.03l1.11,0.35l0.89,-1.03l1.04,-0.45l0.4,-0.9l1.19,-0.94l0.02,-1.73l-1.11,-1.43l-1.54,0.04l-1.04,1.08l-0.29,-1.15l0.49,-1.32l-0.31,-2.08l-0.56,-0.76l-2.03,-1.4l-0.74,-3.0l4.9,-6.49l1.13,-2.28l-0.47,-0.76l-7.92,0.07l-1.46,0.45l-3.93,2.51l-4.03,1.0l-1.16,-0.06l-2.12,-0.75l-1.82,1.0l-9.17,3.2l-4.61,2.27l-4.21,1.1l-4.11,2.12l-1.45,0.25l-0.95,-0.65l-2.82,0.73l-1.84,-0.68l-0.97,-1.0l-0.65,-0.12l-0.98,0.82l-0.31,0.87l1.19,1.68l-0.16,0.82l-7.98,6.54l-4.22,4.3l-0.72,1.32l0.11,2.07l-3.97,2.93l-1.86,0.72l-3.28,0.5l-1.4,0.62l-0.37,0.04l-1.8,-1.22l-0.99,-0.14l-10.87,1.18l-1.55,-0.38l-0.87,-1.17l-3.78,-1.66l-3.69,-0.53l-0.9,0.25l-2.12,1.63l-8.52,2.44l-1.58,0.13l-1.99,0.63l-3.48,-0.28l-1.08,-3.29l-1.55,-1.52l-0.32,-0.92l0.42,-2.0l0.73,-0.89l0.31,-1.23l1.41,-1.35l0.22,-0.83l-2.85,-5.27l-1.16,-0.97l-1.6,0.88l-1.97,0.08l-3.01,0.86Z",
      name: "Arunachal Pradesh",
    },
    "IN-KA": {
      path: "M183.76,654.66l1.17,-1.76l1.58,-1.17l0.11,0.99l0.66,0.4l1.93,-0.14l1.67,-1.1l1.39,-2.47l-0.57,-1.14l2.3,-3.92l0.01,-1.78l-1.37,-0.64l0.65,-0.48l1.42,-0.09l0.56,-0.68l0.21,-3.0l-0.24,-1.26l-0.69,-0.68l-2.69,-1.26l-1.19,0.3l-0.47,-2.4l1.24,-0.28l0.35,-0.84l-1.1,-0.79l-0.36,-1.12l-1.04,-0.15l-0.39,-1.08l-0.95,0.09l0.31,-0.89l0.87,0.52l0.75,-0.34l0.34,-0.8l0.72,0.63l0.63,-0.14l1.85,-1.63l0.52,-1.51l2.28,0.61l0.64,1.97l0.55,0.41l0.87,-0.23l1.48,-1.21l1.3,-0.31l0.44,-0.89l-0.63,-0.9l0.68,-0.64l0.32,-1.0l0.9,-0.17l0.61,-0.68l1.67,-0.79l2.05,0.17l0.41,-0.88l-0.66,-2.45l2.16,-0.78l0.95,-0.97l0.35,-1.04l0.96,0.29l1.32,-0.24l0.43,0.85l1.57,1.28l1.74,0.56l2.56,-1.13l0.32,-1.76l2.11,-0.15l1.37,-0.65l1.59,-0.01l0.78,0.64l0.73,0.05l1.58,-0.66l0.84,-0.95l1.47,1.12l1.13,-0.06l0.56,-1.31l-0.58,-1.4l0.66,-0.66l0.08,-0.53l-1.28,-2.2l0.49,-2.65l-0.42,-1.11l-0.82,-0.58l-0.88,-2.78l0.83,-0.73l1.1,-1.81l0.67,0.2l0.76,1.43l1.88,0.29l1.02,1.25l0.74,0.0l1.18,-1.12l0.68,0.28l0.52,-0.31l0.52,1.7l1.37,1.03l2.4,-0.79l1.12,0.08l2.15,-1.02l1.3,0.35l1.64,-0.57l1.62,0.97l2.17,0.25l0.88,-0.29l0.98,-1.09l-0.17,-0.54l-0.94,-0.76l-0.84,-1.71l0.71,-1.31l-0.11,-1.65l-0.73,-1.08l2.27,-0.76l0.96,-1.31l1.3,-0.71l0.19,-1.02l0.84,-0.4l0.57,-0.91l0.9,0.33l1.1,-0.13l2.11,1.92l0.94,-0.21l0.83,-2.54l1.63,-1.28l-0.43,-2.03l2.59,0.52l1.11,-0.85l0.65,-1.76l0.44,-6.2l1.3,-0.6l1.67,0.06l2.75,-0.68l0.94,-1.82l3.43,-2.24l0.12,-2.6l0.97,-1.48l0.81,-0.16l0.82,0.6l0.26,2.57l2.49,1.24l0.14,0.8l0.46,0.46l1.07,-0.06l1.25,-0.96l1.87,0.57l-0.46,1.64l0.98,3.56l-0.97,0.35l-0.34,0.81l0.3,0.72l1.16,1.08l0.66,2.67l-1.93,2.03l-1.65,1.2l-0.31,0.97l0.86,1.02l0.13,0.63l-2.0,1.18l-1.66,3.11l0.54,0.74l2.14,1.1l2.63,0.05l0.62,0.92l2.4,-0.87l-0.85,1.7l-1.86,0.54l-0.68,1.22l-1.41,0.5l-0.93,1.81l-3.8,4.92l-0.3,1.05l0.18,0.89l1.75,0.99l0.21,1.34l1.01,2.06l-0.98,2.22l-0.04,4.51l-0.57,0.94l-0.19,1.47l0.2,0.87l0.84,0.59l-0.7,0.62l-0.29,0.74l0.33,0.43l0.72,-0.12l-0.46,1.4l-1.11,0.6l-0.57,1.31l-3.6,2.5l0.04,0.43l1.33,1.5l3.15,0.82l2.99,0.08l1.46,0.98l-0.05,0.65l-1.49,1.1l-0.35,0.85l-0.3,2.77l0.14,5.08l-0.92,1.2l-4.11,-0.1l-2.41,-0.6l-2.16,0.31l-2.83,1.49l-1.33,1.59l-0.27,3.92l0.26,0.61l0.54,0.3l0.92,1.92l-1.1,-0.21l-1.05,0.68l-0.44,1.23l0.31,2.89l-0.61,-0.36l-0.47,0.14l-0.26,0.54l1.49,3.11l0.45,2.23l2.35,1.26l0.79,5.01l-1.29,2.89l-1.27,1.08l-0.98,-0.83l-1.9,0.28l-2.26,-0.55l-2.7,-1.55l-0.83,0.05l-0.64,1.13l-0.05,1.31l-0.76,1.17l0.34,0.49l2.58,1.0l0.24,0.53l-0.67,3.87l-0.92,0.48l-0.24,0.51l0.09,1.46l-0.65,1.58l-0.11,1.87l0.53,1.82l1.15,0.65l1.13,1.95l2.75,-0.11l0.28,0.38l-0.58,1.33l-0.75,-0.03l-0.6,0.43l-0.33,1.18l0.67,1.5l1.34,0.7l-0.5,1.06l0.38,0.63l5.22,0.79l0.57,-0.66l0.04,-1.35l1.22,-1.48l1.49,0.54l2.05,-0.25l0.35,0.98l1.75,0.6l0.81,1.07l0.71,0.37l0.61,-0.09l0.42,-0.71l-0.87,-2.14l0.63,0.06l0.57,0.9l1.2,0.25l-0.29,1.29l0.4,1.46l-2.57,0.43l-1.69,1.64l0.17,0.52l0.77,0.22l-0.9,1.3l-0.01,0.61l0.89,1.82l0.88,0.68l-0.09,0.84l0.46,1.04l-1.36,-0.46l-0.12,-1.15l-1.33,-2.11l-1.58,-0.4l-2.02,0.49l-1.93,0.06l-0.86,-0.87l-2.53,-0.91l-0.68,-2.95l-0.45,-0.49l-1.65,-0.55l-1.55,0.95l-0.26,0.99l2.22,2.42l-0.16,1.73l2.27,3.02l-1.7,2.74l0.13,1.43l0.5,1.1l0.7,0.06l0.45,-0.65l1.18,0.94l0.5,-0.15l0.37,-0.63l1.31,0.24l0.78,-0.26l0.35,-1.0l-0.25,-1.5l-0.54,-0.55l0.64,-0.79l0.65,0.55l0.97,-0.55l0.77,0.74l1.09,0.02l1.04,0.57l2.88,0.1l1.0,1.31l0.76,3.18l1.76,0.02l1.87,-1.1l1.4,-0.17l0.29,-1.09l0.84,-0.13l0.54,0.58l0.75,-0.06l0.7,-1.41l1.23,-0.5l1.78,-1.55l0.13,-0.72l-0.57,-0.89l0.16,-0.39l1.51,0.14l1.31,0.55l0.69,-0.36l0.76,-1.03l-0.06,0.91l-0.96,1.22l0.45,1.84l0.61,0.04l1.08,-1.14l1.08,0.1l0.98,-0.51l1.13,0.68l0.47,1.62l-0.46,1.45l0.68,1.33l-0.98,-0.09l-0.43,0.33l-0.05,0.66l0.46,0.93l0.44,0.26l1.43,-0.19l1.73,1.76l1.63,0.44l1.35,0.11l0.84,-0.42l0.8,0.37l1.06,-0.13l-0.34,1.19l-0.06,3.99l-0.34,1.2l1.1,1.98l0.69,0.23l0.59,-0.29l1.3,0.36l1.75,1.15l1.21,-0.5l-0.05,2.1l-0.32,1.1l-0.91,1.18l-0.34,1.83l-1.24,0.9l-0.54,1.55l-1.32,2.03l0.1,0.59l1.12,0.65l0.48,0.78l-2.19,-1.45l-1.12,-0.16l-0.49,0.39l-0.35,1.35l-1.07,0.42l-1.03,-0.36l-0.62,0.37l0.11,2.05l-0.34,0.59l-2.6,-0.85l-2.48,-1.78l-0.99,-0.1l-1.2,1.37l-2.15,-1.97l-2.37,-0.1l-1.63,0.75l-0.34,1.39l-1.03,1.8l0.24,1.06l-2.02,1.05l-1.7,-0.11l-1.04,0.49l-1.29,3.66l0.38,1.14l-0.1,1.1l1.28,0.34l-0.45,2.16l-2.18,2.84l-1.81,1.11l-0.33,1.06l0.88,1.69l6.59,0.29l1.01,0.65l0.87,1.65l-3.17,4.34l-4.19,0.64l-1.02,0.5l-1.01,1.52l-0.85,2.18l-0.54,0.46l-2.0,0.25l-2.48,-1.04l-1.24,0.45l-2.9,0.22l-0.46,0.31l-0.39,1.08l-1.99,-1.91l-1.21,-0.41l-2.06,0.44l-0.92,0.51l-1.97,3.01l-0.52,2.22l-2.05,-0.47l-5.1,0.34l-0.7,-0.25l-0.01,-1.16l-0.76,-0.99l-1.01,-0.34l-1.28,0.14l-1.47,1.17l-0.23,-1.51l-0.53,-0.66l-2.29,-0.05l-1.56,-1.76l-1.37,-0.01l-1.51,-1.78l-0.98,-0.16l-1.05,0.26l-0.38,-0.58l0.08,-2.01l-0.53,-0.63l-0.84,-0.04l-2.77,1.07l-2.93,-0.54l-1.33,-0.58l-1.09,-1.2l-0.6,-1.99l-1.88,-0.3l-1.33,-0.81l-0.81,0.09l-0.76,-1.06l-2.07,-1.0l-3.42,-3.85l-1.12,-0.12l-0.54,-1.89l-0.87,-1.28l0.04,-0.64l0.75,-0.81l0.05,-0.7l-0.69,-0.48l-1.29,0.25l-1.68,-1.95l0.67,-1.64l-0.28,-0.5l-1.53,-0.38l-1.26,0.46l-0.83,-1.04l-1.18,0.1l-0.21,-1.49l-1.02,-0.68l-0.95,-0.16l-0.98,0.44l-0.22,-0.85l-1.23,-0.36l-0.55,-1.43l-0.97,-0.23l-1.59,0.31l-0.32,-0.91l0.99,-0.81l1.53,-0.55l0.39,-0.51l-0.4,-0.61l-3.41,0.56l-1.36,-5.58l0.26,-1.33l-0.35,-0.37l-0.6,-2.16l-1.04,-5.01l-0.74,-1.48l0.06,-0.6l0.43,-0.2l-0.18,-1.85l-0.72,-1.98l-0.17,-2.91l1.43,-0.43l0.51,-0.72l-0.79,-0.24l-0.74,-1.69l-0.59,-0.04l-0.59,0.82l-1.04,-4.59l-0.98,-2.21l-2.65,-3.83l0.0,-1.22l-0.63,-1.13l-0.24,-2.4l-1.15,-1.8l2.13,0.13l0.18,-0.69l-2.5,-1.07l-0.26,-0.37l-0.08,-1.26l-1.06,-3.28l0.48,0.02l0.27,-0.5l0.73,-0.16l-0.05,-0.45l-1.48,-1.63l-0.14,-0.62l-0.98,-0.84l-0.71,0.54l-0.06,1.03l-0.4,0.04l-0.22,-1.61l1.0,-0.33l0.35,-0.61l-0.72,-0.56l-1.25,0.35l-0.23,-0.18l0.24,-0.61l-0.84,-2.65l-1.14,-0.68l-0.83,0.38l-0.42,-0.63l-0.7,-0.13l-1.41,-0.99l0.54,-0.99l1.17,0.17l0.75,-0.99l1.08,0.02l0.47,-0.37l-0.08,-0.75l-1.37,-0.74l-2.36,1.62l-0.46,-0.72l1.61,-1.08l1.69,-0.19l1.18,-0.91l0.82,-2.53l-0.14,-2.48l0.94,-2.43l-0.25,-0.71l-1.34,-1.11l1.61,-0.57l0.34,-0.87l-0.21,-1.62l-1.2,-1.53l-0.04,-1.34l-0.58,-0.86l0.59,-1.77l-0.66,-3.34l-0.5,-0.59l-1.53,-0.72l-1.74,0.51l-0.43,-0.07l-0.12,-0.46Z",
      name: "Karnataka",
    },
    "IN-PB": {
      path: "M176.07,176.63l0.49,-0.66l0.91,-0.18l0.37,-0.76l0.93,-0.37l1.98,-2.76l1.11,-0.3l0.6,-0.54l0.35,-2.73l1.22,-1.08l1.65,-0.66l0.97,-1.89l2.26,-2.34l-0.1,-1.02l1.19,-0.74l0.5,-1.77l2.56,-0.03l1.17,-1.73l2.45,-0.6l1.36,-1.41l0.49,-1.31l2.35,-1.33l0.12,-0.61l-1.4,-1.16l-2.43,0.02l-0.78,-1.72l0.77,-4.21l2.63,-5.48l-0.15,-0.82l-0.89,-1.3l-0.91,-3.26l-1.88,-3.18l1.28,-1.9l0.42,-1.8l3.6,-2.55l0.85,-1.45l1.71,0.33l1.05,-0.31l1.2,-2.56l1.09,0.37l0.83,-0.6l2.02,-0.13l1.02,-1.1l1.11,-0.02l0.36,-0.49l-0.14,-0.56l1.94,0.66l1.17,-0.5l1.03,0.2l0.93,-1.49l3.2,-0.92l0.63,-2.0l1.01,-1.12l0.35,-0.94l-0.27,-0.94l-1.12,-1.22l1.94,0.13l1.25,-0.69l0.47,1.04l1.62,0.83l0.46,-0.14l2.1,-2.45l1.07,-0.64l2.7,-0.39l1.07,-0.89l0.4,-1.14l1.66,-0.59l1.42,-1.04l1.5,2.65l-3.97,2.7l-1.59,1.66l-3.57,1.31l-0.33,1.08l0.28,1.2l0.7,0.45l0.63,-0.16l-0.52,1.03l-1.81,1.94l-0.05,0.85l0.87,0.49l3.03,0.5l5.38,2.71l2.54,4.11l-1.07,0.21l-0.18,1.25l4.53,8.24l2.34,7.11l1.09,1.36l0.75,0.46l1.42,-0.32l1.34,0.16l0.65,-1.28l0.84,-0.38l-0.02,-1.78l0.92,-0.36l2.27,4.24l0.98,-0.15l0.78,0.72l0.73,-0.2l0.39,0.92l0.53,0.22l0.69,-0.62l0.06,1.28l0.34,0.31l0.96,-0.04l-0.73,1.33l-0.03,1.58l0.68,0.74l-0.51,1.25l0.31,1.59l1.02,1.2l3.79,3.11l1.0,1.7l0.95,0.53l-0.41,1.04l-2.24,-0.16l-1.46,0.74l-0.24,0.82l0.32,0.8l2.49,2.48l2.18,-0.11l0.28,1.06l0.84,0.47l0.29,0.86l-0.26,1.77l0.52,0.95l-0.43,1.01l0.34,3.05l-0.33,0.84l-1.25,-2.16l-2.78,-0.23l-1.08,0.49l-0.44,1.63l0.52,0.73l-2.37,1.72l-3.57,1.91l-0.22,0.62l0.44,0.79l0.82,-0.04l0.76,-0.82l0.42,0.84l0.87,0.45l-0.38,1.5l-2.73,1.89l-1.97,-0.49l-1.02,-2.47l-0.61,-0.47l-0.6,0.06l-0.49,0.47l0.18,1.05l-0.33,0.74l-0.93,-0.81l-0.57,0.13l-0.15,0.98l-0.26,0.08l-1.13,-0.23l-1.27,-0.87l-0.79,0.13l-0.49,1.0l0.9,0.83l-0.46,0.56l0.17,0.85l-0.56,0.83l-0.83,2.76l0.55,1.64l0.95,0.71l-2.16,1.34l-1.95,0.72l-1.28,1.49l-1.16,0.03l-1.39,0.58l-1.91,-0.35l-1.01,-1.8l-1.91,-0.93l-2.34,0.7l-0.72,1.35l-1.13,-0.2l-1.76,0.35l-4.86,-1.45l-3.42,4.21l-0.13,0.69l-0.95,0.4l-0.7,1.35l0.37,1.21l-1.34,0.48l-0.53,-1.63l-0.78,-0.89l0.03,-0.68l-0.47,-0.53l0.89,-0.62l-0.01,-1.11l0.84,-0.15l0.16,-0.58l-1.61,-2.94l-1.18,0.18l-0.57,0.76l-0.91,-0.57l-0.12,-1.21l0.35,-1.46l-0.53,-0.88l-0.81,0.2l-0.42,1.1l-1.94,0.49l-1.47,-1.09l-0.81,-1.4l-2.41,-0.6l-0.88,-0.73l-3.48,0.62l-1.31,0.92l-0.55,0.88l-3.88,-1.1l-4.07,-0.54l-15.05,-0.66l0.36,-1.18l2.21,-3.51l0.25,-1.48l-0.23,-0.77l-0.66,-0.4l-1.19,-3.33l-0.77,-1.0l-1.17,-0.6Z",
      name: "Punjab",
    },
    "IN-ML": {
      path: "M692.14,323.41l0.36,0.99l0.49,0.26l3.48,-1.0l0.19,0.86l0.64,0.35l1.2,-0.63l1.49,-0.23l3.08,0.24l0.52,0.77l0.96,0.42l-0.17,1.66l0.43,0.66l1.1,-0.39l0.55,0.36l0.64,-0.07l2.66,-0.96l0.05,3.31l0.27,0.81l0.85,0.45l1.66,-0.78l2.72,-2.95l3.5,-0.63l1.66,-0.86l0.37,-0.68l-0.38,-0.52l-1.21,0.62l3.21,-4.23l0.7,0.03l0.35,0.35l-0.47,2.0l0.21,0.69l1.52,0.36l1.37,-0.91l0.76,-1.27l0.44,-1.6l1.65,-1.4l0.96,0.24l1.41,1.21l1.05,0.19l3.13,-0.68l1.07,0.06l3.34,-1.03l2.77,0.13l-2.86,2.99l0.12,1.26l1.06,0.72l-1.5,3.63l0.24,1.32l-0.13,2.9l0.69,0.35l1.64,-0.98l2.82,-0.49l1.83,-1.14l2.64,2.02l3.7,3.79l0.62,0.07l1.88,-0.9l-1.34,1.9l-1.55,1.24l-0.1,0.59l1.68,1.57l2.05,0.77l2.62,2.44l0.18,0.48l-0.36,1.54l0.66,1.41l-3.66,1.24l-1.0,1.03l-2.75,0.23l-0.26,0.76l-1.33,0.48l-3.41,3.12l-1.72,-0.99l-0.78,-0.86l-2.26,-0.4l-1.74,-1.46l-1.79,-0.29l-0.79,-0.85l-1.94,-0.58l-2.44,0.38l-1.73,-0.24l-5.25,0.33l-0.64,0.7l-0.94,-0.21l-0.65,0.86l-0.55,0.08l-1.11,-0.13l-1.08,-1.05l-0.72,-0.01l-2.03,0.82l-1.34,-0.09l-4.49,-1.33l-1.65,-0.78l-12.73,1.95l-2.04,-0.82l-0.72,-0.02l-0.73,0.49l-2.6,-0.6l-1.28,0.3l-2.57,-0.21l-4.05,0.61l-2.4,-0.98l-4.8,-1.03l-6.8,-2.79l-2.64,0.4l-0.59,-2.56l0.35,-1.85l2.3,-0.94l0.38,-0.8l0.21,-2.01l1.81,-0.2l1.28,-1.0l0.04,-0.93l-1.52,-1.7l-0.34,-1.72l0.88,-1.75l0.26,-1.36l2.26,-2.72l2.31,-1.91l5.74,-0.81l1.82,-1.05l3.24,0.21l1.4,0.87l-0.56,1.9l0.39,0.49l1.72,-0.91l0.85,-1.0Z",
      name: "Meghalaya",
    },
    "IN-MN": {
      path: "M765.49,384.0l0.47,-0.68l0.61,-3.47l-0.09,-1.17l0.96,-1.67l-0.13,-0.68l-0.62,-0.57l-0.09,-1.32l0.56,-0.31l0.28,-0.98l0.55,-3.63l1.0,-0.49l0.14,-0.43l-0.57,-1.42l0.73,-1.43l-0.56,-1.21l0.91,-2.88l0.63,-0.62l0.88,0.47l0.98,-0.44l0.27,-1.08l1.36,-2.09l-0.23,-1.11l1.0,-0.91l-0.44,-2.02l1.51,-0.98l3.35,-6.82l0.5,-0.52l1.87,1.18l1.29,0.39l1.16,1.32l0.79,-0.03l1.42,-1.94l0.99,-2.22l3.94,-3.86l-0.04,-1.41l-1.34,-0.76l0.16,-0.53l4.57,-0.6l2.93,0.03l1.7,1.1l2.18,-0.03l1.33,0.81l4.11,-0.51l2.05,-1.03l1.5,-1.74l1.68,-0.96l1.91,-1.65l-0.05,1.34l-1.04,3.76l0.67,0.94l2.42,1.37l-0.87,1.31l-1.78,4.9l0.08,1.52l0.99,1.35l3.31,1.08l0.64,2.0l-0.15,1.25l-1.08,1.72l-0.56,2.75l-1.73,2.55l-0.49,2.59l-0.58,0.52l-1.44,0.34l-1.22,3.42l-1.79,1.31l-0.65,2.06l-1.03,1.02l-0.12,1.37l-1.01,1.13l0.08,0.9l-1.09,1.03l-0.39,2.16l-1.51,3.48l-1.33,5.32l-1.69,2.49l-0.11,2.01l-0.25,0.27l-1.49,-1.41l-1.93,-1.02l-3.52,-0.92l-2.47,0.28l-1.62,-1.76l-1.26,-0.49l-3.11,-0.12l-0.94,0.51l-0.51,0.86l-0.79,-0.43l-1.46,0.7l-0.87,-0.01l-0.47,-1.06l-2.13,-2.65l-0.75,-0.47l-1.33,0.4l-0.63,1.3l-0.8,0.38l-0.15,-0.87l-0.68,-0.58l-1.63,0.9l-1.15,-0.71l-1.16,0.57l-1.01,-0.83l-2.54,-0.88Z",
      name: "Manipur",
    },
    "IN-MH": {
      path: "M140.02,524.29l0.06,-1.24l-0.89,-1.35l0.45,-1.03l-0.02,-2.02l0.58,-0.43l0.77,-1.67l0.01,-1.67l1.8,-0.88l1.02,0.27l0.61,-0.35l2.1,-0.11l1.26,-0.53l1.63,2.69l1.38,-0.59l0.87,0.56l1.01,-0.49l0.85,0.82l0.58,0.11l0.82,-0.93l0.21,-1.81l0.82,-0.04l1.23,-0.66l0.57,-1.77l3.01,0.37l0.95,-0.4l-0.07,-1.27l0.49,-1.74l-0.34,-2.56l-0.66,-0.58l2.42,-3.82l0.56,-1.66l-0.48,-1.67l-0.94,-0.32l-0.37,-1.27l-0.99,-0.24l0.99,-0.38l0.9,-1.46l0.9,1.35l3.28,1.92l1.77,1.83l2.49,-0.21l2.88,-1.69l0.39,-0.98l-0.0,-1.07l2.33,-1.97l0.71,-1.34l-0.19,-3.58l-0.9,-2.69l-2.67,-3.15l-1.52,-0.55l-1.15,-1.45l-0.83,-0.24l-1.49,0.14l-2.13,-1.69l1.87,0.97l2.29,-0.02l2.26,-1.34l1.02,-2.45l1.02,0.6l2.51,-0.87l1.4,-3.41l2.42,-2.08l1.87,0.38l4.14,-1.13l1.72,-0.97l0.43,-1.02l-0.34,-1.17l-0.46,-0.42l-2.95,0.88l-1.44,-0.8l-1.14,0.58l-3.52,-0.08l-5.22,1.49l-1.82,-2.89l1.68,-0.47l0.65,-0.69l0.32,-1.01l-0.15,-0.9l-0.83,-0.77l-0.29,-2.57l0.27,-0.56l2.56,-0.97l1.38,-0.19l1.13,-0.92l2.52,-1.2l1.96,-0.35l2.37,0.85l2.05,-0.37l0.72,-0.45l0.19,-0.59l1.73,-0.61l1.41,-1.13l2.18,2.28l0.21,0.76l-0.17,3.62l0.77,2.62l3.13,2.41l1.63,0.45l1.6,1.13l4.83,-0.16l1.07,0.2l1.64,1.01l1.69,0.14l1.58,1.14l2.36,3.5l2.18,0.87l3.21,0.71l6.95,0.32l2.77,-0.44l2.5,0.23l3.35,-0.17l1.94,-0.51l2.2,0.26l2.69,0.81l1.26,-0.08l1.24,2.54l0.36,2.7l-1.11,0.57l0.15,0.97l1.09,1.49l0.87,0.53l3.81,0.66l4.02,-0.74l0.95,-0.46l1.82,-2.26l4.01,-0.99l0.96,-1.64l-0.02,-1.37l-0.56,-1.56l2.52,-1.7l1.81,-2.57l0.52,-3.12l0.5,-0.59l0.75,-0.35l2.31,-0.17l3.51,-2.47l2.54,-0.93l1.74,-0.08l0.77,0.73l0.74,0.08l1.15,-1.07l0.99,-0.26l1.28,-1.01l4.16,0.21l0.84,1.07l1.22,0.67l0.36,3.83l0.44,0.85l-3.7,-0.1l-0.72,0.76l0.04,1.29l1.97,3.68l0.53,0.02l0.58,-0.76l1.39,0.99l0.88,0.02l1.05,-0.43l1.38,0.13l0.82,0.55l2.93,-1.48l2.94,0.87l4.44,-1.33l3.05,-1.56l2.07,-2.14l3.51,-1.08l1.4,-1.22l1.25,0.34l0.42,2.93l0.32,0.47l0.78,0.04l1.24,-0.64l0.62,0.01l1.47,0.98l2.09,0.55l2.14,0.15l6.99,-1.28l0.7,-0.93l-0.15,-1.32l1.82,-0.62l2.66,-0.31l4.17,-1.36l0.59,-0.54l0.29,-1.34l1.77,0.62l3.23,0.14l1.66,0.54l0.8,1.02l0.92,0.57l0.58,2.17l0.81,0.57l1.25,-0.33l1.75,-1.17l2.95,-0.27l1.39,0.37l0.77,1.38l0.58,0.33l1.6,-0.12l2.05,-0.95l0.35,0.4l0.86,0.06l2.42,-0.77l0.92,-1.07l2.29,-0.91l1.67,1.15l1.92,0.55l0.2,1.01l0.5,0.63l2.02,1.48l0.35,0.91l-0.73,1.25l0.43,0.65l0.81,0.15l1.85,-0.32l4.3,2.41l1.39,-0.57l-0.01,0.89l-1.13,1.42l-2.68,1.41l-2.67,1.98l-0.97,4.16l0.16,1.64l0.77,1.33l1.09,0.52l1.28,-0.23l0.35,0.63l0.06,4.02l0.45,3.05l-1.84,1.2l-0.47,0.89l-0.02,0.79l0.38,0.48l0.66,0.16l1.78,-0.88l1.02,0.27l0.01,1.81l0.39,0.89l-0.58,1.41l-0.1,2.11l0.45,2.13l-1.09,0.47l-1.52,1.28l-2.81,0.5l-0.75,0.81l-0.36,2.4l0.18,0.72l3.49,0.54l0.73,2.48l-0.7,3.76l-2.02,-0.7l-1.12,1.16l-0.04,1.18l1.69,0.75l-0.51,0.69l-1.68,0.86l-0.09,0.89l0.85,0.59l1.62,0.25l0.63,-0.44l0.13,-0.95l0.77,-0.12l1.15,2.63l2.81,1.23l0.47,2.03l0.58,0.9l4.26,1.79l1.18,1.1l0.48,0.98l-0.64,1.2l-1.62,0.32l-0.53,0.42l-0.01,0.81l0.78,1.35l-1.97,0.98l-0.97,0.87l-1.04,-1.54l-2.0,-0.01l-0.88,-1.94l-0.71,-0.42l-0.85,0.24l-1.13,1.33l-1.18,0.61l-1.0,1.75l-1.36,0.8l-1.22,4.29l-2.27,3.01l-0.64,1.37l-0.01,1.37l2.24,3.09l-0.09,0.72l-2.24,1.45l-0.28,0.71l0.24,1.15l-0.3,0.22l-2.34,0.29l-2.31,-0.22l-0.58,-0.96l-2.01,-1.76l-2.23,-1.06l0.99,-0.99l0.21,-0.84l0.02,-1.59l-0.72,-3.35l-0.74,-0.8l-1.66,0.26l-0.06,-0.71l0.87,-1.58l1.42,-0.93l0.21,-0.5l-0.44,-2.8l0.57,-0.64l0.28,-0.94l0.23,-3.74l-1.23,-2.15l-1.96,-0.77l-2.06,-2.64l-2.29,-0.45l-3.08,1.08l-0.91,0.51l-0.3,1.12l-0.39,0.32l-1.26,-0.82l-4.24,-0.18l-1.47,-1.27l-3.01,-0.45l-0.87,-1.21l-1.35,-0.51l-2.56,0.37l-1.33,0.62l-0.81,1.12l-1.3,0.27l-1.56,-0.84l-0.34,-0.77l-1.28,-0.55l-0.99,-2.79l-2.09,-1.54l-2.16,0.04l-2.92,-1.29l-1.56,0.02l-1.1,-0.35l-1.07,0.25l-0.61,0.57l-1.9,-0.74l-1.36,-1.66l-1.24,-0.52l-0.54,0.27l-0.23,0.9l0.26,1.04l1.09,2.59l1.15,1.04l-0.25,0.64l-1.24,0.79l-0.61,0.83l-0.91,2.35l-0.06,2.8l-2.01,0.66l-0.77,0.68l-1.2,2.21l0.22,2.5l-0.2,0.74l-3.33,-0.06l-0.9,-0.6l-0.87,-1.24l-2.11,-0.28l-1.27,0.34l-0.99,0.93l0.11,0.69l0.53,0.26l-1.01,1.36l-0.7,2.23l0.12,1.03l-2.39,2.03l-0.22,0.63l0.57,2.11l1.03,0.18l0.28,0.94l0.86,0.22l0.16,1.21l2.03,1.81l-2.16,0.84l-1.71,3.25l-1.27,-0.02l-0.95,0.63l-0.33,0.77l0.19,1.51l-0.52,1.27l-2.57,0.53l-1.5,1.72l-0.5,2.61l-1.3,1.55l1.51,1.29l0.1,0.66l-1.31,-0.1l-1.69,1.02l-0.3,-1.06l-2.38,-1.06l-0.11,-2.21l-0.63,-0.91l-1.3,-0.5l-1.15,0.41l-1.16,1.82l-0.03,2.41l-1.43,0.66l-1.86,1.41l-0.68,0.82l-0.31,1.03l-1.26,0.02l-1.02,0.42l-1.68,-0.05l-1.83,0.93l-0.27,0.64l0.14,1.57l-0.48,2.32l0.04,2.02l-0.55,1.47l-0.5,0.44l-3.0,-0.44l-0.32,0.42l0.47,2.13l-1.5,1.02l-0.86,2.44l-2.06,-1.89l-2.52,-0.23l-0.88,1.08l-0.94,0.5l-0.2,1.02l-1.14,0.56l-0.95,1.3l-2.46,0.92l-0.17,0.5l0.77,1.23l0.09,1.48l-0.71,1.34l1.01,2.17l0.92,0.74l-0.6,0.51l-2.45,-0.08l-1.78,-0.99l-1.68,0.57l-1.38,-0.34l-2.26,1.05l-0.94,-0.14l-2.15,0.79l-0.87,-0.67l-0.28,-1.22l-0.68,-0.84l-0.88,0.28l-0.74,-0.28l-1.46,1.22l-0.85,-1.16l-1.9,-0.32l-0.65,-1.35l-0.88,-0.45l-0.63,0.12l-2.43,3.16l0.98,3.28l0.92,0.73l0.24,0.71l-0.5,2.6l1.28,2.16l-0.74,1.05l0.55,1.29l-0.2,0.88l-2.2,-1.25l-1.22,1.13l-1.28,0.53l-1.19,-0.68l-1.83,-0.01l-1.52,0.68l-2.02,0.12l-0.77,0.53l-0.02,1.43l-2.01,0.92l-1.23,-0.4l-1.49,-1.22l-0.67,-1.03l-1.68,0.2l-1.2,-0.27l-1.49,2.14l-2.45,1.04l0.56,3.05l-1.89,-0.24l-1.82,0.86l-0.57,0.65l-1.08,0.31l-0.5,1.26l-0.78,0.59l-0.04,0.6l0.64,0.85l-1.22,0.28l-1.77,1.34l-0.89,-2.23l-2.91,-0.76l-0.53,0.3l-0.53,1.56l-1.66,1.42l-0.93,-0.68l-0.61,0.31l-0.37,0.87l-0.8,-0.53l-0.65,0.1l-0.76,2.26l0.62,0.38l0.81,-0.38l0.26,0.87l1.12,0.26l0.23,0.93l0.78,0.55l-0.95,0.16l-0.48,0.69l0.62,2.98l0.63,0.32l0.91,-0.41l2.9,1.47l0.22,0.97l-0.19,2.82l-1.77,0.32l-0.86,0.93l0.13,0.7l1.32,0.54l0.03,0.51l-0.3,1.18l-2.16,3.44l0.6,1.18l-1.19,2.09l-1.32,0.88l-1.54,0.11l-0.16,-1.09l-1.05,-0.25l-2.28,1.88l-0.4,0.99l-0.63,0.47l0.15,0.72l-0.91,0.04l-2.08,0.78l-1.43,-0.79l-1.0,-2.75l-1.76,-0.62l-0.53,-1.11l-0.79,0.21l-0.89,1.14l-1.83,0.13l-0.71,0.34l-1.25,-0.26l0.03,-1.62l-1.31,-2.88l-3.48,-3.53l0.79,-0.83l-0.41,-0.4l-0.8,-0.07l-0.82,-0.82l0.33,-0.64l0.06,-2.16l0.71,-0.87l-0.01,-0.47l-0.44,-0.14l-0.95,0.42l-0.17,-1.06l-0.71,-0.29l-1.12,-4.25l-0.51,-0.32l0.58,-0.47l-0.03,-0.73l-1.12,-0.76l-0.68,-2.42l-0.45,-0.54l1.06,0.74l0.82,0.06l0.41,-0.32l-0.74,-0.71l0.5,-0.8l-1.26,-0.43l-0.4,-0.57l0.51,-0.22l0.18,0.36l0.66,0.09l0.32,-0.64l-0.15,-0.76l-0.57,-0.46l-0.98,0.18l0.18,-1.71l-0.97,-1.49l0.42,-2.29l-0.5,-0.3l-0.41,-0.93l-0.12,-0.62l0.28,-0.53l-0.31,-1.31l0.56,-1.5l-0.17,-0.55l-0.76,-0.39l0.59,-1.37l-0.03,-0.91l-0.58,-1.34l0.09,-1.05l-1.37,-3.59l0.76,-0.16l0.19,-0.63l-1.62,-2.66l-0.76,-0.65l-0.09,-0.38l0.56,-0.85l-0.28,-0.75l0.12,-0.77l-1.59,-2.24l2.03,-0.65l-0.02,-0.73l-1.83,-0.43l-0.38,-0.57l0.05,-1.09l-0.52,-0.83l0.53,-1.46l-0.55,-1.76l-0.81,-1.2l-0.45,-1.72l-1.42,-2.31l0.42,-0.88l-0.28,-0.67l-0.53,-0.26l0.98,-0.85l0.18,-0.85l-0.51,-0.41l-0.94,0.54l-0.34,-0.37l-0.61,-4.09l-0.38,-0.69l-0.67,-0.29l0.19,-0.69l0.62,0.73l1.75,0.17l0.54,0.38l-0.31,0.81l0.58,0.48l0.45,-0.14l0.51,-0.78l-0.02,-2.09l-0.62,-0.75l-1.94,-0.11l-0.55,-0.53l0.14,-0.36l-0.36,-0.54l-1.6,-0.94l-0.01,-1.02l-0.62,-1.29l0.45,-2.33l0.71,-0.18l1.81,2.51l0.68,-0.15l0.19,-0.62l-0.86,-1.02l-0.88,-2.03l-0.71,-0.34l-0.82,0.14l-1.64,-3.67l-0.09,-2.7l0.29,-0.7l1.18,0.09l0.55,-0.62l0.88,0.95l0.04,1.25l0.91,0.59l0.53,-0.48l-0.1,-1.31l0.64,-0.91l-0.12,-0.67l-0.88,-0.45l-0.18,-1.43l-0.6,-0.05l-0.65,0.44l-1.04,-0.76l0.14,-0.26l0.68,-0.01l0.31,-1.08l1.2,-0.1l0.34,-0.51l-0.2,-0.37l2.02,-0.66l0.31,-0.64l-0.31,-0.57l-0.52,-0.07l-1.35,0.42l0.13,-1.87l-0.65,-0.58l0.22,-2.19l-0.4,-0.44l-0.59,0.23l-1.02,1.69l-0.22,1.38l0.37,0.69l-0.13,0.31l-0.7,0.72l-0.08,-0.33l-0.66,-0.2l-0.49,0.46l-1.25,2.43l-0.6,-0.82l0.51,-1.73l0.36,-0.09l0.25,-0.76l-0.32,-0.73l0.29,-1.17l-0.39,-1.12l0.4,-0.71l-0.24,-0.49l-0.7,-0.1l1.07,-1.85l-0.27,-0.66l-0.46,-0.04l-0.91,0.92l0.19,-2.07l2.08,-0.09l0.63,0.65l1.46,0.32l1.18,-0.24l1.53,2.69l0.5,0.1l0.71,-0.39l-0.01,-0.7l-0.42,-0.22l-0.17,-1.08l-1.36,-1.37l-2.73,-0.21l-1.89,-1.29l-1.07,0.49l-1.01,-1.35l-0.33,-2.78l3.69,-1.53l0.25,-0.37l-0.25,-0.37l-0.94,-0.31l-1.71,0.45l-0.95,-1.4l-1.01,-0.32l-0.28,0.39l0.16,-0.89l-0.58,-2.49l0.85,-0.61l-0.33,-1.12l0.55,-0.55l-0.18,-1.26l-0.69,-0.14l-0.89,1.09Z",
      name: "Maharashtra",
    },
    "IN-KL": {
      path: "M207.32,745.98l1.92,-0.19l0.39,1.27l1.23,0.49l0.41,0.89l0.63,0.19l0.89,-0.52l0.47,0.08l0.64,0.37l-0.1,0.79l0.5,0.89l0.57,0.23l0.78,-0.21l0.85,1.04l0.65,0.11l0.96,-0.48l0.95,0.25l-0.62,1.55l0.94,1.35l1.25,1.27l1.53,-0.21l-0.72,0.78l-0.15,1.13l0.93,1.53l0.64,2.08l1.3,0.28l3.32,3.77l2.15,1.07l0.78,1.07l1.13,0.04l1.41,0.84l1.39,0.08l0.46,1.8l1.32,1.45l1.59,0.7l3.14,0.56l3.3,-1.08l0.01,2.3l0.65,0.82l2.2,-0.0l1.26,1.62l1.5,0.11l1.64,1.8l1.14,0.25l1.17,-0.18l0.27,1.6l0.54,0.81l-1.2,0.5l-1.02,1.21l-0.98,0.1l-1.84,-0.51l-0.38,0.17l-0.33,0.69l-0.03,2.0l0.9,1.74l4.83,1.38l1.12,0.9l1.17,0.45l1.49,1.54l-2.87,2.82l-0.17,0.89l0.34,0.48l0.86,0.17l0.99,-0.3l1.57,0.46l3.34,-0.37l0.94,-0.61l-0.36,1.61l0.94,1.09l0.8,2.1l0.59,0.57l-1.64,-0.24l-0.64,0.35l-0.59,1.61l0.2,1.28l0.98,1.23l3.74,1.55l0.74,1.63l1.03,0.92l-0.41,2.95l-1.35,0.7l-0.35,0.83l0.17,2.6l-0.55,3.61l0.93,2.08l0.11,1.93l2.58,2.4l1.39,0.59l1.1,-0.31l2.7,-2.22l3.3,-1.4l1.27,1.82l0.4,1.65l0.73,0.77l-1.69,4.21l1.1,3.48l-1.02,2.47l0.32,2.94l-1.56,5.71l0.29,0.53l1.83,1.05l2.88,-0.69l1.58,2.31l0.11,0.81l-1.01,1.01l-0.96,2.65l-0.84,1.39l-2.5,7.28l-1.99,1.95l1.13,3.67l1.53,1.25l-0.52,1.84l-1.71,2.58l0.21,2.15l0.35,0.76l1.72,1.46l0.73,1.15l-0.92,1.3l-0.26,0.16l-0.49,-0.36l-0.56,0.34l0.28,1.93l-1.34,2.06l-0.32,1.41l-1.22,0.16l-3.21,-2.34l-3.51,-4.66l-1.64,-1.53l-0.43,-1.0l-3.63,-4.29l-1.58,-2.45l-2.39,-2.02l1.57,-0.71l0.15,-0.44l-0.37,-0.28l-1.08,0.1l0.47,-0.7l1.68,0.13l0.44,-0.23l-0.2,-0.71l0.54,-0.49l-0.28,-0.62l-0.95,-0.03l-0.85,0.6l-1.25,-0.25l-1.31,0.82l-1.58,-3.84l0.32,-0.33l0.19,-1.64l-0.19,-0.41l-0.65,0.2l-0.86,-2.3l-0.74,-0.28l-0.21,0.22l-1.05,-2.39l-1.56,-5.16l-1.24,-10.4l0.63,-0.17l0.66,4.3l0.62,0.34l0.41,-0.52l0.65,0.91l-0.63,1.46l-0.6,2.77l0.13,0.65l0.86,0.47l2.79,0.53l0.73,-0.32l0.81,-0.97l-0.14,-0.62l-1.15,-0.68l-1.47,-0.14l0.28,-0.66l-0.17,-2.85l-0.66,-1.06l-0.37,-2.02l0.45,-1.0l-0.04,-0.85l-1.08,-2.32l-1.52,-1.72l-0.77,0.08l-0.45,-1.39l0.12,-0.52l-0.61,-0.7l-0.27,-1.52l-1.31,-1.45l-0.38,0.26l-0.25,0.92l0.66,1.82l-0.66,-1.68l-0.14,-1.7l1.71,-1.2l0.21,-1.28l-0.71,-0.22l-0.54,-0.77l-0.8,-0.12l0.31,1.86l-0.42,0.47l-0.54,-0.68l-1.44,-5.09l-1.12,-1.55l-0.55,-2.53l-1.35,-1.65l-0.27,-1.2l-2.36,-4.94l0.51,-0.56l-0.14,-0.64l-0.79,-0.34l-0.43,-1.07l-1.9,-7.73l-3.14,-7.29l0.34,-0.6l-0.24,-0.72l-0.61,-0.15l-1.63,-2.78l-1.62,-0.56l-2.42,-6.52l-0.81,-1.13l-3.92,-4.33l-0.84,-0.02l-1.08,-1.51l2.17,0.47l0.48,-0.39l-0.52,-0.81l0.19,-1.18l-0.45,-0.08l-1.02,0.74l-0.61,0.02l-1.17,-1.08l1.13,-0.11l0.25,-0.56l-0.73,-0.93l0.1,-1.21l0.73,-0.02l1.61,-0.9l0.41,-0.84l-0.76,-0.53l-0.97,0.34l-0.9,-0.22l-1.68,1.27l-0.82,-0.2l-0.83,0.31l-0.37,2.56l-1.86,-5.57l0.26,-1.27l-0.48,-0.39l-0.64,0.24l-0.68,-1.84l-3.92,-7.22l-2.86,-6.72ZM250.45,836.37l-0.0,-0.01l0.01,-0.0l-0.0,0.02ZM249.88,834.43l-0.08,-0.57l-0.05,-0.2l0.67,0.8l-0.54,-0.03Z",
      name: "Kerala",
    },
  },
  height: 932.9661457393951,
  projection: { type: "mill", centralMeridian: 0 },
  width: 900,
});
const Oy = () => {
    const { updateName: e } = es(),
      i = {
        "IN-AN": "Andaman and Nicobar Islands",
        "IN-AP": "Andhra Pradesh",
        "IN-AR": "Arunachal Pradesh",
        "IN-AS": "Assam",
        "IN-BR": "Bihar",
        "IN-CH": "Chandigarh",
        "IN-CT": "Chhattisgarh",
        "IN-DN": "Dadra and Nagar Haveli and Daman and Diu",
        "IN-DL": "Delhi",
        "IN-GA": "Goa",
        "IN-GJ": "Gujarat",
        "IN-HR": "Haryana",
        "IN-HP": "Himachal Pradesh",
        "IN-JK": "Jammu and Kashmir",
        "IN-JH": "Jharkhand",
        "IN-KA": "Karnataka",
        "IN-KL": "Kerala",
        "IN-LD": "Lakshadweep",
        "IN-MP": "Madhya Pradesh",
        "IN-MH": "Maharashtra",
        "IN-MN": "Manipur",
        "IN-ML": "Meghalaya",
        "IN-MZ": "Mizoram",
        "IN-NL": "Nagaland",
        "IN-OR": "Odisha",
        "IN-PY": "Puducherry",
        "IN-PB": "Punjab",
        "IN-RJ": "Rajasthan",
        "IN-SK": "Sikkim",
        "IN-TN": "Tamil Nadu",
        "IN-TG": "Telangana",
        "IN-TR": "Tripura",
        "IN-UP": "Uttar Pradesh",
        "IN-UT": "Uttarakhand",
        "IN-WB": "West Bengal",
      };
    return (
      ce.useEffect(() => {
        new Iy({
          selector: "#mapOne",
          map: "in_mill",
          zoomButtons: !0,
          regionStyle: {
            initial: { fill: "#C8D0D8" },
            hover: { fillOpacity: 1, fill: "#3056D3" },
          },
          regionLabelStyle: {
            initial: {
              fontFamily: "Satoshi",
              fontWeight: "semibold",
              fill: "#fff",
            },
            hover: { cursor: "pointer" },
          },
          onRegionClick: function (n, c) {
            var u = (i == null ? void 0 : i[c]) || c;
            e(u), console.log("Region Name:", u);
          },
          labels: {
            regions: {
              render(n) {
                return n.split("-")[1];
              },
            },
          },
        });
      }, []),
      _.jsxs("div", {
        className:
          "col-span-12 rounded-sm border border-stroke bg-white py-6 px-7.5 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-7",
        children: [
          _.jsx("h4", {
            className: "mb-2 text-xl font-semibold text-black dark:text-white",
            children: "Region labels",
          }),
          _.jsx("div", { id: "mapOne", className: "mapOne h-96" }),
        ],
      })
    );
  },
  zy = () => {
    var n;
    const { name: e } = es(),
      { data: i } = xp(e);
    return _.jsx(eh, {
      children: _.jsxs("div", {
        className:
          "mt-2 grid grid-cols-3 grid-flow-dense gap-4 md:mt-6 md:gap-6 2xl:mt-7.5 2xl:gap-7.5",
        children: [
          _.jsx("div", {
            className: "bg-transparent flex items-center justify-center",
            children: _.jsxs("div", {
              className:
                "bg-white h-full w-125 px-4 bg-opacity-80 rounded-3xl flex space-x-12 items-center shadow-md",
              children: [
                _.jsxs("div", {
                  children: [
                    _.jsxs("svg", {
                      className: "h-32 w-32",
                      viewBox: "0 -32 512 512",
                      xmlns: "http://www.w3.org/2000/svg",
                      children: [
                        _.jsx("path", {
                          d: "m62.640625 137.230469c2.804687-46.371094 41.292969-83.113281 88.371094-83.113281 37.964843 0 70.347656 23.902343 82.929687 57.476562 32.695313.394531 59.082032 27.003906 59.082032 59.792969 0 33.035156-26.78125 59.816406-59.816407 59.816406-13.828125 0-154.71875 0-168.925781 0-25.960938 0-47.007812-21.046875-47.007812-47.007813 0-25.410156 20.167968-46.097656 45.367187-46.964843zm0 0",
                          fill: "#f0f5f7",
                        }),
                        _.jsx("path", {
                          d: "m293.023438 171.390625c0 23.898437-14.027344 44.53125-34.292969 54.105469 3.652343-7.738282 5.699219-16.390625 5.699219-25.519532 0-32.789062-26.382813-59.402343-59.078126-59.792968-12.585937-33.578125-44.964843-57.476563-82.933593-57.476563-17.121094 0-33.109375 4.859375-46.65625 13.28125 15.625-25.136719 43.480469-41.867187 75.25-41.867187 37.960937 0 70.347656 23.898437 82.925781 57.46875 32.699219.398437 59.085938 27.011718 59.085938 59.800781zm0 0",
                          fill: "#dde9ed",
                        }),
                        _.jsx("path", {
                          d: "m460.949219 249.117188c-3.160157-52.179688-46.46875-93.523438-99.445313-93.523438-42.722656 0-79.160156 26.894531-93.320312 64.671875-36.792969.445313-66.484375 30.390625-66.484375 67.289063 0 37.175781 30.136719 67.308593 67.308593 67.308593h190.09375c29.214844 0 52.894532-23.683593 52.894532-52.894531 0-28.597656-22.691406-51.875-51.046875-52.851562zm0 0",
                          fill: "#c4e1e8",
                        }),
                        _.jsx("path", {
                          d: "m512 301.964844c0 29.214844-23.6875 52.902344-52.902344 52.902344h-4.097656c3.835938-7.324219 6.007812-15.660157 6.007812-24.496094 0-28.59375-22.691406-51.875-51.050781-52.855469-3.15625-52.175781-46.472656-93.523437-99.445312-93.523437-7.144531 0-14.109375.75-20.820313 2.179687 18.121094-18.847656 43.59375-30.578125 71.8125-30.578125 52.976563 0 96.289063 41.339844 99.445313 93.527344 28.359375.96875 51.050781 24.25 51.050781 52.84375zm0 0",
                          fill: "#a4d5dd",
                        }),
                        _.jsx("path", {
                          d: "m428.652344 193.21875c0 65.496094-53.09375 118.589844-118.589844 118.589844-65.5 0-118.59375-53.09375-118.59375-118.589844 0-65.5 53.09375-118.59375 118.59375-118.59375 65.496094 0 118.589844 53.09375 118.589844 118.59375zm0 0",
                          fill: "#f6cb43",
                        }),
                        _.jsx("path", {
                          d: "m310.066406 311.808594c-65.5 0-118.59375-53.09375-118.59375-118.59375 0-57.445313 40.84375-105.359375 95.082032-116.253906-1.535157 7.601562-2.335938 15.457031-2.335938 23.511718 0 65.5 53.089844 118.589844 118.589844 118.589844 8.054687 0 15.910156-.800781 23.511718-2.332031-10.910156 54.234375-58.820312 95.078125-116.253906 95.078125zm0 0",
                          fill: "#fab03c",
                        }),
                        _.jsxs("g", {
                          fill: "#f8e98e",
                          children: [
                            _.jsx("path", {
                              d: "m495.550781 200.945312h-25.542969c-4.265624 0-7.726562-3.460937-7.726562-7.726562 0-4.269531 3.460938-7.726562 7.726562-7.726562h25.542969c4.269531 0 7.726563 3.457031 7.726563 7.726562 0 4.265625-3.457032 7.726562-7.726563 7.726562zm0 0",
                            }),
                            _.jsx("path", {
                              d: "m448.585938 120.972656c-2.667969 0-5.265626-1.386718-6.695313-3.867187-2.136719-3.695313-.871094-8.421875 2.828125-10.554688l22.121094-12.769531c3.695312-2.132812 8.417968-.871094 10.550781 2.828125 2.136719 3.695313.871094 8.417969-2.828125 10.550781l-22.121094 12.773438c-1.214844.703125-2.542968 1.039062-3.855468 1.039062zm0 0",
                            }),
                            _.jsx("path", {
                              d: "m390.027344 62.425781c-1.308594 0-2.636719-.332031-3.855469-1.035156-3.695313-2.136719-4.960937-6.859375-2.828125-10.554687l12.773438-22.121094c2.132812-3.695313 6.855468-4.964844 10.554687-2.828125 3.695313 2.132812 4.960937 6.859375 2.824219 10.554687l-12.769532 22.121094c-1.429687 2.476562-4.027343 3.863281-6.699218 3.863281zm0 0",
                            }),
                            _.jsx("path", {
                              d: "m310.0625 40.996094c-4.269531 0-7.726562-3.460938-7.726562-7.726563v-25.542969c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.722656 3.460938 7.722656 7.726562v25.542969c.003906 4.265625-3.457031 7.726563-7.722656 7.726563zm0 0",
                            }),
                            _.jsx("path", {
                              d: "m230.09375 62.425781c-2.667969 0-5.265625-1.386719-6.695312-3.863281l-12.773438-22.121094c-2.132812-3.695312-.867188-8.421875 2.828125-10.554687 3.695313-2.132813 8.421875-.867188 10.554687 2.828125l12.769532 22.121094c2.136718 3.695312.871094 8.421874-2.828125 10.554687-1.214844.703125-2.542969 1.035156-3.855469 1.035156zm0 0",
                            }),
                          ],
                        }),
                        _.jsx("path", {
                          d: "m259.25 249.117188c-3.160156-52.179688-46.46875-93.523438-99.445312-93.523438-42.722657 0-79.160157 26.894531-93.320313 64.671875-36.792969.445313-66.484375 30.390625-66.484375 67.289063 0 37.171874 30.136719 67.308593 67.308594 67.308593h190.09375c29.214844 0 52.898437-23.683593 52.898437-52.898437-.003906-28.59375-22.695312-51.871094-51.050781-52.847656zm0 0",
                          fill: "#c4e1e8",
                        }),
                        _.jsx("path", {
                          d: "m310.300781 301.964844c0 29.214844-23.6875 52.902344-52.902343 52.902344h-4.097657c3.835938-7.324219 6.007813-15.660157 6.007813-24.496094 0-28.59375-22.691406-51.875-51.050782-52.855469-3.15625-52.175781-46.472656-93.523437-99.445312-93.523437-7.144531 0-14.109375.75-20.820312 2.179687 18.121093-18.847656 43.59375-30.578125 71.8125-30.578125 52.976562 0 96.289062 41.339844 99.449218 93.527344 28.355469.96875 51.046875 24.25 51.046875 52.84375zm0 0",
                          fill: "#a4d5dd",
                        }),
                        _.jsx("path", {
                          d: "m418.566406 342.792969c-3.15625-52.179688-46.46875-93.523438-99.441406-93.523438-42.726562 0-79.164062 26.894531-93.324219 64.671875-36.789062.445313-66.480469 30.394532-66.480469 67.289063 0 37.175781 30.132813 67.308593 67.308594 67.308593h190.09375c29.210938 0 52.894532-23.683593 52.894532-52.894531 0-28.597656-22.691407-51.875-51.050782-52.851562zm0 0",
                          fill: "#f0f5f7",
                        }),
                        _.jsx("path", {
                          d: "m469.621094 395.640625c0 29.214844-23.6875 52.902344-52.902344 52.902344h-4.097656c3.835937-7.324219 6.007812-15.660157 6.007812-24.496094 0-28.59375-22.691406-51.875-51.050781-52.855469-3.15625-52.175781-46.472656-93.523437-99.449219-93.523437-7.144531 0-14.109375.75-20.820312 2.179687 18.125-18.84375 43.597656-30.578125 71.816406-30.578125 52.976562 0 96.289062 41.339844 99.445312 93.527344 28.359376.96875 51.050782 24.25 51.050782 52.84375zm0 0",
                          fill: "#dde9ed",
                        }),
                        _.jsx("path", {
                          d: "m392.191406 336.9375c-3.488281 0-6.652344-2.382812-7.503906-5.921875-.894531-3.71875-2.117188-7.386719-3.636719-10.898437-1.695312-3.917969.105469-8.464844 4.023438-10.160157 3.917969-1.695312 8.464843.109375 10.160156 4.023438 1.871094 4.328125 3.375 8.84375 4.476563 13.421875 1 4.152344-1.558594 8.320312-5.707032 9.320312-.605468.144532-1.214844.214844-1.8125.214844zm0 0",
                          fill: "#f0f5f7",
                        }),
                        _.jsx("path", {
                          d: "m373.371094 302.578125c-2.03125 0-4.058594-.796875-5.574219-2.378906-12.867187-13.40625-30.152344-20.789063-48.671875-20.789063-4.265625 0-7.726562-3.457031-7.726562-7.726562 0-4.265625 3.460937-7.722656 7.726562-7.722656 22.765625 0 44.011719 9.070312 59.820312 25.542968 2.953126 3.074219 2.855469 7.96875-.222656 10.921875-1.5 1.4375-3.425781 2.152344-5.351562 2.152344zm0 0",
                          fill: "#f0f5f7",
                        }),
                        _.jsx("path", {
                          d: "m78.875 372.9375c2.257812-37.304688 33.222656-66.859375 71.09375-66.859375 30.546875 0 56.59375 19.226563 66.71875 46.234375 26.304688.320312 47.53125 21.726562 47.53125 48.105469 0 26.578125-21.542969 48.121093-48.121094 48.121093-11.125 0-124.46875 0-135.902344 0-20.882812 0-37.816406-16.929687-37.816406-37.816406 0-20.441406 16.222656-37.085937 36.496094-37.785156zm0 0",
                          fill: "#f0f5f7",
                        }),
                        _.jsx("path", {
                          d: "m264.21875 400.421875c0 26.347656-21.1875 47.75-47.457031 48.109375 7.875-8.574219 12.679687-19.996094 12.679687-32.542969 0-26.375-21.222656-47.785156-47.535156-48.105469-10.121094-27.003906-36.167969-46.238281-66.71875-46.238281-3.609375 0-7.152344.273438-10.621094.792969 12.324219-10.21875 28.144532-16.355469 45.402344-16.355469 30.546875 0 56.59375 19.222657 66.714844 46.234375 26.3125.320313 47.535156 21.722656 47.535156 48.105469zm0 0",
                          fill: "#dde9ed",
                        }),
                      ],
                    }),
                    _.jsx("p", {
                      className:
                        "text-center text-black text-gray-500 mt-2 text-sm",
                      children: i == null ? void 0 : i.description,
                    }),
                  ],
                }),
                _.jsxs("div", {
                  children: [
                    _.jsxs("p", {
                      className:
                        "text-7xl font-bold text-right text-gray-900 text-black",
                      children: [
                        (
                          (((n = i == null ? void 0 : i.currentConditions) ==
                          null
                            ? void 0
                            : n.temp) -
                            32) /
                          1.8
                        ).toFixed(1),
                        "°C",
                      ],
                    }),
                    _.jsxs("p", {
                      className: "text-gray-500 text-sm text-black",
                      children: [
                        i == null ? void 0 : i.resolvedAddress,
                        " Weather",
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
          _.jsx(My, {}),
          _.jsx(Ry, {}),
          _.jsx(Oy, {}),
        ],
      }),
    });
  },
  Fy = () =>
    _.jsxs(eh, {
      children: [
        _.jsx(zf, { pageName: "Alerts" }),
        _.jsx("div", {
          className:
            "rounded-sm border border-stroke bg-white p-4 shadow-default dark:border-strokedark dark:bg-boxdark md:p-6 xl:p-9",
          children: _.jsxs("div", {
            className: "flex flex-col gap-7.5",
            children: [
              _.jsxs("div", {
                className:
                  "flex w-full border-l-6 border-warning bg-warning bg-opacity-[15%] px-7 py-8 shadow-md dark:bg-[#1B1B24] dark:bg-opacity-30 md:p-9",
                children: [
                  _.jsx("div", {
                    className:
                      "mr-5 flex h-9 w-9 items-center justify-center rounded-lg bg-warning bg-opacity-30",
                    children: _.jsx("svg", {
                      width: "19",
                      height: "16",
                      viewBox: "0 0 19 16",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      children: _.jsx("path", {
                        d: "M1.50493 16H17.5023C18.6204 16 19.3413 14.9018 18.8354 13.9735L10.8367 0.770573C10.2852 -0.256858 8.70677 -0.256858 8.15528 0.770573L0.156617 13.9735C-0.334072 14.8998 0.386764 16 1.50493 16ZM10.7585 12.9298C10.7585 13.6155 10.2223 14.1433 9.45583 14.1433C8.6894 14.1433 8.15311 13.6155 8.15311 12.9298V12.9015C8.15311 12.2159 8.6894 11.688 9.45583 11.688C10.2223 11.688 10.7585 12.2159 10.7585 12.9015V12.9298ZM8.75236 4.01062H10.2548C10.6674 4.01062 10.9127 4.33826 10.8671 4.75288L10.2071 10.1186C10.1615 10.5049 9.88572 10.7455 9.50142 10.7455C9.11929 10.7455 8.84138 10.5028 8.79579 10.1186L8.13574 4.75288C8.09449 4.33826 8.33984 4.01062 8.75236 4.01062Z",
                        fill: "#FBBF24",
                      }),
                    }),
                  }),
                  _.jsxs("div", {
                    className: "w-full",
                    children: [
                      _.jsx("h5", {
                        className: "mb-3 text-lg font-semibold text-[#9D5425]",
                        children: "Attention needed",
                      }),
                      _.jsx("p", {
                        className: "leading-relaxed text-[#D0915C]",
                        children:
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when",
                      }),
                    ],
                  }),
                ],
              }),
              _.jsxs("div", {
                className:
                  "flex w-full border-l-6 border-[#34D399] bg-[#34D399] bg-opacity-[15%] px-7 py-8 shadow-md dark:bg-[#1B1B24] dark:bg-opacity-30 md:p-9",
                children: [
                  _.jsx("div", {
                    className:
                      "mr-5 flex h-9 w-full max-w-[36px] items-center justify-center rounded-lg bg-[#34D399]",
                    children: _.jsx("svg", {
                      width: "16",
                      height: "12",
                      viewBox: "0 0 16 12",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      children: _.jsx("path", {
                        d: "M15.2984 0.826822L15.2868 0.811827L15.2741 0.797751C14.9173 0.401867 14.3238 0.400754 13.9657 0.794406L5.91888 9.45376L2.05667 5.2868C1.69856 4.89287 1.10487 4.89389 0.747996 5.28987C0.417335 5.65675 0.417335 6.22337 0.747996 6.59026L0.747959 6.59029L0.752701 6.59541L4.86742 11.0348C5.14445 11.3405 5.52858 11.5 5.89581 11.5C6.29242 11.5 6.65178 11.3355 6.92401 11.035L15.2162 2.11161C15.5833 1.74452 15.576 1.18615 15.2984 0.826822Z",
                        fill: "white",
                        stroke: "white",
                      }),
                    }),
                  }),
                  _.jsxs("div", {
                    className: "w-full",
                    children: [
                      _.jsx("h5", {
                        className:
                          "mb-3 text-lg font-semibold text-black dark:text-[#34D399] ",
                        children: "Message Sent Successfully",
                      }),
                      _.jsx("p", {
                        className: "text-base leading-relaxed text-body",
                        children:
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                      }),
                    ],
                  }),
                ],
              }),
              _.jsxs("div", {
                className:
                  "flex w-full border-l-6 border-[#F87171] bg-[#F87171] bg-opacity-[15%] px-7 py-8 shadow-md dark:bg-[#1B1B24] dark:bg-opacity-30 md:p-9",
                children: [
                  _.jsx("div", {
                    className:
                      "mr-5 flex h-9 w-full max-w-[36px] items-center justify-center rounded-lg bg-[#F87171]",
                    children: _.jsx("svg", {
                      width: "13",
                      height: "13",
                      viewBox: "0 0 13 13",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      children: _.jsx("path", {
                        d: "M6.4917 7.65579L11.106 12.2645C11.2545 12.4128 11.4715 12.5 11.6738 12.5C11.8762 12.5 12.0931 12.4128 12.2416 12.2645C12.5621 11.9445 12.5623 11.4317 12.2423 11.1114C12.2422 11.1113 12.2422 11.1113 12.2422 11.1113C12.242 11.1111 12.2418 11.1109 12.2416 11.1107L7.64539 6.50351L12.2589 1.91221L12.2595 1.91158C12.5802 1.59132 12.5802 1.07805 12.2595 0.757793C11.9393 0.437994 11.4268 0.437869 11.1064 0.757418C11.1063 0.757543 11.1062 0.757668 11.106 0.757793L6.49234 5.34931L1.89459 0.740581L1.89396 0.739942C1.57364 0.420019 1.0608 0.420019 0.740487 0.739944C0.42005 1.05999 0.419837 1.57279 0.73985 1.89309L6.4917 7.65579ZM6.4917 7.65579L1.89459 12.2639L1.89395 12.2645C1.74546 12.4128 1.52854 12.5 1.32616 12.5C1.12377 12.5 0.906853 12.4128 0.758361 12.2645L1.1117 11.9108L0.758358 12.2645C0.437984 11.9445 0.437708 11.4319 0.757539 11.1116C0.757812 11.1113 0.758086 11.111 0.75836 11.1107L5.33864 6.50287L0.740487 1.89373L6.4917 7.65579Z",
                        fill: "#ffffff",
                        stroke: "#ffffff",
                      }),
                    }),
                  }),
                  _.jsxs("div", {
                    className: "w-full",
                    children: [
                      _.jsx("h5", {
                        className: "mb-3 font-semibold text-[#B45454]",
                        children: "There were 1 errors with your submission",
                      }),
                      _.jsx("ul", {
                        children: _.jsx("li", {
                          className: "leading-relaxed text-[#CD5D5D]",
                          children:
                            "Lorem Ipsum is simply dummy text of the printing",
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    });
function Dy() {
  const [e, i] = ce.useState(!0),
    { pathname: n } = xi();
  return (
    ce.useEffect(() => {
      window.scrollTo(0, 0);
    }, [n]),
    ce.useEffect(() => {
      setTimeout(() => i(!1), 1e3);
    }, []),
    e
      ? _.jsx(vx, {})
      : _.jsx(_.Fragment, {
          children: _.jsxs(ox, {
            children: [
              _.jsx(Is, {
                index: !0,
                element: _.jsxs(_.Fragment, {
                  children: [
                    _.jsx(yo, {
                      title:
                        "eCommerce Dashboard | TailAdmin - Tailwind CSS Admin Dashboard Template",
                    }),
                    _.jsx(zy, {}),
                  ],
                }),
              }),
              _.jsx(Is, {
                path: "/calendar",
                element: _.jsxs(_.Fragment, {
                  children: [
                    _.jsx(yo, {
                      title:
                        "Calendar | TailAdmin - Tailwind CSS Admin Dashboard Template",
                    }),
                    _.jsx(dy, {}),
                  ],
                }),
              }),
              _.jsx(Is, {
                path: "/ui/alerts",
                element: _.jsxs(_.Fragment, {
                  children: [
                    _.jsx(yo, {
                      title:
                        "Alerts | TailAdmin - Tailwind CSS Admin Dashboard Template",
                    }),
                    _.jsx(Fy, {}),
                  ],
                }),
              }),
            ],
          }),
        })
  );
}
const _y = new jx();
Eo.createRoot(document.getElementById("root")).render(
  _.jsx(U0.StrictMode, {
    children: _.jsx(Bx, {
      client: _y,
      children: _.jsx(px, { children: _.jsx(Dy, {}) }),
    }),
  }),
);
